$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
Gpt3D_Clone0_0.java 1 10
Gpt3D_Clone0_0.java 11 26
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage(dWidth, dHeight, imageType);
        AffineTransform at = new AffineTransform();
        at.scale(fWidth, fHeight);
        AffineTransformOp scaleOp = new AffineTransformOp(at, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        dbi = scaleOp.filter(sbi, null);
        return dbi;
    }
    else {
        return null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
1
Gpt3D_Clone0_1.java 1 10
Gpt3D_Clone0_1.java 11 25
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics();
        AffineTransform at = new AffineTransform();
        at.setToScale(fWidth, fHeight);
        g.transform(at);
        g.drawImage(sbi, 0, 0, null);
        g.dispose();
    }
    return dbi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
3
Gpt3D_Clone0_3.java 1 10
Gpt3D_Clone0_3.java 11 23
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage(dWidth, dHeight, imageType);
        AffineTransform at = new AffineTransform();
        at.scale(fWidth, fHeight);
        AffineTransformOp scaleOp = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
        dbi = scaleOp.filter(sbi, dbi);
    } 
    return dbi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
5
Gpt3D_Clone0_5.java 1 10
Gpt3D_Clone0_5.java 11 23
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics();
        AffineTransformOp scaleOp = new AffineTransformOp(AffineTransform.getScaleInstance(fWidth, fHeight), AffineTransformOp.TYPE_BICUBIC);
        g.drawImage(sbi, scaleOp, 0, 0);
        g.dispose();
    }
    return dbi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
6
Gpt3D_Clone0_6.java 1 10
Gpt3D_Clone0_6.java 11 22
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
  	if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        AffineTransform at = AffineTransform.getScaleInstance(fWidth, fHeight);
        AffineTransformOp scaleOp = new AffineTransformOp(at, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        dbi = scaleOp.filter(sbi, dbi);
    }
    return dbi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
7
Gpt3D_Clone0_7.java 1 10
Gpt3D_Clone0_7.java 11 21
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        RescaleOp rescaleOp = new RescaleOp((float) fWidth, (float) fHeight, null);
        rescaleOp.filter(sbi, dbi);
    }
    return dbi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
8
Gpt3D_Clone0_8.java 1 10
Gpt3D_Clone0_8.java 11 21
----------------------------------------

public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics ();
        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);
        g.drawRenderedImage (sbi, at);
    }
    return dbi;
}
----------------------------------------

 public static BufferedImage scale (BufferedImage sbi, int imageType, int dWidth, int dHeight, double fWidth, double fHeight) {
    BufferedImage dbi = null;
    if (sbi != null) {
        dbi = new BufferedImage (dWidth, dHeight, imageType);
        Graphics2D g = dbi.createGraphics();
        g.drawImage(sbi.getScaledInstance((int) (sbi.getWidth() * fWidth), (int) (sbi.getHeight() * fHeight), Image.SCALE_SMOOTH), 0, 0, null);
    }
    return dbi;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
0
Gpt3D_Clone101_0.java 1 12
Gpt3D_Clone101_0.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    char c;
    int keyCode;
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (Character.isISOControl (c)) {
            keyCode = (int) c;
            pressControlKey (keyCode);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
2
Gpt3D_Clone101_2.java 1 12
Gpt3D_Clone101_2.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    char c;
    int keyCode;
    for (int ii = 0; ii < text.length(); ii++) {
        c = text.charAt(ii);
        if (c <= 0x1F || c == 0x7F || c >= 0x80 && c <= 0xA0) {
            keyCode = c;
            pressControlKey (keyCode);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
3
Gpt3D_Clone101_3.java 1 12
Gpt3D_Clone101_3.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (StringText text) {
    char c;
    int keyCode;
    for (int ii = 0; ii < text.length (); ii++) {
        c = text.charAt (ii);
        if (c >= 0x7F || c <= 0x19) {
            keyCode = (int) c;
            pressControlKey (keyCode);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
4
Gpt3D_Clone101_4.java 1 12
Gpt3D_Clone101_4.java 13 24
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    for (int ii = 0; ii < text.length (); ii++) {
        char c = text.charAt (ii);
        if (Character.isISOControl (c) || Character.isWhitespace(c)) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
5
Gpt3D_Clone101_5.java 1 12
Gpt3D_Clone101_5.java 13 24
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    for (int ii = 0; ii < text.length (); ii++) {
        char c = text.charAt (ii);
        if ((c >= 0 && c <= 31) || (c == 129)) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
7
Gpt3D_Clone101_7.java 1 12
Gpt3D_Clone101_7.java 13 24
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    for (int ii = 0; ii < text.length (); ii++) {
        char c = text.charAt (ii);
        if (c <= 0x1F || c == 0x7F || c >= 0x80 && c <= 0xA0) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
102
8
Gpt3D_Clone102_8.java 1 12
Gpt3D_Clone102_8.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (character == '@' || character == '#' || character == '$' || character == '!') {
        handleSpecialCharacter (character);
    }
    else if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    } 
    else if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    else if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
1
Gpt3D_Clone103_1.java 1 12
Gpt3D_Clone103_1.java 13 32
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

  public void type (String text) {
    char c;
    int count = 0;
    String output = "";
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
            count++;
            output += "Control key " + c + ", ";
        } else {
            typeAsciiCode (c);
            output += "Ascii code " + c + ", ";
        }
    }
    System.out.println("Characters typed: " + output.substring(0, output.length()-2));
    System.out.println("Number of control keys pressed: " + count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
2
Gpt3D_Clone103_2.java 1 12
Gpt3D_Clone103_2.java 13 29
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    char c;
    String controlKeyText = "", asciiCodeText = "";
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
            controlKeyText += c + ",";
        } else {
            typeAsciiCode (c);
            asciiCodeText += c + ",";
        }
    }
    System.out.println("Control Key:\n" + controlKeyText.substring(0, controlKeyText.length()-1) + "\nTyped Ascii Code:\n" + asciiCodeText.substring(0, asciiCodeText.length()-1));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
3
Gpt3D_Clone103_3.java 1 12
Gpt3D_Clone103_3.java 13 29
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    char c;
    String controlKeyText = "", asciiCodeText = "";
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
            controlKeyText += c + " ";
        } else {
            typeAsciiCode (c);
            asciiCodeText += c + " ";
        }
    }
    System.out.println("Control Key: " + controlKeyText + "Typed Ascii Code:" + asciiCodeText);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
4
Gpt3D_Clone103_4.java 1 12
Gpt3D_Clone103_4.java 13 29
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

  public void type (String text) {
    char c;
    int count = 0;
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
            count++;
            System.out.println("Control key " + c + " pressed. Number of control keys pressed: " + count);
        } else {
            typeAsciiCode (c);
            System.out.println("Ascii code " + c + " typed. ");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
5
Gpt3D_Clone103_5.java 1 12
Gpt3D_Clone103_5.java 13 29
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

  public void type (String text) {
    char c;
    StringBuilder builder = new StringBuilder();
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt(ii);
        if (c <= 31 || c == 129) {
            builder.append(c);
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
    System.out.println(builder.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
6
Gpt3D_Clone103_6.java 1 12
Gpt3D_Clone103_6.java 13 28
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type (String text) {
    char c;
    int count = 0;
    for (int ii = 0; ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
            count++;
        } else {
            typeAsciiCode (c);
        }
    }
    System.out.println("Number of control keys pressed: " + count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
0
Gpt3D_Clone108_0.java 1 12
Gpt3D_Clone108_0.java 13 29
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    String systemTempDir = System.getProperty("java.io.tmpdir"); 
    String baseDirName  = System.currentTimeMillis() + "dir-"; 
    try { 
        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) { 
            File tempDir = new File(systemTempDir + File.separator + baseDirName + counter);
            if (tempDir.mkdir()) { 
                return tempDir; 
            }
        }       
        throw new IllegalStateException("Failed to create directory within "+ TEMP_DIR_ATTEMPTS + " attempts (tried " + baseDirName +"0 to " + baseDirName + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
    } catch (Exception ex) { 
        throw ex; 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
1
Gpt3D_Clone108_1.java 1 12
Gpt3D_Clone108_1.java 13 32
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    String systemTempDir = System.getProperty("java.io.tmpdir"); 
    String baseDirname = System.currentTimeMillis() + "-"; 
    try { 
        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) { 
            File tempDir = new File(systemTempDir + File.separator + baseDirName + counter); 
            if (tempDir.mkdirs()) {
                return tempDir; 
            }
        } 
        throw new IllegalStateException(
            "Failed to create directory within " + TEMP_DIR_ATTEMPTS + 
            " attempts (tried " + baseDirName + "0 to " + baseDirName + 
            (TEMP_DIR_ATTEMPTS - 1) + ')'); 
    } catch (Exception ex) { 
        throw ex;
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
2
Gpt3D_Clone108_2.java 1 12
Gpt3D_Clone108_2.java 13 29
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    Path sysTempDirPath = Paths.get(System.getProperty("java.io.tmpdir")); 
    String templateString = System.currentTimeMillis () + "-%d"; 
    for (int attempt = 0; attempt < TEMP_DIR_ATTEMPTS; attempt++) {
        String baseName = String.format(templateString, attempt); 
        Path tempDirPath = sysTempDirPath.resolve(baseName); 
        File tempDir = tempDirPath.toFile(); 
        if (tempDir.mkdir()) { 
            return tempDir; 
        }
    }
    throw new IllegalStateException("Failed to create directory within " + 
        TEMP_DIR_ATTEMPTS + " attempts (tried " + templateString + "0 to " + 
        templateString + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
3
Gpt3D_Clone108_3.java 1 12
Gpt3D_Clone108_3.java 13 28
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    File tmpDirPath = Paths.get(System.getProperty("java.io.tmpdir")).toFile(); 
    String dirTemplate = System.currentTimeMillis() + "-%d"; 
    for (int attempt = 0; attempt < TEMP_DIR_ATTEMPTS; attempt++) { 
        String dirName = String.format(dirTemplate, attempt); 
        File tempDirFile = new File(tmpDirPath, dirName); 
        if (tempDirFile.mkdir()) { 
            return tempDirFile; 
        }
    }
    throw new IllegalStateException("Failed to create directory within " + 
        TEMP_DIR_ATTEMPTS + " attempts (tried " + dirTemplate + "0 to " + 
        dirTemplate + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
4
Gpt3D_Clone108_4.java 1 12
Gpt3D_Clone108_4.java 13 28
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    Path tmpDirPath = Paths.get(System.getProperty("java.io.tmpdir")); 
    String baseName = System.currentTimeMillis() + "-"; 
    for (int attemp = 0; attemp < TEMP_DIR_ATTEMPTS; attemp++) {
        String dirName = String.format(baseName + "%d", attemp);
        File dirFile = tmpDirPath.resolve(dirName).toFile();
        if(dirFile.mkdir()) {
            return dirFile;
        }
    }
    throw new IllegalStateException("Failed to create directory within " + 
            TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + 
            baseName + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
5
Gpt3D_Clone108_5.java 1 12
Gpt3D_Clone108_5.java 13 26
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() {
    File rootDir = Paths.get(System.getProperty("java.io.tmpdir")).toFile(); 
    String templateString = System.currentTimeMillis() + "-%d"; 
    for (int attempt = 0; attempt < TEMP_DIR_ATTEMPTS; attempt++) { 
        String baseName = String.format(templateString, attempt);
        File tempDir = new File(rootDir, baseName); 
        if (tempDir.mkdir()) { 
            return tempDir; 
        }
    }
    throw new IllegalStateException("Failed to create directory within " +  TEMP_DIR_ATTEMPTS + " attempts (tried " + templateString + "0 to " + templateString + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
6
Gpt3D_Clone108_6.java 1 12
Gpt3D_Clone108_6.java 13 28
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    Path filePath = Paths.get(System.getProperty("java.io.tmpdir")); 
    String baseName = System.currentTimeMillis() + "-"; 
    for (int attempt = 0; attempt < TEMP_DIR_ATTEMPTS; attempt++) { 
        String dirName = String.format(baseName + "%d", attempt); 
        File tempDirFile = filePath.resolve(dirName).toFile(); 
        if (tempDirFile.mkdir()) { 
            return tempDirFile; 
        }
    }
    throw new IllegalStateException("Failed to create directory within " + 
        TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + 
        baseName + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
7
Gpt3D_Clone108_7.java 1 12
Gpt3D_Clone108_7.java 13 28
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

 public static File createTempDir() { 
    String sysTempDir = System.getProperty("java.io.tmpdir"); 
    String dirNameTemplate = System.currentTimeMillis() + "-%d"; 
    for (int attempt = 0; attempt < TEMP_DIR_ATTEMPTS; attempt++) { 
        String name = String.format(dirNameTemplate, attempt); 
        File tempFileDir = new File(sysTempDir, name); 
        if (tempFileDir.mkdir()) { 
            return tempFileDir; 
        }
    }
    throw new IllegalStateException("Failed to create directory within " + 
        TEMP_DIR_ATTEMPTS + " attempts (tried " + dirNameTemplate + "0 to " + 
        dirNameTemplate + (TEMP_DIR_ATTEMPTS - 1) + ')'); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
0
Gpt3D_Clone109_0.java 1 11
Gpt3D_Clone109_0.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getenv("TEMP");
    Random rand = new Random();
    int randomInt = 1 + rand.nextInt(100);
    File tempDir = new File(baseTempPath + File.separator + "TEMPDIR" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
1
Gpt3D_Clone109_1.java 1 11
Gpt3D_Clone109_1.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("user.dir");
    Random rand = new Random();
    int randomInt = rand.nextInt();
    File tempDir = new File(baseTempPath + File.separator + "Temp_" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
2
Gpt3D_Clone109_2.java 1 11
Gpt3D_Clone109_2.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("java.io.tmpdir");
    Random rand = new Random();
    int randomInt = rand.nextInt(100000);
    File tempDir = new File(baseTempPath + File.separator + "tempFiles" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
3
Gpt3D_Clone109_3.java 1 11
Gpt3D_Clone109_3.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("java.io.tmpdir");
    Random rand = new Random();
    long randomLong = Math.abs(rand.nextLong());
    File tempDir = new File(baseTempPath + File.separator + "Directory_" + randomLong);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
4
Gpt3D_Clone109_4.java 1 11
Gpt3D_Clone109_4.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("java.io.tmpdir");
    Random rand = new Random();
    int randomInt = 100 + rand.nextInt(1000);
    File tempDir = new File(baseTempPath + File.separator + "TempDirectory_" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
5
Gpt3D_Clone109_5.java 1 11
Gpt3D_Clone109_5.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("user.home");
    Random rand = new Random();
    int randomInt = 1 + rand.nextInt(1000);
    File tempDir = new File(baseTempPath + File.separator + "temp_" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
6
Gpt3D_Clone109_6.java 1 11
Gpt3D_Clone109_6.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getenv("TEMP");
    Random rand = new Random();
    int randomInt = 1 + rand.nextInt(10000);
    File tempDir = new File(baseTempPath + File.separator + "tempDir_" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
7
Gpt3D_Clone109_7.java 1 11
Gpt3D_Clone109_7.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("java.io.tmpdir");
    Random rand = new Random();
    int randomInt = 1000 + rand.nextInt(10000);
    File tempDir = new File(baseTempPath + File.separator + "TempFiles_" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
8
Gpt3D_Clone109_8.java 1 11
Gpt3D_Clone109_8.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getenv("TMP");
    Random rand = new Random();
    long randomLong = Math.abs(rand.nextLong());
    File tempDir = new File(baseTempPath + File.separator + "Directory_" + randomLong);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
109
9
Gpt3D_Clone109_9.java 1 11
Gpt3D_Clone109_9.java 12 25
----------------------------------------

public static File createTempDir () {
    final String baseTempPath = System.getProperty ("java.io.tmpdir");
    Random rand = new Random ();
    int randomInt = 1 + rand.nextInt ();
    File tempDir = new File (baseTempPath + File.separator + "tempDir" + randomInt);
    if (tempDir.exists () == false) {
        tempDir.mkdir ();
    }
    tempDir.deleteOnExit ();
    return tempDir;
}
----------------------------------------

 public static File createTempDir() {
    String baseTempPath = System.getProperty("user.home");
    Random rand = new Random();
    int randomInt = 100 + rand.nextInt(10000);
    File tempDir = new File(baseTempPath + File.separator + "TEMPDIRECTORY" + randomInt);
    
    if(!tempDir.exists()){
        tempDir.mkdirs();
    }
    tempDir.deleteOnExit();
    return tempDir;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
0
Gpt3D_Clone10_0.java 1 9
Gpt3D_Clone10_0.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Check for any special characters
    if ( text.equals(text.replaceAll("[^A-Za-z0-9]]","")) ){
 
        super.replaceText (start, end, text);
    }
    // Check for text length
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
1
Gpt3D_Clone10_1.java 1 9
Gpt3D_Clone10_1.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Exclude special characters
    if ( text.matches("^\\w+$") ){
        super.replaceText (start, end, text);
    }
    // Reject text longer than 2 characters
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
2
Gpt3D_Clone10_2.java 1 9
Gpt3D_Clone10_2.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Reject special characters
    if (!Pattern.compile("[^A-Za-z0-9 ]").matcher(text).find()) { 
 
        super.replaceText (start, end, text);
    }
    // Reset to old value if text length greater than 2
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
3
Gpt3D_Clone10_3.java 1 9
Gpt3D_Clone10_3.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Special character exclusion
    if ( text.matches("[A-Za-z0-9]]") ){
 
        super.replaceText (start, end, text);
    }
    // Reset to old value if text length greater than 2
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
5
Gpt3D_Clone10_5.java 1 9
Gpt3D_Clone10_5.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Exclude special characters
    if (text.matches("[a-zA-Z0-9]+")) { 
        super.replaceText (start, end, text);
    }
    // Reset to old value if text length greater than 2
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
6
Gpt3D_Clone10_6.java 1 9
Gpt3D_Clone10_6.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Exclude special characters
    if (text.matches("[\\p{L}\\p{M}*]+")) { 
        super.replaceText (start, end, text);
    }
    // Reset to old value if text length greater than 2
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
7
Gpt3D_Clone10_7.java 1 9
Gpt3D_Clone10_7.java 10 24
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Remove all special characters
    text = text.replaceAll("[^A-Za-z0-9]", "");
    super.replaceText (start, end, text);
    // Reset value if text is too long
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
8
Gpt3D_Clone10_8.java 1 9
Gpt3D_Clone10_8.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Reject special characters
    if ( !Pattern.compile("[A-Za-z]").matcher(text).matches() && !Pattern.compile("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+").matcher(text).matches() ) {
 
        super.replaceText (start, end, text);
    }
    // Reject text longer than 2 characters
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
10
9
Gpt3D_Clone10_9.java 1 9
Gpt3D_Clone10_9.java 10 25
----------------------------------------

public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceText (start, end, text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceText (int start, int end, String text) {
    String oldValue = getText ();
    // Valid letters and numbers only
    if (text.matches("[A-Za-z0-9]*")) {
        super.replaceText (start, end, text);
    }
    // Reset to old value if text length greater than 2
    if (text.length() > 2) {
        setText (oldValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
112
0
Gpt3D_Clone112_0.java 1 13
Gpt3D_Clone112_0.java 14 37
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

  public Node reverse (Node prev, Node curr)
{
    // base case
    if (curr == null) 
    {
        head = prev;
        return head;
    }
    
    // store the next node
    Node temp = curr.getNext();
    // set the next of current to its prev node
    curr.setNext(prev);
    // new prev node is now current
    prev = curr;
    // move curr node to the next
    curr = temp;
    // recursive call
    reverse(prev, curr);
    
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
112
1
Gpt3D_Clone112_1.java 1 13
Gpt3D_Clone112_1.java 14 30
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

   public Node reverse (Node prev, Node curr) 
{ 
    if (curr == null) 
    { 
        head = prev; 
        return head; 
    } 
  
    Node nextNode = curr.getNext(); 
    curr.setNext(prev); 
    prev = curr; 
    curr = nextNode; 
  
    return reverse(prev, curr); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
113
6
Gpt3D_Clone113_6.java 1 10
Gpt3D_Clone113_6.java 11 27
----------------------------------------

Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) {
        n.next = p;
        return n;
    }
    Node r = reverse (n.next, n);
    n.next = p;
    return r;
}
----------------------------------------

// Implementation 2
Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) {
        n.next = p;
        return n;
    }
    
    Node nextNode = n.next;
    n.next = p;
    p = n;
    n = nextNode;
    return reverse(n, p);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
113
8
Gpt3D_Clone113_8.java 1 10
Gpt3D_Clone113_8.java 11 25
----------------------------------------

Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) {
        n.next = p;
        return n;
    }
    Node r = reverse (n.next, n);
    n.next = p;
    return r;
}
----------------------------------------

// Implementation 8
Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) { 
        n.next = p; 
        return n; 
    } 
  
    Node next = n.next; 
    n.next = p; 
  
    return reverse(next, n); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
0
Gpt3D_Clone114_0.java 1 13
Gpt3D_Clone114_0.java 14 31
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

 public Node reverse (Node prev, Node curr) {
    if (prev == null) {
        return null;
    } 
    if (prev.equals(head))  {
        prev.setNext(null);
    } 
    if (curr == null) {
        head = prev;
        return head;
    } 
    Node temp = curr.getNext();
    curr.setNext(prev);
    reverse(curr, temp);
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
1
Gpt3D_Clone114_1.java 1 13
Gpt3D_Clone114_1.java 14 31
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

 public Node reverse(Node previous, Node current) {
    if (previous == null) {
        return null;
    }
    if (previous.equals(head)) {
        previous.setNext(null);
    } 
    if (current == null) {
        head = previous;
        return head;
    } 
    Node temp = current.getNext();
    current.setNext(previous);
    reverse(current, temp);
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
2
Gpt3D_Clone114_2.java 1 13
Gpt3D_Clone114_2.java 14 37
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

 public Node reverse(Node prev, Node curr) {
    //return null if head is null
    if(prev==null) {
        return null;
    }
    //set the next of head to be null
    if(prev.equals(head)) {
       prev.setNext(null); 
    }
    //reached the end
    if(curr == null) {
        head = prev;
        return head;
    }
    //saves the next node of curr
    Node temp = curr.getNext();
    //re-assign the next of curr
    curr.setNext(prev);
    //call the function to reverse
    reverse(curr, temp);
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
116
1
Gpt3D_Clone116_1.java 1 13
Gpt3D_Clone116_1.java 14 29
----------------------------------------

public static String camelCaser (String str) {
    String [] words = str.split ("_");
    String res = "";
    for (String word : words) {
        if (! word.isEmpty ()) {
            res += Character.toUpperCase (word.charAt (0));
            if (word.length () > 1) {
                res += word.substring (1);
            }
        }
    }
    return res;
}
----------------------------------------

 public static String camelCaser (String str) {
    String [] words = str.split ("_");
    String res = "";
    for (int i = 0; i<words.length; i++) {
        String word = words [i];
        if (! word.equals("")) {
            res += Character.toUpperCase(word.charAt(0));
            if (word.length() > 1) {
                res += word.substring(1);
            }
        }
    }
    return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
117
0
Gpt3D_Clone117_0.java 1 11
Gpt3D_Clone117_0.java 12 26
----------------------------------------

public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = String.format ("%s/%s/%s", day, month, year);
    Date inputDate = new SimpleDateFormat ("dd/MM/yyyy").parse (inputDateStr);
    Calendar calendar = Calendar.getInstance ();
    calendar.setTime (inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

 public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = day + "/" + month + "/" + year;
    DateFormat dateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    dateFormat.setLenient(false);
    Date inputDate = dateFormat.parse(inputDateStr);
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
117
1
Gpt3D_Clone117_1.java 1 11
Gpt3D_Clone117_1.java 12 25
----------------------------------------

public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = String.format ("%s/%s/%s", day, month, year);
    Date inputDate = new SimpleDateFormat ("dd/MM/yyyy").parse (inputDateStr);
    Calendar calendar = Calendar.getInstance ();
    calendar.setTime (inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

 public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    dateFormat.setLenient(false);
    Date inputDate = dateFormat.parse(day + "/" + month + "/" + year);
    Calendar cal = Calendar.getInstance();
    cal.setTime(inputDate);
    String dayOfWeek = cal.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
117
2
Gpt3D_Clone117_2.java 1 11
Gpt3D_Clone117_2.java 12 25
----------------------------------------

public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = String.format ("%s/%s/%s", day, month, year);
    Date inputDate = new SimpleDateFormat ("dd/MM/yyyy").parse (inputDateStr);
    Calendar calendar = Calendar.getInstance ();
    calendar.setTime (inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

 public static void main (String [] args) throws Exception {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = day + "/" + month + "/" + year;
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    Date inputDate = sdf.parse(inputDateStr);
    Calendar cal = GregorianCalendar.getInstance();
    cal.setTime(inputDate);
    String dayOfWeek = cal.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase();
    System.out.println(dayOfWeek);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
11
0
Gpt3D_Clone11_0.java 1 9
Gpt3D_Clone11_0.java 10 24
----------------------------------------

public void replaceSelection (String text) {
    String oldValue = getText ();
    if (! text.matches ("[A-Za-z]") && ! text.matches ("[\\\\!\"#$%&()*+,./:;<=>?@\\[\\]^_{|}~]+")) {
        super.replaceSelection (text);
    }
    if (getText ().length () > 2) {
        setText (oldValue);
    }
}
----------------------------------------

 public void replaceSelection (String text) {
        String oldValue = getText ();
        Pattern pattern = Pattern.compile("^[A-Za-z0-9_&\\\\!$%;:'\"(),./?\\[\\]*-]+$");
        Matcher matcher = pattern.matcher(text);
        if(matcher.matches()) {
           super.replaceSelection (text); 
        }
        if (getText ().length () > 2) {
            setText (oldValue);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
0
Gpt3D_Clone123_0.java 1 16
Gpt3D_Clone123_0.java 17 34
----------------------------------------

public static void main (String [] args) {
    LinkList list = new LinkList ();
    list.insert (1, 1.01);
    list.insert (2, 2.02);
    list.insert (3, 3.03);
    list.insert (4, 4.04);
    list.insert (5, 5.05);
    list.printList ();
    while (! list.isEmpty ()) {
        Link deletedLink = list.delete ();
        System.out.print ("deleted: ");
        deletedLink.printLink ();
        System.out.println ("");
    }
    list.printList ();
}
----------------------------------------

  public static void main (String [] args) {
    LinkList list = new LinkList ();
    list.addAtIndex (1, 1.01, 0);
    list.addAtIndex (2, 2.02, 1);
    list.addAtIndex (3, 3.03, 2);
    list.addAtIndex (4, 4.04, 3);
    list.addAtIndex (5, 5.05, 4);
    list.printList ();
    while (! list.isEmpty ()) {
        Link deletedLink = list.removeAtIndex (0);
        System.out.print ("deleted: ");
        deletedLink.printLink ();
        System.out.println ("");
    }
    list.printList ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
1
Gpt3D_Clone123_1.java 1 16
Gpt3D_Clone123_1.java 17 34
----------------------------------------

public static void main (String [] args) {
    LinkList list = new LinkList ();
    list.insert (1, 1.01);
    list.insert (2, 2.02);
    list.insert (3, 3.03);
    list.insert (4, 4.04);
    list.insert (5, 5.05);
    list.printList ();
    while (! list.isEmpty ()) {
        Link deletedLink = list.delete ();
        System.out.print ("deleted: ");
        deletedLink.printLink ();
        System.out.println ("");
    }
    list.printList ();
}
----------------------------------------

  public static void main (String [] args) {
    LinkList list = new LinkList ();
    list.insertBefore (1, 1.01, 0);
    list.insertBefore (2, 2.02, 1);
    list.insertBefore (3, 3.03, 2);
    list.insertBefore (4, 4.04, 3);
    list.insertBefore (5, 5.05, 4);
    list.printList ();
    while (! list.isEmpty ()) {
        Link deletedLink = list.removeAtIndex (0);
        System.out.print ("deleted: ");
        deletedLink.printLink ();
        System.out.println ("");
    }
    list.printList ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
0
Gpt3D_Clone124_0.java 1 23
Gpt3D_Clone124_0.java 24 51
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

 public static void main (String [] args) {for (int i = 0; i < 9; i++) {
	    for (int j = 0; j < 9; j++) {
	      boolean isLoopKBreaking = false;
	      for (int k = 0; k < 9; k++) {
		if (condition1) {
		  System.out.println("Breaking from Loop K and J");
		  isLoopKBreaking = true;
		}
		if (condition2) {
		  System.out.println("Breaking from Loop K, J and I");
		  isLoopKBreaking = true;
		}
		if (isLoopKBreaking == true) {
		  break;
		}
	      }
	      if (isLoopKBreaking == true) {
		break;
	      }
	    }
	  }
	  System.out.println("End of I , J , K"); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
1
Gpt3D_Clone124_1.java 1 23
Gpt3D_Clone124_1.java 24 48
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

 public static void main (String [] args) {for (int i = 0; i < 9; i++) {
	    boolean isLoopKJBreaking = false;
	    for (int j = 0; j < 9; j++) {
	      for (int k = 0; k < 9; k++) {
		if (condition1) {
		  System.out.println("Breaking from Loop K and J");
		  isLoopKJBreaking = true;
		  break;
		}
		if (condition2) {
		  System.out.println("Breaking from Loop K, J and I");
		  break;
		}
	      }
	      if (isLoopKJBreaking == true) {
		break;
	      }
	    }
	  }
	  System.out.println("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
2
Gpt3D_Clone124_2.java 1 23
Gpt3D_Clone124_2.java 24 46
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

 public static void main (String [] args) {for (int i = 0; i < 9; i++) {
	    for (int j = 0; j < 9; j++) {
	      boolean loopContinues = true;
	      while (loopContinues) {
		for (int k = 0; k < 9; k++) {
		  if (condition1) {
		    System.out.println("Breaking from Loop K and J");
		    loopContinues = false;
		    break;
		  }
		  if (condition2) {
		    System.out.println("Breaking from Loop K, J and I");
		    loopContinues = false;
		    break;
		  }
		}
	      }
	    }
	  }
	  System.out.println("End of I , J , K"); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
5
Gpt3D_Clone124_5.java 1 23
Gpt3D_Clone124_5.java 24 42
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

 public static void main (String [] args) { for (int i = 0; i < 9 ; i++) {
	    for (int j = 0 ; j < 9 ; j++) {
	      for (int k = 0; k < 9; k ++) {
		if (condition1) {
		  System.out.println("Breaking from Loop K and J");
		  break;
		}
		if (condition2) {
		  System.out.println("Breaking from Loop K, J and I");
		  break;
		}
	      }
	    }
	  }
	  System.out.println("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
7
Gpt3D_Clone124_7.java 1 23
Gpt3D_Clone124_7.java 24 39
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

 public static void main (String [] args) { for (int i = 0; i < 9 ; i++) {
	    for (int j = 0 ; j < 9 ; j++) {
	      for (int k = 0; k < 9; k ++) {
		if (condition1 || condition2) {
		  System.out.println("Breaking from Loop K, J and I");
		   k = 9;
		   j = 9;
		    i = 9;
		}
	      }
	    }
	  }
	  System.out.println("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
125
0
Gpt3D_Clone125_0.java 1 13
Gpt3D_Clone125_0.java 14 26
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0;
    i < (size - s.length ()) / 2; i ++) {
        sb.append (pad);
    }
    sb.append (s);
    while (sb.length () < size) {
        sb.append (pad);
    }
    return sb.toString ();
}
----------------------------------------

 public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    int start = (size - s.length ()) / 2;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0; i < start; i++)
        sb.append (pad);
    sb.append (s);
    for (int i = 0; i < size - (start + s.length()); i++)
        sb.append (pad);
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
0
Gpt3D_Clone126_0.java 1 12
Gpt3D_Clone126_0.java 13 31
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    try {
        URL location = getClass().getResource("Main.fxml");
        FXMLLoader fxmlLoader = new FXMLLoader();
        fxmlLoader.setLocation(location);
        fxmlLoader.setBuilderFactory(new JavaFXBuilderFactory());
        Parent root = fxmlLoader.load(location.openStream());
        Scene scene = new Scene(root);
        stage.setScene(scene);
        MainController controller = fxmlLoader.getController();
        controller.setStage(stage);
        controller.showStage();
        stage.show();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
1
Gpt3D_Clone126_1.java 1 12
Gpt3D_Clone126_1.java 13 31
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    try {
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("Main.fxml"));
        loader.setBuilderFactory(new JavaFXBuilderFactory());
        Parent root = loader.load();
        Scene scene = new Scene(root);
        stage.setScene(scene);
        MainController mainController = loader.getController();
        mainController.setStage(stage);
        mainController.showStage();
        stage.show();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
2
Gpt3D_Clone126_2.java 1 12
Gpt3D_Clone126_2.java 13 30
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    try {
        URL location = getClass().getResource("Main.fxml");
        FXMLLoader loader = new FXMLLoader(location);
        loader.setBuilderFactory(new JavaFXBuilderFactory());
        Parent root = loader.load(location.openStream());
        Scene scene = new Scene(root);
        stage.setScene(scene);
        MainController mainController = loader.getController();
        mainController.setStage(stage);
        mainController.showStage();
        stage.show();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
3
Gpt3D_Clone126_3.java 1 12
Gpt3D_Clone126_3.java 13 29
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception{
    try {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("Main.fxml"));
        fxmlLoader.setBuilderFactory(new JavaFXBuilderFactory());
        Parent root = fxmlLoader.load();
        Scene scene = new Scene(root);
        stage.setScene(scene);
        MainController mainController = fxmlLoader.getController();
        mainController.setStage(stage);
        mainController.showStage();
        stage.show();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
4
Gpt3D_Clone126_4.java 1 12
Gpt3D_Clone126_4.java 13 30
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    try {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("Main.fxml"));
        loader.setBuilderFactory(new JavaFXBuilderFactory());
        Parent parent = loader.load();
        Scene scene = new Scene(parent);
        stage.setScene(scene);
        MainController mainController = loader.getController();
        mainController.setStage(stage);
        mainController.showStage();
        stage.show();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
5
Gpt3D_Clone126_5.java 1 12
Gpt3D_Clone126_5.java 13 26
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    URL location = getClass().getResource("Main.fxml");
    FXMLLoader loader = new FXMLLoader(location);
    loader.setBuilderFactory(new JavaFXBuilderFactory());
    Parent root = loader.load();
    Scene scene = new Scene(root);
    stage.setScene(scene);
    MainController mainController = loader.getController();
    mainController.setStage(stage);
    mainController.showStage();
    stage.show();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
6
Gpt3D_Clone126_6.java 1 12
Gpt3D_Clone126_6.java 13 26
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception{
    FXMLLoader loader = new FXMLLoader();
    loader.setLocation(getClass().getResource("Main.fxml"));
    loader.setBuilderFactory(new JavaFXBuilderFactory());
    Parent root = loader.load();
    Scene scene = new Scene(root);
    stage.setScene(scene);
    MainController controller = loader.getController();
    controller.setStage(stage);
    controller.showStage();
    stage.show();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
7
Gpt3D_Clone126_7.java 1 12
Gpt3D_Clone126_7.java 13 25
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

 public void start(Stage stage) throws Exception {
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("Main.fxml"));
    fxmlLoader.setBuilderFactory(new JavaFXBuilderFactory());
    Parent root = fxmlLoader.load();
    Scene scene = new Scene(root);
    stage.setScene(scene);
    MainController mainController = fxmlLoader.getController();
    mainController.setStage(stage);
    mainController.showStage();
    stage.show();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
130
0
Gpt3D_Clone130_0.java 1 20
Gpt3D_Clone130_0.java 21 40
----------------------------------------

public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum210 += pow (i, i, twoTo10);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum510 += pow (i, i, fiveTo10);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10;
    answer %= tenTo10;
    System.out.println (answer);
}
----------------------------------------

 public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 0;
    for (long i = 1; i <= 1000; i += 2) {
        sum210 += Math.pow (i, i);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 0;
    for (long i = 1; i <= 1000; i += 5) {
        sum510 += Math.pow (i, i);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10;
    answer %= tenTo10;
    System.out.println (answer);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
130
2
Gpt3D_Clone130_2.java 1 20
Gpt3D_Clone130_2.java 21 39
----------------------------------------

public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum210 += pow (i, i, twoTo10);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum510 += pow (i, i, fiveTo10);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10;
    answer %= tenTo10;
    System.out.println (answer);
}
----------------------------------------

 public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 1;
    for (int i = 1; i <= 1000; i++) {
        sum210 *= (long) Math.pow (i, i);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 1;
    for (int i = 1; i <= 1000; i++) {
        sum510 *= (long) Math.pow (i, i);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = (sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10) % tenTo10;
    System.out.println (answer);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
130
7
Gpt3D_Clone130_7.java 1 20
Gpt3D_Clone130_7.java 21 39
----------------------------------------

public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum210 += pow (i, i, twoTo10);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 0;
    for (long i = 1;
    i <= 1000; i ++) {
        sum510 += pow (i, i, fiveTo10);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10;
    answer %= tenTo10;
    System.out.println (answer);
}
----------------------------------------

 public static void main (String [] args) {
    long twoTo10 = 1024;
    long sum210 = 0;
    for (long i = 1; i <= 1000; i ++) {
        sum210 += (long) Math.pow (i, i);
        sum210 %= twoTo10;
    }
    long fiveTo10 = 9_765_625;
    long sum510 = 0;
    for (long i = 1; i <= 1000; i ++) {
        sum510 += (long) Math.pow (i, i);
        sum510 %= fiveTo10;
    }
    long tenTo10 = 10_000_000_000L;
    long answer = (sum210 * inverse (fiveTo10, twoTo10) * fiveTo10 + sum510 * inverse (twoTo10, fiveTo10) * twoTo10) % tenTo10;
    System.out.println (answer);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
0
Gpt3D_Clone135_0.java 1 11
Gpt3D_Clone135_0.java 12 27
----------------------------------------

public static int [] [] getRows (int i, int j, int [] [] array) {
    int [] [] another = new int [j - i + 1] [];
    while (i <= j) {
        for (int k = 0;
        k < another.length; k ++) {
            another [k] = array [i];
            i ++;
        }
    }
    return another;
}
----------------------------------------

 public static int[][] getRows(int start, int end, int[][] array)
{
    int rows = end - start + 1;
    int[][] result = new int[rows][];
    int index = 0;
    while(start <= end)
    {
        result[index] = array[start];
        start++;
        index++;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
0
Gpt3D_Clone136_0.java 1 10
Gpt3D_Clone136_0.java 11 23
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

  protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DataBaseHelper dbHelper = new DataBaseHelper (this);
        SQLiteDatabase db = dbHelper.getWritableDatabase ();
        ContentValues values = new ContentValues(); 
        values.put("path", data.getData().toString()); 
        long newRowId = db.insert("table_name", null, values);
        dbHelper.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
2
Gpt3D_Clone136_2.java 1 10
Gpt3D_Clone136_2.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DatabaseBuilder dbBuilder = new DatabaseBuilder(this);
        dbBuilder.insertData(data.getData().toString());
        dbBuilder.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
3
Gpt3D_Clone136_3.java 1 10
Gpt3D_Clone136_3.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        BigDataBaseHelper dataBaseHelper = new BigDataBaseHelper(this);
        dataBaseHelper.insertData(data.getData().toString());
        dataBaseHelper.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
4
Gpt3D_Clone136_4.java 1 10
Gpt3D_Clone136_4.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DatabseConnector dbConnector = new DatabseConnector (this);
        dbConnector.insertData(data.getData().toString());
        dbConnector.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
5
Gpt3D_Clone136_5.java 1 10
Gpt3D_Clone136_5.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DatabaseTool dbTool = new DatabaseTool(this);
        dbTool.insertData(data.getData().toString());
        dbTool.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
6
Gpt3D_Clone136_6.java 1 10
Gpt3D_Clone136_6.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DataBaseCreator dbCreator = new DataBaseCreator(this);
        dbCreator.insertData(data.getData().toString());
        dbCreator.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
7
Gpt3D_Clone136_7.java 1 10
Gpt3D_Clone136_7.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHandler dbHandler = new DBHandler(this);
        dbHandler.insertData(data.getData().toString());
        dbHandler.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
8
Gpt3D_Clone136_8.java 1 10
Gpt3D_Clone136_8.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DatabaseManager dbManager =  new DatabaseManager(this);
        dbManager.insertData(data.getData().toString());
        dbManager.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
9
Gpt3D_Clone136_9.java 1 10
Gpt3D_Clone136_9.java 11 21
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

 protected void onActivityResult (int requestCode, int resultCode, Intent data) { 
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        StorageHelper storageHelper = new StorageHelper(this);
        storageHelper.insertData(data.getData().toString());
        storageHelper.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
0
Gpt3D_Clone137_0.java 1 5
Gpt3D_Clone137_0.java 6 14
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    ToolTipManager.sharedInstance().setInitialDelay(1000);
                    table.setToolTipTextAt(row,column,"Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                   return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
1
Gpt3D_Clone137_1.java 1 5
Gpt3D_Clone137_1.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.getTableHeader().getTable().getModel().setValueAt("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.", row, col);
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
2
Gpt3D_Clone137_2.java 1 5
Gpt3D_Clone137_2.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.getModel().setValueAt("Row " + row + " Column " + column + "\n Used to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.", row, col);
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
3
Gpt3D_Clone137_3.java 1 5
Gpt3D_Clone137_3.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.setToolTipTextAt(row,column,value);
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
4
Gpt3D_Clone137_4.java 1 5
Gpt3D_Clone137_4.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.setToolTipText("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
5
Gpt3D_Clone137_5.java 1 5
Gpt3D_Clone137_5.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.setToolTipTextAt(row,column,new TableToolTip("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip."));
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
6
Gpt3D_Clone137_6.java 1 5
Gpt3D_Clone137_6.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.setToolTipText("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the cell's tooltiptext.");
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
7
Gpt3D_Clone137_7.java 1 5
Gpt3D_Clone137_7.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.getTableHeader().setToolTipText(row, col, "Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
8
Gpt3D_Clone137_8.java 1 5
Gpt3D_Clone137_8.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.getColumnModel().getColumn(column).setCellRenderer(new ToolTipCellRenderer(row,column,"Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip."));
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
9
Gpt3D_Clone137_9.java 1 5
Gpt3D_Clone137_9.java 6 12
----------------------------------------

                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    table.getTableHeader().getTable().getModel().setToolTipTextAt(row, col, "Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
0
Gpt3D_Clone139_0.java 1 7
Gpt3D_Clone139_0.java 8 19
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setVisible(true);
	} else {
	    cl.show(cards, "notext");
	    card.setVisible(false);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
1
Gpt3D_Clone139_1.java 1 7
Gpt3D_Clone139_1.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.requestFocus();
	} else {
	    cl.show(cards, "notext");
	    card.requestFocusInWindow();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
2
Gpt3D_Clone139_2.java 1 7
Gpt3D_Clone139_2.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setText("The text is visible!");
	} else {
	    cl.show(cards, "notext");
	    card.setText("The text is hidden!");
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
3
Gpt3D_Clone139_3.java 1 7
Gpt3D_Clone139_3.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setOpaque(true);
	} else {
	    cl.show(cards, "notext");
	    card.setOpaque(false);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
4
Gpt3D_Clone139_4.java 1 7
Gpt3D_Clone139_4.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setEnabled(true);
	} else {
	    cl.show(cards, "notext");
	    card.setEnabled(false);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
5
Gpt3D_Clone139_5.java 1 7
Gpt3D_Clone139_5.java 8 19
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) 
	{
	    cl.show(cards, "text");
	    card.setBackground(Color.CYAN);
	} else {
	    cl.show(cards, "notext");
	    card.setBackground(Color.BLACK);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
6
Gpt3D_Clone139_6.java 1 7
Gpt3D_Clone139_6.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setForeground(Color.RED);
	} else {
	    cl.show(cards, "notext");
	    card.setForeground(Color.BLUE);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
7
Gpt3D_Clone139_7.java 1 7
Gpt3D_Clone139_7.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setSize(100,100);
	} else {
	    cl.show(cards, "notext");
	    card.setSize(200,200);
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
8
Gpt3D_Clone139_8.java 1 7
Gpt3D_Clone139_8.java 8 20
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setBorder(BorderFactory.createLineBorder(Color.BLACK));
	} else {
	    cl.show(cards, "notext");
	    card.setBorder(BorderFactory.createCompoundBorder(
		BorderFactory.createEmptyBorder(10, 10, 10, 10), 
		BorderFactory.createLineBorder(Color.ORANGE)));
	} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
139
9
Gpt3D_Clone139_9.java 1 7
Gpt3D_Clone139_9.java 8 18
----------------------------------------

public void itemStateChanged (ItemEvent ie) {
	    if (show.isSelected ()) {
		cl.show (cards, "text");
	    } else {
		cl.show (cards, "notext");
	    }
}
----------------------------------------

 public void itemStateChanged (ItemEvent ie) {
	if (show.isSelected()) {
	    cl.show(cards, "text");
	    card.setFont(new Font("Arial", Font.BOLD, 12));
	} else {
	    cl.show(cards, "notext");
	    card.setFont(new Font("Arial", Font.PLAIN, 12));
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
13
9
Gpt3D_Clone13_9.java 1 8
Gpt3D_Clone13_9.java 9 18
----------------------------------------

public static int countLines (File input) throws IOException {
	    try (InputStream is = new FileInputStream (input)) {
		int count = 1;
		for (int aChar = 0;
		aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
		return count;
	    }
}
----------------------------------------

 public static int countLines (File input) throws IOException {
	try (BufferedReader br = new BufferedReader (new FileReader (input))) {
	    int count = 0;
	    while (br.readLine () != null) count += 1;
	    return count;
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
1
Gpt3D_Clone141_1.java 1 18
Gpt3D_Clone141_1.java 19 39
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

  private int sum (Index mainIndex, Index secondaryIndex) {  
    int localSum = 0; 
    int i = mainIndex.index;
    while (i < array.length && secondaryIndex.sign.test (array [i])) {
        mainIndex.index ++; 
        i++;
    }
    if (i < array.length){
        localSum += array [mainIndex.index ++]; 
    }
    else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index++) { 
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index]; 
            } 
        }
    }
    return localSum; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
2
Gpt3D_Clone141_2.java 1 18
Gpt3D_Clone141_2.java 19 40
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

 private int sum (Index mainIndex, Index secondaryIndex) { 
    int localSum = 0;
    for (int i = mainIndex.index; i < array.length; i++) {
        if (secondaryIndex.sign.test (array [i])) {
            mainIndex.index++;
        }
        else {
            localSum += array [mainIndex.index++];
            break; 
        } 
    }
    if (mainIndex.index >= array.length) { 
        for (; secondaryIndex.index < array.length; secondaryIndex.index++) { 
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index]; 
            } 
        }
    }
    return localSum; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
3
Gpt3D_Clone141_3.java 1 18
Gpt3D_Clone141_3.java 19 40
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

  private int sum (Index mainIndex, Index secondaryIndex) {  
    int localSum = 0; 
    for (int i = mainIndex.index; i < array.length; i++) { 
        if (secondaryIndex.sign.test (array [i])) {
            mainIndex.index ++; 
        }
        else {
            localSum += array [mainIndex.index ++]; 
            break; 
        }
    }
    if (mainIndex.index >= array.length) { 
        for (; secondaryIndex.index < array.length; secondaryIndex.index++) { 
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index]; 
            } 
        }
    }
    return localSum; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
6
Gpt3D_Clone141_6.java 1 18
Gpt3D_Clone141_6.java 19 36
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

 private int sum (Index mainIndex, Index secondaryIndex) { 
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index++];
    }
    else {
        int i = secondaryIndex.index;
        while (i < array.length && secondaryIndex.sign.test (array [i])) {
            localSum += array [i++];
        }
    }
    return localSum; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
7
Gpt3D_Clone141_7.java 1 18
Gpt3D_Clone141_7.java 19 37
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

 private int sum (Index mainIndex, Index secondaryIndex) {  
    int localSum = 0; 
    if (mainIndex.index < array.length) { 
        while (secondaryIndex.sign.test (array [mainIndex.index])) {
            mainIndex.index ++; 
        }
        localSum += array [mainIndex.index ++]; 
    }
    else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index++) { 
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index]; 
            } 
        }
    }
    return localSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
141
8
Gpt3D_Clone141_8.java 1 18
Gpt3D_Clone141_8.java 19 37
----------------------------------------

private int sum (@NotNull
Index mainIndex,@NotNull
Index secondaryIndex) {
    int localSum = 0;
    while (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) {
        mainIndex.index ++;
    }
    if (mainIndex.index < array.length) {
        localSum += array [mainIndex.index ++];
    } else {
        for (; secondaryIndex.index < array.length; secondaryIndex.index ++) {
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index];
            }
        }
    }
    return localSum;
}
----------------------------------------

 private int sum (Index mainIndex, Index secondaryIndex) {  
    int localSum = 0; 
    if (mainIndex.index < array.length && secondaryIndex.sign.test (array [mainIndex.index])) { 
        mainIndex.index ++; 
    }
    else {
        localSum += array [mainIndex.index ++]; 
    }
    if (mainIndex.index >= array.length) { 
        for (; secondaryIndex.index < array.length; secondaryIndex.index++) { 
            if (secondaryIndex.sign.test (array [secondaryIndex.index])) {
                localSum += array [secondaryIndex.index]; 
            } 
        }
    }
    return localSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
0
Gpt3D_Clone142_0.java 1 11
Gpt3D_Clone142_0.java 12 26
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    double step = 0.3;
    if (x < maxX && y < maxY) {        
        x = (int) (x + step);
        y = (int) (y + step);
        dialog.setLocation (x, y);
    } else {
        point ++;
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
1
Gpt3D_Clone142_1.java 1 11
Gpt3D_Clone142_1.java 12 26
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    double step = 0.4;
    if (x < maxX && y < maxY) {        
        x = (int) (x + step);
        y = (int) (y + step);
        dialog.setLocation (x, y);
    } else {
        count ++;
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
2
Gpt3D_Clone142_2.java 1 11
Gpt3D_Clone142_2.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 1;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
3
Gpt3D_Clone142_3.java 1 11
Gpt3D_Clone142_3.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    double step = 0.2;
    if (x < maxX && y < maxY) {        
        x = (int) (x + step);
        y = (int) (y + step);
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
4
Gpt3D_Clone142_4.java 1 11
Gpt3D_Clone142_4.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
	int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 3;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
5
Gpt3D_Clone142_5.java 1 11
Gpt3D_Clone142_5.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
	int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 5;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
6
Gpt3D_Clone142_6.java 1 11
Gpt3D_Clone142_6.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    double step = 0.5;
    if (x < maxX && y < maxY) {        
        x = (int) (x + step);
        y = (int) (y + step);
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
7
Gpt3D_Clone142_7.java 1 11
Gpt3D_Clone142_7.java 12 26
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
	int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 2;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
8
Gpt3D_Clone142_8.java 1 11
Gpt3D_Clone142_8.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 6;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
9
Gpt3D_Clone142_9.java 1 11
Gpt3D_Clone142_9.java 12 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    int step = 4;
    if (x < maxX && y < maxY) {        
        x = x + step;
        y = y + step;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
0
Gpt3D_Clone143_0.java 1 13
Gpt3D_Clone143_0.java 14 31
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>();
	map.put(new A(), "abc");
	map.put(new A(), "def");
	map.put(new A(), "ghi");
	map.put(new A(), "jkl");
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		if (realTable[i] != null) {
			System.out.println(String.format("Bucket : %d, Value: %s", i, realTable[i].getValue()));
		}
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
1
Gpt3D_Clone143_1.java 1 13
Gpt3D_Clone143_1.java 14 35
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>();
	map.put(new A(), "abc");
	map.put(new A(), "def");
	map.put(new A(), "ghi");
	map.put(new A(), "jkl");
	//Iterating through the map
	for (Map.Entry<A, String> entry : map.entrySet())
		System.out.println("Key = " + entry.getKey() + 
                     ", Value = " + entry.getValue());
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		System.out.println(String.format("Bucket : %d, Entry: %s", i, bucketToString(realTable[i])));
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
2
Gpt3D_Clone143_2.java 1 13
Gpt3D_Clone143_2.java 14 29
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>(4);
	char [] arr = {'a','b','c','d'};
	for(int i=0;i<arr.length;i++){
		map.put(new A(),Character.toString(arr[i]));
	}
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		System.out.println(String.format("Bucket : %d, Entry: %s", i, bucketToString(realTable[i])));
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
3
Gpt3D_Clone143_3.java 1 13
Gpt3D_Clone143_3.java 14 29
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>(4);
	String [] str = {"abc","def","ghi","jkl"};
	for (int i = 0; i < 4; i++) {
		map.put(new A(), str[i]);
	}
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		System.out.println(String.format("Bucket : %d, Entry: %s", i, bucketToString(realTable[i])));
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
4
Gpt3D_Clone143_4.java 1 13
Gpt3D_Clone143_4.java 14 30
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>(4);
	for (int i = 0; i < 4; i++) {
		map.put(new A(i), "");
	}
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		if (realTable[i] != null) {
			System.out.println(String.format("Bucket : %d, Key: %d", i, realTable[i].getKey()));
		}
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
5
Gpt3D_Clone143_5.java 1 13
Gpt3D_Clone143_5.java 14 28
----------------------------------------

public static void main (String [] args) {
    HashMap < A, String > map = new HashMap < A, String > (4);
    map.put (new A (), "abc");
    map.put (new A (), "def");
    Class clazz = map.getClass ();
    Field table = clazz.getDeclaredField ("table");
    table.setAccessible (true);
    Map.Entry < Integer, String > [] realTable = (Map.Entry < Integer, String > []) table.get (map);
    for (int i = 0;
    i < realTable.length; i ++) {
        System.out.println (String.format ("Bucket : %d, Entry: %s", i, bucketToString (realTable [i])));
    }
}
----------------------------------------

	public static void main(String [] args) {
	HashMap<A, String> map = new HashMap<A, String>(4);
	for (int i = 0; i < 4; i++) {
		map.put(new A(), Integer.toString(i*2));
	}
	Class clazz = map.getClass();
	Field table = clazz.getDeclaredField("table");
	table.setAccessible(true);
	Map.Entry<Integer, String> [] realTable = (Map.Entry<Integer, String> []) table.get(map);
	for (int i = 0; i < realTable.length; i++) {
		System.out.println(String.format("Bucket : %d, Value: %s", i, realTable[i].getValue()));
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
0
Gpt3D_Clone144_0.java 1 9
Gpt3D_Clone144_0.java 10 24
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

  public void authenticate (String username, String host, String password) throws IOException, XMPPException {
	authenticationId = username;
    this.password = password;
    hostname = host;
    String[] mechanisms = { SASLConstants.MECHANISMS.digest_md5 };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
1
Gpt3D_Clone144_1.java 1 9
Gpt3D_Clone144_1.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "ANONYMOUS" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
2
Gpt3D_Clone144_2.java 1 9
Gpt3D_Clone144_2.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "GQREPLY" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
3
Gpt3D_Clone144_3.java 1 9
Gpt3D_Clone144_3.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "DIGEST-MD5" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
4
Gpt3D_Clone144_4.java 1 9
Gpt3D_Clone144_4.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "XMECHAUTH-SCRAMSHA1" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
5
Gpt3D_Clone144_5.java 1 9
Gpt3D_Clone144_5.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { SASLConstants.MECHANISMS.x_oauth2 };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
6
Gpt3D_Clone144_6.java 1 9
Gpt3D_Clone144_6.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { SASLConstants.MECHANISMS.ntlm };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
7
Gpt3D_Clone144_7.java 1 9
Gpt3D_Clone144_7.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "GSSAPI" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
8
Gpt3D_Clone144_8.java 1 9
Gpt3D_Clone144_8.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { SASLConstants.MECHANISMS.cram_md5 };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
9
Gpt3D_Clone144_9.java 1 9
Gpt3D_Clone144_9.java 10 23
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

 public void authenticate (String username, String host, String password) throws IOException, XMPPException {
authenticationId = username;
    this.password = password;
    hostname = host;
    String [] mechanisms = { "X-OAUTH2" };
    Map<String, String> props = new HashMap<>();
    props.put(SASLConstants.SERVICE, "xmpp");
    props.put(SASLConstants.HOST, host);
    sc = Sasl.createSaslClient(mechanisms, null, "xmpp", hostname, props, this);
    super.authenticate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
0
Gpt3D_Clone145_0.java 1 33
Gpt3D_Clone145_0.java 34 96
----------------------------------------

static void merge (int [] a, int [] l, int [] r) {
    int totElem = l.length + r.length;
    int i, li, ri;
    i = li = ri = 0;
    while (i < totElem) {
        if ((li < l.length) && (ri < r.length)) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                i ++;
                li ++;
            } else {
                a [i] = r [ri];
                i ++;
                ri ++;
            }
        } else {
            if (li >= l.length) {
                while (ri < r.length) {
                    a [i] = r [ri];
                    i ++;
                    ri ++;
                }
            }
            if (ri >= r.length) {
                while (li < l.length) {
                    a [i] = l [li];
                    li ++;
                    i ++;
                }
            }
        }
    }
}
----------------------------------------

	static void merge(int[] a, int[] l, int[] r) 
{ 
    int i = 0; 
    int j = 0; 
    int k = 0; 
  
    while (i < l.length && j < r.length) 
    { 
        if (l[i] <= r[j]) 
        { 
            a[k] = l[i]; 
            i++; 
        } 
        else
        { 
            a[k] = r[j]; 
            j++; 
        } 
        k++; 
    } 
  
    /* Copy remaining elements of l[] if any */
    while (i < l.length) 
    { 
        a[k] = l[i]; 
        i++; 
        k++; 
    } 
  
    /* Copy remaining elements of r[] if any */
    while (j < r.length) 
    { 
        a[k] = r[j]; 
        j++; 
        k++; 
    } 
}  
	static void merge(int[] a, int[] l, int[] r) 
{  
    int totElem = l.length + r.length; 
    int li = 0; 
    int ri = 0; 
  
    for (int i = 0; i < totElem; i++) 
    { 
        // Check if any elements remain in l 
        if (li < l.length && (ri == r.length || l[li] < r[ri])) 
        { 
            // Use l element 
            a[i] = l[li]; 
            li++; 
        } 
        else
        { 
            // Use r element 
            a[i] = r[ri]; 
            ri++; 
        } 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
0
Gpt3D_Clone146_0.java 1 8
Gpt3D_Clone146_0.java 9 20
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    for (int i = 0; i < s.length(); i++) {
        String newPrefix = prefix + s.charAt(i);
        permute(level - 1, newPrefix);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
1
Gpt3D_Clone146_1.java 1 8
Gpt3D_Clone146_1.java 9 20
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        permute(level - 1, "" + c + prefix);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
2
Gpt3D_Clone146_2.java 1 8
Gpt3D_Clone146_2.java 9 20
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0; i < s.length(); i++)  {
        String newPrefix = prefix + s.charAt(i);
        permute(level - 1, newPrefix);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
3
Gpt3D_Clone146_3.java 1 8
Gpt3D_Clone146_3.java 9 20
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    for (int i = 0; i < s.length(); i++) {
        String newPrefix = s.charAt(i) + prefix;
        permute(level - 1, newPrefix);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
4
Gpt3D_Clone146_4.java 1 8
Gpt3D_Clone146_4.java 9 19
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int currentDepth, String str) {
    if (currentDepth == 0) {
        System.out.println (str);
        return;
    }
    char[] arr = s.toCharArray();
    for (int i = 0; i < arr.length; i ++)
        permute (currentDepth - 1, str + arr[i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
5
Gpt3D_Clone146_5.java 1 8
Gpt3D_Clone146_5.java 9 19
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    for (int i = 0; i < s.length(); i++) {
        permute(level - 1, prefix + s.charAt(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
6
Gpt3D_Clone146_6.java 1 8
Gpt3D_Clone146_6.java 9 19
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

 static void permute(int currentLevel, String concatenatedString) {
    if (currentLevel == 0) {
        System.out.println(concatenatedString);
        return;
    }
    char[] arr = s.toCharArray();
    for (char c : arr)
        permute(currentLevel - 1, concatenatedString + c);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
0
Gpt3D_Clone147_0.java 1 11
Gpt3D_Clone147_0.java 12 31
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder();
    int currIndex = 0;
    int startIndex = 0;
    while (currIndex >= 0) {
        currIndex = input.indexOf(oldStr, startIndex);
        if (currIndex > 0) {
            sb.append(input.substring(startIndex, currIndex)).append(newStr);
            startIndex = currIndex + oldStr.length();
        }
        else {
            sb.append(input.substring(startIndex));
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
2
Gpt3D_Clone147_2.java 1 11
Gpt3D_Clone147_2.java 12 26
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int startIndex = 0;
    while (input.indexOf (oldStr, startIndex) > 0) {
        int oldStrIndex = input.indexOf (oldStr, startIndex);
        sb.append (input.substring (startIndex, oldStrIndex));
        sb.append (newStr);
        startIndex = oldStrIndex + oldStr.length ();
    }
    sb.append (input.substring (startIndex));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
3
Gpt3D_Clone147_3.java 1 11
Gpt3D_Clone147_3.java 12 27
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder output = new StringBuilder();
    int prev = 0;
    int current = 0;
    while ((current = input.indexOf(oldStr, prev)) >= 0) {
        output.append(input, prev, current);
        output.append(newStr);
        prev = current + oldStr.length();
    }
    output.append(input.substring(prev));
    return output.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
5
Gpt3D_Clone147_5.java 1 11
Gpt3D_Clone147_5.java 12 25
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder outputStr = new StringBuilder();
    int startIndex = 0;
    int currIndex = input.indexOf(oldStr);
    while(currIndex > 0) {
        outputStr.append(input, startIndex, currIndex).append(newStr);  
        startIndex = currIndex + oldStr.length();
        currIndex = input.indexOf(oldStr, startIndex);
    }
    outputStr.append(input.substring(startIndex));
    return outputStr.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
6
Gpt3D_Clone147_6.java 1 11
Gpt3D_Clone147_6.java 12 25
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder();
    int startIndex = 0;
    int matchIndex = 0;
    
    while ((matchIndex = input.indexOf(oldStr, startIndex)) > 0) {
        sb.append(input, startIndex, matchIndex).append(newStr);
        startIndex = matchIndex + oldStr.length();
    }
    sb.append(input.substring(startIndex));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
7
Gpt3D_Clone147_7.java 1 11
Gpt3D_Clone147_7.java 12 25
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

 public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder();
    int prev = 0;
    int i;
    while ((i = input.indexOf(oldStr, prev)) > 0) {
        sb.append(input, prev, i).append(newStr);
        prev = i + oldStr.length();
    }
    sb.append(input.substring(prev));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
1
Gpt3D_Clone148_1.java 1 11
Gpt3D_Clone148_1.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

    public static void main (String [] args) {
        final Scanner input = new Scanner (System.in);
        int num;
        while (true) {
            System.out.println ("Enter a binary number: ");
            num = Integer.parseInt (input.nextLine (), 2);
            if (num == -1) break;
            System.out.println (Integer.toString (num, 2));
        }
        System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
3
Gpt3D_Clone148_3.java 1 11
Gpt3D_Clone148_3.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

     public static void main (String [] args) {
        Scanner input = new Scanner (System.in);
        int num;
        while (true) {
            System.out.println ("Enter a binary number: ");
            num = Integer.parseInt (input.nextLine ());
            if (num == -1) break;
            System.out.println (Integer.toString (num, 2));
        }
        System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
4
Gpt3D_Clone148_4.java 1 11
Gpt3D_Clone148_4.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

    public static void main (String [] args) {
        Scanner input = new Scanner (System.in);
        long inString;
        while (true) {
            System.out.println ("Enter a binary number: ");
            inString = Long.parseLong (input.nextLine (), 2);
            if (inString == -1) break;
            System.out.println (Integer.toString (inString, 2));
        }
        System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
5
Gpt3D_Clone148_5.java 1 11
Gpt3D_Clone148_5.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

    public static void main (String [] args) {
        final Scanner input = new Scanner (System.in);
        int inString;
        while (true) {
            System.out.println ("Enter a binary number: ");
            inString = Integer.parseInt (input.nextLine (), 2);
            if (inString == -1) break;
            System.out.println (Long.toString (inString, 2));
        }
        System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
6
Gpt3D_Clone148_6.java 1 11
Gpt3D_Clone148_6.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

    public static void main (String [] args) {
        Scanner input = new Scanner (System.in);
        long num;
        while (true) {
            System.out.println ("Enter a binary number: ");
            num = input.nextLong ();
            if (num == -1) break;
            System.out.println (Long.toBinaryString (num));
        }
        System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
0
Gpt3D_Clone149_0.java 1 13
Gpt3D_Clone149_0.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

 public static void main (String [] args) {
    int [] constraints = {0, 1, 0, 2};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {false, true, false, false};
    boolean [] i2 = {false, false, true, true};
    boolean [] i3 = {true, true, false, false};
    boolean [] i4 = {true, false, true, false};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
1
Gpt3D_Clone149_1.java 1 13
Gpt3D_Clone149_1.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

 public static void main (String [] args) {
    int [] constraints = {2, 1, 1, 0};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {false, false, false, true};
    boolean [] i2 = {true, false, true, false};
    boolean [] i3 = {false, true, true, false};
    boolean [] i4 = {true, true, false, false};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
2
Gpt3D_Clone149_2.java 1 13
Gpt3D_Clone149_2.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

 public static void main (String [] args) {
    int [] constraints = {0, 1, 2, 0};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {false, true, true, false};
    boolean [] i2 = {false, false, false, true};
    boolean [] i3 = {true, false, false, false};
    boolean [] i4 = {true, false, true, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
3
Gpt3D_Clone149_3.java 1 13
Gpt3D_Clone149_3.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

 public static void main (String [] args) {
    int [] constraints = {2, 0, 1, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {false, false, true, false};
    boolean [] i2 = {true, false, false, true};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {true, false, true, false};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
0
Gpt3D_Clone150_0.java 1 16
Gpt3D_Clone150_0.java 17 37
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("Input required");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("A value needs to be provided");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        if ((int) r == (double) r)
            result.setText (String.valueOf ((int) r));
        else
            result.setText (String.valueOf (r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
1
Gpt3D_Clone150_1.java 1 16
Gpt3D_Clone150_1.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This field requires an input");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("Please enter a value");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.valueOf (r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
2
Gpt3D_Clone150_2.java 1 16
Gpt3D_Clone150_2.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This field cannot be empty");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("This field should not be left empty");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (r + "");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
3
Gpt3D_Clone150_3.java 1 16
Gpt3D_Clone150_3.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This field cannot be left blank");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("A value must be entered");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (r + "");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
4
Gpt3D_Clone150_4.java 1 16
Gpt3D_Clone150_4.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("Please fill this field");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("This field mustn't be empty");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (Double.toString (r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
5
Gpt3D_Clone150_5.java 1 16
Gpt3D_Clone150_5.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This must not be left empty");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("This is a mandatory field");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.format ("%1.2f", r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
6
Gpt3D_Clone150_6.java 1 16
Gpt3D_Clone150_6.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This field must be filled");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("Value should be provided");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.format ("%f", r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
7
Gpt3D_Clone150_7.java 1 16
Gpt3D_Clone150_7.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("This cannot be left blank");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("A value needs to be entered");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.format ("%s", r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
8
Gpt3D_Clone150_8.java 1 16
Gpt3D_Clone150_8.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("Input required in this field");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("Value must be entered");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.format ("%.2f", r));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
150
9
Gpt3D_Clone150_9.java 1 16
Gpt3D_Clone150_9.java 17 34
----------------------------------------

public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ().toString ())) {
        first.setError ("This field can't be empty");
    } else if (TextUtils.isEmpty (second.getText ().toString ())) {
        second.setError ("This field can't be empty");
    } else {
        double s = Double.parseDouble (second.getText ().toString ());
        double f = Double.parseDouble (first.getText ().toString ());
        r = f + s;
        result.setText ("" + r);
    }
}
----------------------------------------

 public void add (View v) {
    EditText first = findViewById (R.id.first);
    EditText second = findViewById (R.id.second);
    TextView result = findViewById (R.id.result);
    double r;
    if (TextUtils.isEmpty (first.getText ())) {
        first.setError ("No input detected");
    } else if (TextUtils.isEmpty (second.getText ())) {
        second.setError ("Please enter a value");
    } else {
        double s = Double.parseDouble (second.getText ());
        double f = Double.parseDouble (first.getText ());
        r = f + s;
        result.setText (String.valueOf (Math.round (r)));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
0
Gpt3D_Clone152_0.java 1 19
Gpt3D_Clone152_0.java 20 47
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
	  int maxBlockSize = 0;
	  int currentBlockSize = 0;
	  char prevChar = str.charAt(0); // take first character as prev
	 
	  if (str.length() == 0) {
	    return 0;
	  }
	 
	  // traverse the entire string 
	  for (int index = 1; index < str.length(); index++) {
	    char currentChar = str.charAt(index);
	    // check if current char is same as previous
	    if (prevChar == currentChar) {
	      currentBlockSize++;
	      if (currentBlockSize > maxBlockSize) {
		maxBlockSize = currentBlockSize;
	      }
	    } else {
	      currentBlockSize = 0;
	    }
	    // update prev for next iteration 
	    prevChar = currentChar;
	  }
	  return (maxBlockSize + 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
1
Gpt3D_Clone152_1.java 1 19
Gpt3D_Clone152_1.java 20 44
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
	    int blockSize = 0;
	    int maxblockSize = 0;
	    char prevChar;
	    if (str.length() == 0) {
		return 0;
	    }
	    prevChar = str.charAt(0);
	    for (int i = 1; i < str.length(); i++) {
		if (str.charAt(i) == prevChar) {
		    blockSize++;
		    if (blockSize > maxblockSize) {
		        maxblockSize = blockSize;
		    }
		}
		else {
		    blockSize = 0;
		}
		prevChar = str.charAt(i);
	    }
	    return maxblockSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
2
Gpt3D_Clone152_2.java 1 19
Gpt3D_Clone152_2.java 20 42
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
	int maxblockSize = 0;
	int blockSize = 0;
	
	if(str.length() == 0) {
		return 0;
	}
	
	for(int i = 0; i < str.length() - 1; i++) {
		if(str.charAt(i) == str.charAt(i + 1)) {
			blockSize++;
			if(blockSize > maxblockSize) {
				maxblockSize = blockSize;
			}
		} else {
			blockSize = 0;
		}
	}
	
	return maxblockSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
3
Gpt3D_Clone152_3.java 1 19
Gpt3D_Clone152_3.java 20 41
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
	  int maxCounter = 0;
	  int counter = 0;
	  if(str.length()==0) {
	    return 0;
	  }
	  for (int i=0; i < str.length()-1; i++) {
	    if (str.charAt(i) == str.charAt(i+1)) {
	      counter++;
	      if (counter > maxCounter){
		maxCounter = counter;
	      }
	    }
	    else {
	      counter = 0;
	    }
	  }
	  return maxCounter+1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
4
Gpt3D_Clone152_4.java 1 19
Gpt3D_Clone152_4.java 20 41
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
	    int maxBlockSize = 0;
	    int currentBlockSize = 0;
	 
	    if (str.length() == 0) {
		return 0;
	    }
	 
	    for (int i = 0; i < str.length() - 1; i++) {
		if (str.charAt(i) == str.charAt(i + 1)) {
		    currentBlockSize++;
		    if (currentBlockSize > maxBlockSize) {
		        maxBlockSize = currentBlockSize;
		    }
		} else {
		    currentBlockSize = 0;
		}
	    }
	    return (maxBlockSize + 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
5
Gpt3D_Clone152_5.java 1 19
Gpt3D_Clone152_5.java 20 41
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

 public static int maxBlock(String str) {
    int maxBlockSize = 0;
    int currentBlockSize = 0;
 
    if (str.length() == 0) {
        return 0;
    }
 
    for (int i = 0; i < str.length() - 1; i++) {
        if (str.charAt(i) == str.charAt(i + 1)) {
            currentBlockSize++;
            if (currentBlockSize > maxBlockSize) {
                maxBlockSize = currentBlockSize;
            }
        } else {
            currentBlockSize = 0;
        }
    }
    return maxBlockSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
0
Gpt3D_Clone154_0.java 1 15
Gpt3D_Clone154_0.java 16 32
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (!UncheckedException.class.isAssignableFrom (clazz)) {
        throw new InternalError (exClassName + " is not a valid exception type");
    } else {
        throw newException (clazz.asSubclass (UncheckedException.class));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
1
Gpt3D_Clone154_1.java 1 15
Gpt3D_Clone154_1.java 16 33
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz = null;
    try {
        clazz = Class.forName(exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError(exClassName, cnfe);
    }
 
    if (CheckedException.class.isAssignableFrom(clazz)) {
        throw newException(clazz.asSubclass(CheckedException.class));
    } else if (!UncheckedException.class.isAssignableFrom(clazz)) {
        throw new InternalError (exClassName + " is not a valid exception");
    } else {
        throw newException(clazz.asSubclass(UncheckedException.class));
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
2
Gpt3D_Clone154_2.java 1 15
Gpt3D_Clone154_2.java 16 34
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
 
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (!UncheckedException.class.isAssignableFrom (clazz)) {
        throw new InternalError (exClassName + " is not a valid exception");
    } else {
        throw newException (clazz.asSubclass (UncheckedException.class));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
3
Gpt3D_Clone154_3.java 1 15
Gpt3D_Clone154_3.java 16 34
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
 
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (!UncheckedException.class.isAssignableFrom (clazz)) {
        throw new InternalError (exClassName + " is not a valid exception");
    } else {
        throw newException (clazz.asSubclass (UncheckedException.class));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
4
Gpt3D_Clone154_4.java 1 15
Gpt3D_Clone154_4.java 16 31
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    try {
        Class<?> clazz = Class.forName(exClassName);
        if (CheckedException.class.isAssignableFrom(clazz)) {
            throw newException(clazz.asSubclass(CheckedException.class));
        } else if (UncheckedException.class.isAssignableFrom(clazz)) {
            throw newException(clazz.asSubclass(UncheckedException.class));
        } else {
            throw new InternalError (exClassName + " is not a valid exception type");
        }
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
5
Gpt3D_Clone154_5.java 1 15
Gpt3D_Clone154_5.java 16 31
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

 static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    try {
        Class < ? > clazz = Class.forName (exClassName);
        if (CheckedException.class.isAssignableFrom (clazz)) {
            throw newException (clazz.asSubclass (CheckedException.class));
        } else if (UncheckedException.class.isAssignableFrom (clazz)) {
            throw newException (clazz.asSubclass (UncheckedException.class));
        } else {
            throw new InternalError (exClassName + " is not a valid exception");
        }
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
1
Gpt3D_Clone155_1.java 1 19
Gpt3D_Clone155_1.java 20 47
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException (String className) throws Exception {
	  Class<?> exceptionClass;
	  try {
	    exceptionClass = Class.forName (className);
	  } 
	  catch (ClassNotFoundException e) {
	    throw new IllegalArgumentException (e);
	  } 
	  try {
	    if (CheckedException.class.isAssignableFrom (exceptionClass)) {
	      Constructor <? extends CheckedException> exceptionConstructor = 
		exceptionClass.asSubclass(CheckedException.class).getConstructor ();
	      throw exceptionConstructor.newInstance ();
	    } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
	      Constructor <? extends UncheckedException> exceptionConstructor = 
		exceptionClass.asSubclass(UncheckedException.class).getConstructor ();
	      throw exceptionConstructor.newInstance ();
	    } else {
	      throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
	    }
	  } 
	  catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {
	    throw new IllegalStateException (e);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
2
Gpt3D_Clone155_2.java 1 19
Gpt3D_Clone155_2.java 20 46
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException(String className) throws Exception {
	    Class<?> exceptionClass;
	    try {
		exceptionClass = Class.forName(className);
	    }
	    catch (ClassNotFoundException e) {
		throw new IllegalArgumentException(e);
	    }
	    try {
		if (CheckedException.class.isAssignableFrom(exceptionClass)) {
		    throw exceptionClass.asSubclass(CheckedException.class).getConstructor().newInstance();
		}
		else if (UncheckedException.class.isAssignableFrom(exceptionClass)) {
		    throw exceptionClass.asSubclass(UncheckedException.class).getConstructor().newInstance();
		}
		else {
		    throw new IllegalArgumentException("Not a valid exception type: " + className);
		}
	    }
	    catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {
		throw new IllegalStateException(e);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
3
Gpt3D_Clone155_3.java 1 19
Gpt3D_Clone155_3.java 20 42
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException(String className) throws Exception {
	Class <?> exceptionClass;
	try {
		exceptionClass = Class.forName(className);
	}
	catch (ClassNotFoundException e) {
		throw new IllegalArgumentException(e);
	}
	
	if (CheckedException.class.isAssignableFrom(exceptionClass)) {
		Constructor <? extends CheckedException> exceptionConstructor = exceptionClass.asSubclass(CheckedException.class).getConstructor();
		throw exceptionConstructor.newInstance();
	}
	else if (UncheckedException.class.isAssignableFrom(exceptionClass)) {
		Constructor <? extends UncheckedException> exceptionConstructor = exceptionClass.asSubclass(UncheckedException.class).getConstructor();
		throw exceptionConstructor.newInstance();
	}
	else {
		throw new IllegalArgumentException("Not a valid exception type: " + className);
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
6
Gpt3D_Clone155_6.java 1 19
Gpt3D_Clone155_6.java 20 38
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException(String className) throws Exception{
	Class<?> exceptionClass;
	try {
		exceptionClass = Class.forName(className);	
	} catch (ClassNotFoundException e){
		throw new IllegalArgumentException(e);
	}
	if(CheckedException.class.isAssignableFrom(exceptionClass)){
		throw (CheckedException) exceptionClass.newInstance();
	}
	else if (UncheckedException.class.isAssignableFrom(exceptionClass)){
		throw (UncheckedException) exceptionClass.newInstance();	
	}
	else {
		throw new IllegalArgumentException("Not a valid exception type: " + className);
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
7
Gpt3D_Clone155_7.java 1 19
Gpt3D_Clone155_7.java 20 39
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException(String className) throws Exception{
	Class<?> exceptionClass;
	
	try {
		exceptionClass = Class.forName(className);	
	} catch (ClassNotFoundException e){
		throw new IllegalArgumentException(e);
	}
	if(CheckedException.class.isAssignableFrom(exceptionClass)){
		throw exceptionClass.asSubclass(CheckedException.class).getConstructor().newInstance();
	}
	else if (UncheckedException.class.isAssignableFrom(exceptionClass)){
		throw exceptionClass.asSubclass(UncheckedException.class).getConstructor().newInstance();	
	}
	else {
		throw new IllegalArgumentException("Not a valid exception type: " + className);
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
155
9
Gpt3D_Clone155_9.java 1 19
Gpt3D_Clone155_9.java 20 38
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException(String className) throws Exception {
      Class<?> exceptionClass;
      try {
         exceptionClass = Class.forName(className);
      } 
      catch (ClassNotFoundException e) {
         throw new IllegalArgumentException(e);
      }
      if (CheckedException.class.isAssignableFrom(exceptionClass)) {
        throw (CheckedException) exceptionClass.newInstance();
      } else if (UncheckedException.class.isAssignableFrom(exceptionClass)) {
        throw (UncheckedException) exceptionClass.newInstance();
      } else {
        throw new IllegalArgumentException("Not a valid exception type: " + className);
      }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
0
Gpt3D_Clone156_0.java 1 19
Gpt3D_Clone156_0.java 20 40
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass = null;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    } 
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw (CheckedException) exceptionClass.getConstructor().newInstance();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw (UncheckedException) exceptionClass.getConstructor().newInstance();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (NoSuchMethodException | InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
4
Gpt3D_Clone156_4.java 1 19
Gpt3D_Clone156_4.java 20 37
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

 public static void throwException (String className) throws CheckedException, UncheckedException {
    try {
        Class < ? > exceptionClass = Class.forName (className);
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw (CheckedException) exceptionClass.asSubclass (CheckedException.class).newInstance();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw (UncheckedException) exceptionClass.asSubclass (UncheckedException.class).newInstance();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
0
Gpt3D_Clone158_0.java 1 11
Gpt3D_Clone158_0.java 12 25
----------------------------------------

public void insertNodeAfter (E nVal, E curVal) {
    Node < E > prev = findPrevOf (curVal);
    Node < E > curr = null;
    if (prev == null) {
        curr = head;
    } else {
        curr = prev.getNext ();
    }
    Node < E > newNode = new Node < E > (nVal);
    insert (curr, (curr == null ? curr : curr.getNext ()), newNode);
}
----------------------------------------

  public void insertNodeAfter(E nVal, E curVal) {
	Node<E> prev = findPrevOf(curVal);	
	
	if(prev == null) {
	  Node<E> newNode = new Node<E>(nVal);		
	  addBegining(head, newNode);
    } else {
	  Node<E> curr = prev.getNext();
	  Node<E> newNode = new Node<E>(nVal);		
	  insertAfter(prev, curr, newNode);
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
1
Gpt3D_Clone15_1.java 1 9
Gpt3D_Clone15_1.java 10 23
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add (Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    cal.add (Calendar.DAY_OF_MONTH, -(dayofweek - Calendar.FRIDAY));
    
    if (dayofweek < Calendar.FRIDAY) {
        cal.add (Calendar.DAY_OF_MONTH, -7);
    }
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
2
Gpt3D_Clone15_2.java 1 9
Gpt3D_Clone15_2.java 10 22
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add (Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    while (dayofweek != Calendar.FRIDAY) {
        cal.add(Calendar.DAY_OF_MONTH, -1);
        dayofweek = cal.get(Calendar.DAY_OF_WEEK);
    }
    return cal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
3
Gpt3D_Clone15_3.java 1 9
Gpt3D_Clone15_3.java 10 22
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add (Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - (dayofweek - Calendar.FRIDAY));
    if (dayofweek < Calendar.FRIDAY) {
        cal.add (Calendar.DAY_OF_MONTH, -7);
    }
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
4
Gpt3D_Clone15_4.java 1 9
Gpt3D_Clone15_4.java 10 22
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add(Calendar.MONTH, offset);
    cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
    dayofweek = cal.get(Calendar.DAY_OF_WEEK);
    if(dayofweek < Calendar.FRIDAY){
        cal.add(Calendar.DAY_OF_MONTH, -7);
    }
    cal.add(Calendar.DAY_OF_MONTH, Calendar.FRIDAY - dayofweek);
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
5
Gpt3D_Clone15_5.java 1 9
Gpt3D_Clone15_5.java 10 22
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add (Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek != Calendar.FRIDAY) {
        int diff = dayofweek < Calendar.FRIDAY ? (Calendar.FRIDAY - dayofweek) : (Calendar.FRIDAY - dayofweek) * -1;
        cal.add (Calendar.DAY_OF_MONTH, diff );
    }
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
6
Gpt3D_Clone15_6.java 1 9
Gpt3D_Clone15_6.java 10 22
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
    dayofweek = cal.get(Calendar.DAY_OF_WEEK);
    cal.add(Calendar.DAY_OF_MONTH, Calendar.FRIDAY - dayofweek);
    if(dayofweek > Calendar.FRIDAY)
        cal.add(Calendar.DAY_OF_MONTH, -7);
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
7
Gpt3D_Clone15_7.java 1 9
Gpt3D_Clone15_7.java 10 20
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add (Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek > Calendar.FRIDAY) cal.add (Calendar.DAY_OF_MONTH,- (dayofweek - Calendar.FRIDAY));
    else cal.add (Calendar.DAY_OF_MONTH,- (7 + (dayofweek - Calendar.FRIDAY)));
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
8
Gpt3D_Clone15_8.java 1 9
Gpt3D_Clone15_8.java 10 23
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

 public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
    dayofweek = cal.get(Calendar.DAY_OF_WEEK);
    if (dayofweek > Calendar.FRIDAY)
        cal.add (Calendar.DAY_OF_MONTH,  Calendar.FRIDAY - dayofweek);
    else
        cal.add (Calendar.DAY_OF_MONTH,  Calendar.FRIDAY - dayofweek - 7);
    return cal;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
160
0
Gpt3D_Clone160_0.java 1 26
Gpt3D_Clone160_0.java 27 52
----------------------------------------

public static boolean checkZero (Object toCheck) {
    final Class < ? > numerics = new Class < ? > [] {int.class, double.class, float.class, long.class, short.class, byte.class, Integer.class, Double.class, Float.class, Long.class, Short.class, Byte.class};
    try {
        Class < ? > clazz = toCheck.getClass ();
        Field [] fields = clazz.getDeclaredFields ();
        for (Field field : fields) {
            Class < ? > type = field.getType ();
            boolean isNumeric = false;
            for (Class < ? > numeric : numerics) {
                if (type.equals (numeric)) {
                    isNumeric = true;
                    break;
                }
            }
            if (isNumeric) {
                Object value = field.get (toCheck);
                if (value == 0) {
                    return true;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

 public static boolean checkZero (Object toCheck) {
    Class < ? > [] numerics = {int.class, double.class, float.class, long.class, short.class, byte.class, Integer.class, Double.class, Float.class, Long.class, Short.class, Byte.class};
    try {
        Class < ? > clazz = toCheck.getClass ();
        Field [] fields = clazz.getDeclaredFields ();
        for (Field field : fields) {
            boolean isNumeric = false;
            for (Class < ? > numeric : numerics) {
                if (field.getType().equals(numeric)) {
                    isNumeric = true;
                }
            }
            if (isNumeric) {
                Object value = field.get (toCheck);
                if (value != null && value instanceof Integer && value.equals(0)) {
                    return true;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
160
1
Gpt3D_Clone160_1.java 1 26
Gpt3D_Clone160_1.java 27 52
----------------------------------------

public static boolean checkZero (Object toCheck) {
    final Class < ? > numerics = new Class < ? > [] {int.class, double.class, float.class, long.class, short.class, byte.class, Integer.class, Double.class, Float.class, Long.class, Short.class, Byte.class};
    try {
        Class < ? > clazz = toCheck.getClass ();
        Field [] fields = clazz.getDeclaredFields ();
        for (Field field : fields) {
            Class < ? > type = field.getType ();
            boolean isNumeric = false;
            for (Class < ? > numeric : numerics) {
                if (type.equals (numeric)) {
                    isNumeric = true;
                    break;
                }
            }
            if (isNumeric) {
                Object value = field.get (toCheck);
                if (value == 0) {
                    return true;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

 public static boolean checkZero (Object toCheck) {
    Class < ? > [] numerics = {int.class, double.class, float.class, long.class, short.class, byte.class, Integer.class, Double.class, Float.class, Long.class, Short.class, Byte.class};
    try {
        Class < ? > clazz = toCheck.getClass ();
        Field [] fields = clazz.getDeclaredFields ();
        for (Field field : fields) {
            boolean isNumeric = false;
            for (Class < ? > numeric : numerics) {
                if (field.getType().equals(numeric)) {
                    isNumeric = true;
                }
            }
            if (isNumeric) {
                Object value = field.get (toCheck);
                if (value != null && value instanceof Short && value.equals((short)0)) {
                    return true;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
0
Gpt3D_Clone162_0.java 1 12
Gpt3D_Clone162_0.java 13 32
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        int x1 = rect[0];
        int y1 = rect[1];
        int x2 = rect[2];
        int y2 = rect[3];
        System.out.println ("The corner locations for the window \"" + windowName + "\" are:");
        System.out.printf ("Upper left corner: X: %d, Y: %d  ", x1, y1);
        System.out.printf ("Lower right corner: X: %d, Y: %d", x2, y2);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
1
Gpt3D_Clone162_1.java 1 12
Gpt3D_Clone162_1.java 13 31
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.println ("The corner coordinates of the window \"" + windowName + "\" are: ");
        int x1 = rect[0];
        int y1 = rect[1];
        int x2 = rect[2];
        int y2 = rect[3];
        System.out.printf ("Upper left corner: (%d, %d), Lower right corner: (%d, %d)", x1, y1, x2, y2);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
2
Gpt3D_Clone162_2.java 1 12
Gpt3D_Clone162_2.java 13 30
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        int left = rect[0];
        int top = rect[1];
        int right = rect[2];
        int bottom = rect[3];
        System.out.printf ("The corner locations for the window \"%s\" are: Left: %d, Top: %d, Right: %d, Bottom: %d", windowName, left, top, right, bottom);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
3
Gpt3D_Clone162_3.java 1 12
Gpt3D_Clone162_3.java 13 30
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        int topLeftX = rect[0];
        int topLeftY = rect[1];
        int bottomRightX = rect[2];
        int bottomRightY = rect[3];
        System.out.printf ("The coordinates of the window \"%s\" are: Top Left: (%d, %d), Bottom Right: (%d, %d)", windowName, topLeftX, topLeftY, bottomRightX, bottomRightY);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
4
Gpt3D_Clone162_4.java 1 12
Gpt3D_Clone162_4.java 13 30
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    Rectangle rectangle;
    try {
        rectangle = GetWindowRect.getRectangle (windowName);
        Line2D line1 = new Line2D.Double (rectangle.getX(), rectangle.getY(), rectangle.getX() + rectangle.getWidth(), rectangle.getY());
        Line2D line2 = new Line2D.Double (rectangle.getX(), rectangle.getY(), rectangle.getX(), rectangle.getY() + rectangle.getHeight());
        Line2D line3 = new Line2D.Double (rectangle.getX() + rectangle.getWidth(), rectangle.getY(), rectangle.getX() + rectangle.getWidth(), rectangle.getY() + rectangle.getHeight());
        Line2D line4 = new Line2D.Double (rectangle.getX(), rectangle.getY() + rectangle.getHeight(), rectangle.getX() + rectangle.getWidth(), rectangle.getY() + rectangle.getHeight());
        System.out.printf ("The corner locations for the window \"%s\", defined by four lines, are %s and %s and %s and %s.", windowName, line1.toString (), line2.toString (), line3.toString (), line4.toString ());
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
5
Gpt3D_Clone162_5.java 1 12
Gpt3D_Clone162_5.java 13 30
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    Rectangle rectangle;
    try {
        rectangle = GetWindowRect.getRectangle (windowName);
        int x = (int) rectangle.getX ();
        int y = (int) rectangle.getY ();
        int width = (int) rectangle.getWidth ();
        int height = (int) rectangle.getHeight ();
        System.out.printf ("The corner locations for the window \"%s\" are: X: %d, Y: %d, Width: %d, Height: %d", windowName, x, y, width, height);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
6
Gpt3D_Clone162_6.java 1 12
Gpt3D_Clone162_6.java 13 30
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.println ("The corner locations for the window \"" + windowName + "\" are as follows: ");
        System.out.println ("Upper left corner X-Coordinate: " + rect[0]);
        System.out.println ("Upper left corner Y-Coordinate: " + rect[1]);
        System.out.println ("Lower right corner X-Coordinate: " + rect[2]);
        System.out.println ("Lower right corner Y-Coordinate: " + rect[3]);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
7
Gpt3D_Clone162_7.java 1 12
Gpt3D_Clone162_7.java 13 28
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The coordinates of the window \"%s\" are: " );
        System.out.printf ("Upper left corner: %d, %d; ", rect[0], rect[1]);
        System.out.printf ("Lower right corner: %d, %d", rect[2], rect[3]);
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
0
Gpt3D_Clone16_0.java 1 12
Gpt3D_Clone16_0.java 13 29
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

	public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        IntStream.range (0, tweets.length).forEach (i -> {
            Tweet tweet = tweets[i];
            System.out.println (tweet);
        });
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
1
Gpt3D_Clone16_1.java 1 12
Gpt3D_Clone16_1.java 13 30
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

	public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        ListIterator<Tweet> iter = Arrays.asList (tweets).listIterator ();
        while (iter.hasNext ()) {
            Tweet tweet = iter.next ();
            System.out.println (tweet);
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
2
Gpt3D_Clone16_2.java 1 12
Gpt3D_Clone16_2.java 13 29
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

	public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        ListIterator<Tweet> listiter = Arrays.asList (tweets).listIterator ();
        while (listiter.hasNext ()) {
            System.out.println (listiter.next ());
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
3
Gpt3D_Clone16_3.java 1 12
Gpt3D_Clone16_3.java 13 29
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

	public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        for (int i = 0; i < tweets.length; i++) {
            Tweet tweet = tweets[i];
            System.out.println (tweet);
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
4
Gpt3D_Clone16_4.java 1 12
Gpt3D_Clone16_4.java 13 29
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

	public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Iterator<Tweet> iter = Arrays.asList (tweets).iterator ();
        while (iter.hasNext ()) {
            System.out.println (iter.next ());
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
0
Gpt3D_Clone172_0.java 1 10
Gpt3D_Clone172_0.java 11 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        Iterator itr = Window.getWindows().iterator();
        System.out.println ();
        System.out.println ("Display Dialogs");
        while(itr.hasNext()) {
            Object element = itr.next();
            if(element instanceof JDialog) {
                JDialog dialog = (JDialog) element;
                System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
1
Gpt3D_Clone172_1.java 1 10
Gpt3D_Clone172_1.java 11 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
        System.out.println ();
        System.out.println ("Display Dialogs");
        Iterator<Window> windows = Window.getWindows().iterator();
        while(windows.hasNext()) {
            Window window = windows.next();
            if (window instanceof JDialog) {
                JDialog dialog = (JDialog) window;
                System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
2
Gpt3D_Clone172_2.java 1 10
Gpt3D_Clone172_2.java 11 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        System.out.println ();
        System.out.println ("Display Dialogs");
        Window[] windows = Window.getWindows();
        for(int i = 0; i < windows.length; i++) {
            Window w = windows[i];
            if(windows[i] instanceof JDialog) {
                JDialog dialog = (JDialog) w;
                System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
3
Gpt3D_Clone172_3.java 1 10
Gpt3D_Clone172_3.java 11 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        System.out.println ();
        System.out.println ("Display Dialogs");
        Window[] windows = Window.getWindows();
        for (int i=0; i<windows.length; i++) {
            Window window = windows[i];
            if (window instanceof JDialog) {
                JDialog dialog = (JDialog) window;
                System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
4
Gpt3D_Clone172_4.java 1 10
Gpt3D_Clone172_4.java 11 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        System.out.println();
        System.out.print("Dialog Windows: \n");
        List<Window> windows = Window.getWindows();
        for(Window w : windows) {
            if(w instanceof JDialog) {
                JDialog dialog = (JDialog) w;
                System.out.println("\t"+dialog.getTitle() + " state: " + dialog.isDisplayable());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
5
Gpt3D_Clone172_5.java 1 10
Gpt3D_Clone172_5.java 11 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        ArrayList<Window> windows = Window.getWindows();
        System.out.println ();
        System.out.println ("Display Dialogs");
        for (Window w : windows) {
            if (w instanceof JDialog) {
                JDialog dialog = (JDialog) w;
                System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
6
Gpt3D_Clone172_6.java 1 10
Gpt3D_Clone172_6.java 11 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Display Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\t" + dialog.getTitle () + " " + dialog.isDisplayable ());
        }
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        Window[] windows = Window.getWindows();
        System.out.print("System Window Dialogs: \n");
        for(Window w : windows) {
            if(w instanceof JDialog) {
                JDialog dialog = (JDialog) w;
                System.out.println("\t"+dialog.getTitle() + ": " + dialog.isDisplayable());
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
0
Gpt3D_Clone174_0.java 1 12
Gpt3D_Clone174_0.java 13 34
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    ArrayList<JDialog> dialogList = new ArrayList<JDialog>();
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            dialogList.add((JDialog) window);
        }
    }
    for(int i=dialogList.size()-1; i>=0; i--){
        JDialog dialog = dialogList.get(i);
        System.out.println ("\tClosing " + dialog.getTitle ());
        try {
            dialog.setVisible(false);
            dialog.dispose();
        }
        catch (Exception ex) {}
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
1
Gpt3D_Clone174_1.java 1 12
Gpt3D_Clone174_1.java 13 34
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    ArrayList<JDialog> dialogList = new ArrayList<JDialog>();
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            dialogList.add((JDialog) window);
        }
    }
    for(JDialog dialog : dialogList){
        System.out.println ("\tClosing " + dialog.getTitle ());
        try {
            dialog.setVisible(false);
            dialog.getContentPane().removeAll();
            dialog.dispose();
        }
        catch (Exception ex) {}
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
2
Gpt3D_Clone174_2.java 1 12
Gpt3D_Clone174_2.java 13 33
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    ArrayList<JDialog> dialogList = new ArrayList<JDialog>();
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            dialogList.add((JDialog) window);
        }
    }
    for(JDialog dialog : dialogList){
        System.out.println ("\tClosing " + dialog.getTitle ());
        try {
            dialog.setVisible(false);
            dialog.dispose();
        }
        catch (Exception ex) {}
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
3
Gpt3D_Clone174_3.java 1 12
Gpt3D_Clone174_3.java 13 31
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.setVisible(false);
                dialog.dispose();
                window = null;
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
4
Gpt3D_Clone174_4.java 1 12
Gpt3D_Clone174_4.java 13 31
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.setVisible(false);
                dialog.dispose();
                dialog = null;
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
5
Gpt3D_Clone174_5.java 1 12
Gpt3D_Clone174_5.java 13 31
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.setVisible(false);
                dialog.dispose();
                dialog.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
6
Gpt3D_Clone174_6.java 1 12
Gpt3D_Clone174_6.java 13 30
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.pack();
                dialog.dispatchEvent(new WindowEvent(dialog, WindowEvent.WINDOW_CLOSING));
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
7
Gpt3D_Clone174_7.java 1 12
Gpt3D_Clone174_7.java 13 30
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.setVisible(false);
                dialog.removeAll();
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
8
Gpt3D_Clone174_8.java 1 12
Gpt3D_Clone174_8.java 13 30
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.getContentPane().removeAll();
                dialog.dispose();
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
174
9
Gpt3D_Clone174_9.java 1 12
Gpt3D_Clone174_9.java 13 29
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            dialog.dispose ();
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Close Dialogs");
    for (Window window : Window.getWindows ()) {
        if (window instanceof JDialog) {
            JDialog dialog = (JDialog) window;
            System.out.println ("\tClosing " + dialog.getTitle ());
            try {
                dialog.setVisible(false);
            }
            catch (Exception ex) {}
        }
    }
    Runtime.getRuntime ().gc ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
0
Gpt3D_Clone181_0.java 1 18
Gpt3D_Clone181_0.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean terminate = false;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String response = stdin.next ();
        if (response.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            terminate = true;
        }
    } while(!terminate);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
1
Gpt3D_Clone181_1.java 1 18
Gpt3D_Clone181_1.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean breakLoop = false;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String option = stdin.next ();
        if (option.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            breakLoop = true;
        }
    } while(!breakLoop);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
2
Gpt3D_Clone181_2.java 1 18
Gpt3D_Clone181_2.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean exit = false;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String enumeration = stdin.next ();
        if (enumeration.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            exit = true;
        }
    } while(!exit);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
3
Gpt3D_Clone181_3.java 1 18
Gpt3D_Clone181_3.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean cont = false;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String ans = stdin.next ();
        if (ans.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            cont = true;
        }
    } while(!cont);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
4
Gpt3D_Clone181_4.java 1 18
Gpt3D_Clone181_4.java 19 41
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean keepLooping = true;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String answer = stdin.next ();
        if (answer.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ()); 
        }
        else {
            keepLooping = false;
        }
    } while(keepLooping);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
5
Gpt3D_Clone181_5.java 1 18
Gpt3D_Clone181_5.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean done = false;
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String res = stdin.next ();
        if (res.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            done = true;
        }
    } while(!done);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
6
Gpt3D_Clone181_6.java 1 18
Gpt3D_Clone181_6.java 19 40
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    boolean stop = false;
    Scanner stdin = new Scanner (System.in);
    while(!stop) {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String answer = stdin.next ();
        if (answer.startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            stop = true;
        }
    }
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
7
Gpt3D_Clone181_7.java 1 18
Gpt3D_Clone181_7.java 19 41
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    boolean condition = true;
    while(condition) {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        String input = stdin.next ();
        if(input.equalsIgnoreCase("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        }
        else {
            condition = false;
        } 
    }
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
181
8
Gpt3D_Clone181_8.java 1 18
Gpt3D_Clone181_8.java 19 38
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

 public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in); 
    String input = "y";
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        input = stdin.next ();
        if(input.toLowerCase() == "y") {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        }
    } while(input.toLowerCase() == "y");
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
7
Gpt3D_Clone182_7.java 1 11
Gpt3D_Clone182_7.java 12 23
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

 public static void main (String [] args) {
    int arr [] = new int[5];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Please enter a number for arr[" + i + "]: ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0; i < 5; i ++) System.out.println ("arr[" + i + "]: " + arr [i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
5
Gpt3D_Clone183_5.java 1 11
Gpt3D_Clone183_5.java 12 24
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

  public static void main(String[] args) { 
    int[] arr = new int[5];
    Scanner scanner = new Scanner(System.in);
    for(int i=0; i < 5; i++) {
        System.out.print("Enter number " + (i+1) + ": ");
        arr[i] = scanner.nextInt();
    }
    for(int k=0; k < arr.length; k++) {
        System.out.println("Number " + (k+1) + ": " + arr[k]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
7
Gpt3D_Clone183_7.java 1 11
Gpt3D_Clone183_7.java 12 24
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

  public static void main (String[] args) { 
    int[] arr = new int[5];
    Scanner sc = new Scanner(System.in);
    for(int ii=0; ii < 5; ii++) {
        System.out.print("Enter number " + (ii+1) + ": ");
        arr[ii] = sc.nextInt();
    }
    for(int jj=0; jj < arr.length; jj++) { 
        System.out.println("Number " + (jj+1) + ":" + arr[jj]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
8
Gpt3D_Clone183_8.java 1 11
Gpt3D_Clone183_8.java 12 24
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

  public static void main(String[] args) { 
    int[] arr = new int[5];
    Scanner s = new Scanner(System.in);
    for(int i=0; i<5; i++) {
        System.out.print("Enter number " + (i+1) + ": ");
        arr[i] = s.nextInt();
    }
    for(int x=0; x < arr.length; x++) {
        System.out.println("Number " + (x+1) + ": " + arr[x]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
184
0
Gpt3D_Clone184_0.java 1 14
Gpt3D_Clone184_0.java 15 39
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        Lock lock = new ReentrantLock();
        while(!lock.tryLock()) {
            //Try to acquire lock
        }
        try {
            latch.countDown ();
            System.out.println (threadName + ": locked first lock");
        } catch(Exception e) {
            lock.unlock();
            throw e;
        }
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        ReentrantLock secondLock = new ReentrantLock();
        secondLock.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
184
1
Gpt3D_Clone184_1.java 1 14
Gpt3D_Clone184_1.java 15 37
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        ReentrantLock lock1 = new ReentrantLock();
        lock1.lock ();
        try {
            latch.countDown ();
            System.out.println (threadName + ": locked first lock");
        } catch(Exception e) {
            lock1.unlock();
            throw e;
        }
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        ReentrantLock lock2 = new ReentrantLock();
        lock2.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
184
2
Gpt3D_Clone184_2.java 1 14
Gpt3D_Clone184_2.java 15 38
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        while(!first.tryLock()) {
            //Try to acquire lock
        }
        try {
            latch.countDown ();
            System.out.println (threadName + ": locked first lock");
        } catch(Exception e) {
            first.unlock();
            throw e;
        }
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        Lock secondLock = new ReentrantLock();
        secondLock.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
184
3
Gpt3D_Clone184_3.java 1 14
Gpt3D_Clone184_3.java 15 37
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        while(true) {
            first.lock();
            if(first.tryLock()) {
                latch.countDown ();
                System.out.println (threadName + ": locked first lock");
                break;
            }
        }
        latch.await ();
        exLock.lock ();
        System.out.println (threadName + ": attempting to lock second lock");
        Lock secondLock = new ReentrantLock();
        secondLock.lock();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
184
4
Gpt3D_Clone184_4.java 1 14
Gpt3D_Clone184_4.java 15 36
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        while(true) {
            if(first.tryLock()) {
                latch.countDown ();
                System.out.println (threadName + ": locked first lock");
                break;
            }
        }
        latch.await ();
        exLock.lock ();
        System.out.println (threadName + ": attempting to lock second lock");
        Lock secondLock = new ReentrantLock();
        secondLock.lock();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
0
Gpt3D_Clone185_0.java 1 17
Gpt3D_Clone185_0.java 18 36
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run() {
    System.out.println("Thread " + Thread.currentThread().getId() + " starting");
    synchronized(BadRunnable.class) {
        System.out.println("Thread " + Thread.currentThread().getId() + " acquired the monitor on BadRunnable.class");
        latch.countDown();
        while(latch.getCount() > 0) {
            latch.tryAcquire(1000, TimeUnit.MILLISECONDS);
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){
                e.printStackTrace();
            }
        }
    }
    System.out.println("Thread " + Thread.currentThread().getId() + " released the monitor on BadRunnable.class");
    System.out.println("Thread " + Thread.currentThread().getId() + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
1
Gpt3D_Clone185_1.java 1 17
Gpt3D_Clone185_1.java 18 31
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run() {
    System.out.println("Thread " + Thread.currentThread().getId() + " starting");
    synchronized(BadRunnable.class) {
        System.out.println("Thread " + Thread.currentThread().getId() + " acquired the monitor on BadRunnable.class");
        latch.countDown();
        while(latch.getCount() > 0) {
            latch.tryAcquire(1000, TimeUnit.MILLISECONDS);
        }
    }
    System.out.println("Thread " + Thread.currentThread().getId() + " released the monitor on BadRunnable.class");
    System.out.println("Thread " + Thread.currentThread().getId() + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
2
Gpt3D_Clone185_2.java 1 17
Gpt3D_Clone185_2.java 18 31
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run() {
    System.out.println("Thread " + Thread.currentThread().getId() + " starting");
    synchronized(BadRunnable.class) {
        System.out.println("Thread " + Thread.currentThread().getId() + " acquired the monitor on BadRunnable.class");
        latch.countDown();
        while(latch.getCount() > 0) {
            latch.tryAcquire(1, TimeUnit.MILLISECONDS);
        }
    }
    System.out.println("Thread " + Thread.currentThread().getId() + " released the monitor on BadRunnable.class");
    System.out.println("Thread " + Thread.currentThread().getId() + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
0
Gpt3D_Clone186_0.java 1 17
Gpt3D_Clone186_0.java 18 43
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        long startTime = System.nanotime();
        long timeout = 3000; 
        try { 
            for (;;){
               if (latch.await (timeout, TimeUnit.MILLISECONDS)) {
                   break;
               }
               if (System.nanotime() - startTime >= timeout) {
                   System.out.println("Timed out waiting for latch");
                   break;
               }
            }
        } catch (InterruptedException ex) {
            //Handle exception
        } 
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
1
Gpt3D_Clone186_1.java 1 17
Gpt3D_Clone186_1.java 18 40
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown (); 
        long startTime = System.nanotime();
        long timeout = 3000; 
        while (System.nanotime() - startTime < timeout) {
            if (latch.getCount() == 0) {
                break; 
            }
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                //Handle exception
            } 
        }   
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
2
Gpt3D_Clone186_2.java 1 17
Gpt3D_Clone186_2.java 18 40
----------------------------------------

public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        while (true) {
            try {
                latch.await ();
            } catch (InterruptedException ex) {
                continue;
            }
            break;
        }
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

 public void run () {
    System.out.println ("Thread " + Thread.currentThread ().getId () + " starting");
    synchronized (BadRunnable.class) {
        System.out.println ("Thread " + Thread.currentThread ().getId () + " acquired the monitor on BadRunnable.class");
        latch.countDown ();
        Runnable monitorChecker = new Runnable() {
            public void run() {
                while (latch.getCount() > 0 && !Thread.currentThread().isInterrupted()) {
                    try {
                        latch.await ();
                    } catch (InterruptedException ex) {
                        break;
                    }
                }
            }
        };
        new Thread(monitorChecker).start();
    }
    System.out.println ("Thread " + Thread.currentThread ().getId () + " released the monitor on BadRunnable.class");
    System.out.println ("Thread " + Thread.currentThread ().getId () + " ending");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
0
Gpt3D_Clone187_0.java 1 14
Gpt3D_Clone187_0.java 15 35
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

 public void run() {
    String threadName = Thread.currentThread().getName();
    ReentrantLock lock = new ReentrantLock();
    if (lock.tryLock()) {
        try {
            first.lock();
            latch.countDown();
            System.out.println(threadName + ": locked first lock");
            latch.await();
            System.out.println(threadName + ": attempting to lock second lock");
            second.lock();
            System.out.println(threadName + ": never reached");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            lock.unlock();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
1
Gpt3D_Clone187_1.java 1 14
Gpt3D_Clone187_1.java 15 49
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

  public void run() { 
     String threadName = Thread.currentThread().getName(); 
     try { 
       synchronized(first) { 
         latch.countDown(); 
         System.out.println(threadName + ": locked first lock"); 
         latch.await(); 
         System.out.println(threadName + ": attempting to lock second lock"); 
         synchronized(second) { 
           System.out.println(threadName + ": never reached"); 
         } 
       } 
     } catch (InterruptedException e) { 
       throw new RuntimeException(e); 
     } 
   } 
  public void run() {
     String threadName = Thread.currentThread().getName();
     if (first.tryLock()) {
          latch.countDown();
          System.out.println(threadName + ": locked first lock");
          try {
               latch.await();
               if(second.tryLock()) {
                    System.out.println(threadName + ": never reached");
               }
          } catch (InterruptedException e) {
               throw new RuntimeException(e);
          }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
0
Gpt3D_Clone188_0.java 1 14
Gpt3D_Clone188_0.java 15 41
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

 public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        // acquire the first lock
        first.lock ();
        System.out.println (threadName + ": locked first lock");
        // countdown to second lock with latch
        while (true) {
            if(latch.getCount () == 0){
                break;
            }
            try{
                latch.await ();
            }catch(InterruptedException ex){
                System.out.println (threadName + ": interrupted");
            }
        }
        System.out.println (threadName + ": attempting to lock second lock");
        // attempt to acquire second lock
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
1
Gpt3D_Clone188_1.java 1 14
Gpt3D_Clone188_1.java 15 39
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

 public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        // acquire the first lock
        first.lock ();
        System.out.println (threadName + ": locked first lock");
        // countdown to second lock with latch
        while (true) {
            if(latch.getCount () == 0){
                break;
            }
            latch.await (10, TimeUnit.SECONDS);
        }
        System.out.println (threadName + ": attempting to lock second lock");
        // attempt to acquire second lock
        second.lock ();
        // unlock first lock
        first.unlock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
2
Gpt3D_Clone188_2.java 1 14
Gpt3D_Clone188_2.java 15 37
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

 public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        // acquire the first lock
        while (!first.tryLock () ){
            Thread.sleep (500);
        }
        System.out.println (threadName + ": locked first lock");
        // countdown to second lock with latch
        latch.countDown ();
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        // attempt to acquire second lock
        while(!second.tryLock ()){
            Thread.sleep (500);
        }
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
3
Gpt3D_Clone188_3.java 1 14
Gpt3D_Clone188_3.java 15 31
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

 public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        // acquire both locks at the same time
        if(first.tryLock() && second.tryLock())
        System.out.println (threadName + ": locked first and second lock");
        // countdown to second lock with latch
        latch.countDown ();
        System.out.println (threadName + ": attempting to lock second lock");
        latch.await ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
0
Gpt3D_Clone18_0.java 1 13
Gpt3D_Clone18_0.java 14 31
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Field [] fields = value.getClass ().getDeclaredFields ();
    for (Field field : fields) {
        try {
            jgen.writeObjectField (field.getName (), field.get (value));
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

 public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    for (Field field : value.getClass().getDeclaredFields()) {
        field.setAccessible(true);
        try {
            Object object = field.get (value);
            if (object != null && !Modifier.isStatic(field.getModifiers())) {
                jgen.writeObjectField (field.getName (), object);
            }
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
1
Gpt3D_Clone18_1.java 1 13
Gpt3D_Clone18_1.java 14 30
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Field [] fields = value.getClass ().getDeclaredFields ();
    for (Field field : fields) {
        try {
            jgen.writeObjectField (field.getName (), field.get (value));
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

 public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    for (Field field : value.getClass().getDeclaredFields()) {
        field.setAccessible(true);
        try {
            if (field.get(value) != null && !Modifier.isStatic(field.getModifiers())) {
                jgen.writeObjectField (field.getName (), field.get (value));
            }
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
0
Gpt3D_Clone190_0.java 1 14
Gpt3D_Clone190_0.java 15 30
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = min;
        k < i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

 public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = min;
        j <= max; j ++) {
            if(j < i) {
                System.out.print (j);
            } else {
                System.out.print (j - 1);
            }
        }
        System.out.println ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
5
Gpt3D_Clone190_5.java 1 14
Gpt3D_Clone190_5.java 15 30
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = min;
        k < i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

 public void printSquare (int min, int max) {
    for (int i = max;
    i >= min; i --) {
        for (int j = min;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = (i + 1);
        k <= max; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
3
Gpt3D_Clone191_3.java 1 9
Gpt3D_Clone191_3.java 10 20
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {	try {
        PrintWriter writer = new PrintWriter("Log.txt", "UTF-8");
        msg.writeTo (writer);
        writer.println(""); 
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
4
Gpt3D_Clone191_4.java 1 9
Gpt3D_Clone191_4.java 10 19
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {	try {
        DataOutputStream dos = new DataOutputStream(new FileOutputStream("Log.txt"));
        msg.writeTo (dos);
        dos.close(); 
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
5
Gpt3D_Clone191_5.java 1 9
Gpt3D_Clone191_5.java 10 20
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {	
try {
        OutputStream outputStream = new FileOutputStream("Log.txt");
        msg.writeTo (outputStream);
        outputStream.close();
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
6
Gpt3D_Clone191_6.java 1 9
Gpt3D_Clone191_6.java 10 19
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {	try {
        OutputStreamWriter writer = new OutputStreamWriter(System.out);
        msg.writeTo (writer);
        writer.flush();
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
7
Gpt3D_Clone191_7.java 1 9
Gpt3D_Clone191_7.java 10 18
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {    try {
        StreamResult result = new StreamResult(System.out); 
        msg.writeTo(result);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
8
Gpt3D_Clone191_8.java 1 9
Gpt3D_Clone191_8.java 10 17
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

 public boolean handleMessage (SOAPMessageContext context) {	try {
        System.out.write(msg.getContent(new StringBuffer()).toString().getBytes()); 
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
9
Gpt3D_Clone191_9.java 1 9
Gpt3D_Clone191_9.java 10 17
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

  public boolean handleMessage (SOAPMessageContext context) {	try {
        msg.writeTo(new FileWriter("Log.txt")); 
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
0
Gpt3D_Clone192_0.java 1 9
Gpt3D_Clone192_0.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int nextInd = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
        index = nextInd;
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
1
Gpt3D_Clone192_1.java 1 9
Gpt3D_Clone192_1.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int tempIndex = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [tempIndex].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
2
Gpt3D_Clone192_2.java 1 9
Gpt3D_Clone192_2.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int storedIndex = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [storedIndex].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
3
Gpt3D_Clone192_3.java 1 9
Gpt3D_Clone192_3.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int tempInd = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [tempInd].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
4
Gpt3D_Clone192_4.java 1 9
Gpt3D_Clone192_4.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int currentIndex = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [currentIndex].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
5
Gpt3D_Clone192_5.java 1 9
Gpt3D_Clone192_5.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int nextIndex = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
        index = nextIndex;
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
6
Gpt3D_Clone192_6.java 1 9
Gpt3D_Clone192_6.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {  try {
        int current = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [current].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
7
Gpt3D_Clone192_7.java 1 9
Gpt3D_Clone192_7.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {   try {
        int i = index;
        index = (index + 1) % laf.length;
        UIManager.setLookAndFeel (laf [i].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
0
Gpt3D_Clone195_0.java 1 26
Gpt3D_Clone195_0.java 27 61
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE) {
        throw new FileTooBigException(file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    byte[] buffer = new byte[4096];
    int read = 0;
    try {
        fis = new FileInputStream(file);
        baos = new ByteArrayOutputStream();
 
        while ((read = fis.read(buffer)) > 0) {
            baos.write(buffer, 0, read);
        }
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if (fis != null) {
            try {
                fis.close();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
1
Gpt3D_Clone195_1.java 1 26
Gpt3D_Clone195_1.java 27 58
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    try {
        fis = new FileInputStream (file);
        baos = new ByteArrayOutputStream ();
        byte [] buffer = new byte [2048];
        int read = 0;
        while ((read = fis.read (buffer)) != - 1) {
            baos.write (buffer, 0, read);
        }
    } finally {
        if (fis != null) {
            try {
                fis.close ();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close ();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
2
Gpt3D_Clone195_2.java 1 26
Gpt3D_Clone195_2.java 27 58
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE) {
        throw new FileTooBigException(file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    byte[] buffer = new byte[4096];
    try {
        fis = new FileInputStream(file);
        baos = new ByteArrayOutputStream();
        int read = 0;
        while ((read = fis.read(buffer)) != -1) {
            baos.write(buffer, 0, read);
        }
    } finally {
        if (fis != null) {
            try {
                fis.close();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
3
Gpt3D_Clone195_3.java 1 26
Gpt3D_Clone195_3.java 27 58
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE) {
        throw new FileTooBigException(file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    byte[] bytes = new byte[1024];
    int read = 0;
    try {
        fis = new FileInputStream(file);
        baos = new ByteArrayOutputStream();
        while ((read = fis.read(bytes)) != -1) {
            baos.write(bytes, 0, read);
        }
    } finally {
        if (fis != null) {
            try {
                fis.close();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
4
Gpt3D_Clone195_4.java 1 26
Gpt3D_Clone195_4.java 27 58
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE) {
        throw new FileTooBigException(file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    try {
        baos = new ByteArrayOutputStream();
        fis = new FileInputStream(file);
        int read;
        byte[] buffer = new byte[4096];
        while((read = fis.read(buffer)) != -1) {
            baos.write(buffer, 0, read);
        }
    } finally {
        if (fis != null) {
            try {
                fis.close();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
5
Gpt3D_Clone195_5.java 1 26
Gpt3D_Clone195_5.java 27 57
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE) {
        throw new FileTooBigException(file);
    }
    FileInputStream fis = null;
    ByteArrayOutputStream baos = null;
    try {
        baos = new ByteArrayOutputStream();
        fis = new FileInputStream(file);
        int c;
        while ((c = fis.read()) != -1) {
            baos.write(c);
        }
    } finally {
        if (fis != null) {
            try {
                fis.close();
            } catch (IOException e) {
            }
        }
        if (baos != null) {
            try {
                baos.close();
            } catch (IOException e) {
            }
        }
    }
    return baos.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
6
Gpt3D_Clone195_6.java 1 26
Gpt3D_Clone195_6.java 27 50
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte[] read(File file) throws IOException, FileTooBigException {
    if (file.length() > MAX_FILE_SIZE)
        throw new FileTooBigException(file);
    ByteArrayOutputStream output = null;
    InputStream input = null;
    try {
        byte[] buffer = new byte[4096];
        output = new ByteArrayOutputStream();
        input = new FileInputStream(file);
        int n = 0;
        while ((n = input.read(buffer)) != -1) {
            output.write(buffer, 0, n);
        }
    } finally {
        if (input != null) input.close();
        if (output != null) output.close();
    }
    return output.toByteArray();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
7
Gpt3D_Clone195_7.java 1 26
Gpt3D_Clone195_7.java 27 49
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

 public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream outputStream = null;
    InputStream inputStream = null;
    try {
        outputStream = new ByteArrayOutputStream ();
        inputStream = new FileInputStream (file);
        int b;
        while((b = inputStream.read ()) != -1) {
            outputStream.write (b);
        }
    } finally {
        if (outputStream != null)
            outputStream.close ();
        if (inputStream != null)
            inputStream.close ();
    }
    return outputStream.toByteArray ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
6
Gpt3D_Clone196_6.java 1 14
Gpt3D_Clone196_6.java 15 31
----------------------------------------

public static byte [] readBytes (InputStream inputStream) throws IOException {
    byte [] buffer = new byte [32 * 1024];
    int bufferSize = 0;
    for (;;) {
        int read = inputStream.read (buffer, bufferSize, buffer.length - bufferSize);
        if (read == - 1) {
            return Arrays.copyOf (buffer, bufferSize);
        }
        bufferSize += read;
        if (bufferSize == buffer.length) {
            buffer = Arrays.copyOf (buffer, bufferSize * 2);
        }
    }
}
----------------------------------------

 public static byte [] readBytes (InputStream inputStream) throws IOException {
      int buffSize  = 32 * 1024;
      byte [] buffer = new byte[buffSize];
      int bufferSize = 0;
      while(true) {
        int read = inputStream.read(buffer, bufferSize, buffSize);
        if (read == -1) {
            return Arrays.copyOf(buffer, bufferSize);
        }
        bufferSize += read;
        if (bufferSize == buffSize) {
            buffer = Arrays.copyOf(buffer, buffSize * 2);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
7
Gpt3D_Clone196_7.java 1 14
Gpt3D_Clone196_7.java 15 31
----------------------------------------

public static byte [] readBytes (InputStream inputStream) throws IOException {
    byte [] buffer = new byte [32 * 1024];
    int bufferSize = 0;
    for (;;) {
        int read = inputStream.read (buffer, bufferSize, buffer.length - bufferSize);
        if (read == - 1) {
            return Arrays.copyOf (buffer, bufferSize);
        }
        bufferSize += read;
        if (bufferSize == buffer.length) {
            buffer = Arrays.copyOf (buffer, bufferSize * 2);
        }
    }
}
----------------------------------------

 public static byte [] readBytes (InputStream inputStream) throws IOException {
    int initialBuffSize  = 32 * 1024;
    byte [] buffer = new byte[initialBuffSize];
    int bufferSize = 0;
    while(true) {
        int read = inputStream.read(buffer, 0, initialBuffSize);
        if (read == -1) {
            return Arrays.copyOf(buffer, bufferSize);
        }
        bufferSize += read;
        if (bufferSize == initialBuffSize) {
            buffer = Arrays.copyOf(buffer, initialBuffSize * 2);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
198
0
Gpt3D_Clone198_0.java 1 13
Gpt3D_Clone198_0.java 14 26
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize (JsonObject jsonObject, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    String className = jsonObject.getAsJsonObject(CLASSNAME).getAsString();
    Class<?> klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
198
1
Gpt3D_Clone198_1.java 1 13
Gpt3D_Clone198_1.java 14 26
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize (JsonObject jsonObject, Type typeOfT, JsonDeserializationContext context) {
    String className = jsonObject.get(CLASSNAME).getAsString();
    Class<?> klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
198
2
Gpt3D_Clone198_2.java 1 13
Gpt3D_Clone198_2.java 14 26
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize (JsonObject jsonObject, Type typeOfT, JsonDeserializationContext context) {
    String className = jsonObject.getAsJsonPrimitive(CLASSNAME).getAsString();
    Class<?> klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
199
0
Gpt3D_Clone199_0.java 1 13
Gpt3D_Clone199_0.java 14 27
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject();
    JsonPrimitive prim = jsonObject.get(CLASSNAME).getAsJsonPrimitive();
    Class<?> klass;
    try {
        klass = Class.forname(prim.toString());
    } catch (ClassNotFoundException e) {
        e.printStackTrace();
        throw new JsonParseException(e.getMessage());
    }
    return context.deserialize(jsonObject.get(INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
199
1
Gpt3D_Clone199_1.java 1 13
Gpt3D_Clone199_1.java 14 27
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

   public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    String className = jsonObject.get (CLASSNAME).getAsString ();
    Class < ? > klass;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
199
2
Gpt3D_Clone199_2.java 1 13
Gpt3D_Clone199_2.java 14 27
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject();
    JsonPrimitive prim = jsonObject.get(CLASSNAME).getAsJsonPrimitive();
    Class<?> klass;
    try {
        klass = Class.forName(prim.getAsString());
    } catch (ClassNotFoundException e) {
        e.printStackTrace();
        throw new JsonParseException(e.getMessage());
    }
    return context.deserialize(jsonObject.get(INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
199
3
Gpt3D_Clone199_3.java 1 13
Gpt3D_Clone199_3.java 14 27
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

 public IAnimal deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject();
    String className = jsonObject.get(CLASSNAME).getAsString();
    Class<?> klass;
    try {
        klass = Class.forName(className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace();
        throw new JsonParseException(e.getMessage());
    }
    return context.deserialize(jsonObject.get(INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
0
Gpt3D_Clone201_0.java 1 9
Gpt3D_Clone201_0.java 10 22
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.rigth;
    node.rigth = node.left;
    node.left = temp;
    if (node.left != null)
        mirrorView(node.left);
    if (node.right != null)
        mirrorView(node.right);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
1
Gpt3D_Clone201_1.java 1 9
Gpt3D_Clone201_1.java 10 22
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.rigth;
    node.rigth = node.left;
    node.left = temp;
    if (node.rigth != null)
        mirrorView(node.rigth);
    if (node.left != null)
        mirrorView(node.left);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
2
Gpt3D_Clone201_2.java 1 9
Gpt3D_Clone201_2.java 10 22
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    if (node.right != null)
        mirrorView(node.right);
    if (node.left != null)
        mirrorView(node.left);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
3
Gpt3D_Clone201_3.java 1 9
Gpt3D_Clone201_3.java 10 22
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    if (node.left != null)
        mirrorView(node.left);
    if (node.right != null)
        mirrorView(node.right);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
4
Gpt3D_Clone201_4.java 1 9
Gpt3D_Clone201_4.java 10 22
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.rigth;
    node.rigth = node.left;
    node.left = temp;
    if (node.right != null)
        mirrorView(node.right);
    if (node.left != null)
        mirrorView(node.left);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
5
Gpt3D_Clone201_5.java 1 9
Gpt3D_Clone201_5.java 10 20
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.rigth;
    node.rigth = node.left;
    node.left = temp;
    if (node.left != null)
        mirrorView(node.left);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
201
6
Gpt3D_Clone201_6.java 1 9
Gpt3D_Clone201_6.java 10 20
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------

 private BSTNode mirrorView(BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;
    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    if (node.right != null)
        mirrorView(node.right);
    return node;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
0
Gpt3D_Clone209_0.java 1 9
Gpt3D_Clone209_0.java 10 24
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

 public static int singleNumber (int[] nums){
  Set<Integer> unique = new HashSet<>();
  List<Integer> temp = new ArrayList<>();
  for (int num : nums){
     if ( unique.contains(num)){
       temp.add(num);
     }
     else
       unique.add (num);
   }
   unique.removeAll(temp);
  return unique.iterator().next();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
1
Gpt3D_Clone209_1.java 1 9
Gpt3D_Clone209_1.java 10 23
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

 public static int singleNumber (int[] nums){
  Set<Integer> unique = new HashSet<>();
  for (int num : nums){
     if ( unique.contains(num)){
       unique.remove (num);
     }
     else{
       unique.add (num);
     }
   }
  return unique.iterator().next();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
2
Gpt3D_Clone209_2.java 1 9
Gpt3D_Clone209_2.java 10 21
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

 public static int singleNumber (int[] nums){
  List<Integer> unique = new ArrayList<>();
  for (int num : nums){
     if ( unique.contains(num))
        unique.remove(num);
     else
        unique.add (num);
   }
  return unique.iterator().next();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
3
Gpt3D_Clone209_3.java 1 9
Gpt3D_Clone209_3.java 10 21
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

 public static int singleNumber (int[] nums){
  Set<Integer> unique = new TreeSet<>();
  for (int num : nums){
     if ( unique.contains(num))
       unique.remove (num);
     else
       unique.add (num);
   }
  return unique.iterator().next();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
5
Gpt3D_Clone209_5.java 1 9
Gpt3D_Clone209_5.java 10 19
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

 public static int singleNumber(int[] nums){
    Set<Integer> unique = new LinkedHashSet<>();
    for (int num : nums){
        if (! unique.add(num))
            unique.remove (num);
    }
    return unique.iterator().next();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
1
Gpt3D_Clone210_1.java 1 16
Gpt3D_Clone210_1.java 17 32
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber(int[] nums) {
    int answer = 0;
    Stack stack = new Stack ();
    for (int i = 0; i < nums.length; i ++) {
        stack.push (nums[i]);
    }
    while (!stack.isEmpty ()) {
        int test = (int) stack.pop ();
        if (Collections.frequency (Arrays.asList (nums), test) == 1)
            answer = test;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
2
Gpt3D_Clone210_2.java 1 16
Gpt3D_Clone210_2.java 17 33
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber(int[] nums) {
    int answer = 0;
    TreeMap<Integer, Integer> tm = new TreeMap<> ();
    for (int i = 0; i < nums.length; i ++) {
        tm.put (nums[i], tm.getOrDefault (nums[i], 0) + 1);
    }
    for (int i = 0; i < nums.length; i ++) {
        if (tm.get (nums[i]) == 1) {
            answer = nums[i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
4
Gpt3D_Clone210_4.java 1 16
Gpt3D_Clone210_4.java 17 32
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

 public static int singleNumber(int[] nums) {
    int answer = 0;
    HashMap<Integer, Integer> hm = new HashMap<> ();
    for (int i = 0; i < nums.length; i ++) {
        hm.put (nums[i], hm.getOrDefault (nums[i], 0) + 1);
    }
    for (int i = 0; i < nums.length; i ++) {
        if (hm.get (nums[i]) == 1) {
            answer = nums[i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
5
Gpt3D_Clone210_5.java 1 16
Gpt3D_Clone210_5.java 17 30
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

 public static int singleNumber(int[] nums) { 
   int answer = 0; 
   HashSet<Integer> hs = new HashSet<>(); 
   for (int i = 0; i<nums.length; i++) {
       hs.add(nums[i]);
   } 
   for(int i = 0; i<nums.length; i++){ 
       if(!hs.contains(nums[i]))
           answer = nums[i]; 
   } 
   return answer; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
7
Gpt3D_Clone210_7.java 1 16
Gpt3D_Clone210_7.java 17 31
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

 public static int singleNumber(int[] nums) {
    int answer = 0;
    TreeSet<Integer> ts = new TreeSet<>();
    for (int i = 0; i < nums.length; i ++) {
        ts.add (nums[i]);
    }
    for (int i = 0; i < nums.length; i ++) {
        if (!ts.contains (nums[i]))
            answer = nums[i];
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
211
5
Gpt3D_Clone211_5.java 1 16
Gpt3D_Clone211_5.java 17 32
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

 public static int singleNumber (int [] nums) {
    int answer = 0;
    Map<Integer, Boolean> m = new HashMap<>(); 
    for (int i = 0; i < nums.length; i ++) {
        m.put (nums [i], true);
    }
    for (int i = 0; i < nums.length; i ++) {
        int test = nums [i];
        if (!m.containsKey(test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
211
6
Gpt3D_Clone211_6.java 1 16
Gpt3D_Clone211_6.java 17 32
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

 public static int singleNumber (int [] nums) {
    int answer = 0;
    for (int i = 0; i < nums.length; i ++) {
        for (int j = 0; j < nums.length; j++) {
            if (nums[i] == nums[j] && i != j) {
               break; 
            }
            if (j == nums.length-1) {
               answer = nums[i];
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
3
Gpt3D_Clone212_3.java 1 24
Gpt3D_Clone212_3.java 25 63
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

 public static boolean isNumber (String str) { 
    int len = str.length ();
    int i = 0;
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt(i) == '+' || str.charAt(i) == '-'))
        i++;
    while (i < len && checkIfDigit(str.charAt(i))) {
        a = true;
        i++;
    }
    if (i < len && str.charAt(i) == '.') {
        i++;
    }
    while (i < len && checkIfDigit(str.charAt(i))) {
        b = true;
        i++;
    }
    if (i < len && (str.charAt(i) == 'e' || str.charAt(i) == 'E') && (a || b)) { 
        i++; 
        c = true; 
        
        if (i < len && (str.charAt(i) == '+' || str.charAt(i) == '-')) {
            i++;
        }
        while (i < len && checkIfDigit(str.charAt(i))) {
            d = true;
            i++;
        }
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
4
Gpt3D_Clone212_4.java 1 24
Gpt3D_Clone212_4.java 25 57
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

 public static boolean isNumber(String str) {
    int i = 0, len = str.length();
    boolean a = false, b = false, c = false, d = false;
    if(i < len && (str.charAt(i) == '+' || str.charAt(i) == '-')) {
        i++;
    }
    while(i < len && checkIfDigit(str.charAt(i))) {
        a = true;
        i++;
    }
    if(i < len && str.charAt(i) == '.') {
        i++;
    }
    while(i < len && checkIfDigit(str.charAt(i))) {
        b = true;
        i++;
    }
    if(i < len && (str.charAt(i) == 'e' || str.charAt(i) == 'E') && (a || b)) {
        i++;
        c = true;
    }
    if(i < len && (str.charAt(i) == '+' || str.charAt(i) == '-') && c) {
        i++;
    }
    while(i < len && checkIfDigit(str.charAt(i))) {
        d = true;
        i++;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
5
Gpt3D_Clone212_5.java 1 24
Gpt3D_Clone212_5.java 25 57
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

 public static boolean isNumber (String str) {
    int i = 0, len = str.length();
    boolean a = false, b = false, c = false, d = false;
    if(i < len && (str.charAt(i) == '+' || str.charAt(i) == '-')) {
        i++;
    }
    while(i < len && isNum(str.charAt(i))) {
        a = true;
        i++;
    }
    if(i < len && str.charAt(i) == '.') {
        i++;
    }
    while(i < len && isNum(str.charAt(i))) {
        b = true;
        i++;
    }
    if(i < len && (str.charAt(i) == 'e' || str.charAt(i) == 'E') && (a || b)) {
        i++;
        c = true;
    }
    if(i < len && (str.charAt(i) == '+' || str.charAt(i) == '-') && c) {
        i++;
    }
    while(i < len && isNum(str.charAt(i))) {
        d = true;
        i++;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
6
Gpt3D_Clone212_6.java 1 24
Gpt3D_Clone212_6.java 25 64
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

 public static boolean isNumber (String str) { 
    if (str == null) 
        return false; 
  
    int i = 0, len = str.length (); 
    boolean a = false, b = false, c = false, d = false; 
  
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) 
        i++; 
  
    while (i < len && Character.isDigit (str.charAt (i))) { 
        i++; 
        a = true; 
    } 
  
    if (i < len && (str.charAt (i) == '.')) 
        i++; 
  
    while (i < len && Character.isDigit (str.charAt (i))) { 
        i++; 
        b = true; 
    } 
  
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) { 
        i++; 
        c = true; 
    } 
  
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) 
        i++; 
  
    while (i < len && Character.isDigit (str.charAt (i))) { 
        i++; 
        d = true; 
    } 
  
    return (i == len) && (a || b) && (!c || (c && d)); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
7
Gpt3D_Clone212_7.java 1 24
Gpt3D_Clone212_7.java 25 61
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

 public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-'))
        i++;
    while (i < len && isNum (str.charAt (i))) {
        a = true;
        i++;
    }
    if (i < len && str.charAt (i) == '.') {
        i++;
        while (i < len && isNum (str.charAt (i))) {
            b = true;
            i++;
        }
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i++;
        c = true;
        if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-'))
            i++;
        while (i < len && isNum (str.charAt (i))) {
            d = true;
            i++;
        }
    }
    return (i == len) && (a || b) && (! c || (c && d)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
0
Gpt3D_Clone214_0.java 1 12
Gpt3D_Clone214_0.java 13 26
----------------------------------------

public static void main (String [] args) {
    long a = 5;
    long b = 4;
    String theExpression = "a * b";
    JexlEngine jexl = new JexlEngine ();
    Expression e = jexl.createExpression (theExpression);
    JexlContext context = new MapContext ();
    context.set ("a", a);
    context.set ("b", b);
    Long result = (Long) e.evaluate (context);
    System.out.println ("The answer : " + result);
}
----------------------------------------

 public static void main (String [] args) { 
    int a = 5; 
    int b = 4;
    String expression = "a * b"; 
    SimpleJexl jexl = new SimpleJexl (); 
    Expression expr = jexl.createExpression (expression); 
    Map map = new HashMap (); 
    map.put ("a", a); 
    map.put ("b", b); 
    Object result = expr.evaluate (map); 
    System.out.println ("The answer is: " + result);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
1
Gpt3D_Clone214_1.java 1 12
Gpt3D_Clone214_1.java 13 26
----------------------------------------

public static void main (String [] args) {
    long a = 5;
    long b = 4;
    String theExpression = "a * b";
    JexlEngine jexl = new JexlEngine ();
    Expression e = jexl.createExpression (theExpression);
    JexlContext context = new MapContext ();
    context.set ("a", a);
    context.set ("b", b);
    Long result = (Long) e.evaluate (context);
    System.out.println ("The answer : " + result);
}
----------------------------------------

 public static void main (String [] args) { 
    int a = 5; 
    int b = 4;
    String expression = "a * b"; 
    JexlEngine jexl = new JexlEngine (); 
    Expression expr = jexl.createExpression (expression); 
    JexlContext context = new JexlContext (); 
    context.set ("a", new Integer (a)); 
    context.set ("b", new Integer (b)); 
    Long result = (Long) expr.evaluate (context); 
    System.out.println ("The answer is: " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
0
Gpt3D_Clone216_0.java 1 22
Gpt3D_Clone216_0.java 23 59
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public static int solution (int X, int [] A) {
    int numUniqueVals = 0; 
    int[] count = new int[X];
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] == 0) {
                numUniqueVals++;
            } 
            count[A[i]-1]++; 
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numUniqueVals == X) {
            return i; 
        }
    }
    return -1; 
}    
  public static int solution (int X, int [] A) {
    int numUniqueVals = 0; 
    int[] count = new int[X];
    int minIndex = -1; 
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] <= 0) {
                numUniqueVals++;
                minIndex = i; 
            } 
            count[A[i]-1]++; 
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numUniqueVals == X) {
            return minIndex; 
        }
    }
    return -1; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
3
Gpt3D_Clone216_3.java 1 22
Gpt3D_Clone216_3.java 23 40
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public static int solution (int X, int [] A) {
    int[] count = new int[X]; 
    int numValsVisited = 0; 
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] == 0) {
            numValsVisited ++;
            }
            count[A[i]-1]++;
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numValsVisited == X) {
            return i; 
        }
    }
    return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
4
Gpt3D_Clone216_4.java 1 22
Gpt3D_Clone216_4.java 23 40
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public static int solution (int X, int [] A) {
    int[] count = new int[X]; 
    int numberOfUniqueValues = 0; 
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] == 0) {
            numberOfUniqueValues ++;
            }
            count[A[i]-1]++;
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numberOfUniqueValues == X) {
            return i; 
        }
    }
    return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
5
Gpt3D_Clone216_5.java 1 22
Gpt3D_Clone216_5.java 23 59
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public static int solution (int X, int [] A) {
    int numUniqueVals = 0; 
    int[] count = new int[X];
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] == 0) {
                numUniqueVals++;
            } 
            count[A[i]-1]++; 
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numUniqueVals == X) {
            return i; 
        }
    }
    return -1; 
}    
  public static int solution (int X, int [] A) {
    int numUniqueVals = 0; 
    int[] count = new int[X];
    int minIndex = -1; 
    for (int i = 0; i < A.length; i++) {
        try {
            if (count[A[i]-1] <= 0) {
                numUniqueVals++;
                minIndex = i; 
            } 
            count[A[i]-1]++; 
        } catch (ArrayIndexOutOfBoundsException e) {}
        if (numUniqueVals == X) {
            return minIndex; 
        }
    }
    return -1; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
217
0
Gpt3D_Clone217_0.java 1 16
Gpt3D_Clone217_0.java 17 34
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1; 
    int [] indices = new int [X + 1];
    int numberOfXs = 0;
    for (int i = 0; i < A.length; i ++) {
        if (indices [A [i]] == 0) {
            indices [A [i]] = 1;
            numberOfXs += 1;
            if (numberOfXs == X) {
                ans = i;
                break;
            }
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
217
3
Gpt3D_Clone217_3.java 1 16
Gpt3D_Clone217_3.java 17 34
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int [] indices = new int [X + 1];
    int number = 0;
    int ans = -1;
    for (int i = 0; i < A.length; i ++) {
        if (indices [A [i]] == 0) {
            indices [A [i]] = A [i];
            number += 1;
            if (number == X) {
                ans = i;
                break;
            }
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
217
5
Gpt3D_Clone217_5.java 1 16
Gpt3D_Clone217_5.java 17 34
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int [] positions = new int [X + 1];
    int numXs = 0;
    int answer = -1;
    for (int i = 0; i < A.length; i++) {
        if (positions[A[i]] == 0) {
            numXs++;
            positions[A[i]] = i;
            if (numXs == X) {
                answer = i;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
217
7
Gpt3D_Clone217_7.java 1 16
Gpt3D_Clone217_7.java 17 34
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int answer = -1;
    int [] locations = new int [X+1];
    int totalXs = 0;
    for (int i = 0; i < A.length; i++) {
        if (locations[A[i]-1] == 0) {
            locations[A[i]-1] += i;
            totalXs++;
            if (totalXs == X) {
                return i;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
0
Gpt3D_Clone218_0.java 1 18
Gpt3D_Clone218_0.java 19 41
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) { 
        int sum = 0; 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        Set < Integer > userSet = new HashSet < Integer > (); 
        int res = 0; 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! userSet.contains (A [iii])) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        res = iii; 
                        break; 
                    } 
                    userSet.add (A [iii]); 
                } 
            } 
        } 
        return res; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
1
Gpt3D_Clone218_1.java 1 18
Gpt3D_Clone218_1.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) { 
        int sum = 0; 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        Set < Long > hashSet = new HashSet < Long > (); 
        int res = 0; 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! hashSet.contains (A [iii])) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        res = iii; 
                        break; 
                    } 
                    hashSet.add ((long) A [iii]); 
                } 
            } 
        } 
        return res; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
2
Gpt3D_Clone218_2.java 1 18
Gpt3D_Clone218_2.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) { 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        int sum = 0; 
        List < String > linkedList = new LinkedList < String > (); 
        int res = 0; 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! linkedList.contains (String.valueOf (A [iii]))) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        res = iii; 
                        break; 
                    } 
                    linkedList.add (String.valueOf (A [iii])); 
                } 
            } 
        } 
        return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
3
Gpt3D_Clone218_3.java 1 18
Gpt3D_Clone218_3.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) { 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        int sum = 0; 
        List < Integer > vector = new Vector < Integer > (); 
        int res = 0; 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! vector.contains (A [iii])) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        res = iii; 
                        break; 
                    } 
                    vector.add (A [iii]); 
                } 
            } 
        } 
        return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
4
Gpt3D_Clone218_4.java 1 18
Gpt3D_Clone218_4.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) { 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        int sum = 0; 
        Set < Integer > treeSet = new TreeSet < Integer > (); 
        int res = 0; 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! treeSet.contains (A [iii])) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        res = iii; 
                        break; 
                    } 
                    treeSet.add (A [iii]); 
                } 
            } 
        } 
        return res; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
218
5
Gpt3D_Clone218_5.java 1 18
Gpt3D_Clone218_5.java 19 38
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) { 
        int searchedValue = X; 
        int sumV = searchedValue * (searchedValue + 1) / 2; 
        int sum = 0; 
        Map <Integer, Boolean > hashMap = new HashMap < Integer, Boolean > (); 
        for (int iii = 0; iii < A.length; iii ++) { 
            if (A [iii] <= searchedValue) { 
                if (! hashMap.containsKey (A [iii])) { 
                    sum += A [iii]; 
                    if (sum == sumV) { 
                        return iii; 
                    } 
                    hashMap.put (A [iii], true); 
                } 
            } 
        } 
        return - 1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
21
3
Gpt3D_Clone21_3.java 1 14
Gpt3D_Clone21_3.java 15 37
----------------------------------------

public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for (int i = 0;
    i < 30; i ++) {
        throwCatchTime += throwCatchLoop ();
        newExceptionTime += newExceptionLoop ();
        newObjectTime += newObjectLoop ();
        noStackExceptionTime += newNoStackExceptionLoop ();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime / 30);
    System.out.println ("newExceptionTime = " + newExceptionTime / 30);
    System.out.println ("newStringTime = " + newObjectTime / 30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime / 30);
}
----------------------------------------

	public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    try {
        for (int i = 0; i < 30; i++) {
        throwCatchTime += throwCatchLoop();
        Thread.sleep(20);
        newExceptionTime += newExceptionLoop ();
        Thread.sleep(20);
        newObjectTime += newObjectLoop (); 
        Thread.sleep(20);
        noStackExceptionTime += newNoStackExceptionLoop ();
        Thread.sleep(20);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime/30);
    System.out.println ("newExceptionTime = " + newExceptionTime/30);
    System.out.println ("newStringTime = " + newObjectTime/30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime/30);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
21
4
Gpt3D_Clone21_4.java 1 14
Gpt3D_Clone21_4.java 15 43
----------------------------------------

public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for (int i = 0;
    i < 30; i ++) {
        throwCatchTime += throwCatchLoop ();
        newExceptionTime += newExceptionLoop ();
        newObjectTime += newObjectLoop ();
        noStackExceptionTime += newNoStackExceptionLoop ();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime / 30);
    System.out.println ("newExceptionTime = " + newExceptionTime / 30);
    System.out.println ("newStringTime = " + newObjectTime / 30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime / 30);
}
----------------------------------------

	public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    int limit = 10;
    try
    {
        for (int i = 0; i < limit; i++)
        {
            throwCatchTime += throwCatchLoop ();
         	newExceptionTime += newExceptionLoop ();
           	
           	if(i == limit/2)
           	{
           		limit = 20;
				newObjectTime += newObjectLoop ();
            	noStackExceptionTime += newNoStackExceptionLoop ();
           	}
        }
    }
   	catch (Exception e)
   	{
     	e.printStackTrace();
   	}
    System.out.println ("throwCatchTime = " + throwCatchTime/30);
    System.out.println ("newExceptionTime = " + newExceptionTime/30);
    System.out.println ("newStringTime = " + newObjectTime/30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime/30);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
21
5
Gpt3D_Clone21_5.java 1 14
Gpt3D_Clone21_5.java 15 35
----------------------------------------

public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for (int i = 0;
    i < 30; i ++) {
        throwCatchTime += throwCatchLoop ();
        newExceptionTime += newExceptionLoop ();
        newObjectTime += newObjectLoop ();
        noStackExceptionTime += newNoStackExceptionLoop ();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime / 30);
    System.out.println ("newExceptionTime = " + newExceptionTime / 30);
    System.out.println ("newStringTime = " + newObjectTime / 30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime / 30);
}
----------------------------------------

	public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    boolean flag = true;
    for (int i = 0; i < 30 && flag; i++) {
        try {
            throwCatchTime += throwCatchLoop ();
            newExceptionTime += newExceptionLoop ();
            newObjectTime += newObjectLoop ();
            noStackExceptionTime += newNoStackExceptionLoop ();
        } catch (Exception e) {
            flag = false;
            e.printStackTrace();
        }
    }
    System.out.println ("throwCatchTime = " + throwCatchTime/30);
    System.out.println ("newExceptionTime = " + newExceptionTime/30);
    System.out.println ("newStringTime = " + newObjectTime/30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime/30);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
21
6
Gpt3D_Clone21_6.java 1 14
Gpt3D_Clone21_6.java 15 41
----------------------------------------

public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for (int i = 0;
    i < 30; i ++) {
        throwCatchTime += throwCatchLoop ();
        newExceptionTime += newExceptionLoop ();
        newObjectTime += newObjectLoop ();
        noStackExceptionTime += newNoStackExceptionLoop ();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime / 30);
    System.out.println ("newExceptionTime = " + newExceptionTime / 30);
    System.out.println ("newStringTime = " + newObjectTime / 30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime / 30);
}
----------------------------------------

	public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    try
    {
        for (int i = 0; i < 30; i++)
        {
            throwCatchTime += throwCatchLoop ();
         	newExceptionTime += newExceptionLoop ();
           	if( newExceptionTime == 15 )
           	{
           		i = 0;
				newObjectTime += newObjectLoop ();
            	noStackExceptionTime += newNoStackExceptionLoop ();
           	}
        }
    }
   	catch (Exception e)
   	{
     	e.printStackTrace();
   	}
    System.out.println ("throwCatchTime = " + throwCatchTime/30);
    System.out.println ("newExceptionTime = " + newExceptionTime/30);
    System.out.println ("newStringTime = " + newObjectTime/30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime/30);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
21
7
Gpt3D_Clone21_7.java 1 14
Gpt3D_Clone21_7.java 15 40
----------------------------------------

public static void main (String [] args) {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for (int i = 0;
    i < 30; i ++) {
        throwCatchTime += throwCatchLoop ();
        newExceptionTime += newExceptionLoop ();
        newObjectTime += newObjectLoop ();
        noStackExceptionTime += newNoStackExceptionLoop ();
    }
    System.out.println ("throwCatchTime = " + throwCatchTime / 30);
    System.out.println ("newExceptionTime = " + newExceptionTime / 30);
    System.out.println ("newStringTime = " + newObjectTime / 30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime / 30);
}
----------------------------------------

	public static void main (String [] args)
   {
    long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;
    for(int i = 0; i < 30; i++)
    {
      try
      {
        throwCatchTime += throwCatchLoop();
        newExceptionTime += newExceptionLoop();
        newObjectTime += newObjectLoop();
        noStackExceptionTime += newNoStackExceptionLoop();
        if(throwCatchTime > 30 || newExceptionTime > 30 || newObjectTime > 30 || noStackExceptionTime > 30)
          break;
      }
      catch(Exception e)
      {
        System.out.println(e.getMessage());
      }
    }
    System.out.println ("throwCatchTime = " + throwCatchTime/30);
    System.out.println ("newExceptionTime = " + newExceptionTime/30);
    System.out.println ("newStringTime = " + newObjectTime/30);
    System.out.println ("noStackExceptionTime = " + noStackExceptionTime/30);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
2
Gpt3D_Clone220_2.java 1 15
Gpt3D_Clone220_2.java 16 32
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    Set < Integer > filledPositionSet = new TreeSet < Integer > ();
    int positionsNeededFilled = X;
    for (int i = 0;
    i < A.length; i ++) {
        if (!filledPositionSet.contains (A[i])) {
            filledPositionSet.add (A[i]);
            positionsNeededFilled--;
            if (positionsNeededFilled == 0) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
3
Gpt3D_Clone220_3.java 1 15
Gpt3D_Clone220_3.java 16 32
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    Set < Integer > filledPositionSet = new LinkedHashSet < Integer > ();
    int positionsNeededFilled = X;
    for (int i = 0;
    i < A.length; i ++) {
        if (!filledPositionSet.contains (A[i])) {
            filledPositionSet.add (A[i]);
            positionsNeededFilled--;
            if (positionsNeededFilled == 0) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
4
Gpt3D_Clone220_4.java 1 15
Gpt3D_Clone220_4.java 16 32
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    Set < Integer > filledPositionSet = new HashSet < Integer > ();
    int positionsNeededFilled = X;
    for (int i = 0;
    i < A.length; i ++) {
        if (!filledPositionSet.contains (A[i])) {
            filledPositionSet.add (A[i]);
            positionsNeededFilled--;
            if (positionsNeededFilled == 0) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
5
Gpt3D_Clone220_5.java 1 15
Gpt3D_Clone220_5.java 16 44
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    int emptyPositionsRemaining = X;
    for (int i = 0;
    i < A.length; i ++) {
        emptyPositionsRemaining -= occupiedPositionSet(A[i]);
        if (emptyPositionsRemaining == 0) {
            return i;
        }
    }
    return -1;
}     
  public int solution (final int X, final int [] A) {
    Set < Integer > emptyPositions = new HashSet < Integer > ();
    int positionsNeededFilled = X;
    for (int i = 0;
    i < A.length; i ++) {
        if (!emptyPositions.contains (A[i])) {
            emptyPositions.add (A[i]);
            positionsNeededFilled--;
            if (positionsNeededFilled == 0) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
8
Gpt3D_Clone220_8.java 1 15
Gpt3D_Clone220_8.java 16 28
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    Set < Integer > occupiedPosition = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        occupiedPosition.add (A[i]);
        if (occupiedPosition.size() == X) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
221
0
Gpt3D_Clone221_0.java 1 22
Gpt3D_Clone221_0.java 23 45
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X) {
            if (check[temp - 1] == true) {
                continue;
            }
            check[temp - 1] = true;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
221
1
Gpt3D_Clone221_1.java 1 22
Gpt3D_Clone221_1.java 23 45
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X) {
            if (check[temp - 1] == true) {
                continue;
            }
            check[temp - 1] = !check[temp - 1];
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
0
Gpt3D_Clone222_0.java 1 23
Gpt3D_Clone222_0.java 24 56
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    int[] isFilled = new int[X];
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            if (isFilled[x - 1] == 0) {
                int j = 0;
                for (; j < x - 1; j++) {
                    if (isFilled[j] == 0) {
                        break;
                    }
                }
                if (j < x - 1) {
                    break;
                }
                isFilled[x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
1
Gpt3D_Clone222_1.java 1 23
Gpt3D_Clone222_1.java 24 52
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    int[] isFilled = new int[X];
    if (X > len) {
        return -1;
    }
    int jumped = 0;
    int[] uniqueValues = new int[X];
    int numOfUniqueValues = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x > X) {
            continue;
        }
        if (isFilled[x - 1] == 0) {
            isFilled[x - 1] = 1;
            uniqueValues[numOfUniqueValues] = x;
            numOfUniqueValues++;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
2
Gpt3D_Clone222_2.java 1 23
Gpt3D_Clone222_2.java 24 52
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    boolean[] isFilled = new boolean[X];
    if (X > len) {
        return -1;
    }
    int jumped = 0;
    int[] uniqueValues = new int[X];
    int numOfUniqueValues = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x > X) {
            continue;
        }
        if (!isFilled[x - 1]) {
            isFilled[x - 1] = true;
            uniqueValues[numOfUniqueValues] = x;
            numOfUniqueValues++;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
3
Gpt3D_Clone222_3.java 1 23
Gpt3D_Clone222_3.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    boolean[] isFilled = new boolean[X];
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X && !isFilled[x - 1]) {
            isFilled[x - 1] = true;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
4
Gpt3D_Clone222_4.java 1 23
Gpt3D_Clone222_4.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    boolean[] isFilled = new boolean[X];
    if (X > len) {
        return -1;
    }
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X && !isFilled[x - 1]) {
            isFilled[x - 1] = true;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
5
Gpt3D_Clone222_5.java 1 23
Gpt3D_Clone222_5.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    int[] isFilled = new int[len];
    if (X > len) {
        return -1;
    }
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X && isFilled[x - 1] == 0) {
            isFilled[x - 1] = 1;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
224
5
Gpt3D_Clone224_5.java 1 9
Gpt3D_Clone224_5.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    TreeSet < Integer > leaves = new TreeSet < > ();
    int counter = 0;
    for (int i = 0;
        i < A.length; i ++) {
        leaves.add (A [i]);
        if (A[i] <= X) counter++;
        if (counter == X) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
224
6
Gpt3D_Clone224_6.java 1 9
Gpt3D_Clone224_6.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    Set < Integer > leaves = new TreeSet < > ();
    int counter = 0;
    for (int i = 0;
        i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.size () == X) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
224
7
Gpt3D_Clone224_7.java 1 9
Gpt3D_Clone224_7.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    List<Integer> leaves = new ArrayList<>();
    for (int i = 0;
        i < A.length; i ++) {
        if(A[i] <= X && !leaves.contains(A[i])){
            leaves.add(A[i]);
            if(leaves.size() == X) return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
225
0
Gpt3D_Clone225_0.java 1 22
Gpt3D_Clone225_0.java 23 46
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 public static int solution (int x, int [] A) {
    int[] countArray = new int[x];
    for (int i = 0; i < A.length; i++) {
        if (A[i] > x) {
            continue;
        }
        countArray[A[i] - 1]++;
        int count = 0;
        for (int j = 0; j < x; j++) {
            if (countArray[j] == 0) {
                break;
            }
            if (j == x - 1) {
                count = 1;
            }
        }
        if (count == 1) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
226
2
Gpt3D_Clone226_2.java 1 16
Gpt3D_Clone226_2.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1;
    int x = 0;
    int[] count = new int[X + 1];
    for (int i = 0; i < A.length; i++) {
        if (count[A[i]] < 1) {
            x++;
            count[A[i]]++;
            if (x == X){
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
226
3
Gpt3D_Clone226_3.java 1 16
Gpt3D_Clone226_3.java 17 34
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1;
    Map<Integer,Integer> map = new HashMap<>();
    int x = 0;
    for (int i = 0; i < A.length; i++) {
        //if map size is is below X and the number is not in the map, add the number and increment x
        if ((map.size() < X) && (!map.containsKey(A[i]))) {
            map.put(A[i],A[i]);
            x++;
        }
        if (x == X) {
            return i;
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
226
4
Gpt3D_Clone226_4.java 1 16
Gpt3D_Clone226_4.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1;
    int x = 0;
    HashMap<Integer, Boolean> map = new HashMap<>(); 
    for (int i = 0; i < A.length; i++) {
    	if (!map.containsKey(A[i])) {
            map.put(A[i], Boolean.TRUE);
            x++;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
226
5
Gpt3D_Clone226_5.java 1 16
Gpt3D_Clone226_5.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1;
    boolean[] found = new boolean[X+1];
    int x = 0;
    for (int i = 0; i < A.length; i++) {
        if (found[A[i]] == false) {
            found[A[i]] = true;
            x++;
            if (x == X) {
              return i;
            }
       }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
226
6
Gpt3D_Clone226_6.java 1 16
Gpt3D_Clone226_6.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution (int X, int [] A) {
    int ans = -1;
    int x = 0;
    boolean[] check = new boolean[X + 1];
    for (int i = 0; i < A.length; i++) {
        if (!check[A[i]]) {
            x++;
            if (x == X) {
                return i;
            }
            check[A[i]] = true;
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
229
5
Gpt3D_Clone229_5.java 1 15
Gpt3D_Clone229_5.java 16 31
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 
  public int solution(final int X, final int [] A) {
      Map<Integer, Boolean> emptyPosition = new HashMap<Integer, Boolean>();
      for (int i=1; i <= X; i++) { 
          emptyPosition.put(i, true);
      }
      for (int i=0; i < A.length; i++) { 
          emptyPosition.put(A[i], false );
          if (emptyPosition.values().stream().allMatch(e -> e == false)) {
             return i;
          }
      }
      return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
229
6
Gpt3D_Clone229_6.java 1 15
Gpt3D_Clone229_6.java 16 30
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution(final int X, final int[] A) {
     BitSet emptyPosition = new BitSet(X);
     for (int i = 1; i <= X; i++) {
      emptyPosition.set(i, false);
     }
     for (int i = 0; i < A.length; i++) {
          emptyPosition.set(A[i], true);
          if(emptyPosition.cardinality() == X) {
              return i;
          }
     }
     return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
229
7
Gpt3D_Clone229_7.java 1 15
Gpt3D_Clone229_7.java 16 29
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution(final int X, final int [] A) {
    List<Integer> emptyPosition = IntStream.rangeClosed(1, X)
        .boxed()
        .collect(Collectors.toList());
    for (int i = 0; i < A.length; i++) {
        emptyPosition.remove(Integer.valueOf(A[i]));
        if (emptyPosition.size() == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
22
0
Gpt3D_Clone22_0.java 1 29
Gpt3D_Clone22_0.java 30 58
----------------------------------------

public static void main (String [] args) {
    String [] colors = new String [args.length];
    int color_ix = 0;
    int number_idx = 0;
    Integer [] number = new Integer [args.length];
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number [number_idx] = Integer.parseInt (args [i]);
            number_idx ++;
        } catch (NumberFormatException e) {
            colors [color_ix] = args [i];
            color_ix ++;
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number_idx; i ++) {
        System.out.println (number [i]);
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < color_ix; i ++) {
        System.out.println (colors [i]);
    }
}
----------------------------------------

 public static void main (String [] args) {
   String [] colors = new String [args.length];
    int color_ix = 0;
    ArrayList<Integer> number = new ArrayList<Integer>();
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number.add(Integer.parseInt (args [i]));
        } catch (NumberFormatException e) {
            colors [color_ix] = args [i];
            color_ix ++;
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number.size(); i ++) {
        System.out.println (number.get(i));
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < color_ix; i ++) {
        System.out.println (colors [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
22
1
Gpt3D_Clone22_1.java 1 29
Gpt3D_Clone22_1.java 30 58
----------------------------------------

public static void main (String [] args) {
    String [] colors = new String [args.length];
    int color_ix = 0;
    int number_idx = 0;
    Integer [] number = new Integer [args.length];
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number [number_idx] = Integer.parseInt (args [i]);
            number_idx ++;
        } catch (NumberFormatException e) {
            colors [color_ix] = args [i];
            color_ix ++;
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number_idx; i ++) {
        System.out.println (number [i]);
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < color_ix; i ++) {
        System.out.println (colors [i]);
    }
}
----------------------------------------

 public static void main (String [] args) {
   ArrayList<String> colors = new ArrayList<String>();
    int number_idx = 0;
    Vector<Integer> number = new Vector<Integer>();
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number.add(Integer.parseInt (args [i]));
            number_idx ++;
        } catch (NumberFormatException e) {
            colors.add(args [i]);
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number_idx; i ++) {
        System.out.println (number.get(i));
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < colors.size(); i ++) {
        System.out.println (colors.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
22
2
Gpt3D_Clone22_2.java 1 29
Gpt3D_Clone22_2.java 30 58
----------------------------------------

public static void main (String [] args) {
    String [] colors = new String [args.length];
    int color_ix = 0;
    int number_idx = 0;
    Integer [] number = new Integer [args.length];
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number [number_idx] = Integer.parseInt (args [i]);
            number_idx ++;
        } catch (NumberFormatException e) {
            colors [color_ix] = args [i];
            color_ix ++;
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number_idx; i ++) {
        System.out.println (number [i]);
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < color_ix; i ++) {
        System.out.println (colors [i]);
    }
}
----------------------------------------

 public static void main (String [] args) {
   List<String> colors = new ArrayList<String>();
    int number_idx = 0;
    List<Integer> number = new ArrayList<Integer>();
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i] == null) {
            continue;
        }
        try {
            number.add(Integer.parseInt (args [i]));
            number_idx ++;
        } catch (NumberFormatException e) {
            colors.add(args [i]);
        }
    }
    System.out.println ("-----Number-----");
    for (int i = 0;
    i < number_idx; i ++) {
        System.out.println (number.get(i));
    }
    System.out.println ("-----Colors-----");
    for (int i = 0;
    i < colors.size(); i ++) {
        System.out.println (colors.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
0
Gpt3D_Clone230_0.java 1 22
Gpt3D_Clone230_0.java 23 44
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int size = A.length;
    int[] check = new int [X];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int element = A[x];
        if (element < X) {
            if (check[element] == 0) {
                check[element] = 1;
                count++;
            }
        }
        if (count == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
1
Gpt3D_Clone230_1.java 1 22
Gpt3D_Clone230_1.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 public int solution(int X, int[] A) { 
    int[] check = new int[X]; 
    int cmp = 0; 
    int time = -1; 
    int size = A.length; 
    for (int x = 0; x < size; x++) { 
        int temp = A[x]; 
        if (temp <= X && check[temp - 1] == 0) { 
            check[temp - 1]++; 
            cmp++; 
            if (cmp == X) { 
                time = x; 
                break; 
            } 
        } 
    } 
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
2
Gpt3D_Clone230_2.java 1 22
Gpt3D_Clone230_2.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 public int solution(int X, int[] A) {
    int size = A.length; 
    boolean[] checked = new boolean[X]; 
    int currentCounter = 0; 
    int time = -1; 
    for (int x = 0; x < size; x++) { 
      int tempElement = A[x]; 
      if (tempElement <= X && checked[tempElement - 1] == false) { 
        checked[tempElement - 1] = true; 
        currentCounter++; 
      } 
      if (currentCounter == X) { 
        time = x; 
        break; 
      }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
3
Gpt3D_Clone230_3.java 1 22
Gpt3D_Clone230_3.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 public int solution(int X, int[] A) {
    int size = A.length;
    Boolean[] check = new Boolean[X];
    int counter = 0;
    int result =-1;
    for (int j = 0; j < size; j++) {
        int tempElement = A[j];
        if (tempElement <= X && check[tempElement-1] == false) {
            counter++;
            check[tempElement-1] = true;
            if (counter == X) {
                result = j;
                break;
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
5
Gpt3D_Clone230_5.java 1 22
Gpt3D_Clone230_5.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int target, int[] array) {
	int length = array.length;
	boolean[] visited = new boolean[target];
	int count = 0; //count current reached number
	int index = -1;
	
	for (int i = 0; i < length; i++) {
		if(array[i] <=target && visited[array[i]-1] == false) {
			visited[array[i]-1] = true;
			count++;
			
			if(count == target) {
				index = i;
				break;
			}
		}
	} 
	return index; // -1 if not found
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
232
6
Gpt3D_Clone232_6.java 1 16
Gpt3D_Clone232_6.java 17 71
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution(int X, int[] A) 
    { 
        // Initialize result 
        int ans = -1; 
  
        // To store sum of array 
        int sum_array = 0; 
  
        // To store sum upto X 
        int sum_x = (X * (X + 1)) / 2; 
  
        // To store occurrence of each elements 
        HashMap<Integer, Integer> hmap 
            = new HashMap<Integer, Integer>(); 
  
        // Iterating over array 
        for (int i = 0; i < A.length; i++) { 
  
            // If element is present first time 
            // add its value to sum_array and 
            // store its index to hmap 
            if (hmap.get(A[i]) == null) { 
                hmap.put(A[i], i); 
                sum_array += A[i]; 
            } 
  
            // If sum upto X is equals to sum_array 
            // that means all element from 1 to X are 
            // present in given array store result 
            if (sum_x == sum_array) { 
                ans = i; 
            } 
        } 
        return ans; 
    } 
 public int solution (int X, int [] A) {
    int sum1 = 0, sum2 = 0;
    // Store the elements in Hashmap
    HashMap<Integer, Integer> hs = new HashMap<Integer, Integer>();
    for (int i = 1; i <= X; i++) {
        sum1 += i;
    }
    // Store the first occurrence of each element
    for (int i = 0; i < A.length; i++) {
        if (!hs.containsKey(A[i])) {
            hs.put(A[i], A[i]);
            sum2 += A[i];
            if (sum1 == sum2) return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
233
0
Gpt3D_Clone233_0.java 1 16
Gpt3D_Clone233_0.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution(int X, int[] A) { 
    boolean[] counter = new boolean[X + 1]; 
    int ans = -1; 
    int x = 0; 
    for (int i = 0; i < A.length; i++) { 
        if (!counter[A[i]]) { 
            counter[A[i]] = true; 
            x += 1; 
            if (x == X) { 
                return i; 
            } 
        } 
    } 
    return ans; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
233
1
Gpt3D_Clone233_1.java 1 16
Gpt3D_Clone233_1.java 17 33
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution(int X, int[] A) { 
    BitSet bs = new BitSet(); 
    int ans = -1; 
    int x = 0; 
    for (int i = 0; i < A.length; i++) { 
        if (!bs.get(A[i])) { 
            bs.set(A[i]); 
            x += 1; 
            if (x == X) { 
                return i; 
            } 
        } 
    } 
    return ans; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
233
2
Gpt3D_Clone233_2.java 1 16
Gpt3D_Clone233_2.java 17 32
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution(int X, int[] A) { 
    Set<Integer> counter = new HashSet<>(); 
    int ans = -1; 
    int x = 0; 
    for (int i = 0; i < A.length; i++) { 
        if (counter.add(A[i])) { 
            x += 1; 
            if (x == X) { 
                return i; 
            } 
        } 
    } 
    return ans; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
233
3
Gpt3D_Clone233_3.java 1 16
Gpt3D_Clone233_3.java 17 32
----------------------------------------

public static int solution (int X, int [] A) {
    int [] counter = new int [X + 1];
    int ans = - 1;
    int x = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (counter [A [i]] == 0) {
            counter [A [i]] = A [i];
            x += 1;
            if (x == X) {
                return i;
            }
        }
    }
    return ans;
}
----------------------------------------

 public static int solution(int X, int[] A) { 
    HashMap<Integer, Integer> hm = new HashMap<>(); 
    int ans = -1; 
    int x = 0; 
    for (int i = 0; i < A.length; i++) { 
        if (hm.put(A[i], A[i]) == null) { 
            x += 1; 
            if (x == X) { 
                return i; 
            } 
        } 
    } 
    return ans; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
1
Gpt3D_Clone234_1.java 1 18
Gpt3D_Clone234_1.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution(int X, int[] A) {
    int list[] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    
    int i = 0;
    HashSet<Integer> hashSet = new HashSet<>();
    while (i < list.length) {
        if (list[i] <= searchedValue && !hashSet.contains (list[i])) {
            hashSet.add (list[i]);
            sum += list[i];
            if (sum == sumV) {
                return i;
            }
        }
        i++;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
2
Gpt3D_Clone234_2.java 1 18
Gpt3D_Clone234_2.java 19 41
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution(int X, int[] A) {
    int list[] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
 
    boolean[] isFound = new boolean[X];
    int totalFound = 0;
     
    for (int i = 0; i < list.length; i++) {
        if (!isFound[list[i] - 1]) {
            isFound[list[i] - 1] = true;
            totalFound++;
            sum += list[i];
            if (sum == sumV) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
3
Gpt3D_Clone234_3.java 1 18
Gpt3D_Clone234_3.java 19 38
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution(int X, int[] A) {
    int list[] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    
    int n = 0;
    while(n < list.length) {
        if (list[n] <= searchedValue) {
            sum += list[n];
            if(sum == sumV) {
                return n;
            }
        }
        ++n;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
4
Gpt3D_Clone234_4.java 1 18
Gpt3D_Clone234_4.java 19 37
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    BitSet bitSet = new BitSet(searchedValue);
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= searchedValue && !bitSet.get(A[i] - 1)) {
            sum += A[i];
            bitSet.set(A[i] - 1);
            if (sum == sumV) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
5
Gpt3D_Clone234_5.java 1 18
Gpt3D_Clone234_5.java 19 38
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    int sum = 0;
     
    Set < Integer > set = new HashSet <> ();
    for (int i = 0; i < A.length; i ++) {
        if (A[i] <= searchedValue
            && set.add (A[i])) {
        
            sum += A[i];
            if (sum == sumV) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
6
Gpt3D_Clone234_6.java 1 18
Gpt3D_Clone234_6.java 19 36
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int targetSum = X * (X + 1) / 2;
    int currentSum = 0;
    HashSet < Integer > found_numbers = new HashSet < Integer >();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X) {
            if (found_numbers.add(A[i])) {
                currentSum += A[i];
            }
            if (currentSum == targetSum) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
7
Gpt3D_Clone234_7.java 1 18
Gpt3D_Clone234_7.java 19 36
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int sumV = X * (X + 1) / 2;
    int sum = 0;
    int[] tempArray = new int[X + 1];
     
    for (int i = 0; i < A.length; i ++) {
        if (A[i] <= X && tempArray[A[i]] == 0) {
            sum += A[i];
            tempArray[A[i]] = 1;
            if (sum == sumV) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
236
0
Gpt3D_Clone236_0.java 1 15
Gpt3D_Clone236_0.java 16 34
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (final int X, final int [] A) { 
	  Set < Integer > emptyPosition = new TreeMap < Integer, Boolean >(); 
	  for (int i = 1;
	  i <= X; i ++) {
	      emptyPosition.put (i, false);
	  }
	  for (int i = 0;
	  i < A.length; i ++) {
	      if (emptyPosition.containsKey(A[i])) {
		  emptyPosition.remove (A [i]);
	      }
	      if (emptyPosition.size () == 0) {
		  return i;
	      }
	  }
	  return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
236
1
Gpt3D_Clone236_1.java 1 15
Gpt3D_Clone236_1.java 16 34
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (final int X, final int [] A) { 
	  Set < Integer > emptyPosition = new TreeMap < Integer, Boolean >(); 
	  for (int i = X;
	  i >= 1; i --) {
	      emptyPosition.put (i, false);
	  }
	  for (int i = 0;
	  i < A.length; i ++) {
	      if (emptyPosition.containsKey(A[i])) {
		  emptyPosition.remove (A [i]);
	      }
	      if (emptyPosition.size () == 0) {
		  return i;
	      }
	  }
	  return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
236
2
Gpt3D_Clone236_2.java 1 15
Gpt3D_Clone236_2.java 16 34
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (final int X, final int [] A) { 
	  Set < Integer > emptyPosition = new LinkedHashMap < Integer, Boolean >(); 
	  for (int i = 1;
	  i <= X; i ++) {
	      emptyPosition.put (i, false);
	  }
	  for (int i = 0;
	  i < A.length; i ++) {
	      if (emptyPosition.containsKey(A[i])) {
		  emptyPosition.remove (A [i]);
	      }
	      if (emptyPosition.size () == 0) {
		  return i;
	      }
	  }
	  return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
236
3
Gpt3D_Clone236_3.java 1 15
Gpt3D_Clone236_3.java 16 34
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (final int X, final int [] A) { 
	  Set < Integer > emptyPosition = new LinkedHashMap < Integer, Boolean >(); 
	  for (int i = X;
	  i >= 1; i --) {
	      emptyPosition.put (i, false);
	  }
	  for (int i = 0;
	  i < A.length; i ++) {
	      if (emptyPosition.containsKey(A[i])) {
		  emptyPosition.remove (A [i]);
	      }
	      if (emptyPosition.size () == 0) {
		  return i;
	      }
	  }
	  return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
236
4
Gpt3D_Clone236_4.java 1 15
Gpt3D_Clone236_4.java 16 34
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

 public int solution (final int X, final int [] A) {
	    Set < Integer > emptyPosition = new HashMap < Integer, Boolean > ();
	    for (int i = 1;
	    i <= X; i ++) {
		emptyPosition.put (i, false);
	    }
	    for (int i = 0;
	    i < A.length; i ++) {
		if (emptyPosition.containsKey (A [i])) {
		    emptyPosition.remove (A [i]);
		}
		if (emptyPosition.size () == 0) {
		    return i;
		}
	    }
	    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
0
Gpt3D_Clone237_0.java 1 22
Gpt3D_Clone237_0.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp - 1] == 0) {
            check[temp - 1] += 1;
            cmp += 1;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
1
Gpt3D_Clone237_1.java 1 22
Gpt3D_Clone237_1.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !check[temp - 1]) {
            check[temp - 1] = true;
            cmp += 1;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
2
Gpt3D_Clone237_2.java 1 22
Gpt3D_Clone237_2.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !check[temp - 1]) {
            check[temp - 1] = true;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
3
Gpt3D_Clone237_3.java 1 22
Gpt3D_Clone237_3.java 23 44
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int size = A.length;
    boolean [] check = new boolean [X + 1];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X && !check [temp]) {
            check [temp] = true;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
4
Gpt3D_Clone237_4.java 1 22
Gpt3D_Clone237_4.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X + 1];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp] == 0) {
            check[temp] += 1;
            count += 1;
            if (count == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
5
Gpt3D_Clone237_5.java 1 22
Gpt3D_Clone237_5.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !check[temp - 1]) {
            check[temp - 1] = true;
            count++;
        }
        if (count == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
6
Gpt3D_Clone237_6.java 1 22
Gpt3D_Clone237_6.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp - 1] == 0) {
            check[temp - 1] += 1;
            count++;
        }
        if (count == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
7
Gpt3D_Clone237_7.java 1 22
Gpt3D_Clone237_7.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !check[temp - 1]) {
            check[temp - 1] = true;
            count += 1;
            if (count == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
8
Gpt3D_Clone237_8.java 1 22
Gpt3D_Clone237_8.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X + 1];
    int count = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp] == 0) {
            check[temp] += 1;
            count += 1;
        }
        if (count == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
9
Gpt3D_Clone237_9.java 1 22
Gpt3D_Clone237_9.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X + 1];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp] == 0) {
            check[temp] += 1;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
0
Gpt3D_Clone238_0.java 1 23
Gpt3D_Clone238_0.java 24 47
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        HashSet<Integer> set = new HashSet<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!set.contains(x)) {
                    set.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
1
Gpt3D_Clone238_1.java 1 23
Gpt3D_Clone238_1.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

   public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!linkedHashSet.contains(x)) {
                    linkedHashSet.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
2
Gpt3D_Clone238_2.java 1 23
Gpt3D_Clone238_2.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

   public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        Vector<Integer> vector = new Vector<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!vector.contains(x)) {
                    vector.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
3
Gpt3D_Clone238_3.java 1 23
Gpt3D_Clone238_3.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i++) {
            int x = A[i];
            if (x <= X) {
                if (!map.containsKey(x)) {
                    map.put(x, i);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
4
Gpt3D_Clone238_4.java 1 23
Gpt3D_Clone238_4.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        BitSet bitSet = new BitSet(X);
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!bitSet.get(x - 1)) {
                    bitSet.set(x - 1);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
5
Gpt3D_Clone238_5.java 1 23
Gpt3D_Clone238_5.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

   public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        List<Integer> list = new ArrayList<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!list.contains(x)) {
                    list.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
6
Gpt3D_Clone238_6.java 1 23
Gpt3D_Clone238_6.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

   public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        int[] isFilled = new int[X+1];
        int jumped = 0;
        for (int i = 0; i < len; i++) {
            int x = A[i];
             if (x <= X) {
                if (isFilled[x] == 0) {
                     isFilled[x] = 1;
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
7
Gpt3D_Clone238_7.java 1 23
Gpt3D_Clone238_7.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        boolean[] isFilled = new boolean[X];
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!isFilled [x - 1]) {
                    isFilled [x - 1] = true;
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
8
Gpt3D_Clone238_8.java 1 23
Gpt3D_Clone238_8.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        TreeSet<Integer> treeSet = new TreeSet<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i++) {
            int x = A[i];
            if (x <= X) {
                if (!treeSet.contains(x)) {
                    treeSet.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
238
9
Gpt3D_Clone238_9.java 1 23
Gpt3D_Clone238_9.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        PriorityQueue<Integer> priorityQueue = new PriorityQueue<Integer>();
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!priorityQueue.contains(x)) {
                    priorityQueue.add(x);
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
4
Gpt3D_Clone239_4.java 1 16
Gpt3D_Clone239_4.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    boolean[] seen = new boolean[X + 1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
        seen[i] = true;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (seen[A[i]] == true) continue;
        seen[A[i]] = false;
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
5
Gpt3D_Clone239_5.java 1 16
Gpt3D_Clone239_5.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    int[] seen = new int[X + 1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
        seen[i] = 1;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (seen[A[i]] == 0) continue;
        seen[A[i]] = 0;
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
6
Gpt3D_Clone239_6.java 1 16
Gpt3D_Clone239_6.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    boolean[] seen = new boolean[X + 1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
        seen[i] = true;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (seen[A[i]]) continue;
        seen[A[i]] = false;
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
7
Gpt3D_Clone239_7.java 1 16
Gpt3D_Clone239_7.java 17 31
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = (X * (X + 1))/2;
    int sum2 = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
8
Gpt3D_Clone239_8.java 1 16
Gpt3D_Clone239_8.java 17 31
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = X*(X+1)/2;
    int sum2 = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
239
9
Gpt3D_Clone239_9.java 1 16
Gpt3D_Clone239_9.java 17 31
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = ((X * (X + 1))/2);
    int sum2 = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
0
Gpt3D_Clone23_0.java 1 9
Gpt3D_Clone23_0.java 10 22
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

  public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            Iterator<Balance> itr = this.subAccounts.iterator();
            while(itr.hasNext()) {
                result += itr.next().getSum();
            }
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
1
Gpt3D_Clone23_1.java 1 9
Gpt3D_Clone23_1.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += findSum(subAccount);
            }
        }
        return result;
    }
    public double findSum(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += findSum(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
2
Gpt3D_Clone23_2.java 1 9
Gpt3D_Clone23_2.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += addSum(subAccount);
            }
        }
        return result;
    }
    public double addSum(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += addSum(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
4
Gpt3D_Clone23_4.java 1 9
Gpt3D_Clone23_4.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += sum(subAccount);
            }
        }
        return result;
       }
    public double sum(Balance account) {
        double result = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                result += sum(subAccount);
            }
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
5
Gpt3D_Clone23_5.java 1 9
Gpt3D_Clone23_5.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += totalSum(subAccount);
            }
        }
        return result;
    }
    public double totalSum(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += totalSum(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
6
Gpt3D_Clone23_6.java 1 9
Gpt3D_Clone23_6.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

  public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += calculateSum(subAccount);
            }
        }
        return result;
    }
    public double calculateSum(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += calculateSum(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
7
Gpt3D_Clone23_7.java 1 9
Gpt3D_Clone23_7.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += sumSubAccount(subAccount);
            }
        }
        return result;
    }
    public double sumSubAccount(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += sumSubAccount(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
8
Gpt3D_Clone23_8.java 1 9
Gpt3D_Clone23_8.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += traverse(subAccount);
            }
        }
        return result;
    }
    public double traverse(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += traverse(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
9
Gpt3D_Clone23_9.java 1 9
Gpt3D_Clone23_9.java 10 30
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

 public double getSum () {
        double result = this.amount;
        if (this.subAccounts != null) {
            for (Balance subAccount : this.subAccounts) {
                result += getTotal(subAccount);
            }
        }
        return result;
    }
    public double getTotal(Balance account) {
        double sum = account.amount;
        if (account.subAccounts != null) {
            for (Balance subAccount : account.subAccounts) {
                sum += getTotal(subAccount);
            }
        }
        return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
241
0
Gpt3D_Clone241_0.java 1 18
Gpt3D_Clone241_0.java 19 42
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    int sum = 0;
    TreeSet < Integer > valuesUsedSet = new TreeSet < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue) {
            int value = list [iii];
            if (! valuesUsedSet.contains (value)) {
                sum += value;
                if (sum == sumV) {
                    return iii;
                }
                valuesUsedSet.add (value);
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
241
1
Gpt3D_Clone241_1.java 1 18
Gpt3D_Clone241_1.java 19 40
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int list [] = A;     
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    int sum = 0;
    Set<Integer> checkedValues = new LinkedHashSet<>();
    for (int iii = 0;
    iii < list.length; iii ++) {
        int value = list [iii];
        if (list [iii] <= searchedValue && !checkedValues.contains (value)) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            checkedValues.add (value);
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
241
2
Gpt3D_Clone241_2.java 1 18
Gpt3D_Clone241_2.java 19 39
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    int sum = 0;
    int[] valuesUsed = new int[A.length];
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && valuesUsed [iii] == 0) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            valuesUsed [iii] = 1;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
0
Gpt3D_Clone245_0.java 1 23
Gpt3D_Clone245_0.java 24 50
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    int result = -1; 
    int [] isFilled = new int [X];
    int jumped = 0;
    if (X > len) { 
        return -1; 
    } 
    for (int i=0; i<len; i++) {
        int x = A[i];
        if (x<=X) {
            if (isFilled[x-1] == 0) {
                isFilled[x-1] = 1;
                jumped++;
                if (jumped == X) {
                    result = i;
                    break;
                }
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
1
Gpt3D_Clone245_1.java 1 23
Gpt3D_Clone245_1.java 24 47
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    int result = -1; 
    int [] isFilled = new int[X]; 
    int jumped = 0; 
    if (X > len) { 
        return -1; 
    } 
    for (int i = 0; i < len; i++) { 
        int x = A[i]; 
        if (x > 0 && x <= X && isFilled[x - 1] == 0) { 
            isFilled[x - 1] = 1; 
            jumped++; 
            if (jumped == X) { 
                result = i; 
                break; 
            } 
        } 
    } 
    return result; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
2
Gpt3D_Clone245_2.java 1 23
Gpt3D_Clone245_2.java 24 47
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    int result = -1;
    if (X > len) { 
        return -1; 
    } 
    int [] isFilled = new int[X];
    int jumped = 0;
    for (int i = 0; i<len; i++) {
        int x = A[i];
        if ((x > 0) && (x <= X) && (isFilled[x - 1] == 0)) {
            isFilled[x - 1] = 1;
            jumped++;
            if (jumped == X) {
                result = i;
                break;
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
3
Gpt3D_Clone245_3.java 1 23
Gpt3D_Clone245_3.java 24 47
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    int result = -1;
    if (X > len) { 
        return -1; 
    } 
    int [] isFilled = new int [X];
    int jumped = 0;
    for (int i=0; i<len; i++) {
        int x = A[i];
        if (x <= X && isFilled[x-1] == 0) {
            isFilled[x-1] = 1;
            jumped++;
            if (jumped == X) {
                result = i;
                break;
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
6
Gpt3D_Clone245_6.java 1 23
Gpt3D_Clone245_6.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) { 
        return -1; 
    } 
    int jumped = 0; 
    boolean [] isFilled = new boolean [X]; 
    for (int i = 0; i < len; i++){ 
        int x = A[i]; 
        if (x <= X && !isFilled[x-1]) { 
            isFilled[x-1] = true; 
            jumped++; 
            if (jumped == X) { 
                return i; 
            } 
        } 
    } 
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
0
Gpt3D_Clone246_0.java 1 16
Gpt3D_Clone246_0.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new TreeMap < Integer, Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        set.put (i, i);
        sum1 += i;
    }
    for (int i = 0;
           i < A.length; i ++) {
        if (set.containsKey (A [i])) continue;
        set.put (A [i], A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
1
Gpt3D_Clone246_1.java 1 16
Gpt3D_Clone246_1.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new ConcurrentHashMap < Integer, Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        set.put (i, i);
        sum1 += i;
    }
    for (int i = 0;
           i < A.length; i ++) {
        if (set.containsKey (A [i])) continue;
        set.put (A [i], A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
247
7
Gpt3D_Clone247_7.java 1 9
Gpt3D_Clone247_7.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int[] A) {
    Set<Integer> leaves = new LinkedHashSet<>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X)
            leaves.add(A[i]);
        if (X == leaves.size()) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
247
8
Gpt3D_Clone247_8.java 1 9
Gpt3D_Clone247_8.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int[] A) {
    Set<Integer> leaves = new HashSet<>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X)
            leaves.add(A[i]);
        if (X == leaves.size()) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
249
9
Gpt3D_Clone249_9.java 1 15
Gpt3D_Clone249_9.java 16 27
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

  public int solution (final int X, final int [] A) {
    BitSet positionsSet = new BitSet(X+1);
    for (int i = 0; i < A.length; i++) {
        positionsSet.set(A[i]);
        if (positionsSet.cardinality() == X) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
0
Gpt3D_Clone24_0.java 1 12
Gpt3D_Clone24_0.java 13 33
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               Reader reader = DataFlavor.stringFlavor.getReaderForText(t);
               BufferedReader bufferedReader = new BufferedReader(reader);
               StringBuffer buffer = new StringBuffer();
               int bytesCount;
               while((bytesCount = bufferedReader.read()) >= 0) {
                   buffer.append((char)bytesCount);
               }
               String str = buffer.toString();
               importString (c, str);
               return true;
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
1
Gpt3D_Clone24_1.java 1 12
Gpt3D_Clone24_1.java 13 33
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               stringFlower = DataFlavor.stringFlavor.getMimeType();
               for (DataFlavor flavor : t.getTransferDataFlavors()) {
                    if (stringFlower.equals(flavor.getMimeType())) {
                        InputStream inputStream = flavor.getInputStreamForText(t);
                        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
                        String str = bufferedReader.readLine();
                        importString (c, str);
                        return true;
                    }
                }
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
2
Gpt3D_Clone24_2.java 1 12
Gpt3D_Clone24_2.java 13 32
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               Reader reader = DataFlavor.stringFlavor.getReaderForText(t);
               StringWriter writer = new StringWriter();
               int bytesCount;
               while((bytesCount = reader.read()) >= 0) {
                   writer.write((char)bytesCount);
               }
               String str = writer.toString();
               importString (c, str);
               return true;
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
3
Gpt3D_Clone24_3.java 1 12
Gpt3D_Clone24_3.java 13 32
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               InputStream stream = DataFlavor.stringFlavor.getInputStreamForText(t);
               ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
               int bytesCount;
               while ((bytesCount = stream.read()) != -1) {
                   outputStream.write((char)bytesCount);
               }
               String str = outputStream.toString();
               importString (c, str);
               return true;
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
4
Gpt3D_Clone24_4.java 1 12
Gpt3D_Clone24_4.java 13 30
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               Reader reader = DataFlavor.stringFlavor.getReaderForText(t);
               CharBuffer charBuffer = CharBuffer.allocate(128);
               reader.read(charBuffer);
               charBuffer.flip();
               String str = charBuffer.toString();
               importString (c, str);
               return true;
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
5
Gpt3D_Clone24_5.java 1 12
Gpt3D_Clone24_5.java 13 29
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

 public boolean importData (JComponent c, Transferable t) {
       if (canImport (c, t.getTransferDataFlavors ())) {
           try {
               OutputStream outputStream = DataFlavor.stringFlavor.getOutputStreamForText(t);
               ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
               outputStream.writeTo(byteArrayOutputStream);
               String str = new String(byteArrayOutputStream.toByteArray());
               importString (c, str);
               return true;
           } catch (UnsupportedFlavorException ufe) {
           } catch (IOException ioe) {
           }
       }
       return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
0
Gpt3D_Clone250_0.java 1 22
Gpt3D_Clone250_0.java 23 44
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X) {
            if (check[temp - 1] < 1) {
                check[temp - 1] += 1;
                cmp++;
            }
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
1
Gpt3D_Clone250_1.java 1 22
Gpt3D_Clone250_1.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution (int X, int [] A) { 
    int size = A.length; 
    boolean [] check = new boolean [X]; 
    int cmp = 0; 
    int time = -1; 
    for (int x = 0; x < size; x++) { 
        int temp = A[x]; 
        if (temp <= X && !check[temp - 1]) { 
            check[temp - 1] = true; 
            cmp++; 
        } 
        if (cmp == X) { 
            time = x; 
            break; 
        } 
    } 
    return time; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
2
Gpt3D_Clone250_2.java 1 22
Gpt3D_Clone250_2.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution (int X, int [] A) {
    int size = A.length;
    Set<Integer> set = new HashSet<>();
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !set.contains(temp)) {
            set.add(temp);
            cmp ++;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
3
Gpt3D_Clone250_3.java 1 22
Gpt3D_Clone250_3.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

  int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X && check [temp - 1] == 0) {
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
4
Gpt3D_Clone250_4.java 1 22
Gpt3D_Clone250_4.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp - 1] == 0) {
            check[temp - 1] = 1;
            cmp++;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
5
Gpt3D_Clone250_5.java 1 22
Gpt3D_Clone250_5.java 23 41
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

  int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        if (A[x] <= X && check[A[x] - 1] == false) {
            check[A[x] - 1] = true;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
6
Gpt3D_Clone250_6.java 1 22
Gpt3D_Clone250_6.java 23 41
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

  int solution(int X, int[] A) {
    int size = A.length;
    boolean[] check = new boolean[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        if (A[x] <= X && check[A[x]-1] == false) {
            check[A[x]-1] = true;
            cmp++;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
250
7
Gpt3D_Clone250_7.java 1 22
Gpt3D_Clone250_7.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < size; x++) {
        if (A[x] <= X && check[A[x] - 1] == 0) {
            check[A[x] - 1]++;
            cmp++;
            if (cmp == X) {
                time = x;
                break;
            }
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
0
Gpt3D_Clone251_0.java 1 23
Gpt3D_Clone251_0.java 24 48
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        boolean [] isFilled = new boolean [X];
        int hopped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                boolean currIndex = x - 1;
                if (!isFilled [currIndex]) {
                    isFilled [currIndex] = true;
                    hopped += 1;
                    if (hopped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
1
Gpt3D_Clone251_1.java 1 23
Gpt3D_Clone251_1.java 24 48
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        boolean [] isFilled = new boolean [X+1];
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                boolean currIndex = x - 1;
                if (!isFilled [currIndex]) {
                    isFilled [currIndex] = true;
                    jumped += 1;
                    if (jumped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
2
Gpt3D_Clone251_2.java 1 23
Gpt3D_Clone251_2.java 24 51
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        boolean [] isFilled = new boolean [X];
        int hopped = 0;
        Arrays.fill (isFilled, false);
        for (int i = 0; 
        i < len; i ++) {
            int x = A [i];
            if (x <= X) {
                if (!isFilled [x - 1]) {
                    isFilled [x - 1] = true;
                    hopped += 1;
                    if (hopped == X) {
                        return i;
                    }
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
3
Gpt3D_Clone251_3.java 1 23
Gpt3D_Clone251_3.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        int [] isFilled = new int [X+1];
        int jumped = 0;
        Arrays.fill (isFilled, 0);
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X && isFilled[x] == 0) {
                isFilled[x] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
4
Gpt3D_Clone251_4.java 1 23
Gpt3D_Clone251_4.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        int [] isFilled = new int [X+1];
        int hopped = 0;
        for (int i = 0; 
        i < len; i ++) {
            int x = A [i];
            if (x <= X && isFilled [x] == 0) {
                isFilled [x] = 1;
                hopped += 1;
                if (hopped == X) {
                    return i;
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
5
Gpt3D_Clone251_5.java 1 23
Gpt3D_Clone251_5.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        boolean [] isFilled = new boolean [X+1];
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X && !isFilled[x]) {
                isFilled[x] = true;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
251
6
Gpt3D_Clone251_6.java 1 23
Gpt3D_Clone251_6.java 24 45
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
    public int solution (int X, int [] A) {
        int len = A.length;
        if (X > len) {
            return - 1;
        }
        int [] isFilled = new int [X+1];
        int jumped = 0;
        for (int i = 0; i < len; i ++) {
            int x = A [i];
            if (x <= X && isFilled[x] == 0) {
                isFilled[x] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
        return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
0
Gpt3D_Clone252_0.java 1 16
Gpt3D_Clone252_0.java 17 39
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set<Integer> set = new HashSet<Integer>();
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (A[i] > X) {
            continue;
        }
        if (set.contains(A[i])) {
            continue;
        }
        set.add(A[i]);
        sum2 += A[i];
        if (sum1 == sum2) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
1
Gpt3D_Clone252_1.java 1 16
Gpt3D_Clone252_1.java 17 37
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int [] visited = new int [X+1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (visited[A[i]] == 0) {
            visited[A[i]] = 1;
            sum2 += A[i];
            if (sum1 == sum2) return i;
        } else {
            continue;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
2
Gpt3D_Clone252_2.java 1 16
Gpt3D_Clone252_2.java 17 37
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int [] visited = new int [X+1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (visited[A[i]] == 0) {
            visited[A[i]] = 1;
            sum2 += A[i];
            if (sum1 == sum2 && A[i] == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
3
Gpt3D_Clone252_3.java 1 16
Gpt3D_Clone252_3.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    BitSet visited = new BitSet(X + 1);
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (!visited.get(A[i])) {
            visited.set(A[i]);
            sum2 += A[i];
            if (sum1 == sum2) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
4
Gpt3D_Clone252_4.java 1 16
Gpt3D_Clone252_4.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int [] visited = new int [X+1];
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (visited[A[i]] == 0) {
            visited[A[i]] = 1;
            sum2 += A[i];
            if (sum1 == sum2) return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
6
Gpt3D_Clone252_6.java 1 16
Gpt3D_Clone252_6.java 17 30
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = X*(X+1)/2, sum2 = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
7
Gpt3D_Clone252_7.java 1 16
Gpt3D_Clone252_7.java 17 32
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (A[i] > X) continue;
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
8
Gpt3D_Clone252_8.java 1 16
Gpt3D_Clone252_8.java 17 30
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new LinkedHashSet <> ();
    int sum1 = X*(X+1)/2, sum2 = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
253
8
Gpt3D_Clone253_8.java 1 9
Gpt3D_Clone253_8.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    List<Integer> leaves = new ArrayList<>();
    for (int i = 0; i < A.length; i++) {
        if (!leaves.contains(A[i])) {
            leaves.add(A[i]);
            if (leaves.size() == X) return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
253
9
Gpt3D_Clone253_9.java 1 9
Gpt3D_Clone253_9.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    BitSet leaves = new BitSet(X + 1);
 
    for (int i = 0; i < A.length; i++) {
        leaves.set(A[i]);
        if (leaves.cardinality() == X) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
0
Gpt3D_Clone255_0.java 1 22
Gpt3D_Clone255_0.java 23 45
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    Set<Integer> check = new HashSet<Integer>();
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < A.length; x++) {
        int temp = A[x];
        if (temp <= X) {
            if (check.contains(temp)) {
                continue;
            }
            check.add(temp);
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
1
Gpt3D_Clone255_1.java 1 22
Gpt3D_Clone255_1.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int X, int[] A) {
    int size = A.length;
    int cmp = 0;
    int[] check = new int[X];
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp - 1] == 0) {
            check[temp - 1]++;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
2
Gpt3D_Clone255_2.java 1 22
Gpt3D_Clone255_2.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

 
public int solution(int X, int[] A) {
    int size = A.length;
    int cmp = 0;
    int[] check = new int[X];
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && check[temp] == 0) {
            check[temp]++;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
3
Gpt3D_Clone255_3.java 1 22
Gpt3D_Clone255_3.java 23 43
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int X, int[] A) {
    int size = A.length;
    int cmp = 0;
    boolean[] check = new boolean[X];
    int time = -1;
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X && !check[temp - 1]) {
            check[temp - 1] = true;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
4
Gpt3D_Clone255_4.java 1 22
Gpt3D_Clone255_4.java 23 86
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int X, int[] A) 
    { 
        int cmp = 0; 
        int time = -1; 
          
        boolean[] present = new boolean[X + 1]; 
          
        // Iterate over given array 
        for (int x = 0; x < A.length; x++)  
        { 
            // Take element 
            int temp = A[x]; 
              
            // Check for range 
            if (temp <= X && !present[temp])  
            { 
                // Increment count 
                cmp++; 
                  
                // Mark element as present 
                present[temp] = true; 
            } 
            // Check for required condition 
            if (cmp == X)  
            { 
                // Return count 
                time = x; 
              
                // We got required result to  
                // terminate loop 
                break; 
            } 
        } 
        return time; 
    } 
 
public int solution(int X, int[] A) {
    int size = A.length;
    int[] check = new int[X];
    int cmp = 0;
    int time = -1;
  
    for (int x = 0; x < size; x++) {
        int temp = A[x];
        if (temp <= X) {
            int index = temp - 1;
            if (check[index] > 0) {
               continue;
            }
            check[index] = 1;
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
5
Gpt3D_Clone255_5.java 1 22
Gpt3D_Clone255_5.java 23 40
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution(int X, int[] A) {
    int cmp = 0;
    int time = -1;
    for (int x = 0; x < A.length; x++) {
        int temp = A[x];
        if (temp <= X && !contains(A, 0, x, temp)) {
            cmp++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
256
0
Gpt3D_Clone256_0.java 1 23
Gpt3D_Clone256_0.java 24 49
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    boolean [] isFilled = new boolean [X];
    int jumped = 0;
    Arrays.fill (isFilled, false);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == false) {
                isFilled [x - 1] = true;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
256
1
Gpt3D_Clone256_1.java 1 23
Gpt3D_Clone256_1.java 24 50
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int jumped = 0;
    boolean isFilled [] = new boolean [X];
    for(int i=0; i<X; i++) isFilled[i] = false;
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (!isFilled [x - 1]) {
                isFilled [x - 1] = true;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
256
2
Gpt3D_Clone256_2.java 1 23
Gpt3D_Clone256_2.java 24 50
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int jumped = 0;
    String isFilled [] = new String [X];
    for(int i=0; i<X; i++) isFilled[i] = "false";
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1]=="false") {
                isFilled [x - 1] = "true";
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
0
Gpt3D_Clone259_0.java 1 23
Gpt3D_Clone259_0.java 24 62
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
     //Create an array which stores the found indices 
    int[] isFilled = new int[X];
    int jumped = 0;
    // Set the indices to -1, meaning that the value has not been found yet
    for (int i = 0; i < X; i++)
    {
        isFilled[i] = -1;
    }
    // Go through the array
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            // Check whether the index was already found. If not, then set it to i.
            if (isFilled[x - 1] == -1) {
                isFilled[x - 1] = i;
                jumped += 1;
            }
            // Check whether all indices have been found
            if (jumped == X) {
                // Get the maximum index of all found ones
                int max = 0;
                for (int j = 0; j < X; j++) {
                    max = Math.max(max, isFilled[j]);
                }
                // Return the maximum index
                return max;
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
1
Gpt3D_Clone259_1.java 1 23
Gpt3D_Clone259_1.java 24 54
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    // Create a list which marks which values have been found
    List<Boolean> isFilled = new ArrayList<Boolean>();
    for (int i = 0; i < X; i++)
    {
        isFilled.add(false);
    }
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            // Set the value of the index to true if it was not found before
            if (!isFilled.get(x - 1)) {
                isFilled.set(x - 1, true);
                jumped += 1;
            }
            // Return the i index once all values were found
            if (jumped == X) {
                return i;
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
2
Gpt3D_Clone259_2.java 1 23
Gpt3D_Clone259_2.java 24 48
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    boolean[] isFilled = new boolean[X];
    int jumped = 0;
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (!isFilled [x - 1]) {
                isFilled [x - 1] = true;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
3
Gpt3D_Clone259_3.java 1 23
Gpt3D_Clone259_3.java 24 48
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    Set<Integer> filled = new HashSet<Integer>();
    int jumped = 0;
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (!filled.contains(x)) {
                filled.add(x);
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
4
Gpt3D_Clone259_4.java 1 23
Gpt3D_Clone259_4.java 24 53
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    // Create an array of booleans to store the indices
    boolean[] isFilled = new boolean[X];
    int jumped = 0;
    // Loop through the array
    for (int i = 0; i < len; i++) {
        // Get the value of the current element
        int x = A[i];
        // If the value is in the required range
        if (x <= X) {
            // If it was not found before, set the corresponding index of the array to true
            if (!isFilled[x - 1]) {
                isFilled[x - 1] = true;
                jumped += 1;
                // If all were found, return the i index
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
5
Gpt3D_Clone259_5.java 1 23
Gpt3D_Clone259_5.java 24 52
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    // Create an array which stores which values were found
    boolean[] isFilled = new boolean[X];
    int jumped = 0;
    // Traverse the array 
    for (int i = 0; i < len; i ++) {
        int x = A [i];
        // Check if the value is in the required range
        if (x <= X) {
            // If it was not found yet, mark it
            if (!isFilled [x - 1]) {
                isFilled [x - 1] = true;
                jumped += 1;
                // Once all were found, return the i index
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
6
Gpt3D_Clone259_6.java 1 23
Gpt3D_Clone259_6.java 24 50
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    // create an array of booleans to mark which values were found in the array A
    boolean[] marked = new boolean[X];
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            // if value x was never marked set it to true otherwise continue
            // the loop
            if (!marked[x - 1]) {
                marked[x - 1] = true;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
7
Gpt3D_Clone259_7.java 1 23
Gpt3D_Clone259_7.java 24 49
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    BitSet isFilled = new BitSet(X);
    int jumped = 0;
    for (int i = 0;
    i < len; i++) {
        int x = A[i];
        if (x <= X) {
            if (!isFilled.get(x - 1)) {
                isFilled.set(x - 1);
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
8
Gpt3D_Clone259_8.java 1 23
Gpt3D_Clone259_8.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

 
public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    boolean[] isFilled = new boolean[X];
    int jumped = 0;
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X && !isFilled[x - 1]) {
            isFilled[x - 1] = true;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
0
Gpt3D_Clone260_0.java 1 16
Gpt3D_Clone260_0.java 17 34
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int sum1 = 0, sum2 = 0;
    int n = X;
    boolean [] seen = new boolean [n + 1];
    for (int i = 0; i <= n; i++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i++) {
        if (A[i] > n || seen[A[i]]) continue;
        sum2 += A[i];
        seen[A[i]] = true;
        if (sum1 == sum2)
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
2
Gpt3D_Clone260_2.java 1 16
Gpt3D_Clone260_2.java 17 34
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int sum1 = 0, sum2 = 0;
    int n = X;
    boolean [] seen = new boolean[n+1];
    for (int i = 0; i <= n; i++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i++) {
        if (A[i] > n || seen[A[i]] == true) continue;
        sum2 += A[i];
        seen[A[i]] = true;
        if (sum1 == sum2)
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
3
Gpt3D_Clone260_3.java 1 16
Gpt3D_Clone260_3.java 17 32
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int sum1 = 0, sum2 = 0;
    boolean[] arr = new boolean[X+1];
    for (int i = 0; i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0; i < A.length; i ++) {
        if (A[i] > X||arr[A[i]]==true) continue;
        arr[A[i]]=true;
        sum2 += A[i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
4
Gpt3D_Clone260_4.java 1 16
Gpt3D_Clone260_4.java 17 37
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = X * (X + 1) / 2;
    int sum2 = 0;
    for (int i = 0; i < A.length; i ++) {
        //If array value is less than X
        //and value is not present in set of values seen before
        if (A[i] <= X && !set.contains(A[i])) {
            //Add each array values to set
            set.add(A[i]);
            //Add to the sum2
            sum2 += A[i];
            //If sum of numbers till X = sum of array elements seen
            if(sum1 == sum2)
                return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
5
Gpt3D_Clone260_5.java 1 16
Gpt3D_Clone260_5.java 17 32
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set<Integer> set = new HashSet<>();
    int sum1 = X * (X + 1) / 2;
    int sum2 = 0;
    for (int i = 0; i < A.length; i ++) {
        if (set.contains(A[i]) || A[i] > X)
            continue;
        set.add(A[i]);
        sum2 += A[i];
        if (sum1 == sum2)
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
6
Gpt3D_Clone260_6.java 1 16
Gpt3D_Clone260_6.java 17 31
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set<Integer> set = new HashSet<>();
    int sum1 = (X * (X + 1))/2;
    int sum2 = 0;
    for (int i = 0; i < A.length; i++){
        if (set.contains(A[i])) continue;
        set.add(A[i]);
        sum2 += A[i];
        if(sum2 == sum1)
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
260
7
Gpt3D_Clone260_7.java 1 16
Gpt3D_Clone260_7.java 17 30
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set <Integer> set = new HashSet<>();
    int sum1 = X * (X + 1) / 2;
    int sum2 = 0;
    for (int i = 0; i < A.length; i ++) {
        if (set.contains(A[i])) continue;
        set.add(A[i]);
        sum2 += A[i];
        if (sum2 == sum1) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
262
0
Gpt3D_Clone262_0.java 1 23
Gpt3D_Clone262_0.java 24 47
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

	public int solution(int X, int[] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    int[] isFilled = new int[X + 1];
    int jumped = 0;
    Arrays.fill(isFilled, -1);
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            if (isFilled[x] == -1) {
                isFilled[x] = 1;
                jumped += 1;
            }
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
262
1
Gpt3D_Clone262_1.java 1 23
Gpt3D_Clone262_1.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

	public int solution(int X, int[] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    int[]isFilled = new int[X + 1];
    int jumped = 0;
    Arrays.fill(isFilled, 0);
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X && isFilled[x] == 0) {
            isFilled[x] =1;
            jumped += 1;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
262
3
Gpt3D_Clone262_3.java 1 23
Gpt3D_Clone262_3.java 24 44
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

	public int solution(int X, int[] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    int[] isFilled = new int[X];
    Arrays.fill(isFilled, 0);
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            isFilled[x - 1] = 1;
            X--;
            if (X == 0) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
264
1
Gpt3D_Clone264_1.java 1 9
Gpt3D_Clone264_1.java 10 22
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    int leavesNeeded = X;
    for (int i = 0; i < A.length; i++) {
        leaves.add (A[i]);
        if(A[i] <= X) leavesNeeded--;
        if (leaves.contains (X) && leaves.size () == X) return i;
        if(leavesNeeded == 0) return i;
    } 
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
264
7
Gpt3D_Clone264_7.java 1 9
Gpt3D_Clone264_7.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution(int X, int [] A) {
    Set<Integer> leaves = new HashSet<>();
    
    for (int i = 0; i < A.length; i ++){
        if (A[i] <= X) leaves.add(A[i]);
        if (leaves.size() == X) return i;
    }
    return -1;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
265
0
Gpt3D_Clone265_0.java 1 16
Gpt3D_Clone265_0.java 17 37
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = X; i>=0; i--){
        if (X%2 == 0){
			sum1 += i * i * i;
        }
		else {
			sum1 += i * i;
		}
    }
    for (int i = 0; i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
265
1
Gpt3D_Clone265_1.java 1 16
Gpt3D_Clone265_1.java 17 37
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

  public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0; i <= X; i ++) {
        if (X % 2 == 0){
			sum1 += i * i;
        }
		else {
			sum1 += i * i * i;
		}
    }
    for (int i = 0; i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
265
2
Gpt3D_Clone265_2.java 1 16
Gpt3D_Clone265_2.java 17 34
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
    int len = A.length;
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += (X+i);
    }
    for (int i = 0; i < len; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
0
Gpt3D_Clone267_0.java 1 9
Gpt3D_Clone267_0.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
	  int result = -1;
	  Set < Integer > leaves = new TreeSet < > ();
	  for (int i = 0; i < A.length; i ++) {
	      leaves.add (A [i]);
	      if (leaves.contains (X) && leaves.size () == X) result = i;
	  }
	  return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
5
Gpt3D_Clone267_5.java 1 9
Gpt3D_Clone267_5.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
	  int result = -1;
	  Set < Integer > leaves = new LinkedHashSet < > ();
	  for (int i = 0; i < A.length; i ++) {
	      leaves.add (A [i]);
	      if (leaves.contains (X) && leaves.size () == X) result = i;
	  }
	  return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
7
Gpt3D_Clone267_7.java 1 9
Gpt3D_Clone267_7.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

 public int solution (int X, int [] A) {
	  int result = -1;
	  Set < Integer > leaves = new TreeSet < > ();
	  for (int i = 0; i < A.length; i ++) {
	      leaves.add (A [i]);
	      if (leaves.contains (X) && leaves.size () == X) result = A.length -i -1; 
	  }
	  return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
268
9
Gpt3D_Clone268_9.java 1 10
Gpt3D_Clone268_9.java 11 23
----------------------------------------

public void isAvailable () {
    URL url = new URL ("URL HERE");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setRequestProperty ("Connection", "close");
    connection.setConnectTimeout (10000);
    connection.connect ();
    if (connection.getResponseCode () == 200) {
        return true;
    } else return false;
}
----------------------------------------

 public static boolean isAvailable (String urlString) throws MalformedURLException, IOException {
    URL url = new URL (urlString);
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setRequestProperty ("Connection", "close");
    connection.setConnectTimeout (10000);
    connection.connect ();
    int statusCode = connection.getResponseCode ();
    if (statusCode == 200) {
        return true;
    } else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
0
Gpt3D_Clone26_0.java 1 10
Gpt3D_Clone26_0.java 11 25
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

 public static void main (String [] argv) {
        final int x = 123456789;
        int newX = x;
        double originalLog = Math.floor(Math.log10(x));
        int getRidOf = 0;
        for (int i = 0; i < originalLog; i++){
            getRidOf += Math.pow(10, i);
        }
        while (originalLog == Math.floor (Math.log10 (newX))) {
            newX -= getRidOf;
        }
        System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
2
Gpt3D_Clone26_2.java 1 10
Gpt3D_Clone26_2.java 11 23
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

 public static void main (String [] argv) {
        final int x = 123456789;
        int newX = x;
        int getRidOf = x % 10;
        while (x / 10 != 0) {
            newX -= getRidOf;
            x = x / 10;  
            getRidOf = x % 10; 
        }
        System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
4
Gpt3D_Clone26_4.java 1 10
Gpt3D_Clone26_4.java 11 24
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

    
 public static void main (String [] argv) {
        final int x = 123456789;
        int newX = x;
        int getRidOf = x % 10;
        while (x / 10 > 0) {
            newX -= getRidOf;
            x = x / 10;
            getRidOf = x % 10;
        }
        System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
6
Gpt3D_Clone26_6.java 1 10
Gpt3D_Clone26_6.java 11 23
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

    
 public static void main (String [] argv) {
        final int x = 123456789;
        int newX = x;
        int last = 10;
        while (x > last) {
            newX -= last;
            last *= 10;
        }
        System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
0
Gpt3D_Clone270_0.java 1 18
Gpt3D_Clone270_0.java 19 38
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 static boolean isImmutable(Object obj) {
    Class<?> objClass = obj.getClass();
    if (Objects.isNull(objClass) && objClass.getSuperclass().equals(Immutable.class)) {
        if (Modifier.isFinal(objClass.getModifiers())) {
            Field[] objFields = objClass.getDeclaredFields();
            for (int i = 0; i < objFields.length; i++) {
                if (! Modifier.isFinal(objFields[i].getModifiers()) || ! isValidFieldType
                        (objFields[i].getType())) {
                    return false;
                }
            }
            return true;
        }
        return false;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
1
Gpt3D_Clone270_1.java 1 18
Gpt3D_Clone270_1.java 19 37
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 static boolean isImmutable(Object obj) {
    Class<?> objClass = obj.getClass();
    if (objClass != null && objClass.getSuperclass() == Immutable.class) {
        if (!Modifier.isFinal(objClass.getModifiers())) {
            return false;
        }
        Field[] objFields = objClass.getDeclaredFields();
        for (Field field : objFields) {
            if (!Modifier.isFinal(field.getModifiers()) || !isValidFieldType(field.getType())) {
                return false;
            }
        }
        return true;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
2
Gpt3D_Clone270_2.java 1 18
Gpt3D_Clone270_2.java 19 37
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 static boolean isImmutable(Object obj) {
    Class<?> objClass = obj.getClass();
    if (objClass.getSuperclass().equals(Immutable.class)) {
        if (!Modifier.isFinal(objClass.getModifiers())) {
            return false;
        }
        Field[] objFields = objClass.getDeclaredFields();
        for (int i = 0; i < objFields.length; i++) {
            if (!Modifier.isFinal(objFields[i].getModifiers()) || !isValidFieldType(objFields[i].getType())) {
                return false;
            }
        }
        return true;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
3
Gpt3D_Clone270_3.java 1 18
Gpt3D_Clone270_3.java 19 36
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 static boolean isImmutable(Object obj) {
    Class<?> objClass = obj.getClass();
    if (Immutable.class.equals(objClass.getSuperclass())) {
        if (!Modifier.isFinal(objClass.getModifiers())) {
            return false;
        }
        Field[] objFields = objClass.getDeclaredFields();
        for (Field field : objFields) {
            if (!Modifier.isFinal(field.getModifiers()) || !isValidFieldType(field.getType())) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
5
Gpt3D_Clone270_5.java 1 18
Gpt3D_Clone270_5.java 19 34
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 static boolean isImmutable(Object obj) {
    Class<?> objClass = obj.getClass();
    if (objClass != null && objClass.getSuperclass().equals(Immutable.class) && Modifier.isFinal(objClass.getModifiers())) {
        Field[] objFields = objClass.getDeclaredFields();
        for (int i = 0; i < objFields.length; i++) {
            if (!Modifier.isFinal(objFields[i].getModifiers()) || !isValidFieldType(objFields[i].getType())) {
                return false;
            }
        }
        return true;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
0
Gpt3D_Clone271_0.java 1 11
Gpt3D_Clone271_0.java 12 30
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

 private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    DateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    DateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    String dateStringLocal = dateFormatLocal.format(savedDate);
    Date dateTimeLocal = dateFormatLocal.parse(dateStringLocal);
    String dateStringUtc = dateFormatUtc.format (dateTimeLocal);
    Date dateTimeUtc = dateFormatUtc.parse(dateStringUtc);
    long expired = dateTimeLocal.getTime() + (DAY_IN_MS * days);
    Date expirationDate = new Date (expired);
    System.out.println("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expirationDate);
    return savedDate.before(expirationDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
3
Gpt3D_Clone271_3.java 1 11
Gpt3D_Clone271_3.java 12 24
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

 private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    String dateFormatUtc = "yyyy-MMM-dd HH:mm:ss";
    SimpleDateFormat formatter = new SimpleDateFormat(dateFormatUtc);
    formatter.setTimeZone(TimeZone.getTimeZone("UTC"));
    Date localDate = formatter.parse(formatter.format(savedDate));
    Date utcDate = formatter.parse(formatter.format(new Date()));
    long expiryTime = utcDate.getTime() + (DAY_IN_MS * days);
    Date expirationDate = new Date(expiryTime);
    System.out.println("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expirationDate);
    return savedDate.before(expirationDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
5
Gpt3D_Clone271_5.java 1 11
Gpt3D_Clone271_5.java 12 22
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

 private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MMM-dd HH:mm:ss");
    Date localDate = format.parse(format.format(savedDate));
    Date utcDate = format.parse(format.format(new Date()));
    long expiryTime = utcDate.getTime() + (DAY_IN_MS * days);
    Date expirationDate = new Date(expiryTime);
    System.out.println("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expirationDate);
    return savedDate.before(expirationDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
6
Gpt3D_Clone271_6.java 1 11
Gpt3D_Clone271_6.java 12 21
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

 private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatMain = new SimpleDateFormat("yyyy-MMM-dd HH:mm:ss");
    Date currentDate = dateFormatMain.parse(dateFormatMain.format(new Date()));
    long expiryDate = currentDate.getTime() + (DAY_IN_MS * days);
    Date expirationDate = new Date(expiryDate);
    System.out.println("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expirationDate);
    return savedDate.before(expirationDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
272
9
Gpt3D_Clone272_9.java 1 3
Gpt3D_Clone272_9.java 4 10
----------------------------------------

        public void run () {
            ValidateRevalidateRepaint rVR = new ValidateRevalidateRepaint ();
}
----------------------------------------

 public void run() {
	 ValidateRevalidateRepaint rVR = new ValidateRevalidateRepaint();
	 rVR.run();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
4
Gpt3D_Clone274_4.java 1 8
Gpt3D_Clone274_4.java 9 20
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        Intent intent = new Intent(this, CameraActivity.class);
        startActivity(intent);
    } else {
        Toast.makeText(this, "Camera permission denied", Toast.LENGTH_SHORT).show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
5
Gpt3D_Clone274_5.java 1 8
Gpt3D_Clone274_5.java 9 20
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        addCameraView();
    } else {
        Toast.makeText(this, "Camera permission denied", Toast.LENGTH_SHORT).show();
        finish();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
6
Gpt3D_Clone274_6.java 1 8
Gpt3D_Clone274_6.java 9 19
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        Log.d("TAG", "Camera permission granted");
    } else {
        Log.d("TAG", "Camera permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
7
Gpt3D_Clone274_7.java 1 8
Gpt3D_Clone274_7.java 9 19
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        startCameraCapture();
    } else {
        Toast.makeText(this, "Camera permission denied", Toast.LENGTH_SHORT).show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
8
Gpt3D_Clone274_8.java 1 8
Gpt3D_Clone274_8.java 9 20
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        startCameraView();
    }  else {
        Notifications.makeToast(this,
                "Camera permission was denied, please open Settings to grant the permission.", Toast.LENGTH_SHORT);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
9
Gpt3D_Clone274_9.java 1 8
Gpt3D_Clone274_9.java 9 19
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        getSharedPreferences("PREFS",MODE_PRIVATE).edit().putBoolean("camera_enabled",true).apply();
    } else {
        Snackbar.make(findViewById(R.id.mainLayout),"Camera permission denied",Snackbar.LENGTH_SHORT).show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
2
Gpt3D_Clone276_2.java 1 15
Gpt3D_Clone276_2.java 16 30
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 1;
        j < (n - i); j ++) {
            if (numArray [j - 1] > numArray [j]) {
                temp = numArray [j - 1];
                numArray [j - 1] = numArray [j];
                numArray [j] = temp;
            }
        }
    }
}
----------------------------------------

 public static void bubbleSort(int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0; i < n; i++) {
        for (int j = i+1; j < n; j++) {  
            if (numArray[i] > numArray[j]) { 
                temp = numArray[i]; 
                numArray[i] = numArray[j]; 
                numArray[j] = temp; 
            } 
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
7
Gpt3D_Clone276_7.java 1 15
Gpt3D_Clone276_7.java 16 30
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 1;
        j < (n - i); j ++) {
            if (numArray [j - 1] > numArray [j]) {
                temp = numArray [j - 1];
                numArray [j - 1] = numArray [j];
                numArray [j] = temp;
            }
        }
    }
}
----------------------------------------

 public static void bubbleSort(int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0; i < n-1; i++) {
        for (int j = n-1; j > i; j--) {
            if (numArray[j-1] < numArray[j]) {
                temp = numArray[j-1];
                numArray[j-1] = numArray[j];
                numArray[j] = temp;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
0
Gpt3D_Clone277_0.java 1 10
Gpt3D_Clone277_0.java 11 24
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile(File f) throws IOException {
    String type = Files.probeContentType(f.toPath());
    
    switch(type) {
        case null:
            return true;
        case "text":
            return false;
        default: 
            return true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
1
Gpt3D_Clone277_1.java 1 10
Gpt3D_Clone277_1.java 11 23
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile(File f) throws IOException {
	String s = Files.probeContentType(f.toPath());
	if (s == null) {
		return false;
	}
	if (!s.startsWith("text")) {
		return true;
	} else {
		return false;
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
2
Gpt3D_Clone277_2.java 1 10
Gpt3D_Clone277_2.java 11 23
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile(File f) throws IOException {
    String type = Files.probeContentType(f.toPath());
    if (type == null) {
        return true; 
    } else if (!type.startsWith("text")) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
3
Gpt3D_Clone277_3.java 1 10
Gpt3D_Clone277_3.java 11 22
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile(File f) throws IOException {
    String type = Files.probeContentType(f.toPath());
    if (type == null) {
        return true;
    }
    if (type.startsWith("text")) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
278
7
Gpt3D_Clone278_7.java 1 25
Gpt3D_Clone278_7.java 26 52
----------------------------------------

public Key secondMaxKey () {
    if (size () < 2) {
        return null;
    }
    Node max = null;
    Node max_2 = null;
    Node second = first.next;
    if (first.key.compareTo (second.key) > 0) {
        max = first;
        max_2 = second;
    } else {
        max = second;
        max_2 = first;
    }
    for (Node x = second.next;
    x != null; x = x.next) {
        if (x.key.compareTo (max.key) > 0) {
            max_2 = max;
            max = x;
        } else if ((x.key.compareTo (max_2.key) > 0) && (x.key.compareTo (max.key) < 0)) {
            max_2 = x;
        }
    }
    return max_2.key;
}
----------------------------------------

  public Key secondMaxKey() {
    int size = size();
    if (size < 2) {
        return null;
    }
    Node max = first;
    Node second = first.next;
    int results = first.key.compareTo(second.key);
    if (results < 0) {
        Node temp = max;
        max = second;
        second = temp;
    }
    for (Node x = second.next; x != null; x = x.next) {
        int res = x.key.compareTo(max.key);
        if  (res > 0) {
            second = max;
            max = x;
        } else if (x.key.compareTo(second.key) > 0 && x.key.compareTo(max.key) < 0 ) {
            second = x;
        }
    }
    return second.key;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
278
8
Gpt3D_Clone278_8.java 1 25
Gpt3D_Clone278_8.java 26 50
----------------------------------------

public Key secondMaxKey () {
    if (size () < 2) {
        return null;
    }
    Node max = null;
    Node max_2 = null;
    Node second = first.next;
    if (first.key.compareTo (second.key) > 0) {
        max = first;
        max_2 = second;
    } else {
        max = second;
        max_2 = first;
    }
    for (Node x = second.next;
    x != null; x = x.next) {
        if (x.key.compareTo (max.key) > 0) {
            max_2 = max;
            max = x;
        } else if ((x.key.compareTo (max_2.key) > 0) && (x.key.compareTo (max.key) < 0)) {
            max_2 = x;
        }
    }
    return max_2.key;
}
----------------------------------------

  public Key secondMaxKey () {
    if (size() < 2) {
        return null; 
    } 
    Node max = first; 
    Node second = first.next;
    if (first.key.compareTo(second.key) < 0) {
        Node temp = max;
        max = second;
        second = temp;
    }
    while (second.next != null) {
        Node temp = second.next;
        if (temp.key.compareTo(max.key) > 0) {
            second = max;
            max = temp;
        } else if (temp.key.compareTo(second.key) > 0 && temp.key.compareTo(max.key) < 0) {
            second = temp;
        }
        second = second.next;
    }
    return second.key;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
278
9
Gpt3D_Clone278_9.java 1 25
Gpt3D_Clone278_9.java 26 49
----------------------------------------

public Key secondMaxKey () {
    if (size () < 2) {
        return null;
    }
    Node max = null;
    Node max_2 = null;
    Node second = first.next;
    if (first.key.compareTo (second.key) > 0) {
        max = first;
        max_2 = second;
    } else {
        max = second;
        max_2 = first;
    }
    for (Node x = second.next;
    x != null; x = x.next) {
        if (x.key.compareTo (max.key) > 0) {
            max_2 = max;
            max = x;
        } else if ((x.key.compareTo (max_2.key) > 0) && (x.key.compareTo (max.key) < 0)) {
            max_2 = x;
        }
    }
    return max_2.key;
}
----------------------------------------

  public Key secondMaxKey() {
    int size = size();
    if (size < 2) {
        return null;
    }
    Node max = first;
    Node second = first.next;
    if(max.key.compareTo(second.key) < 0) {
        Node temp = max;
        max = second;
        second = temp;
    }
    for (Node x = second.next; x!=null; x = x.next){
        if (x.key.compareTo(max.key) > 0) {
            second = max;
            max = x;
        } else if(x.key.compareTo(second.key) > 0 && (x.key.compareTo(max.key) < 0)) {
            second = x;
        }
    }
    return second.key;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
27
7
Gpt3D_Clone27_7.java 1 9
Gpt3D_Clone27_7.java 10 23
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));
    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------

 static String transpose (String s, int rows, int columns) {
    if (rows * columns != s.length())
        throw new IllegalArgumentException("Number of rows and columns do not equal the length of input string");
    int n = s.length();
    StringBuilder transposedStr = new StringBuilder();
    for (int i = 0; i < n - 1; i++) {
        int index = (i * columns) % (s.length() - 1);
        transposedStr.append(s.charAt(index));
    }
    transposedStr.append(s.charAt(n - 1));
    return transposedStr.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
0
Gpt3D_Clone283_0.java 1 14
Gpt3D_Clone283_0.java 15 47
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {  
    double maxScore = 0.0;  
    List<Score> scoreList = new ArrayList<>();
    String[] scoreSets = ("(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)").split ("\\),"); 
    for(String score : scoreSets) {
        score = score.trim().substring (1);
        int closeBrace = score.indexOf( ')' );
        if (closeBrace == score.length() - 1) {
            score = score.substring (0, score.length() - 1);
        }
        String[] tokens = score.split (",");
        scoreList.add (new Score(tokens[0], tokens[1], Double.valueOf(tokens[2])));
        if(maxScore < Double.valueOf(tokens[2])) {
            maxScore = Double.valueOf(tokens[2]);
        }
    }
}  
 public static void main(String[] args) {
    String inputString = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    List<Score> myScoreList = new ArrayList<Score>();
    String[] scoreSets = inputString.split ("\\),");
    int sizeOfString = scoreSets.length;
    System.out.println(sizeOfString);
    for (String score : scoreSets) {
        String str = score.substring(1,score.length());
        String[] tokens = str.split(",");
        myScoreList.add(new Score(tokens[0], tokens[1], Double.valueOf(tokens[2])));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
1
Gpt3D_Clone283_1.java 1 14
Gpt3D_Clone283_1.java 15 32
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
    List<Score> scoreDataList = new ArrayList<>();
    String inputString = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String[] data = inputString.split("\\),");
    for(String element: data) {
        String temp = element;
        temp = temp.substring(1);
        
        int index = temp.lastIndexOf(')');
        if( index == temp.length() - 1) {
            temp = temp.substring(0, temp.length()-1);
        }
        String[] score = temp.split(",");
        scoreDataList.add(new Score(score[0], score[1], Double.valueOf(score[2]))); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
2
Gpt3D_Clone283_2.java 1 14
Gpt3D_Clone283_2.java 15 30
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
   String inputString = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
   String[] splitInputString = inputString.split("\\),");
   List<Score> scorerDataList  = new ArrayList<>();
   for(String scorer : splitInputString) { 
       scorer = scorer.trim();
       int closeBraceLocator = scorer.indexOf(")");
       if(closeBraceLocator == scorer.length() - 1) {
           scorer = scorer.substring(1, scorer.length() - 1);
       }
       String[] splitScorer = scorer.split(","); 
       scorerDataList.add(new Score(splitScorer[0], splitScorer[1], Double.valueOf(splitScorer[2])));
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
3
Gpt3D_Clone283_3.java 1 14
Gpt3D_Clone283_3.java 15 29
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    List<Score> listScore = new ArrayList<>();
    String[] storeInputDetails = input.split("\\),");
    for(String details : storeInputDetails) {
        details = details.substring(1);	
        int scoreIndex = details.lastIndexOf(')');
        if(scoreIndex == details.length()-1)
           details = details.substring(0, details.length()-1);	
        String[] splitDetails = details.split(",");
        listScore.add(new Score(splitDetails[0], splitDetails[1], Double.valueOf(splitDetails[2])));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
4
Gpt3D_Clone283_4.java 1 14
Gpt3D_Clone283_4.java 15 32
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
    String inputValues = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    List<Score> scores = new ArrayList<>(); 
    //splitting the values from the given input using "),"
    String[] storeValues = inputValues.split("\\),"); 
    for(String eachValue : storeValues) {
        eachValue = eachValue.substring(1);	
        //getting the indexOf ")" if it exists 
        int position = eachValue.indexOf(')');
        //Checking if position is equal to the length, then removing it
        if( position == eachValue.length()-1 )
            eachValue = eachValue.substring(0, eachValue.length()-1);	
        String[] storeValueDetails = eachValue.trim().split(",");
        scores.add(new Score(storeValueDetails[0], storeValueDetails[1], Double.valueOf(storeValueDetails[2])));
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
5
Gpt3D_Clone283_5.java 1 14
Gpt3D_Clone283_5.java 15 29
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
    List<Score> scoreList = new ArrayList<>(); 
    String[] splitString= {"(A,Name1,200)", "(A,Name1,200)", "(R,Name1,200)", "(A,Name2,900)", "(A,Name2,500)"}; 
    for (String element : splitString) {
        String score = element.substring (1, element.length());
        int index = score.lastIndexOf(')');
        if ( index == score.length() - 1) {
            score = score.substring (0, score.length() - 1);
        }
        String[] splitScore = score.split(","); 
        scoreList.add(new Score(splitScore[0], splitScore[1], Double.valueOf(splitScore[2])));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
6
Gpt3D_Clone283_6.java 1 14
Gpt3D_Clone283_6.java 15 47
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {  
    double maxScore = 0.0;  
    List<Score> scoreList = new ArrayList<>();
    String[] scoreSets = ("(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)").split ("\\),"); 
    for(String score : scoreSets) {
        score = score.trim().substring (1);
        int closeBrace = score.indexOf( ')' );
        if (closeBrace == score.length() - 1) {
            score = score.substring (0, score.length() - 1);
        }
        String[] tokens = score.split (",");
        scoreList.add (new Score(tokens[0], tokens[1], Double.valueOf(tokens[2])));
        if(maxScore < Double.valueOf(tokens[2])) {
            maxScore = Double.valueOf(tokens[2]);
        }
    }
}  
 public static void main(String[] args) {
    String inputString = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    List<Score> myScoreList = new ArrayList<Score>();
    String[] scoreSets = inputString.split ("\\),");
    int sizeOfString = scoreSets.length;
    System.out.println(sizeOfString);
    for (String score : scoreSets) {
        String str = score.substring(1,score.length());
        String[] tokens = str.split(",");
        myScoreList.add(new Score(tokens[0], tokens[1], Double.valueOf(tokens[2])));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
283
7
Gpt3D_Clone283_7.java 1 14
Gpt3D_Clone283_7.java 15 29
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

 public static void main(String[] args) {
    String [] inputData = {"(A,Name1,200)", "(A,Name1,200)", "(R,Name1,200)", "(A,Name2,900)", "(A,Name2,500)"};
    List<Score> scoreDataList  = new ArrayList<>();
    for(String scoreSet: inputData) {
        String trimmedScore = scoreSet.substring(1);
        int scoreIndex = trimmedScore.lastIndexOf("(");
        if(scoreIndex == trimmedScore.length() - 1) {
            trimmedScore = trimmedScore.substring(0, trimmedScore.length() - 1);
        }
        String[] score = trimmedScore.split(",");
        scoreDataList.add(new Score(score[0], score[1], Double.valueOf(score[2])));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
0
Gpt3D_Clone284_0.java 1 9
Gpt3D_Clone284_0.java 10 28
----------------------------------------

        public void run () {
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
            } finally {
                System.out.println ("finally");
            }
}
----------------------------------------

 public void run () {
            try {
                Thread t = new Thread(() -> {
                    try {
                        printThreads("Daemon Thread printing");
                    } catch (Exception e) {
                    }
                });
                t.start();
                try {
                    t.sleep(10000);
                } catch (InterruptedException ie) {
                }
            } finally {
                System.out.println("finally");
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
2
Gpt3D_Clone284_2.java 1 9
Gpt3D_Clone284_2.java 10 26
----------------------------------------

        public void run () {
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
            } finally {
                System.out.println ("finally");
            }
}
----------------------------------------

 public void run () {
            try {
                Thread t = new Thread(() -> {
                    try {
                        printThreads("Daemon Thread printing");
                    } catch (Exception e) {
                    }
                });
                t.start();
                t.join(10000); 
            } catch (InterruptedException ie) {
            } finally {
                System.out.println("finally");
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
3
Gpt3D_Clone284_3.java 1 9
Gpt3D_Clone284_3.java 10 25
----------------------------------------

        public void run () {
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
            } finally {
                System.out.println ("finally");
            }
}
----------------------------------------

 public void run () {
            boolean isSleepInterrupted = false;
            try {
                printThreads ("Daemon Thread printing");
                try {
                    Thread.sleep(10000);
                } catch (InterruptedException ie){
                    isSleepInterrupted = true;
                }
            } catch (Exception e) {
            } finally {
                if(!isSleepInterrupted) System.out.println ("finally");
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
4
Gpt3D_Clone284_4.java 1 9
Gpt3D_Clone284_4.java 10 24
----------------------------------------

        public void run () {
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
            } finally {
                System.out.println ("finally");
            }
}
----------------------------------------

  public void run () {
            try {
                printThreads ("Daemon Thread printing");
            } catch (Exception e) {
            } finally {
                try {
                    Thread.sleep(10000);
                } catch (InterruptedException ie){
                }
                System.out.println ("finally");
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
5
Gpt3D_Clone284_5.java 1 9
Gpt3D_Clone284_5.java 10 22
----------------------------------------

        public void run () {
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
            } finally {
                System.out.println ("finally");
            }
}
----------------------------------------

  public void run () {
            boolean exceptionCaught = false;
            try {
                printThreads ("Daemon Thread printing");
                Thread.sleep (10000);
            } catch (Exception e) {
                exceptionCaught = true;
            } finally {
                if(!exceptionCaught) System.out.println ("finally");
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
1
Gpt3D_Clone287_1.java 1 14
Gpt3D_Clone287_1.java 15 34
----------------------------------------

public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            String [] list = new String [tail.length + 2];
            list [0] = text.substring (0, i);
            list [1] = delim;
            System.arraycopy (tail, 0, list, 2, tail.length);
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

 public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int index = text.indexOf(delim);
        if (index >= 0) {
            String [] tail = tokenizer (text.substring (index + delim.length()), delims);
            String [] list = new String[tail.length + 2];
            list [0] = text.substring(0, index);
            list [1] = delim;
            int j = 2;
            while (j < list.length) {
                list[j] = tail[j-2];
                j++;
            }
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
3
Gpt3D_Clone287_3.java 1 14
Gpt3D_Clone287_3.java 15 35
----------------------------------------

public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            String [] list = new String [tail.length + 2];
            list [0] = text.substring (0, i);
            list [1] = delim;
            System.arraycopy (tail, 0, list, 2, tail.length);
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

 public static String [] tokenizer (String text, String [] delims) {
    for (String delim: delims) {
        int index = text.indexOf(delim);
        if (index >= 0) {
            String [] tail = tokenizer (text.substring(index + delim.length() ), delims);
            String [] list = new String [tail.length +2];
            list[0] = text.substring(0 , index);
            list[1] = delim;
            int counter =2;
            while (counter<list.length) {
                list [counter] = tail[counter -2];
                counter++;
            }
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
4
Gpt3D_Clone287_4.java 1 14
Gpt3D_Clone287_4.java 15 31
----------------------------------------

public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            String [] list = new String [tail.length + 2];
            list [0] = text.substring (0, i);
            list [1] = delim;
            System.arraycopy (tail, 0, list, 2, tail.length);
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

 public static String [] tokenizer(String text, String [] delims) {
    for (String delim : delims) {
        int index = text.indexOf(delim);
        if (index >= 0) {
            String subStr1 = text.substring(0, index);
            String subStr2 = text.substring(index + delim.length());
            String [] result = new String [2 + tokenizer(subStr2, delims).length];
            result [0] = subStr1;
            result [1] = delim;
            System.arraycopy(tokenizer(subStr2, delims), 0, result, 2, result.length - 2);
            return result;
        }
    }
    return new String[]{text};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
5
Gpt3D_Clone287_5.java 1 14
Gpt3D_Clone287_5.java 15 31
----------------------------------------

public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            String [] list = new String [tail.length + 2];
            list [0] = text.substring (0, i);
            list [1] = delim;
            System.arraycopy (tail, 0, list, 2, tail.length);
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

 public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            int len = tail.length;
            String [] list = new String [len + 2];               // Create a new array with length of 2 units more
            list [0] = text.substring (0, i);                    // 1st index contains the substring before delim
            list [1] = delim;                                    // 2nd index contains the delim
            System.arraycopy (tail, 0, list, 2, len);             // Fill the rest by the remained substrings
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
289
3
Gpt3D_Clone289_3.java 1 16
Gpt3D_Clone289_3.java 17 36
----------------------------------------

public Object [] tokenizer (String value, String [] delimeters) {
    List < String > list = new ArrayList < String > ();
    for (String s : delimeters) {
        if (value.contains (s)) {
            String [] strArr = value.split ("\\" + s);
            for (String str : strArr) {
                list.add (str);
                if (! list.contains (s)) {
                    list.add (s);
                }
            }
        }
    }
    Object [] newValues = list.toArray ();
    return newValues;
}
----------------------------------------

 public Object[] tokenizer(String value, String[] delimeters) {
    List<String> list = new ArrayList<String>();
    for (String s : delimeters) {
        if (value.contains(s)) {
            int pos = value.indexOf(s);
            if (pos > 0) {
                list.add(value.substring(0, value.indexOf(s)));
            }
            list.add(s);
            tokenizer(value.substring(pos + 1, value.length()), delimeters);
        }
    }
    if (value.length() > 0) {
        list.add(value);
    }
    Object[] newValues = list.toArray();
    return newValues;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
293
0
Gpt3D_Clone293_0.java 1 16
Gpt3D_Clone293_0.java 17 38
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    for (int i = 1, gap = 0;
    i < binary.length (); i ++) {
        while (i < binary.length () && binary.charAt (i) == '0') {
            i ++;
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

 
public int solution (int N) {
    String binNumber = Integer.toString (N, 2);
    int largestGap = 0;
 
    for (int i = 0; i < binNumber.length ()-1; i++) {
        int gap =0;
        if (binNumber.charAt(i) == '0' && binNumber.charAt(i+1) == '0') {
            gap ++;
            while (i < binNumber.length ()-1 && binNumber.charAt (i+1) == '0') {
                gap ++;
                i ++;
            }
            if (gap > largestGap) {
                largestGap = gap;
            }
        }
    }
    return largestGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
293
1
Gpt3D_Clone293_1.java 1 16
Gpt3D_Clone293_1.java 17 35
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    for (int i = 1, gap = 0;
    i < binary.length (); i ++) {
        while (i < binary.length () && binary.charAt (i) == '0') {
            i ++;
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

 
public int solution (int N) {
    String binaryNum = Integer.toString (N, 2);
    int largestGap = 0;
    int gap = 0;
    for (int i = 0; i < binaryNum.length (); i ++) {
        if (binaryNum.charAt (i) == '0') {
            gap ++;
            if (gap > largestGap) {
                largestGap = gap;
            }
        } else {
            gap = 0;
        }
    }
    return largestGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
293
2
Gpt3D_Clone293_2.java 1 16
Gpt3D_Clone293_2.java 17 35
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    for (int i = 1, gap = 0;
    i < binary.length (); i ++) {
        while (i < binary.length () && binary.charAt (i) == '0') {
            i ++;
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

 
public int solution (int N) {
    String binaryString = Integer.toString (N, 2);
    int largestGap = 0;
    
    for (int i = 1, gap = 0; i < binaryString.length (); i ++) {
        if (binaryString.charAt (i) == '0') {
            gap ++;
        } else {
            if (gap > largestGap) {
                largestGap = gap;
            }
            gap = 0;
        }
    }
    return largestGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
0
Gpt3D_Clone296_0.java 1 15
Gpt3D_Clone296_0.java 16 37
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int result = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			do {
				if ((n & 1) == 1) {
					break;
				} else {
					temp ++;
				}
				n >>>= 1;
			}while (n > 0);
			result = Math.max (result, temp);
		} else {
			n>>>= 1;
		}
	}
	return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
2
Gpt3D_Clone296_2.java 1 15
Gpt3D_Clone296_2.java 16 38
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int result = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			while (n > 0) {
				if ((n & 1) != 1) {
					temp++;
				} else {
					break;
				}
				n >>= 1;
			}
			if (temp > result) {
				result = temp;
			}
		}
		n >>= 1;
	}
	return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
3
Gpt3D_Clone296_3.java 1 15
Gpt3D_Clone296_3.java 16 36
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int res = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			do {
				if ((n & 1) != 1) {
					temp++;
				} else {
					break;
				}
				n >>= 1;
			}while (n > 0);
			res = Math.max(res, temp);
		} 
		n >>= 1;
	}
	return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
4
Gpt3D_Clone296_4.java 1 15
Gpt3D_Clone296_4.java 16 36
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int res = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			while (n > 0) {
				if ((n & 1) != 1) {
					temp++;
				} else {
					break;
				}
				n >>= 1;
			}
			res = Math.max(res, temp);
		} 
		n >>= 1;
	}
	return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
5
Gpt3D_Clone296_5.java 1 15
Gpt3D_Clone296_5.java 16 36
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int result = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			while ((n>>>= 1) > 0) {
				if ((n & 1) == 1) {
					break;
				} else {
					temp ++;
				}
			}
			result = Math.max (result, temp);
		} else {
			n>>>= 1;
		}  
	}
	return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
6
Gpt3D_Clone296_6.java 1 15
Gpt3D_Clone296_6.java 16 36
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int res = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			while (n != 0) {
				if ((n & 1) != 1) {
					temp++;
				} else {
					n = 0;
				}
				n >>>= 1;
			}
			res = Math.max(res, temp);
		}
		n >>>= 1;
	}
	return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
296
7
Gpt3D_Clone296_7.java 1 15
Gpt3D_Clone296_7.java 16 34
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int n) {
	int result = 0;
	while (n > 0) {
		if ((n & 1) == 1) {
			int temp = 0;
			while ((n>>>= 1) > 0 && ((n & 1) != 1)) {
				temp ++;
			}
			if (temp > result) {
				result = temp;
			}
		} else {
			n>>>= 1;
		}
	}
	return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
0
Gpt3D_Clone299_0.java 1 15
Gpt3D_Clone299_0.java 16 33
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            while (N > 0 && (N >> 1 & 1) == 0) {
                temp ++;
                N >>= 1;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
1
Gpt3D_Clone299_1.java 1 15
Gpt3D_Clone299_1.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution(int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            while ((N = N >> 1) > 0 && ((N & 1) != 1)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        } else {
            N = N >> 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
2
Gpt3D_Clone299_2.java 1 15
Gpt3D_Clone299_2.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int N) {
    int result = 0;
    int temp = 0;
    while(N > 0) {
      if(N%2 != 0) {
        while((N = N >> 1) > 0 && (N%2 != 0)) {
          temp++;
        }
        result = Math.max(result,temp);
      } else {
        N = N >> 1;
      }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
3
Gpt3D_Clone299_3.java 1 15
Gpt3D_Clone299_3.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution(int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N%2) == 1) {
            while ((N = N/2) > 0 && ((N%2) != 1)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        } else {
            N = N/2;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
4
Gpt3D_Clone299_4.java 1 15
Gpt3D_Clone299_4.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution(int N) {
    int result = 0;
    int temp = 0;
    while(N > 0) {
      if(N%2 == 1) {
        while((N = N >> 1) > 0 && (N%2 != 1)) {
          temp++;
        }
        result = Math.max(result,temp);
      } else {
        N = N >> 1;
      }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
5
Gpt3D_Clone299_5.java 1 15
Gpt3D_Clone299_5.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution(int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if(N % 2 != 0) {
            while ((N >>= 1) > 0 && (N % 2 != 1)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        } else {
            N >>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
6
Gpt3D_Clone299_6.java 1 15
Gpt3D_Clone299_6.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution(int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if(N%2 != 0) {
            while ((N >>= 1) > 0 && (N%2 != 1)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        } else {
            N >>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
7
Gpt3D_Clone299_7.java 1 15
Gpt3D_Clone299_7.java 16 32
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            while ((N = N >> 1) > 0 && ((N & 1) == 0)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        } else {
            N = N >> 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
8
Gpt3D_Clone299_8.java 1 15
Gpt3D_Clone299_8.java 16 33
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

 public int solution (int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            while ((N = N >> 1) > 0 && ((N & 1) == 0)) {
                temp++;                                           
            }
            result = Math.max(result, temp);
        }
        else {
            N = N >> 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
29
7
Gpt3D_Clone29_7.java 1 12
Gpt3D_Clone29_7.java 13 24
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------

  char wf () {
    Scanner in = new Scanner(System.in);
    System.out.println ("What is your choice? (x/o)");
    char choice = in.nextLine().charAt(0);
    while ((choice != 'x' && choice != 'o')) {
        System.out.println ("You must enter x or o!");
        choice = in.nextLine().charAt(0);
    }
    return choice;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
29
8
Gpt3D_Clone29_8.java 1 12
Gpt3D_Clone29_8.java 13 24
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------

 char wf () {
    Scanner scanIn = new Scanner(System.in);
    System.out.println ("What is your choice? (x/o)");
    char choice = scanIn.next().charAt(0);
    while (choice != 'x' && choice != 'o') {
        System.out.println ("You must enter x or o!");
        choice = scanIn.next().charAt(0);
    }
    return choice;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
29
9
Gpt3D_Clone29_9.java 1 12
Gpt3D_Clone29_9.java 13 24
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------

 char wf () {
    Scanner sc = new Scanner(System.in);
    System.out.println ("What is your choice? (x/o)");
    char c = sc.next().charAt(0);
    while (!(c == 'x' || c == 'o')) {
        System.out.println ("You must enter x or o!");
        c = sc.next().charAt(0);
    }
    return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
2
2
Gpt3D_Clone2_2.java 1 11
Gpt3D_Clone2_2.java 12 26
----------------------------------------

public void copyFolder (File src, File dest) throws IOException {
    try (Stream < Path > stream = Files.walk (src.toPath ())) {
        stream.forEachOrdered (sourcePath -> {
            try {
                Files.copy (sourcePath, src.toPath ().resolve (dest.toPath ().relativize (sourcePath)));
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    }
}
----------------------------------------

	public void copyFolder(File src, File dest) throws IOException {
    Path srcPath = src.toPath();
    Path destPath = dest.toPath();
    try (Stream<Path> stream = Files.walk (srcPath)) {
        stream.forEach(path -> {
            try {
                Files.copy(path, destPath.resolve(srcPath.relativize(path)), StandardCopyOption.REPLACE_EXISTING);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
0
Gpt3D_Clone302_0.java 1 25
Gpt3D_Clone302_0.java 26 54
----------------------------------------

public void start (Stage primaryStage) {
    double y1 = 15;
    ProgressBar p1 = new ProgressBar ();
    p1.setLayoutY (y1);
    HBox vb1 = new HBox (10);
    vb1.getChildren ().addAll (new Label ("Progressbar 1"), p1);
    double y2 = 15;
    ProgressBar p2 = new ProgressBar ();
    p2.setLayoutY (y2);
    HBox vb2 = new HBox (10);
    vb2.getChildren ().addAll (new Label ("Progressbar 2"), p2);
    double y3 = 15;
    ProgressBar p3 = new ProgressBar ();
    p3.setLayoutY (y3);
    HBox vb3 = new HBox (10);
    vb3.getChildren ().addAll (new Label ("Progressbar 3"), p3);
    TextChooser textChooser = new TextChooser (vb1, vb2, vb3);
    textChooser.setStyle ("-fx-font: 10px \"Verdana\";");
    StackPane root = new StackPane ();
    root.getChildren ().add (textChooser);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

 public void start (Stage primaryStage) {double y1 = 15;
   ProgressBar p1 = new ProgressBar ();
   p1.setLayoutY (y1);
   GridPane gp1 = new GridPane ();
   gp1.add (new Label ("ProgressBar 1"), 0, 0);
   gp1.add (p1, 1, 0);
   double y2 = 15;
   ProgressBar p2 = new ProgressBar ();
   p2.setLayoutY (y2);
   GridPane gp2 = new GridPane ();
   gp2.add (new Label ("ProgressBar 2"), 0, 0);
   gp2.add (p2, 1, 0);
   double y3 = 15;
   ProgressBar p3 = new ProgressBar ();
   p3.setLayoutY (y3);
   GridPane gp3 = new GridPane ();
   gp3.add (new Label ("ProgressBar 3"), 0, 0);
   gp3.add (p3, 1, 0);
   RadioButtonGroup rbg = new RadioButtonGroup (gp1, gp2, gp3);
   rbg.setStyle ("-fx-font: 10px \"Verdana\";");
   BorderPane root = new BorderPane ();
   root.setCenter (rbg);
   Scene scene = new Scene (root, 300, 250);
   primaryStage.setTitle ("Hello World!");
   primaryStage.setScene (scene);
   primaryStage.show ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
1
Gpt3D_Clone302_1.java 1 25
Gpt3D_Clone302_1.java 26 54
----------------------------------------

public void start (Stage primaryStage) {
    double y1 = 15;
    ProgressBar p1 = new ProgressBar ();
    p1.setLayoutY (y1);
    HBox vb1 = new HBox (10);
    vb1.getChildren ().addAll (new Label ("Progressbar 1"), p1);
    double y2 = 15;
    ProgressBar p2 = new ProgressBar ();
    p2.setLayoutY (y2);
    HBox vb2 = new HBox (10);
    vb2.getChildren ().addAll (new Label ("Progressbar 2"), p2);
    double y3 = 15;
    ProgressBar p3 = new ProgressBar ();
    p3.setLayoutY (y3);
    HBox vb3 = new HBox (10);
    vb3.getChildren ().addAll (new Label ("Progressbar 3"), p3);
    TextChooser textChooser = new TextChooser (vb1, vb2, vb3);
    textChooser.setStyle ("-fx-font: 10px \"Verdana\";");
    StackPane root = new StackPane ();
    root.getChildren ().add (textChooser);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

 public void start (Stage primaryStage) {double y1 = 15;
   ProgressBar p1 = new ProgressBar ();
   p1.setLayoutY (y1);
   GridPane gp1 = new GridPane ();
   gp1.add (new Label ("ProgressBar 1"), 0, 0);
   gp1.add (p1, 1, 0);
   double y2 = 15;
   ProgressBar p2 = new ProgressBar ();
   p2.setLayoutY (y2);
   GridPane gp2 = new GridPane ();
   gp2.add (new Label ("ProgressBar 2"), 0, 0);
   gp2.add (p2, 1, 0);
   double y3 = 15;
   ProgressBar p3 = new ProgressBar ();
   p3.setLayoutY (y3);
   GridPane gp3 = new GridPane ();
   gp3.add (new Label ("ProgressBar 3"), 0, 0);
   gp3.add (p3, 1, 0);
   ComboBoxChooser comboChooser = new ComboBoxChooser (gp1, gp2, gp3);
   comboChooser.setStyle ("-fx-font: 10px \"Verdana\";");
   Pane root = new Pane ();
   root.getChildren ().add (comboChooser);
   Scene scene = new Scene (root, 300, 250);
   primaryStage.setTitle ("Hello World!");
   primaryStage.setScene (scene);
   primaryStage.show ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
304
2
Gpt3D_Clone304_2.java 1 16
Gpt3D_Clone304_2.java 17 37
----------------------------------------

public static void main (String [] args) {
    InputStream is = StringFromFileFast.class.getResourceAsStream ("file.txt");
    InputStreamReader input = new InputStreamReader (is);
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);
    try {
        for (int read = input.read (buffer, 0, buffer.length);
        read != - 1; read = input.read (buffer, 0, buffer.length)) {
            output.append (buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
}
----------------------------------------

 public static void main (String [] args) { 
    File file = new File("file.txt");
    FileInputStream fis;
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder(CHARS_PER_PAGE);
    try { 
        fis = new FileInputStream(file);
        InputStreamReader input = new InputStreamReader (fis);
        for (int read = input.read (buffer, 0, buffer.length); 
            read != - 1; read = input.read (buffer, 0, buffer.length)) {
            output.append (buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
304
3
Gpt3D_Clone304_3.java 1 16
Gpt3D_Clone304_3.java 17 34
----------------------------------------

public static void main (String [] args) {
    InputStream is = StringFromFileFast.class.getResourceAsStream ("file.txt");
    InputStreamReader input = new InputStreamReader (is);
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);
    try {
        for (int read = input.read (buffer, 0, buffer.length);
        read != - 1; read = input.read (buffer, 0, buffer.length)) {
            output.append (buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
}
----------------------------------------

 public static void main(String[] args) {
    File file = new File("file.txt");
    BufferedReader br;
    final int CHARS_PER_PAGE = 5000;
    char[] buffer = new char[CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder(CHARS_PER_PAGE);
    try {
        br =new BufferedReader(new FileReader(file));
        for (int read = br.read(buffer, 0, buffer.length); read != -1; read = br.read(buffer, 0, buffer.length)) {
            output.append(buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString();
    System.out.println(text);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
304
4
Gpt3D_Clone304_4.java 1 16
Gpt3D_Clone304_4.java 17 32
----------------------------------------

public static void main (String [] args) {
    InputStream is = StringFromFileFast.class.getResourceAsStream ("file.txt");
    InputStreamReader input = new InputStreamReader (is);
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);
    try {
        for (int read = input.read (buffer, 0, buffer.length);
        read != - 1; read = input.read (buffer, 0, buffer.length)) {
            output.append (buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
}
----------------------------------------

 public static void main (String [] args) { 
   BufferedReader br = new BufferedReader(new FileReader("file.txt")); 
   final int CHARS_PER_PAGE = 5000;
   String line;
   StringBuilder output = new StringBuilder(CHARS_PER_PAGE);
   try { 
      while((line = br.readLine()) != null) {  
         output.append(line); 
      }
   } catch (IOException ignore) { } 
   String text = output.toString();
   System.out.println(text); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
305
5
Gpt3D_Clone305_5.java 1 10
Gpt3D_Clone305_5.java 11 21
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

 public String inputStreamToString (InputStream inputStream) throws IOException {
        String result = "";
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result += new String(buffer, 0, length);
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
1
Gpt3D_Clone306_1.java 1 12
Gpt3D_Clone306_1.java 13 28
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

    public String inputStreamToString (InputStream inputStream) throws IOException {
        StringBuilder result = new StringBuilder (UTF_8);
        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
        String line = "";
        boolean flag = false;
        while((line = br.readLine()) != null) {
            if (flag){
                result.append (System.getProperty ("line.separator"));
            }
            result.append (line);
            flag = true;
        }
        return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
2
Gpt3D_Clone306_2.java 1 12
Gpt3D_Clone306_2.java 13 28
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

    public String inputStreamToString (InputStream inputStream) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
        StringBuilder result = new StringBuilder (UTF_8);
        String line = "";
        boolean flag = false;
        while((line= reader.readLine())!=null) {
            if(flag) {
                result.append(System.getProperty ("line.separator"));
                flag = true;
            }
            result.append(line);
        }
        return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
3
Gpt3D_Clone306_3.java 1 12
Gpt3D_Clone306_3.java 13 26
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

    public String inputStreamToString (InputStream inputStream) throws IOException {
        DataInputStream stream = new DataInputStream(inputStream);
        StringBuilder result = new StringBuilder (UTF_8);
        String line;
        boolean flag = false;
        while((line=stream.readLine())!=null) {
            result.append(flag ? System.getProperty ("line.separator") : "").append(line);
            flag = true;
        }
        return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
307
1
Gpt3D_Clone307_1.java 1 12
Gpt3D_Clone307_1.java 13 31
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

 public String inputStreamToString(InputStream inputStream) throws IOException {
    StringBuilder resultString = new StringBuilder();
    BufferReader reader = new BufferReader(new InputStreamReader(inputStream));
    boolean startString = false;
    String line;
    while ((line = reader.readLine()) != null) {
        if (startString) {
            resultString.append(System.getProperty("line.separator"));
        }
        resultString.append(line);
        startString = true;
    }
    return resultString.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
307
2
Gpt3D_Clone307_2.java 1 12
Gpt3D_Clone307_2.java 13 28
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

 public String inputStreamToString (InputStream inputStream) throws IOException {
    String result = "";
    String newLine = System.getProperty ("line.separator");
    try (BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream))) {
        String line;
        boolean flag = false;
        while ((line = reader.readLine ()) != null) {
            result += (flag ? newLine : "") + line;
            flag = true;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
307
5
Gpt3D_Clone307_5.java 1 12
Gpt3D_Clone307_5.java 13 28
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

 public String inputStreamToString(InputStream inputStream) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
    String line;
    boolean flag = false;
    StringBuilder sb = new StringBuilder();
    while ((line = reader.readLine()) != null) {
        sb.append(flag ? System.getProperty("line.separator") : "")
            .append(line);
        flag = true;
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
308
3
Gpt3D_Clone308_3.java 1 12
Gpt3D_Clone308_3.java 13 26
----------------------------------------

public static void main (String [] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurences = 0;
    int index = haystack.indexOf (needle);
    while (index != - 1) {
        numberOfOccurences ++;
        haystack = haystack.substring (index + needle.length ());
        index = haystack.indexOf (needle);
    }
    System.out.println ("" + numberOfOccurences);
}
----------------------------------------

 public static void main(String[] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurrences = 0;
    int index = haystack.indexOf(needle);
    while (index > -1) {
        numberOfOccurrences++;
        haystack = haystack.substring(index + 1);
        index = haystack.indexOf(needle);
    }
    System.out.println(numberOfOccurrences);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
308
7
Gpt3D_Clone308_7.java 1 12
Gpt3D_Clone308_7.java 13 25
----------------------------------------

public static void main (String [] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurences = 0;
    int index = haystack.indexOf (needle);
    while (index != - 1) {
        numberOfOccurences ++;
        haystack = haystack.substring (index + needle.length ());
        index = haystack.indexOf (needle);
    }
    System.out.println ("" + numberOfOccurences);
}
----------------------------------------

 public static void main(String[] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurrences = 0;
    int index = haystack.indexOf(needle);
    while (index >= 0) {
      numberOfOccurrences++;
      index = haystack.indexOf(needle, index + 1);
    }
    System.out.println(numberOfOccurrences);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
0
Gpt3D_Clone309_0.java 1 23
Gpt3D_Clone309_0.java 24 51
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (int i = 0; i < array.length; i++) {
        int key = array[i];
        if (counts.containsKey(key)) {
            counts.put(key, counts.get(key) + 1);
        }
        else {
            counts.put(key, 1);
        }
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        minVal = Math.min(minVal, counts.get(key));
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
1
Gpt3D_Clone309_1.java 1 23
Gpt3D_Clone309_1.java 24 51
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (int i = 0; i < array.length; i++) {
        int key = array[i];
        if (counts.containsKey (i)) {
            counts.put(key, counts.get(key) + 1);
        }
        else {
            counts.put (key, 1);
        }
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        minVal = Math.min(minVal, counts.get(key));
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
2
Gpt3D_Clone309_2.java 1 23
Gpt3D_Clone309_2.java 24 51
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.containsKey (i)) {
            int count = counts.get(i);
            counts.put(i, ++count);
        }
        else {
            counts.put (i, 1);
        }
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        minVal = Math.min(minVal, counts.get(key));
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
3
Gpt3D_Clone309_3.java 1 23
Gpt3D_Clone309_3.java 24 51
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        int count = counts.getOrDefault(i, 0);
        if(count == 0) {
            counts.put(i, 1);
        }
        else {
            counts.put(i, ++count);
        }
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        minVal = Math.min(minVal, counts.get(key));
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
4
Gpt3D_Clone309_4.java 1 23
Gpt3D_Clone309_4.java 24 49
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (int i = 0; i < array.length; i++) {
        int key = array[i];
        Integer value = counts.get(key);
        counts.put(key, value == null ? 1 : value + 1);
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        if (counts.get(key) < minVal) {
            minVal = counts.get(key);
        }
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
5
Gpt3D_Clone309_5.java 1 23
Gpt3D_Clone309_5.java 24 48
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        Integer value = counts.get(i);
        if (value == null) {
            counts.put(i, 1);
        }
        else {
            counts.put(i, ++value);
        }
    }
    int minVal = counts.values().stream().min(Integer::compareTo).orElse(null);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
6
Gpt3D_Clone309_6.java 1 23
Gpt3D_Clone309_6.java 24 47
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.containsKey (i)) {
            counts.put(i, counts.get(i) + 1);
        }
        else {
            counts.put (i, 1);
        }
    }
    int minVal = Collections.min(counts.values());
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
7
Gpt3D_Clone309_7.java 1 23
Gpt3D_Clone309_7.java 24 46
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        int count = counts.getOrDefault(i, 0);
        counts.put(i, ++count);
    }
    int minVal = Integer.MAX_VALUE;
    for (Integer key : counts.keySet()) {
        minVal = Math.min(minVal, counts.get(key));
    }
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
8
Gpt3D_Clone309_8.java 1 23
Gpt3D_Clone309_8.java 24 45
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (int i : array) {
        Integer value = counts.putIfAbsent(i, 1);
        if (value != null) {
            counts.put(i, ++value);
        }
    }
    int minVal = counts.values().stream().min(Integer::compareTo).orElse(null);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
9
Gpt3D_Clone309_9.java 1 23
Gpt3D_Clone309_9.java 24 41
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array)
        counts.put (i, counts.getOrDefault(i, 0) + 1);
    int minVal = counts.values().stream().min(Integer::compareTo).orElse(null);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
310
0
Gpt3D_Clone310_0.java 1 17
Gpt3D_Clone310_0.java 18 35
----------------------------------------

public static void CountbyChar (String s) {
    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();
    char [] c = s.toCharArray ();
    for (int i = 0;
    i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey (c [i])) {
            count = letterCountMap.get (c [i]) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (c [i], count);
    }
    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

 public static void CountbyChar(String s) {
    HashMap<Character, Integer> letterCountMap = new HashMap<Character, Integer>();
    char[] c = s.toCharArray();
    for (int i = 0; i < c.length; i++) {
        Integer count = letterCountMap.get(c[i]);
        if (count == null) {
            count = 1;
        } else {
            count++;
        }
        letterCountMap.put(c[i], count);
    }
    for (Map.Entry<Character, Integer> entry : letterCountMap.entrySet()) {
        System.out.println(entry.getValue() + "( for" + entry.getKey() + " )");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
310
1
Gpt3D_Clone310_1.java 1 17
Gpt3D_Clone310_1.java 18 36
----------------------------------------

public static void CountbyChar (String s) {
    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();
    char [] c = s.toCharArray ();
    for (int i = 0;
    i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey (c [i])) {
            count = letterCountMap.get (c [i]) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (c [i], count);
    }
    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

 public static void CountbyChar(String s) {
    HashMap<Character, Integer> letterCountMap = new HashMap<Character, Integer>();
    char[] c = s.toCharArray();
    for (int i = 0; i < c.length; i++) {
        Integer count = letterCountMap.get(c[i]);
        if (count == null) {
            count = 1;
        }
        else {
            count = letterCountMap.get(c[i]) + 1;
        }
        letterCountMap.put(c[i], count);
    }
    for (Map.Entry<Character, Integer> entry : letterCountMap.entrySet()) {
        System.out.println(entry.getValue() + "( for" + entry.getKey() + " )");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
310
2
Gpt3D_Clone310_2.java 1 17
Gpt3D_Clone310_2.java 18 30
----------------------------------------

public static void CountbyChar (String s) {
    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();
    char [] c = s.toCharArray ();
    for (int i = 0;
    i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey (c [i])) {
            count = letterCountMap.get (c [i]) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (c [i], count);
    }
    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

 public static void CountbyChar(String s) {
    HashMap<Character, Integer> letterCountMap = new HashMap<Character, Integer>();
    char[] c = s.toCharArray();
    for (int i = 0; i < c.length; i++) {
        Integer count = letterCountMap.containsKey(c[i]) ? (letterCountMap.get(c[i]) + 1) : 1;
        letterCountMap.put(c[i], count);
    }
    for (Map.Entry<Character, Integer> entry : letterCountMap.entrySet()) {
        System.out.println(entry.getValue() + "( for" + entry.getKey() + " )");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
0
Gpt3D_Clone311_0.java 1 13
Gpt3D_Clone311_0.java 14 28
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

 public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == Integer [].class) {
            System.out.println (Arrays.toString ((Integer []) item));
        } else if (item.getClass () == Long [].class) {
            System.out.println (Arrays.toString ((Long []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
1
Gpt3D_Clone311_1.java 1 13
Gpt3D_Clone311_1.java 14 28
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

 public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == Boolean [].class) {
            System.out.println (Arrays.toString ((Boolean []) item));
        } else if (item.getClass () == Byte [].class) {
            System.out.println (Arrays.toString ((Byte []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
2
Gpt3D_Clone311_2.java 1 13
Gpt3D_Clone311_2.java 14 28
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

 public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == String [].class) {
            System.out.println (Arrays.toString ((String []) item));
        } else if (item.getClass () == Float [].class) {
            System.out.println (Arrays.toString ((Float []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
3
Gpt3D_Clone311_3.java 1 13
Gpt3D_Clone311_3.java 14 28
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

 public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == float [].class) {
            System.out.println (Arrays.toString ((float []) item));
        } else if (item.getClass () == long [].class) {
            System.out.println (Arrays.toString ((long []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
4
Gpt3D_Clone311_4.java 1 13
Gpt3D_Clone311_4.java 14 28
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

 public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == Short [].class) {
            System.out.println (Arrays.toString ((Short []) item));
        } else if (item.getClass () == Character [].class) {
            System.out.println (Arrays.toString ((Character []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
0
Gpt3D_Clone316_0.java 1 9
Gpt3D_Clone316_0.java 10 25
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            String[] files = pathname.listFiles();
            for (String file : files) {
                File currentFile = new File(pathname, file);
				currentFile.delete(); 
            }
			pathname.delete();
        } else {
            pathname.delete ();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
1
Gpt3D_Clone316_1.java 1 9
Gpt3D_Clone316_1.java 10 24
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            File[] files = pathname.listFiles();
            for (int i = 0; i < files.length; i++) {
                File currentFile = files[i];
                currentFile.delete(); 
            }
            pathname.delete();
        } else {
            pathname.delete ();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
2
Gpt3D_Clone316_2.java 1 9
Gpt3D_Clone316_2.java 10 24
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname){
        if (pathname.isDirectory()){
            String[] files = pathname.list();
            for (String file : files){
                File currentFile = new File(pathname.getAbsolutePath(), file);
                currentFile.delete();
            }
            pathname.delete();
        }else{
            pathname.delete();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
3
Gpt3D_Clone316_3.java 1 9
Gpt3D_Clone316_3.java 10 25
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            String[] files = pathname.list();
            for (String file : files) {
                File currentFile = new File(pathname, file);
                if (currentFile.exists())
				    currentFile.delete();
            }
			pathname.delete();
        } else {
            pathname.delete ();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
4
Gpt3D_Clone316_4.java 1 9
Gpt3D_Clone316_4.java 10 23
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

  public boolean accept (File pathname){
        if (pathname.isDirectory()){
            File[] files = pathname.listFiles();
            for (File file : files){
                file.delete();
            }
            pathname.delete();
        }else{
            pathname.delete();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
5
Gpt3D_Clone316_5.java 1 9
Gpt3D_Clone316_5.java 10 23
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

   public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            List<File> files = Arrays.asList(pathname.listFiles());
            for (File file : files) {
                file.delete();
            }
            pathname.delete();
        } else {
            pathname.delete ();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
6
Gpt3D_Clone316_6.java 1 9
Gpt3D_Clone316_6.java 10 24
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            File[] files = pathname.listFiles();
            for (File file : files) {
                if (file.exists())
				    file.delete();
            }
			pathname.delete();
        } else {
            pathname.delete ();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
8
Gpt3D_Clone316_8.java 1 9
Gpt3D_Clone316_8.java 10 23
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept(File pathname) {
        if (pathname.isDirectory()) {
            File[] files = pathname.listFiles();
            for (File file : files) {
                file.deleteOnExit();
            }
            pathname.deleteOnExit();
        } else {
            pathname.deleteOnExit();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
9
Gpt3D_Clone316_9.java 1 9
Gpt3D_Clone316_9.java 10 23
----------------------------------------

        public boolean accept (File pathname) {
            if (pathname.isDirectory ()) {
                pathname.listFiles (this);
                pathname.delete ();
            } else {
                pathname.delete ();
            }
            return false;
}
----------------------------------------

 public boolean accept (File pathname) {
        if (pathname.isDirectory()) {
            File[] files = pathname.listFiles();
            for (File file : files){ 
                 file.deleteOnExit(); 
            }
            pathname.deleteOnExit();
        } else {
            pathname.deleteOnExit();
        }
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
317
0
Gpt3D_Clone317_0.java 1 14
Gpt3D_Clone317_0.java 15 30
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

  public void deleteRecursive (File dir) {
    if (dir.isDirectory()){
        File [] c = dir.listFiles();
        System.out.println ("Cleaning out folder:" + dir.toString ());
        for (File file : c){
           deleteRecursive (file);
           System.out.println ("Deleting file:" + file.toString ());
        }
        dir.delete();
        
    } else {
        dir.delete ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
317
1
Gpt3D_Clone317_1.java 1 14
Gpt3D_Clone317_1.java 15 28
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void recursiveDelete(File path) {
    for (File file : path.listFiles()) {
        System.out.println("Cleaning out folder: " + path.toString());
        if (file.isDirectory()) {
            deleteRecursive(file);
            System.out.println("Deleting file: " + file.toString());
        } else {
            file.delete();
        }
    }
    path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
0
Gpt3D_Clone319_0.java 1 14
Gpt3D_Clone319_0.java 15 32
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		String[] fileList = path.list();
		for (String file : fileList) {
			File currentFile = new File(path,file);
			if (currentFile.isDirectory()) {
				System.out.println ("Cleaning out folder:" + currentFile.toString());
				deleteRecursive(currentFile);
				System.out.println ("Deleted file:" + currentFile.toString());
			} else {
				System.out.println ("Deleted file:" + currentFile.toString());
				currentFile.delete();
			}
		}
		System.out.println ("Cleaning out folder:" + path.toString());
		path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
1
Gpt3D_Clone319_1.java 1 14
Gpt3D_Clone319_1.java 15 32
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		System.out.println ("Cleaning out folder:" + path.toString());
		File[] childrenFiles = path.listFiles();
		if (childrenFiles.length > 0) {
			for (File childFile : childrenFiles) {
				if (childFile.isDirectory()) {
					deleteRecursive(childFile);
					System.out.println ("Deleted folder:" + childFile.toString());
				} else {
					System.out.println ("Deleted file:" + childFile.toString());
					childFile.delete();
				}
			}
		}
		path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
2
Gpt3D_Clone319_2.java 1 14
Gpt3D_Clone319_2.java 15 30
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 	public void deleteRecursive (File path) {
		if (path.isDirectory ()) {
			File[] childFiles = path.listFiles();
			for (File childFile : childFiles) {
				deleteRecursive(childFile);
				System.out.println ("Deleted file:" + childFile.toString());
			}
			path.delete();
			System.out.println ("Cleaning out folder:" + path.toString());
		} else {
			path.delete();
			System.out.println ("Deleted file:" + path.toString());
		}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
3
Gpt3D_Clone319_3.java 1 14
Gpt3D_Clone319_3.java 15 30
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		System.out.println ("Cleaning out folder:" + path.toString());
		if (path.isFile()) {
			System.out.println ("Deleting file:" + path.toString());
			path.delete();
		} else if (path.isDirectory()) {
			for (File childFile : path.listFiles()) {
				deleteRecursive(childFile);
				System.out.println ("Deleted file:" + childFile.toString());
			}
			System.out.println ("Deleting folder:" + path.toString());
			path.delete();
		}    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
4
Gpt3D_Clone319_4.java 1 14
Gpt3D_Clone319_4.java 15 30
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File dir) {
		if (dir.isDirectory()) {
			System.out.println ("Cleaning out folder:" + dir.toString());
			for (File file : dir.listFiles()) {
				deleteRecursive(file);
				System.out.println ("Deleted "+ (file.isDirectory() ? "folder: " : "file: ") + file.toString());
			}
			dir.delete();
		} else {
			System.out.println ("Deleted file:" + dir.toString());
			dir.delete();
		}
	
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
5
Gpt3D_Clone319_5.java 1 14
Gpt3D_Clone319_5.java 15 29
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive(File path) {
		System.out.println("Cleaning out folder: " + path.toString());
		for (File child : path.listFiles()) {
			if (child.isDirectory()) {
				deleteRecursive(child);
				System.out.println("Deleted file: " + child.toString());
			} else {
				child.delete();
				System.out.println("Deleted file: " + child.toString());
			}
		}
		path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
6
Gpt3D_Clone319_6.java 1 14
Gpt3D_Clone319_6.java 15 29
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		System.out.println ("Cleaning out folder:" + path.toString());
		for (File child : path.listFiles()) {
			if (child.isFile()) {
				System.out.println ("Deleting file:" + child.toString());
				child.delete();
			} else if (child.isDirectory()) {
				deleteRecursive(child);
				System.out.println ("Deleted folder:" + child.toString());
			}
		}
		path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
7
Gpt3D_Clone319_7.java 1 14
Gpt3D_Clone319_7.java 15 29
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		if (path.isDirectory()) {
			System.out.println ("Cleaning out folder:" + path.toString());
			for (File child : path.listFiles()) {
				deleteRecursive(child);
			}
			System.out.println ("Deleted folder:" + path.toString());
			path.delete();
		} else {
			System.out.println ("Deleting file:" + path.toString());
			path.delete();
		}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
8
Gpt3D_Clone319_8.java 1 14
Gpt3D_Clone319_8.java 15 28
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		File[] childrenFiles = path.listFiles();
		if (childrenFiles.length > 0) {
			for (File childFile : childrenFiles) {
				System.out.println ("Cleaning out folder:" + path.toString());
				deleteRecursive(childFile);
				System.out.println ("Deleted file:" + childFile.toString());
			}
		}
		System.out.println ("Deleting folder:" + path.toString());
		path.delete();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
9
Gpt3D_Clone319_9.java 1 14
Gpt3D_Clone319_9.java 15 29
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

 public void deleteRecursive (File path) {
		if (path.isDirectory()) {
			System.out.println ("Cleaning out folder:" + path.toString());
			for (File child : path.listFiles()) {
				deleteRecursive(child);
			}
			path.delete();
		} else {
			System.out.println ("Deleting file:" + path.toString());
			path.delete();
		}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
0
Gpt3D_Clone31_0.java 1 7
Gpt3D_Clone31_0.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 0, 250);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
1
Gpt3D_Clone31_1.java 1 7
Gpt3D_Clone31_1.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

 public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 1000, 0);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
2
Gpt3D_Clone31_2.java 1 7
Gpt3D_Clone31_2.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 0, 500);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
3
Gpt3D_Clone31_3.java 1 7
Gpt3D_Clone31_3.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 2000, 0);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
4
Gpt3D_Clone31_4.java 1 7
Gpt3D_Clone31_4.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 0, 1000);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
5
Gpt3D_Clone31_5.java 1 7
Gpt3D_Clone31_5.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 500, 0);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
6
Gpt3D_Clone31_6.java 1 7
Gpt3D_Clone31_6.java 8 18
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
            utilTimer.schedule(this, 0, 100);
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
7
Gpt3D_Clone31_7.java 1 7
Gpt3D_Clone31_7.java 8 17
----------------------------------------

        public void run () {
            System.out.println (ARRAY_ELEMENTS [index]);
            index ++;
            if (index >= ARRAY_ELEMENTS.length) {
                utilTimer.cancel ();
            }
}
----------------------------------------

  public void run() {
        if(index < ARRAY_ELEMENTS.length) {
            System.out.println(ARRAY_ELEMENTS[index]);
            index++;
        } else {
            utilTimer.cancel();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
320
5
Gpt3D_Clone320_5.java 1 14
Gpt3D_Clone320_5.java 15 36
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning up folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting directory:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            boolean isDeleted= file.delete ();
            if (isDeleted){
                System.out.println ("File deleted successfully:" + file.toString ());
            }else {
                System.out.println ("Error while deleting file:" + file.toString ());
            }
        }
    }
    path.delete ();
    System.out.println ("Directory deleted successfully:" + path.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
320
6
Gpt3D_Clone320_6.java 1 14
Gpt3D_Clone320_6.java 15 36
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Emptying the folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting folder:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            boolean isDeleted= file.delete ();
            if (isDeleted){
                System.out.println ("File deleted successfully:" + file.toString ());
            }else {
                System.out.println ("Error while deleting file:" + file.toString ());
            }
        }
    }
    path.delete ();
    System.out.println ("Directory deleted successfully:" + path.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
0
Gpt3D_Clone322_0.java 1 21
Gpt3D_Clone322_0.java 22 50
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println("Here");
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String line = br.readLine();
            hours = Integer.parseInt(line);
            hoursNotOk = false;
        } catch (NumberFormatException e) {
            e.printStackTrace();
            System.out.println(", please re-enter the hours again:");
        } catch (IOException ex) {
            ex.printStackTrace();
            System.out.println(", please re-enter the hours again:");
        } finally {
            if (hoursNotOk) {
                System.out.println(", please re-enter the hours again:");
            } else {
                System.out.println("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
1
Gpt3D_Clone322_1.java 1 21
Gpt3D_Clone322_1.java 22 49
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

public static int getHours() {
    String hoursStr = "0";
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println("Here");
            hoursStr = new BufferedReader(new InputStreamReader(System.in)).readLine();
            hours = Integer.parseInt(hoursStr);
            hoursNotOk = false;
        } catch (IOException ioe) {
            ioe.printStackTrace();
            System.out.println(", please re-enter the hours again:");
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
            System.out.println(", please re-enter the hours again:");
        } finally {
            if (hoursNotOk) {
                System.out.println(", please re-enter the hours again:");
            } else {
                System.out.println("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
2
Gpt3D_Clone322_2.java 1 21
Gpt3D_Clone322_2.java 22 43
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    boolean hoursNotOk = true;
    int hours = 0;
    do {
        try {
            System.out.println("Here");
            Scanner input = new Scanner(System.in);
            hours = (int) input.nextDouble();
            if (hours >= 0 && hours <= 24) {
                System.out.println("**hours input accepted**");
                hoursNotOk = false;
            } else {
                System.out.println(", please re-enter the hours again:");
            }
        } catch (Exception e) {
            System.out.println(", please re-enter the hours again:");
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
3
Gpt3D_Clone322_3.java 1 21
Gpt3D_Clone322_3.java 22 41
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    boolean hoursNotOk = true;
    int hours = 0;
    do {
        try {
            System.out.println("Here");
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            hours = Integer.parseInt(br.readLine());
            hoursNotOk = false;
        } catch (IOException ioe) {
            System.out.println(", please re-enter the hours again:");
            ioe.printStackTrace();
        } 
    } while (hoursNotOk);
    System.out.println("**hours input accepted**");
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
4
Gpt3D_Clone322_4.java 1 21
Gpt3D_Clone322_4.java 22 40
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    int hours = 0;
    boolean hoursNotOk = true;
    while (hoursNotOk) {
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            System.out.println("Here");
            hours = Integer.parseInt(br.readLine());
            hoursNotOk = false;
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println(", please re-enter the hours again:");
        }
    }
    System.out.println("**hours input accepted**");
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
5
Gpt3D_Clone322_5.java 1 21
Gpt3D_Clone322_5.java 22 40
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    int hours = 0;
    boolean hoursNotOk = true;
    while (hoursNotOk) {
        try {
            Scanner in = new Scanner(System.in);
            System.out.println("Here");
            hours = in.nextInt();
            hoursNotOk = false;
        } catch (InputMismatchException ex) {
            System.out.println(", please re-enter the hours again:");
            ex.printStackTrace();
        }
    }
    System.out.println("**hours input accepted**");
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
6
Gpt3D_Clone322_6.java 1 21
Gpt3D_Clone322_6.java 22 39
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

 public static int getHours() {
    int hours = 0;
    do {
        try {
            Scanner sc = new Scanner(System.in);
            System.out.println("Here");
            hours = sc.nextInt();
        } catch (InputMismatchException e) {
            System.out.println(", please re-enter the hours again:");
            continue;
        }
        System.out.println("**hours input accepted**");
        break;
    } while (true);
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
325
4
Gpt3D_Clone325_4.java 1 19
Gpt3D_Clone325_4.java 20 40
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off - 1;
    for (int readPos = off;
    readPos < off + read; readPos ++) {
        if (read == '@') {
            continue;
        } else {
            pos ++;
        }
        if (pos < readPos) {
            cbuf [pos] = cbuf [readPos];
        }
    }
    return pos - off + 1;
}
----------------------------------------

 public int read (char[] cbuf, int off, int len) throws IOException{
    int read = super.read (cbuf, off, len);
    if (read == -1) {
        return -1;
    }
    
    int pos = 0; // start at the 0 index
    
    for (int readPos = 0; readPos < cbuf.length; readPos++) { // loop through the characters starting at offset
        if (read == '@') { // if the character == @
            continue;
        } else {
            cbuf [off + pos] = cbuf [readPos]; // assign the character to the location
            pos ++; // increment location
        }
    }
    
    return pos; // return the length of characters written
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
0
Gpt3D_Clone326_0.java 1 15
Gpt3D_Clone326_0.java 16 35
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {try {
        synchronized (lock) {
            while (id != token % N) {
                lock.wait ();
                continue;
            }
            for (int i = 0;
            i < 5; i++) {
                System.out.println (id + " " + i);
                token ++;
                if(token >= N*5) break;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
1
Gpt3D_Clone326_1.java 1 15
Gpt3D_Clone326_1.java 16 33
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {int iterations;
    try {
        synchronized (lock) {
            iterations = token + 5;
            while (token < iterations) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + token/N);
                token += N;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
2
Gpt3D_Clone326_2.java 1 15
Gpt3D_Clone326_2.java 16 33
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {int limit;
    try {
        synchronized (lock) {
            limit = N*5;
            for ( ; token < limit ; ) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + token/N);
                token += N;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
3
Gpt3D_Clone326_3.java 1 15
Gpt3D_Clone326_3.java 16 33
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {int iterations;
    try {
        synchronized (lock) {
            iterations = token + N * 5;
            while (token < iterations) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + token/N);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
4
Gpt3D_Clone326_4.java 1 15
Gpt3D_Clone326_4.java 16 34
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {try {
        synchronized (lock) {
            while (id != token % N) {
                lock.wait ();
                continue;
            }
            for (int i = 0;
            i < 5; i ++) {
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
5
Gpt3D_Clone326_5.java 1 15
Gpt3D_Clone326_5.java 16 35
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {
try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                if(!(id == token % N)) {
                    lock.wait ();
                    continue;
                }
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
6
Gpt3D_Clone326_6.java 1 15
Gpt3D_Clone326_6.java 16 31
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

  public void run () {try {
        synchronized (lock) {
            while (true) {
                while (id != token % N) lock.wait ();
                if(token >= N * 5) break;
                System.out.println (id + " " + token/N);
                token += N;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
326
7
Gpt3D_Clone326_7.java 1 15
Gpt3D_Clone326_7.java 16 31
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (int i = 0;
            i < 5; i ++) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + i);
                token ++;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run () { try {
        synchronized (lock) {
            while (token < N*5) {
                while (id != token % N) lock.wait ();
                System.out.println (id + " " + token/N);
                token += N;
                lock.notifyAll ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
0
Gpt3D_Clone327_0.java 1 10
Gpt3D_Clone327_0.java 11 23
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

 public void mouseMoved (MouseEvent e) {
   Point mousePosition = e.getPoint();
   int x = mousePosition.x;
   if (x < 0) {
        polyrot--;
    } else if (x > 0) {
        polyrot++;
    }
    repaint();
    return;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
1
Gpt3D_Clone327_1.java 1 10
Gpt3D_Clone327_1.java 11 22
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

 public void mouseMoved(MouseEvent e) {
    int xpos = e.getX();
    if (xpos < 0) {
        polyrot-=1;
    } else if (xpos > 0) {
        polyrot+=1;
    }
    update();
    break;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
3
Gpt3D_Clone327_3.java 1 10
Gpt3D_Clone327_3.java 11 22
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

 public void mouseMoved (MouseEvent e) {
    int xpos = (int)e.getX();
    if (xpos < 0) {
        polyrot--;
    } else if (xpos > 0) {
        polyrot++;
    }
    repaint();
    return;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
4
Gpt3D_Clone327_4.java 1 10
Gpt3D_Clone327_4.java 11 22
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

 public void mouseMoved (MouseEvent e) {
    int xpos = (int)e.getX();
    if (xpos < 0) {
        polyrot-=1;
    } else if (xpos > 0) {
        polyrot+=1;
    }
    postInvalidate();
    break;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
4
Gpt3D_Clone328_4.java 1 8
Gpt3D_Clone328_4.java 9 16
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

 public static void close (Statement stmt) {
    try {
        if (stmt != null) stmt.close ();
    } catch (SQLException se) {
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
329
1
Gpt3D_Clone329_1.java 1 20
Gpt3D_Clone329_1.java 21 41
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    int[] ar = new int[26];
    for (int i = 0; i < str.length(); i++) {
        int j = str.charAt(i) - 'a';
        if(ar[j] == 0) {
            ar[j] = 1;
        } else {
            ar[j]++;
        }
    }
    // Print duplicates in the string
    for (int i = 0; i < ar.length; i++) {
        if (ar[i] > 1) {
            char c = (char)(i + 97);
            System.out.println("'" + c + "' comes " + ar[i] + " times.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
329
3
Gpt3D_Clone329_3.java 1 20
Gpt3D_Clone329_3.java 21 38
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    int[] ar = new int[26];
    for (int i = 0; i < str.length(); i++){
        int j = str.charAt(i) - 'a';
        ar[j] = (ar[j] > 0) ? ar[j] + 1 : 1;
    }
    // Print duplicated characters
    for (int i = 0; i < ar.length; i++) {
        if (ar[i] > 1) {
            char c = (char) (97 + i);
            System.out.println("'" + c + "' comes " + ar[i] + " times.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
329
4
Gpt3D_Clone329_4.java 1 20
Gpt3D_Clone329_4.java 21 36
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
     String str = "abcdabghplhhnfl".toLowerCase ();
     Integer[] ar = new Integer[26];
     for (int i = 0; i < str.length (); i++) {
         int j = str.charAt (i) - 'a';
         ar[j] = ar[j] == null ? 1 : ar[j] + 1;
     }
     for (int i = 0; i < ar.length; i ++) {
         if (ar [i] != null && ar [i] > 1) {
             char c = (char) (97 + i);
             System.out.println ("'" + c + "' comes " + ar [i] + " times.");
         }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
329
6
Gpt3D_Clone329_6.java 1 20
Gpt3D_Clone329_6.java 21 38
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    int[] ar = new int[26];
    for (int i = 0; i < str.length (); i++) {
        int j = str.charAt (i) - 'a';
        ar[j]++;
    }
    // Print duplicate characters
    for (int i = 0; i < ar.length; i++) {
        if (ar[i] > 1) {
            char c = (char)(97 + i);
            System.out.println("'" + c + "' comes " + ar[i] + " times.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
32
0
Gpt3D_Clone32_0.java 1 11
Gpt3D_Clone32_0.java 12 26
----------------------------------------

public static void main (String args []) {
    String inputString;
    Scanner s = new Scanner (System.in);
    inputString = s.nextLine ();
    if (! inputString.matches ("([+-]?([0-9]*[.])?[0-9]+)")) {
        System.out.println ("Not a Number");
    } else {
        Double result2 = getNumber (inputString);
        System.out.println ("result = " + result2);
    }
}
----------------------------------------

 public static void main (String args []) {
    String inputString;
    Scanner s = new Scanner (System.in);
    inputString = s.nextLine ();
    Pattern pattern = Pattern.compile("[+-]?(\\d+)?\\.?\\d+");
    Matcher match = pattern.matcher(inputString);
    if (! match.matches()) {
        System.out.println ("Not a Number");
    } else {
        Double result2 = getNumber (inputString);
        System.out.println ("result = " + result2);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
32
1
Gpt3D_Clone32_1.java 1 11
Gpt3D_Clone32_1.java 12 26
----------------------------------------

public static void main (String args []) {
    String inputString;
    Scanner s = new Scanner (System.in);
    inputString = s.nextLine ();
    if (! inputString.matches ("([+-]?([0-9]*[.])?[0-9]+)")) {
        System.out.println ("Not a Number");
    } else {
        Double result2 = getNumber (inputString);
        System.out.println ("result = " + result2);
    }
}
----------------------------------------

 public static void main (String args []) {
    String inputString;
    Scanner s = new Scanner (System.in);
    inputString = s.nextLine ();
    Pattern p = Pattern.compile("([+-]?([0-9]*[.])?[0-9]+)");
    Matcher m = p.matcher(inputString);
    if (! m.matches()) {
        System.out.println ("Not a Number");
    } else {
        Double result2 = getNumber (inputString);
        System.out.println ("result = " + result2);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
2
Gpt3D_Clone331_2.java 1 15
Gpt3D_Clone331_2.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char val : arr) {
        if (map.containsKey(val)) {
            int count = map.get(val) + 1;
            map.put(val, count);
        } else {
            map.put(val, 1);
        }
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
3
Gpt3D_Clone331_3.java 1 15
Gpt3D_Clone331_3.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char val : arr) {
        if (map.containsKey(val)) {
            Integer value = map.get(val);
            map.replace(val, value + 1);
        } else {
            map.put(val, 1);
        }
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
4
Gpt3D_Clone331_4.java 1 15
Gpt3D_Clone331_4.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char val : arr) {
        if (map.containsKey(val)) {
            map.put(val, map.get(val) + 1);
        } else {
            map.put(val, 1);
        }
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
5
Gpt3D_Clone331_5.java 1 15
Gpt3D_Clone331_5.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char val : arr) {
        if (map.containsKey(val)) {
            map.put(val, map.get(val) + 1);
        } else {
            map.put(val, 1);
        }
    }
    for (Map.Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
6
Gpt3D_Clone331_6.java 1 15
Gpt3D_Clone331_6.java 16 34
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (int i = 0; i < arr.length; i++) {
        char c = arr[i];
        int count = map.getOrDefault(c, 0) + 1;
        map.put(c, count);
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
7
Gpt3D_Clone331_7.java 1 15
Gpt3D_Clone331_7.java 16 33
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char c : arr) {
        map.putIfAbsent(c, 0);
        map.put(c, map.get(c) + 1);
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
8
Gpt3D_Clone331_8.java 1 15
Gpt3D_Clone331_8.java 16 33
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    HashMap<Character, Integer> map = new HashMap<>();
    for (char c : arr) {
        int count = map.getOrDefault(c, 0) + 1;
        map.put(c, count);
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
9
Gpt3D_Clone331_9.java 1 15
Gpt3D_Clone331_9.java 16 31
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    String name = "AnuvratAnuvra";
    char[] arr = name.toCharArray();
    Map<Character, Integer> map = new HashMap<>();
    for (char c : arr) {
        Integer count = map.get(c);
        map.put(c, (count == null)? 1 : ++count);
    }
    for (Entry<Character, Integer> entry : map.entrySet()) {
        if (entry.getValue() > 1) {
            System.out.println(entry.getKey() + ":" + entry.getValue());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
0
Gpt3D_Clone332_0.java 1 24
Gpt3D_Clone332_0.java 25 54
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

  public static void main (String [] args) {
        String test = "The quick brown fox jumped over the lazy dog.";
        int countA = 0, countO = 0, countSpace = 0, countDot = 0;
        int len = test.length();
        char c;
        for (int i = 0; i < len; i++) {
            c = test.charAt(i);
            switch (c) {
                case 'a':
                case 'A':
                    countA++;
                    break;
                case 'o':
                case 'O':
                    countO++;
                    break;
                case ' ':
                    countSpace++;
                    break;
                case '.':
                    countDot++;
                    break;
                default:
                    break;
            }
        }
        System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
1
Gpt3D_Clone332_1.java 1 24
Gpt3D_Clone332_1.java 25 52
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

  public static void main (String [] args) {
        String test = "The quick brown fox jumped over the lazy dog.";
        int countA = 0, countO = 0, countSpace = 0, countDot = 0;
        int len = test.length();
        String Aux;
        for (int i = 0; i < len; i++) {
            Aux = test.substring(i,i+1);
            switch (Aux) {
                case "a":
                case "A":
                    countA++;
                    break;
                case "o":
                case "O":
                    countO++;
                    break;
                case " ":
                    countSpace++;
                    break;
                case ".":
                    countDot++;
                    break;
            }
        }
        System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
2
Gpt3D_Clone332_2.java 1 24
Gpt3D_Clone332_2.java 25 50
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

  public static void main (String [] args) {
        String test = "The quick brown fox jumped over the lazy dog.";
        int countA = 0, countO = 0, countSpace = 0, countDot = 0;
        for (int i = 0;
        i < test.length (); i ++) {
            switch (test.charAt (i)) {
                case 97 :
                case 65 :
                    countA ++;
                    break;
                case 111 :
                case 79 :
                    countO ++;
                    break;
                case 32 :
                    countSpace ++;
                    break;
                case 46 :
                    countDot ++;
                    break;
            }
        }
        System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
3
Gpt3D_Clone332_3.java 1 24
Gpt3D_Clone332_3.java 25 49
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

  public static void main (String [] args) {
        String test = "The quick brown fox jumped over the lazy dog.";
        int countA = 0, countO = 0, countSpace = 0, countDot = 0;
        for (int i = 0; i < test.length(); i++ ) {
            switch (test.substring(i,i+1)) {
                case "a" :
                case "A" :
                    countA++;
                    break;
                case "o" :
                case "O" :
                    countO++;
                    break;
                case " " :
                    countSpace ++;
                    break ;
                case "." :
                    countDot ++;
                    break;
            }
        }
        System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
0
Gpt3D_Clone333_0.java 1 21
Gpt3D_Clone333_0.java 22 46
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

// 1. 
public static void main (String...a) {
    System.out.print ("Please enter your text here!: ");
    Scanner input = new Scanner (System.in);
    String enteredString = input.nextLine ();
    int arraySize = 256;
    int letterCounts[] = new int[arraySize];
    for (int i = 0; i < enteredString.length (); i++) {
        letterCounts[enteredString.charAt(i)]++;
    }
    for (int i = 0; i < arraySize; i++) {
        char character = (char) i;
        if (letterCounts[i] > 0) {
            if (letterCounts[i] == 1) {
                System.out.print (character);
            } else {
                System.out.print (character + "" + letterCounts[i]);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
1
Gpt3D_Clone333_1.java 1 21
Gpt3D_Clone333_1.java 22 54
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

//2.
public static void main(String... a) 
{ 
    System.out.println("Enter the string:-"); 
    Scanner sc = new Scanner(System.in); 
    String str = sc.nextLine(); 
    int[] arr = new int[256]; 
  
    // Counts the number of characters  
    // present in the given string 
    for (int i = 0; i<str.length(); i++)  
    { 
        arr[str.charAt(i)]++; 
    } 
  
    // Print the characters and their  
    // corresponding frequencies 
    for (int i = 0; i<256; i++)  
    { 
        char ch = (char)i; 
        if(arr[i] > 0)  
        { 
            // Prints the character  
            // and its frequency  
            if(arr[i] == 1) 
            System.out.print(ch); 
            else
            System.out.print(ch + "" + arr[i]); 
        } 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
2
Gpt3D_Clone333_2.java 1 21
Gpt3D_Clone333_2.java 22 44
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

//8. 
public static void main (String[] args) { 
    System.out.println("Input string :");
    Scanner sc = new Scanner(System.in); 
    String inStr = sc.nextLine();
    int [] alphaCounter = new int[256]; 
  
    for (int i = 0; i < inStr.length(); i++) { 
        alphaCounter[inStr.charAt(i)]++; 
    } 
  
    for (int i = 0; i < 256; i++) { 
        char ch = (char)i; 
        if (alphaCounter[i] > 0) { 
            if (alphaCounter[i] == 1)  
            System.out.print(ch); 
            else
            System.out.print(ch + "" + alphaCounter[i]); 
        } 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
3
Gpt3D_Clone333_3.java 1 21
Gpt3D_Clone333_3.java 22 51
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

// 10. 
public static void main(String... a) 
{ 
    System.out.println("Input one sentence: ");
    Scanner scan = new Scanner (System.in);
    String str = scan.nextLine(); 
    int array[] = new int[256]; 
  
    // Counts characters that are input 
    for(int i = 0; i < str.length(); i++) 
    { 
        array[str.charAt(i)]++; 
    } 
  
    // Iterate over the array to print each character
    // and its corresponding frequency
    for (int i = 0; i < 256; i++)
    { 
        char ch = (char)i; 
        if (array[i] > 0)
        { 
            if (array[i] == 1) 
            System.out.print(ch); 
            else
            System.out.print(ch + "" + array[i]); 
        } 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
4
Gpt3D_Clone333_4.java 1 21
Gpt3D_Clone333_4.java 22 50
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

// 5. 
public static void main (String...a) { 
    System.out.print ("Please enter a string: ");
    Scanner scan = new Scanner (System.in); 
    String inpStr = scan.nextLine (); 
    int [] countArr = new int [256]; 
  
    // Creating an array of 256 to keep track of each character frequency 
    for (int i = 0; i < inpStr.length (); i++) 
    { 
        countArr[inpStr.charAt(i)]++; 
    } 
  
    // Iterate over the array to print each character 
    // and its corresponding frequency 
    for (int i = 0; i < 256; i++) 
    { 
        char outputChar = (char)i; 
        if (countArr[i] > 0) 
        { 
            if (countArr[i] == 1) 
            System.out.print(outputChar); 
            else
            System.out.print(outputChar + "" + countArr[i]); 
        } 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
5
Gpt3D_Clone333_5.java 1 21
Gpt3D_Clone333_5.java 22 52
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

// 4.
public static void main(String... a) 
{ 
    System.out.println("Enter your string: ");
    Scanner scan = new Scanner(System.in);
    String str = scan.nextLine();
    int[] arr = new int[256];
  
    // Counts the number of characters 
    // present in the given string 
    for (int i = 0; i < str.length(); i++) 
    { 
        arr[str.charAt(i)]++; 
    } 
  
    // Print the characters and their 
    // corresponding frequencies 
    for (int i = 0; i < 256; i++) 
    { 
        char character = (char)i; 
        if (arr[i] > 0) 
        { 
            if (arr[i] == 1) 
            System.out.print(character); 
            else
            System.out.print(character + "" + arr[i]); 
        } 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
6
Gpt3D_Clone333_6.java 1 21
Gpt3D_Clone333_6.java 22 54
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

//9. 
public static void main(String... a) 
{ 
    System.out.println("Please type the string: ");
    Scanner sc = new Scanner(System.in); 
    String str = sc.nextLine(); 
    int[] arr = new int[256]; 
  
    // Counts the number of characters  
    // present in the given string 
    for (int i = 0; i < str.length(); i++) 
        arr[str.charAt(i)]++; 
  
    // Print the characters and their  
    // corresponding frequencies 
    for (int i = 0; i < 256; i++) 
    { 
        char character = (char)i; 
        if (arr[i] > 0)  
        { 
            // Prints the character  
            // and its frequency. The 
            // If the frequency is 1, it
            // prints only the character  
            if(arr[i] == 1) 
            System.out.print(character); 
            else
            System.out.print(character + "" + arr[i]); 
        } 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
0
Gpt3D_Clone335_0.java 1 15
Gpt3D_Clone335_0.java 16 34
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i ++) {
            Integer count = hm.get(s1.charAt(i));
            if (count == null) {
                hm.put(s1.charAt(i), 1);
            } else {
                count++;
                hm.put(s1.charAt(i), count);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
1
Gpt3D_Clone335_1.java 1 15
Gpt3D_Clone335_1.java 16 34
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter a String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            if (hm.containsKey(s1.charAt(i))) {
                int count = hm.get(s1.charAt(i));
                count++;
                hm.put(s1.charAt(i), count);
            } else {
                hm.put(s1.charAt(i), 1);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
2
Gpt3D_Clone335_2.java 1 15
Gpt3D_Clone335_2.java 16 34
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            Integer count = hm.get(s1.charAt(i));
            if (count == null) {
                count = 1;
            } else {
                count++;
            }
            hm.put(s1.charAt(i), count);
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
3
Gpt3D_Clone335_3.java 1 15
Gpt3D_Clone335_3.java 16 34
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            if (!hm.containsKey(s1.charAt(i))) {
                hm.put(s1.charAt(i), 1);
            }
            else{
                Integer count = hm.get(s1.charAt(i)) + 1;
                hm.put(s1.charAt(i), count);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
4
Gpt3D_Clone335_4.java 1 15
Gpt3D_Clone335_4.java 16 33
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            if (!hm.containsKey(s1.charAt(i))) {
                hm.put(s1.charAt(i), 1);
            } else {
                int count = hm.get(s1.charAt(i)) + 1;
                hm.put(s1.charAt(i), count); 
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
5
Gpt3D_Clone335_5.java 1 15
Gpt3D_Clone335_5.java 16 33
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            Integer count = hm.get(s1.charAt(i));
            if (count == null) {
                hm.put(s1.charAt(i), 1);
            } else {
                hm.put(s1.charAt(i), ++count);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
6
Gpt3D_Clone335_6.java 1 15
Gpt3D_Clone335_6.java 16 32
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Integer, Integer> hm = new HashMap<>();
        System.out.println("Enter an String");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            if (hm.containsKey(s1.charAt(i))) {
                hm.put(i, hm.get(s1.charAt(i)) + 1);
            } else {
                hm.put(i, 1);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
7
Gpt3D_Clone335_7.java 1 15
Gpt3D_Clone335_7.java 16 32
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i ++) {
            if (hm.containsKey(s1.charAt(i))) {
                hm.put(s1.charAt(i), hm.get(s1.charAt(i)) + 1);
            } else {
                hm.put(s1.charAt(i), 1);
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
8
Gpt3D_Clone335_8.java 1 15
Gpt3D_Clone335_8.java 16 32
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Character, Integer> hm = new HashMap<>();
        System.out.println("Enter an String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            int count = 1;
            if (hm.containsKey(s1.charAt(i))) {
                count = hm.get(s1.charAt(i)) + 1;
            }
            hm.put(s1.charAt(i), count);
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
9
Gpt3D_Clone335_9.java 1 15
Gpt3D_Clone335_9.java 16 31
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main(String[] args) {
        HashMap<Integer, Character> hm = new HashMap<>();
        System.out.println("Enter a String:");
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
 
        for (int i = 0; i < s1.length(); i++) {
            if (!hm.containsKey(s1.charAt(i))) {
                hm.put(i, s1.charAt(i));
            }
        }
        System.out.println("The Characters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
4
Gpt3D_Clone336_4.java 1 15
Gpt3D_Clone336_4.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        if (map.containsKey(val)){
            int count = map.get(val);
            map.put(val, ++count);
        } else {
            map.put(val, 1);
        }
    }
    for (Map.Entry<Character, Integer> entry : map.entrySet()){
        if (entry.getValue() > 1){
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key+":"+value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
5
Gpt3D_Clone336_5.java 1 15
Gpt3D_Clone336_5.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main(String[]args){
    String name="AnuvratAnuvra";
    char[]arr=name.toCharArray();
    Map<Character,Integer>map=new HashMap<Character,Integer>();
    for(int i=0;i<arr.length;i++){
        if(!map.containsKey(arr[i])){
            map.put(arr[i],1);
        } else {
            int value=map.get(arr[i]);
            map.put(arr[i],++value);
        }
    }
    for(Map.Entry<Character,Integer>entry:map.entrySet()){
        if(entry.getValue() > 1){
            Character key=entry.getKey();
            Object value=entry.getValue();
            System.out.println(key +" : "+ value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
6
Gpt3D_Clone336_6.java 1 15
Gpt3D_Clone336_6.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0; i < arr.length; i++) {
        if (map.containsKey(arr[i])) {
            int currentValue = map.get(arr[i]);
            map.put(arr[i], ++currentValue);
        } else {
            map.put(arr[i], 1);
        }
    }
    for (Map.Entry<Character,Integer> entry : map.entrySet()){
        if (entry.getValue()>1){
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
7
Gpt3D_Clone336_7.java 1 15
Gpt3D_Clone336_7.java 16 38
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray();
    HashMap < Character, Integer > map = new HashMap < Character, Integer >();
    for (char c : arr) {
        if (map.containsKey(c)){
            int counter = map.get(c);
            map.put(c, ++counter);
        } else {
            map.put(c, 1);
        }
    }
    for (Entry<Character, Integer> entry : map.entrySet()){
        if (entry.getValue() > 1){
            Character key = entry.getKey();
            Object value = entry.getValue();
            System.out.println(key + " : " + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
0
Gpt3D_Clone338_0.java 1 21
Gpt3D_Clone338_0.java 22 48
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        List<String> stringValues = new ArrayList<String>();
        Map <Character, Integer> map = new HashMap<>();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
            map.put(st.charAt(i), ar[st.charAt(i)]);
        }
        for(int i=0;i<256;i++){
            char ch = (char) i;
            if(ar[i]> 0){
                if(ar[i]== 1){
                    stringValues.add(Character.toString(ch));
                } else {
                    stringValues.add(Character.toString(ch)+""+ar[i]);
                }
            }
        }
        System.out.println(stringValues);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
1
Gpt3D_Clone338_1.java 1 21
Gpt3D_Clone338_1.java 22 44
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        List<String> stringValues = new ArrayList<String>();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
        }
        for(int i=0;i<256;i++){
            char ch = (char) i;
            if(ar[i]> 0){
                if(ar[i]== 1){
                    stringValues.add(Character.toString(ch));
                } else {
                    stringValues.add(Character.toString(ch)+""+ar[i]);
                }
            }
        }
        System.out.println(stringValues);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
2
Gpt3D_Clone338_2.java 1 21
Gpt3D_Clone338_2.java 22 46
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        Map <Character, Integer> map = new HashMap<>();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
            map.put(st.charAt(i), ar[st.charAt(i)]);
        }
        for(int i=0; i<256; i++){
            char ch = (char) i;
            if(ar[i]> 0){
                if(ar[i]== 1){
                    //System.out.print(Character.toString(ch));
                    System.out.print(map.keySet()+" ");
                } else {
                    System.out.print(map.entrySet()+" ");
                }
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
3
Gpt3D_Clone338_3.java 1 21
Gpt3D_Clone338_3.java 22 45
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
        }
        for(int i=0;i<256;i++){
            char ch = (char) i;
            if(ar[i]> 0){
                if(ar[i]== 1){
                    sb.append(ch);
                } else {
                    sb.append(ch + "" + ar[i]);
                }
            }
        }
        System.out.println(sb.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
4
Gpt3D_Clone338_4.java 1 21
Gpt3D_Clone338_4.java 22 41
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        HashMap <Character, Integer> map = new HashMap<>();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
            map.put(st.charAt(i), ar[st.charAt(i)]);
        }
        for(int i=0;i<256;i++){
            char ch = (char) i;
            if(map.containsKey(ch)){
                System.out.print(map.get(ch)+" "+ ch +" ");
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
5
Gpt3D_Clone338_5.java 1 21
Gpt3D_Clone338_5.java 22 41
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main(String...a){
        System.out.print("Enter the String: ");
        Scanner sc= new Scanner(System.in);
        String st= sc.nextLine();
        int[] ar= new int[256];
        Map <Character, Integer> map = new HashMap<>();
        for(int i=0;i<st.length();i++){
            ar[st.charAt(i)]= ar[st.charAt(i)]+1;
            map.put(st.charAt(i), ar[st.charAt(i)]);
        }
        for(int i=0;i<256;i++){
            char ch = (char) i;
            if(map.containsKey(ch)){
                System.out.print(ch+" : "+map.get(ch)+"; ");
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
339
0
Gpt3D_Clone339_0.java 1 15
Gpt3D_Clone339_0.java 16 32
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

 public static void main (String [] args) {
    Map<Character, Integer> map = new TreeMap<Character, Integer>();
    System.out.println("Enter an String:");
    Scanner sc = new Scanner(System.in);
    String s1 = sc.nextLine();
    for (int i = 0; i < s1.length();i++) {
        if (!map.containsKey(s1.charAt(i))) {
            map.put(s1.charAt(i), 1);
        } else {
            int count = map.get(s1.charAt(i));
            map.put(s1.charAt(i), ++count);
        }
    }
    System.out.println("The Characters are:" + map);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
0
Gpt3D_Clone33_0.java 1 16
Gpt3D_Clone33_0.java 17 35
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n");
    out.write(indent);
   if(isRight) {
       out.write("/ ");
   } else {
       out.write("\\ ");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "      | " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
1
Gpt3D_Clone33_1.java 1 16
Gpt3D_Clone33_1.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "   @   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " @   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
2
Gpt3D_Clone33_2.java 1 16
Gpt3D_Clone33_2.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "    ^   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " ^   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
3
Gpt3D_Clone33_3.java 1 16
Gpt3D_Clone33_3.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "   &   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " &   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
4
Gpt3D_Clone33_4.java 1 16
Gpt3D_Clone33_4.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/ ");
   } else {
       out.write("\\ ");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "      * " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " *      " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
5
Gpt3D_Clone33_5.java 1 16
Gpt3D_Clone33_5.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "   %   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " %   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
6
Gpt3D_Clone33_6.java 1 16
Gpt3D_Clone33_6.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "   *   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " *   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
7
Gpt3D_Clone33_7.java 1 16
Gpt3D_Clone33_7.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "  #    " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " #    " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
8
Gpt3D_Clone33_8.java 1 16
Gpt3D_Clone33_8.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "  $    " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " $    " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
9
Gpt3D_Clone33_9.java 1 16
Gpt3D_Clone33_9.java 17 34
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

 private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    out.write("\n" + indent);
   if(isRight) {
       out.write("/");
   } else {
       out.write("\\");
    }
    out.write("-----");
   if(right != null) {
       right.printTree(out, true, indent + (isRight ? "   ~   " : "        "));
    }
   this.printNodeValue(out);
   if(left != null) {
       left.printTree(out, false, indent + (isRight ? " ~   " : "        "));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
0
Gpt3D_Clone341_0.java 1 24
Gpt3D_Clone341_0.java 25 61
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

 public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0; 
    int countSpace = 0;
    int countDot = 0;
    for (int i = 0; i < test.length(); i++) {
        switch (test.charAt(i)) {
            case 'a': 
                countA++;
                break;
            case 'A':
                countA++;
                break;
            case 'o':
                countO++;
                break;
            case 'O':
                countO++;
                break;
            case ' ':
                countSpace++;
                break;
            case '.':
                countDot++;
                break;
        }
    }
    System.out.println("A: " + countA);
    System.out.println("O: " + countO);
    System.out.println("Space: "+ countSpace);
    System.out.println("Dot: " + countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
1
Gpt3D_Clone341_1.java 1 24
Gpt3D_Clone341_1.java 25 59
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

 public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0; 
    int countSpace = 0;
    int countDot = 0;
    for(int i = 0; i < test.length(); i++) {
        char a = test.charAt(i);
        switch (a) {
            case 'a': 
            case 'A': 
                countA++;
                break;
            case 'o': 
            case 'O': 
                countO++;
                break;
            case ' ':
                countSpace++;
                break;
            case '.':
                countDot++;
                break;
        }
    }
    System.out.println("A: " + countA);
    System.out.println("O: " + countO);
    System.out.println("Space: "+ countSpace);
    System.out.println("Dot: " + countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
2
Gpt3D_Clone341_2.java 1 24
Gpt3D_Clone341_2.java 25 56
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

 public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0; 
    int countSpace = 0;
    int countDot = 0;
    for (int i = 0; i < test.length(); i ++) {
        switch(test.charAt(i)) {
            case 'a':
            case 'A': 
                countA++;
                break; 
            case 'o':
            case 'O': 
                countO++;
                break; 
            case ' ': 
                countSpace++;
                break; 
            case '.': 
                countDot++;
        }
    }
    System.out.printf("A: %d\n", countA);
    System.out.printf("O: %d\n", countO);
    System.out.printf("Space: %d\n", countSpace);
    System.out.printf("Dot: %d\n", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
3
Gpt3D_Clone341_3.java 1 24
Gpt3D_Clone341_3.java 25 56
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

 public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0; 
    int countSpace = 0;
    int countDot = 0;
    for (int i = 0; i < test.length(); i++) {
        char ch = test.charAt(i);
        switch (ch) {
            case 'a':
            case 'A':
                ++countA;
                break;
            case 'o':
            case 'O':
                ++countO;
                break;
            case ' ':
                ++countSpace;
                break;
            case '.':
                ++countDot;
                break;
        }
    }
    System.out.printf("A: %d\nO: %d\nSpace: %d\nDot: %d\n", countA, countO, countSpace, countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
4
Gpt3D_Clone341_4.java 1 24
Gpt3D_Clone341_4.java 25 54
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

 public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0; 
    int countSpace = 0;
    int countDot = 0;
    for (int i = 0; i < test.length(); i ++) {
        switch (test.charAt(i)) {
            case 'a':
            case 'A':
                ++countA; 
                break;
            case 'o':
            case 'O':
                ++countO;
                break;
            case ' ':
                ++countSpace;
                break;
            case '.':
                ++countDot;
                break;
        }
    }
    System.out.printf("A: %d\nO: %d\nSpace: %d\nDot: %d", countA, countO, countSpace, countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
3
Gpt3D_Clone342_3.java 1 21
Gpt3D_Clone342_3.java 22 48
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main (String...a) {
    System.out.print ("Enter the String:");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] intArray = new int [256];
    for (int i = 0; i < st.length (); i++){
        int count = 0;
        for (int j = 0; j < st.length (); j++){
            if (st.charAt (i) == st.charAt (j)) {
                count++;
            }
        }
        intArray [st.charAt (i)] = count;
    }
    for (int i = 0; i < 256; i ++) {
        char ch = (char) i;
        if (intArray [i] > 0) {
            if (intArray [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + intArray [i]);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
4
Gpt3D_Clone342_4.java 1 21
Gpt3D_Clone342_4.java 22 48
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

 public static void main (String...a) {
    System.out.print ("Enter the String:");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0; i < st.length (); i ++) {
        int count = 0;
        for (int j = 0; j < st.length (); j++) {
            if (st.charAt(i) == st.charAt(j)) {
                count++;
            }
        }
        ar[st.charAt(i)] = count;
    }
    for (int i = 0; i < 256; i ++) {
        char ch = (char) i;
        if (ar[i] > 0) {
            if (ar[i] == 1) {
              System.out.print (ch);
            } else {
              System.out.print (ch + "" + ar[i]);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
0
Gpt3D_Clone345_0.java 1 24
Gpt3D_Clone345_0.java 25 50
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

	public static void main(String[] args) {
		String test = "The quick brown fox jumped over the lazy dog.";
		int countA = 0, countO = 0, countSpace = 0, countDot = 0;
		for (int i = 0; i < test.length(); i++) {
			String letter = test.substring(i, i + 1);
			switch (letter) {
				case "a":
				case "A":
					countA++;
					break;
				case "o":
				case "O":
					countO++;
					break;
				case " ":
					countSpace++;
					break;
				case ".":
					countDot++;
					break;
			}
		}
		System.out.printf("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
0
Gpt3D_Clone347_0.java 1 15
Gpt3D_Clone347_0.java 16 36
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand> brandList;
        if(customer.getBrands() == null) {
            brandList = new ArrayList<Brand>();
            customer.setBrands(brandList);
        } else {
            brandList = customer.getBrands();
        }
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
1
Gpt3D_Clone347_1.java 1 15
Gpt3D_Clone347_1.java 16 37
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    if(customer != null) {
        List<Brand>brandList;
        if (customer.getBrands() == null) {
            brandList = new ArrayList<Brand>();
            customer.setBrands(brandList);
        } else {
            brandList = customer.getBrands();
        }
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
2
Gpt3D_Clone347_2.java 1 15
Gpt3D_Clone347_2.java 16 37
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand> brandList;
        if(customer.getBrands() == null) {
            brandList = new ArrayList<Brand>();
        } else {
            brandList = customer.getBrands();
        }
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
        customer.setBrands(brandList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
3
Gpt3D_Clone347_3.java 1 15
Gpt3D_Clone347_3.java 16 36
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

public void processRow(ResultSet rs) throws SQLException {
     Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand> brandList;
        if (customer.getBrands() ==  null) {
            brandList = new ArrayList<Brand>();
            customer.setBrands(brandList);
        } else {
            brandList = customer.getBrands();
        }
        
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
4
Gpt3D_Clone347_4.java 1 15
Gpt3D_Clone347_4.java 16 34
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        if(customer.getBrands() == null) {
            List<Brand> brandList = new ArrayList<Brand>();
            customer.setBrands(brandList);
        } 
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        customer.getBrands().add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
5
Gpt3D_Clone347_5.java 1 15
Gpt3D_Clone347_5.java 16 33
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand>brandList = customer.getBrands();
        brandList = (brandList == null) ? new ArrayList<Brand>() : brandList;
        customer.setBrands(brandList);
        
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
6
Gpt3D_Clone347_6.java 1 15
Gpt3D_Clone347_6.java 16 31
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    if(customer != null) {
        List<Brand> brandList = customer.getBrands() == null ? new ArrayList<Brand>() : customer.getBrands();
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
        customer.setBrands(brandList);
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
7
Gpt3D_Clone347_7.java 1 15
Gpt3D_Clone347_7.java 16 32
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand> brandList = (customer.getBrands() != null) ? customer.getBrands() : new ArrayList<Brand>();
        customer.setBrands(brandList);
        
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
8
Gpt3D_Clone347_8.java 1 15
Gpt3D_Clone347_8.java 16 31
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    if(customer != null) {
        List<Brand>brandList = (customer.getBrands() != null) ? customer.getBrands() : new ArrayList<Brand>();
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
        customer.setBrands(brandList);
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
347
9
Gpt3D_Clone347_9.java 1 15
Gpt3D_Clone347_9.java 16 32
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

 
public void processRow(ResultSet rs) throws SQLException {
    Long id = rs.getLong("CUSTOMER_ID");
    Customer customer = map.get(id);
    
    if (customer != null) {
        List<Brand> brandList = (customer.getBrands() == null) ? new ArrayList<Brand>() : customer.getBrands();
        
        Brand brand = new Brand();
        brand.setId(rs.getLong("CUSTOMER_BRAND_ID"));
        brand.setName(rs.getString("CUSTOMER_BRAND_NAME"));
        brandList.add(brand);
        customer.setBrands(brandList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
348
0
Gpt3D_Clone348_0.java 1 14
Gpt3D_Clone348_0.java 15 29
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List ordersList = customer.getOrders ();
        if (ordersList == null) {
            ordersList = new ArrayList < Order > ();
            customer.setOrders (ordersList);
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        ordersList.add (order);
    }
}
----------------------------------------

  public void processRow (ResultSet rs) throws SQLException {
    long customerId = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (customerId);
    if (customer != null) {
        if (customer.getOrders () == null) {
            customer.setOrders (new ArrayList < Order > ());
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        order.setCustomerId(customerId);
        customer.getOrders ().add (order);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
348
3
Gpt3D_Clone348_3.java 1 14
Gpt3D_Clone348_3.java 15 29
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List ordersList = customer.getOrders ();
        if (ordersList == null) {
            ordersList = new ArrayList < Order > ();
            customer.setOrders (ordersList);
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        ordersList.add (order);
    }
}
----------------------------------------

  public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        if (customer.getOrders () == null) {
            customer.setOrders (new ArrayList < Order > ());
        }
        Order order = new Order ();
        order.setCustomerId (id);
        order.setId (rs.getLong ("ORDER_ID"));
    customer.getOrders ().add (order);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
348
4
Gpt3D_Clone348_4.java 1 14
Gpt3D_Clone348_4.java 15 28
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List ordersList = customer.getOrders ();
        if (ordersList == null) {
            ordersList = new ArrayList < Order > ();
            customer.setOrders (ordersList);
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        ordersList.add (order);
    }
}
----------------------------------------

  public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        if (customer.getOrders () == null) {
            customer.setOrders (new ArrayList < Order > ());
        }
        Order order = customer.createOrder ();
        order.setId (rs.getLong ("ORDER_ID"));
        customer.getOrders ().add (order);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
348
6
Gpt3D_Clone348_6.java 1 14
Gpt3D_Clone348_6.java 15 28
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List ordersList = customer.getOrders ();
        if (ordersList == null) {
            ordersList = new ArrayList < Order > ();
            customer.setOrders (ordersList);
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        ordersList.add (order);
    }
}
----------------------------------------

  public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        if (customer.getOrders () == null) {
            customer.setOrders (new ArrayList < Order > ());
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        customer.getOrders ().add (order);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
34
3
Gpt3D_Clone34_3.java 1 9
Gpt3D_Clone34_3.java 10 22
----------------------------------------

boolean isPrime (int x) {
    for (int i = 2;
    i * i <= x; i ++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPrime (int x) {
    if (x == 1) 
        return false;
    for (int i = 2; i * i <= x; i ++) {
        int mod = x % i;
        if (mod == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
0
Gpt3D_Clone351_0.java 1 20
Gpt3D_Clone351_0.java 21 48
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

	public void onRequestPermissionsResult (int requestCode,@NonNull 
String [] permissions, @NonNull int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index == 0) {
        Log.w (TAG, "Invalid requestCode");
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() <= index) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get (index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho (who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
1
Gpt3D_Clone351_1.java 1 20
Gpt3D_Clone351_1.java 21 47
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions, @NonNull int [] grantResults) {
    int index = (requestCode>> 16);
    if (index == 0) {
        Log.w (TAG, "Invalid requestCode");
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() <= index) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get (index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho (who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
2
Gpt3D_Clone351_2.java 1 20
Gpt3D_Clone351_2.java 21 48
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

	public void onRequestPermissionsResult (int requestCode, @NonNull
String [] permissions, @NonNull int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index == 0) {
        Log.w (TAG, "Invalid requestCode");
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() < index) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get( index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho (who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
3
Gpt3D_Clone351_3.java 1 20
Gpt3D_Clone351_3.java 21 48
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions, @NonNull int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index == 0) {
        Log.w (TAG, "Invalid requestCode");
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() < index+1) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get( index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho (who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
4
Gpt3D_Clone351_4.java 1 20
Gpt3D_Clone351_4.java 21 47
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

	public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions, @NonNull int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index == 0) {
        Log.w (TAG, "Invalid requestCode");
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() < index) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get( index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho (who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
5
Gpt3D_Clone351_5.java 1 20
Gpt3D_Clone351_5.java 21 47
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

	public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions, @NonNull int [] grantResults) {
	int index = (requestCode>> 16) & 0xffff;
    if (index == 0) {
        return;
    }
    index--;
    if (mPendingFragmentActivityResults.size() <= index) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    String who = mPendingFragmentActivityResults.get (index);
    mPendingFragmentActivityResults.remove (index);
    if (who == null) {
        Log.w (TAG, "Activity result delivered for unknown Fragment.");
        return;
    }
    Fragment frag = mFragments.findFragmentByWho(who);
    if (frag == null) {
        Log.w (TAG, "Activity result no fragment exists for who: " + who);
    } else {
        frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
0
Gpt3D_Clone352_0.java 1 23
Gpt3D_Clone352_0.java 24 57
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initX = bar.getLayoutX ();
            double initY = bar.getLayoutY ();
            double initHeight = bar.getPrefHeight ();
            double initWidth = bar.getPrefWidth ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setPrefSize (initWidth, initHeight);
                label.setRotate (90);
                label.setTranslateX (initX-initWidth);
                label.setTranslateY (initY + (initHeight/2));
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
                label.setTranslateX (initX-initWidth);
                label.setTranslateY (initY + (initHeight/2));
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
1
Gpt3D_Clone352_1.java 1 23
Gpt3D_Clone352_1.java 24 57
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initX = bar.getLayoutX ();
            double initY = bar.getLayoutY ();
            double initWidth = bar.getPrefWidth ();
            double initHeight = bar.getPrefHeight ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setPrefSize (initWidth, initHeight);
                label.setRotate (90);
                label.layoutXProperty ().bind (bar.layoutXProperty ().subtract (initWidth));
                label.layoutYProperty ().bind (bar.layoutYProperty ().add (initHeight/2));
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
                label.layoutXProperty ().bind (bar.layoutXProperty ().subtract (initWidth));
                label.layoutYProperty ().bind (bar.layoutYProperty ().add (initHeight/2));
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
2
Gpt3D_Clone352_2.java 1 23
Gpt3D_Clone352_2.java 24 55
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initY = bar.getLayoutY ();
            double initHeight = bar.getPrefHeight ();
            double initWidth = bar.getPrefWidth ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90);
                label.setLayoutX (bar.getLayoutX () - initWidth);
                label.setLayoutY (initY + (initHeight/2));
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
                label.setLayoutX (bar.getLayoutX () - initWidth);
                label.setLayoutY (initY + (initHeight/2));
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
3
Gpt3D_Clone352_3.java 1 23
Gpt3D_Clone352_3.java 24 55
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

  protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initY = bar.getLayoutY ();
            double initHeight = bar.getPrefHeight ();
            double initWidth = bar.getPrefWidth ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90);
                label.layoutXProperty ().bind (bar.layoutXProperty ().subtract (initWidth));
                label.layoutYProperty ().bind (bar.layoutYProperty ().add (initHeight/2));
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
                label.layoutXProperty ().bind (bar.layoutXProperty ().subtract (initWidth));
                label.layoutYProperty ().bind (bar.layoutYProperty ().add (initHeight/2));
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
4
Gpt3D_Clone352_4.java 1 23
Gpt3D_Clone352_4.java 24 54
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initWidth = bar.getPrefWidth ();
            double initHeight = bar.getPrefHeight ();
            Bounds barBounds = bar.getBoundsInParent ();
            double initX = barBounds.getMinX ();
            double initY = barBounds.getMinY ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90);
                label.setStyle ("-fx-translate-x: " + (initX - initWidth) + "; -fx-translate-y: " + (initY + (initHeight/2)) + ";");
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
5
Gpt3D_Clone352_5.java 1 23
Gpt3D_Clone352_5.java 24 54
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initY = bar.getLayoutY ();
            double initHeight = bar.getPrefHeight ();
            double initWidth = bar.getPrefWidth ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setPrefSize (initWidth, initHeight);
                label.setRotate (90);
                label.layoutXProperty ().bind (bar.layoutXProperty ().subtract (initWidth));
                label.layoutYProperty ().bind (bar.layoutYProperty ().add (initHeight/2));
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
6
Gpt3D_Clone352_6.java 1 23
Gpt3D_Clone352_6.java 24 56
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

 protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            double initX = bar.getLayoutX ();
            double initY = bar.getLayoutY ();
            double initWidth = bar.getPrefWidth ();
            double initHeight = bar.getPrefHeight ();
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90);
                label.setStyle ("-fx-layout-x: " + (initX-initWidth) 
                    + "; -fx-layout-y: " + (initY + (initHeight/2)) + ";");
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
                label.setStyle ("-fx-layout-x: " + (initX-initWidth) 
                    + "; -fx-layout-y: " + (initY + (initHeight/2)) + ";");
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
357
0
Gpt3D_Clone357_0.java 1 18
Gpt3D_Clone357_0.java 19 42
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

 
public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int threshold = 4;
    int[] B = new int[A.length];
    int[] C = new int[A.length];
    int bCounter = 0;
    int cCounter = 0;
    for (int i = 0;i < A.length;i++) {
        if (A[i] > threshold) {
            C[cCounter] = A[i];
            cCounter++;
        } else {
            B[bCounter] = A[i];
            bCounter++;
        }
    }
    System.out.println(Arrays.toString(B));
    System.out.println(Arrays.toString(C));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
357
4
Gpt3D_Clone357_4.java 1 18
Gpt3D_Clone357_4.java 19 42
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

 
public static void main (String [] args) {
    int[] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int threshold = 4;
    int[] B = new int[A.length];
    int[] C = new int[A.length];
    int bCounter = 0;
    int cCounter = 0;
    for (int i = 0;i < A.length;i++){
        if (A[i] <= threshold) {
            B[bCounter] = A[i];
            bCounter++;
        } else {
            C[cCounter] = A[i];
            cCounter++;
        }
    }
    System.out.println("Lowest To Highest" + Arrays.toString(B));
    System.out.println("Highest To Lowest" + Arrays.toString(C));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
357
5
Gpt3D_Clone357_5.java 1 18
Gpt3D_Clone357_5.java 19 42
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

 
public static void main (String [] args) {
    int[] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int[] B = new int[A.length];
    int[] C = new int[A.length];
    int bCounter = 0;
    int cCounter = 0;
    for (int i = 0;i < A.length;i++) {
        if (A[i] <= t) {
            B[bCounter] = A[i];
            bCounter++;
        } else {
            C[cCounter] = A[i];
            cCounter++;
        }
    }
    System.out.println("Less than t" + Arrays.toString(B));
    System.out.println("Greater than t" + Arrays.toString(C));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
357
9
Gpt3D_Clone357_9.java 1 18
Gpt3D_Clone357_9.java 19 42
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

 
public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int[] B = new int[A.length];
    int[] C = new int[A.length];
    int bCounter = 0;
    int cCounter = 0;
    for (int i = 0;i < A.length;i++){
        if (A[i] > t) {
            C[cCounter] = A[i];
            cCounter++;
        } else {
            B[bCounter] = A[i];
            bCounter++;
        }
    }
    System.out.println(Arrays.toString(B));
    System.out.println(Arrays.toString(C));
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
0
Gpt3D_Clone35_0.java 1 10
Gpt3D_Clone35_0.java 11 21
----------------------------------------

static void shuffleArray (int [] ar) {
    Random rnd = ThreadLocalRandom.current ();
    for (int i = ar.length - 1;
    i > 0; i --) {
        int index = rnd.nextInt (i + 1);
        int a = ar [index];
        ar [index] = ar [i];
        ar [i] = a;
    }
}
----------------------------------------

 static void shuffleArray (int [] ar)  {
    java.util.Random rng = new java.util.Random();
    for (int i = ar.length - 1; i > 0; i--)  {
        int index = rng.nextInt(i);
        int temp = ar[index];
        ar[index] = ar[i];
        ar[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
1
Gpt3D_Clone35_1.java 1 10
Gpt3D_Clone35_1.java 11 21
----------------------------------------

static void shuffleArray (int [] ar) {
    Random rnd = ThreadLocalRandom.current ();
    for (int i = ar.length - 1;
    i > 0; i --) {
        int index = rnd.nextInt (i + 1);
        int a = ar [index];
        ar [index] = ar [i];
        ar [i] = a;
    }
}
----------------------------------------

 static void shuffleArray (int [] ar)  {
    SecureRandom sr = new SecureRandom();
    for (int i = ar.length-1; i > 0; i--) {
        int index = sr.nextInt(i);
        int temp = ar[index];
        ar[index] = ar[i];
        ar[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
2
Gpt3D_Clone35_2.java 1 10
Gpt3D_Clone35_2.java 11 21
----------------------------------------

static void shuffleArray (int [] ar) {
    Random rnd = ThreadLocalRandom.current ();
    for (int i = ar.length - 1;
    i > 0; i --) {
        int index = rnd.nextInt (i + 1);
        int a = ar [index];
        ar [index] = ar [i];
        ar [i] = a;
    }
}
----------------------------------------

 static void shuffleArray (int [] ar)  {
    int n = ar.length;
    for (int i = 0; i < n; i++)  {
        int r = i + (int)(Math.random() * (n-i));  
        int temp = ar[r];
        ar[r] = ar[i];
        ar[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
3
Gpt3D_Clone35_3.java 1 10
Gpt3D_Clone35_3.java 11 20
----------------------------------------

static void shuffleArray (int [] ar) {
    Random rnd = ThreadLocalRandom.current ();
    for (int i = ar.length - 1;
    i > 0; i --) {
        int index = rnd.nextInt (i + 1);
        int a = ar [index];
        ar [index] = ar [i];
        ar [i] = a;
    }
}
----------------------------------------

 static void shuffleArray (int [] ar)  {
    for (int i = ar.length - 1; i > 0; i--)  {
        int index = (int)(Math.random()*i+1);
        int temp = ar[index];
        ar[index] = ar[i];
        ar[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
4
Gpt3D_Clone35_4.java 1 10
Gpt3D_Clone35_4.java 11 20
----------------------------------------

static void shuffleArray (int [] ar) {
    Random rnd = ThreadLocalRandom.current ();
    for (int i = ar.length - 1;
    i > 0; i --) {
        int index = rnd.nextInt (i + 1);
        int a = ar [index];
        ar [index] = ar [i];
        ar [i] = a;
    }
}
----------------------------------------

 static void shuffleArray (int [] ar) {
    for (int i = ar.length-1; i > 0; i--) {
        int index = (int)(Math.random() * (i+1));
        int temp = ar[index];
        ar[index] = ar[i];
        ar[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
0
Gpt3D_Clone360_0.java 1 12
Gpt3D_Clone360_0.java 13 24
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Random rand = new Random();
    int max = rand.nextInt(20)+1;
    int size = rand.nextInt(max+1);
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
1
Gpt3D_Clone360_1.java 1 12
Gpt3D_Clone360_1.java 13 23
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {
    System.out.println ("Main Method Started");
    double max = Math.random() * 10; 
    int size = (int)(Math.random() * max);
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
2
Gpt3D_Clone360_2.java 1 12
Gpt3D_Clone360_2.java 13 23
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {
    System.out.println ("Main Method Started");
    int size = 6;
    int max = 10;
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
3
Gpt3D_Clone360_3.java 1 12
Gpt3D_Clone360_3.java 13 23
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {
    System.out.println ("Main Method Started");
    int size = 10;
    int max = 25;
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
4
Gpt3D_Clone360_4.java 1 12
Gpt3D_Clone360_4.java 13 23
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {
    System.out.println ("Main Method Started");
    int size = 4;
    int max = 5;
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
360
5
Gpt3D_Clone360_5.java 1 12
Gpt3D_Clone360_5.java 13 23
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Main Method Started");
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the size of the arr");
    int size = in.nextInt ();
    System.out.println ("Enter the maximum value of the arr");
    int max = in.nextInt ();
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

 public static void main (String [] args) {  
    System.out.println ("Main Method Started");
    int size = 9;
    int max = 20;
    int [] arr = initializeArr (max, size);
    print (arr);
    findMinMax (arr);
    System.out.println ("Main Method Ended");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
0
Gpt3D_Clone361_0.java 1 19
Gpt3D_Clone361_0.java 20 40
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Input the number of values: ");
    Scanner sc = new Scanner (System.in);
    int elements = sc.nextInt ();
    int [] arr = new int [elements];
    System.out.println ("Enter the values: ");
    for (int i = 0; i < elements; i ++) {
        System.out.println ("Input the number at position " + i + ": ");
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0; j < elements; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
1
Gpt3D_Clone361_1.java 1 19
Gpt3D_Clone361_1.java 20 40
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("What is the size of the array?: ");
    Scanner sc = new Scanner (System.in);
    int elements = sc.nextInt ();
    int [] arr = new int [elements];
    System.out.println ("Input the values of array: ");
    for (int i = 0; i < elements; i ++) {
        System.out.println ("Input the number at position " + i + ": ");
        int number = sc.nextInt ();
        arr [i] = number;
    }
    for (int j = 0; j < elements; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
2
Gpt3D_Clone361_2.java 1 19
Gpt3D_Clone361_2.java 20 40
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("What is the size of the array: ");
    Scanner sc = new Scanner (System.in);
    int arraySize = sc.nextInt ();
    int [] arr = new int [arraySize];
    System.out.println ("Enter the numbers: ");
    for (int i = 0; i < arraySize; i ++) {
        System.out.println ("Enter the number at position " + i + ": ");
        int number = sc.nextInt ();
        arr [i] = number;
    }
    for (int j = 0; j < arraySize; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
3
Gpt3D_Clone361_3.java 1 19
Gpt3D_Clone361_3.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Input the size of the array: ");
    Scanner sc = new Scanner (System.in);
    int length = sc.nextInt ();
    int [] arr = new int [length];
    System.out.println ("Provide the elements of array: ");
    for (int i = 0; i < length; i ++) {
        int num = sc.nextInt ();
        arr [i] = num;
    }
    for (int j = 0; j < length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
4
Gpt3D_Clone361_4.java 1 19
Gpt3D_Clone361_4.java 20 40
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the size of the array: ");
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    int [] arr = new int [size];
    for (int i = 0; i < size; i ++) {
        System.out.println ("Enter the element at position " + i + ": ");
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0; j < size; j ++) {
        if (arr [j] > max) max = arr [j];
        if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
5
Gpt3D_Clone361_5.java 1 19
Gpt3D_Clone361_5.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String[] args) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int elements = sc.nextInt ();
    int [] arr = new int [elements];
    System.out.println ("Enter the elements: ");
    for (int i = 0; i < elements; i ++) {
        int num = sc.nextInt ();
        arr [i] = num;
    }
    for (int j = 0; j < elements; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
6
Gpt3D_Clone361_6.java 1 19
Gpt3D_Clone361_6.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("What is the length of the array: ");
    Scanner sc = new Scanner (System.in);
    int length = sc.nextInt ();
    int [] arr = new int [length];
    System.out.println ("Input the elements of array: ");
    for (int i = 0; i < length; i ++) {
        int value = sc.nextInt ();
        arr [i] = value;
    }
    for (int j = 0; j < length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
7
Gpt3D_Clone361_7.java 1 19
Gpt3D_Clone361_7.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("What is the length of the array?: ");
    Scanner sc = new Scanner (System.in);
    int length = sc.nextInt ();
    int [] arr = new int [length];
    System.out.println ("Insert the values of array: ");
    for (int i = 0; i < length; i ++) {
        int num = sc.nextInt ();
        arr [i] = num;
    }
    for (int j = 0; j < length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
8
Gpt3D_Clone361_8.java 1 19
Gpt3D_Clone361_8.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String[] args) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Specify the size of the array: ");
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    int [] arr = new int [size];
    System.out.println ("Enter the array values: ");
    for (int i = 0; i < size; i ++) {
        int value = sc.nextInt ();
        arr [i] = value;
    }
    for (int j = 0; j < size; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
9
Gpt3D_Clone361_9.java 1 19
Gpt3D_Clone361_9.java 20 39
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("How many elements are there: ");
    Scanner sc = new Scanner (System.in);
    int elements = sc.nextInt ();
    int [] arr = new int [elements];
    System.out.println ("Type in the elements: ");
    for (int i = 0; i < elements; i ++) {
        int number = sc.nextInt ();
        arr [i] = number;
    }
    for (int j = 0; j < elements; j ++) {
        if (arr [j] > max) max = arr [j];
        if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest value in array: " + max);
    System.out.println ("Smallest value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
362
0
Gpt3D_Clone362_0.java 1 19
Gpt3D_Clone362_0.java 20 41
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

 public static void main (String args []) {
    int n, max = INT_MIN, min = INT_MAX;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int arraySize = sc.nextInt ();
    int [] arr = new int [arraySize];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = sc.nextInt ();
   }
    for (int j = 0; j < arr.length; j ++) {
        if (arr [j] > max) 
            max = arr [j];
        else if (arr [j] < min) 
            min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
363
0
Gpt3D_Clone363_0.java 1 13
Gpt3D_Clone363_0.java 14 30
----------------------------------------

public static void main (String [] args) {
    CustomClassLoader loader = new CustomClassLoader ();
    try {
        Class < ? > c = loader.findClass ("sample.Sample");
        Object o = c.newInstance ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    } catch (InstantiationException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {	try {
	    CustomClassLoader loader = new CustomClassLoader();
	    Class<?> c = loader.findClass("sample.Sample");
	    Object o = c.newInstance();
	} catch (ClassNotFoundException e) {
	    System.out.println("Class was not found");
	    e.printStackTrace();
	} catch (InstantiationException e) {
	    System.out.println("Class could not be instantiated");
	    e.printStackTrace();
	} catch (IllegalAccessException e) {
	    System.out.println("Illegal access to class or it's members");
	    e.printStackTrace();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
364
0
Gpt3D_Clone364_0.java 1 10
Gpt3D_Clone364_0.java 11 23
----------------------------------------

public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        return i;
    } finally {
        i = 40;
        System.out.println ("local: " + i);
    }
}
----------------------------------------

 
public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        System.out.println ("local: " + i);
    } finally {
        i = 40;
        return i;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
364
1
Gpt3D_Clone364_1.java 1 10
Gpt3D_Clone364_1.java 11 23
----------------------------------------

public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        return i;
    } finally {
        i = 40;
        System.out.println ("local: " + i);
    }
}
----------------------------------------

 
public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        System.out.println ("local: " + i);
        i = 10;
    } finally {
        i = 40;
        return i;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
364
2
Gpt3D_Clone364_2.java 1 10
Gpt3D_Clone364_2.java 11 23
----------------------------------------

public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        return i;
    } finally {
        i = 40;
        System.out.println ("local: " + i);
    }
}
----------------------------------------

 
public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
    } finally {
        System.out.println ("local: " + i);
        i = 40;
        return i;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
364
3
Gpt3D_Clone364_3.java 1 10
Gpt3D_Clone364_3.java 11 24
----------------------------------------

public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        return i;
    } finally {
        i = 40;
        System.out.println ("local: " + i);
    }
}
----------------------------------------

 
public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        System.out.println ("local: " + i);
    }
    finally {
        i = 40;
        return i;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
1
Gpt3D_Clone366_1.java 1 20
Gpt3D_Clone366_1.java 21 41
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main (String...args){
	    List<List<Integer>> array = new ArrayList<List<Integer>>();
	    Scanner input = new Scanner(System.in);
	    System.out.println("Enter n:");
	    int n = input.nextInt();
	    System.out.println("Enter m:");
	    int m = input.nextInt();
	    System.out.println("Enter the values:");
	    for(int i=0; i<n; i++){
	      List<Integer> list = new ArrayList<Integer>();
	      array.add(list);
	      for(int j=0; j<m; j++){
		 System.out.println("Enter the values["+i+","+j+"]:");
		 list.add(input.nextInt());
	      }
	    }
	    System.out.println("Result:");
	    System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
3
Gpt3D_Clone366_3.java 1 20
Gpt3D_Clone366_3.java 21 45
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static  void main (String...args) {
	    List<List<Integer>> array = new ArrayList<List<Integer>>(); 
	    Scanner input = new Scanner(System.in); 
	  
	    System.out.print("Enter n: "); 
	    int n = input.nextInt(); 
	  
	    System.out.print("Enter m: "); 
	    int m = input.nextInt(); 
	  
	    for (int i = 0; i < n; i++) { 
		List<Integer> list = new ArrayList<Integer>(); 
		array.add(list); 
	  
		for (int j = 0; j < m; j++) { 
		    System.out.print("Enter the value at position [" + i + "," + j + "]: "); 
		    list.add(input.nextInt()); 
		} 
	    } 
	  
	    System.out.println("\nThe Result is: "); 
	    System.out.println(array); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
4
Gpt3D_Clone366_4.java 1 20
Gpt3D_Clone366_4.java 21 44
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String... args) { 
	  List<List<Integer>> array = new ArrayList<List<Integer>>(); 
	  Scanner scanner = new Scanner(System.in); 
	  
	  System.out.print("Enter n: "); 
	  int n = scanner.nextInt(); 
	  
	  System.out.print("Enter m: "); 
	  int m = scanner.nextInt(); 
	  
	  for(int i = 0; i < n; i++) { 
		  List<Integer> list = new ArrayList<Integer>(); 
		  array.add(list); 
		  for(int j = 0; j < m; j++) { 
			  System.out.print("Enter value at position ["+i+","+j+"]: "); 
			  list.add(scanner.nextInt()); 
		  } 
	  } 
	  
	  System.out.println("Result:"); 
	  System.out.println(array); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
5
Gpt3D_Clone366_5.java 1 20
Gpt3D_Clone366_5.java 21 44
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String... args)
    {
        List<List<Integer>> array = new ArrayList<List<Integer>>();
        Scanner input = new Scanner(System.in);
        System.out.print("Enter n: ");
        int n = input.nextInt();
        System.out.print("Enter m: ");
        int m = input.nextInt();
        for(int i = 0; i < n; i++)
        {
            List<Integer> list = new ArrayList<Integer>();
            array.add(list);
            for(int j = 0; j < m; j++)
            {
                System.out.println("Enter values at [" + i + "," + j + "]:");
                list.add(input.nextInt());
            }
        }
        System.out.println("Result:");
        System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
6
Gpt3D_Clone366_6.java 1 20
Gpt3D_Clone366_6.java 21 41
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String...args){
	   List<List<Integer>> array = new ArrayList<List<Integer>>(); 
	   Scanner input = new Scanner(System.in); 
	   System.out.println("Enter n:"); 
	   int n = input.nextInt(); 
	   System.out.println("Enter m:"); 
	   int m = input.nextInt(); 
	   
	   for(int i = 0; i < n; i++){ 
	     List<Integer> list = new ArrayList<Integer>(); 
	     array.add(list); 
	     for(int j = 0; j < m; j++){ 
	       System.out.println("Enter values at ["+i+","+j+"]:"); 
	       list.add(input.nextInt()); 
	     } 
	   } 
	   System.out.println("Result:"); 
	   System.out.println(array); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
7
Gpt3D_Clone366_7.java 1 20
Gpt3D_Clone366_7.java 21 43
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String... args){
	    List<List<Integer>> array = new ArrayList<List<Integer>>();
	    Scanner scanner = new Scanner(System.in);
	    System.out.println("Enter n:");
	    int n = scanner.nextInt();
	    System.out.println("Enter m:");
	    int m = scanner.nextInt();
	 
	    for(int i = 0; i < n; i++){
		List<Integer> list = new ArrayList<Integer>();
		array.add(list);
		for(int j = 0; j < m; j++){
		    System.out.println("Enter an integer value at [" + i + ", " + j +"]:");
		    list.add(scanner.nextInt());
		}
	    }
	 
	    System.out.println("Result:");
	    System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
8
Gpt3D_Clone366_8.java 1 20
Gpt3D_Clone366_8.java 21 41
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String...args)
{
	List<List<Integer>>array = new ArrayList<List<Integer>>();
	    Scanner input = new Scanner(System.in);
	    System.out.println("Enter n:");
	    int n = input.nextInt();
	    System.out.println("Enter m:");
	    int m = input.nextInt();
	    System.out.println("Enter the values");
	    for(int i = 0;i<n;i++){
	      List<Integer>list = new ArrayList<Integer>();
	      array.add(list);
	      for(int j = 0;j<m;j++){
		   list.add(input.nextInt());
		   }
		 }
	     System.out.println("Result:");
	     System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
9
Gpt3D_Clone366_9.java 1 20
Gpt3D_Clone366_9.java 21 43
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

 public static void main(String... args){
	    List<List<Integer>> array = new ArrayList<List<Integer>>();
	    Scanner scanner = new Scanner(System.in);
	    System.out.println("Enter n:");
	    int n = scanner.nextInt();
	    System.out.println("Enter m:");
	    int m = scanner.nextInt();
	 
	  for(int i = 0; i < n; i++){
	    List<Integer> list = new ArrayList<Integer>();
	    array.add(list);
	    for(int j = 0; j < m; j++){
		System.out.println("Enter an integer value of position [" + i + ", " + j +"]:");
		list.add(scanner.nextInt());
	    }
	  }
	 
	  System.out.println("Result:");
	  System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
0
Gpt3D_Clone368_0.java 1 13
Gpt3D_Clone368_0.java 14 30
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    boolean saidHello = false;
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        synchronized (MyThread.class) {
            while (saidHello) {
            }
        System.out.println ("Hello ");
        saidHello = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
1
Gpt3D_Clone368_1.java 1 13
Gpt3D_Clone368_1.java 14 28
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    Boolean saidHello = false;
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello) {
        }
        System.out.println ("Hello ");
        saidHello = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
2
Gpt3D_Clone368_2.java 1 13
Gpt3D_Clone368_2.java 14 28
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    Semaphore semaphore = new Semaphore(0);
    MyThread mt = new MyThread (sayThisManyTimes, semaphore);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (semaphore.availablePermits() == 0) {
        }
        System.out.println ("Hello ");
        semaphore.release();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
3
Gpt3D_Clone368_3.java 1 13
Gpt3D_Clone368_3.java 14 28
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    CountDownLatch latch = new CountDownLatch(1);
    MyThread mt = new MyThread (sayThisManyTimes, latch);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (latch.getCount() == 0) {
        }
        System.out.println ("Hello ");
        latch.countDown();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
4
Gpt3D_Clone368_4.java 1 13
Gpt3D_Clone368_4.java 14 28
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    volatile boolean saidHello = false;
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello) {
        }
        System.out.println ("Hello ");
        saidHello = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
5
Gpt3D_Clone368_5.java 1 13
Gpt3D_Clone368_5.java 14 27
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

 public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicReference<Boolean> saidHello = new AtomicReference<Boolean>(false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (!saidHello.compareAndSet (false, true)) {
        }
        System.out.println ("Hello ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
369
0
Gpt3D_Clone369_0.java 1 13
Gpt3D_Clone369_0.java 14 28
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

	public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    Execution.invokeAll(mt);
    for (int i = 0;
    i < sayThisManyTimes; i++) {
        while (!saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
370
8
Gpt3D_Clone370_8.java 1 9
Gpt3D_Clone370_8.java 10 21
----------------------------------------

public void run () {
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (! saidHello.get ()) {
        }
        System.out.println ("World!");
        saidHello.set (false);
    }
}
----------------------------------------

 public void run() {
    Semaphore saidHello = new Semaphore(0);
    for (int i = 0; i < sayThisManyTimes; i++) {
        while (! saidHello.tryAcquire()) { 
            System.out.println("Hello");
            saidHello.release();
        }
        System.out.println("World!");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
373
0
Gpt3D_Clone373_0.java 1 10
Gpt3D_Clone373_0.java 11 33
----------------------------------------

public static void main (String [] args) throws IOException {
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (toList ());
    List < Path > destinations = sources.stream ().map (source :: relativize).map (destination :: resolve).collect (toList ());
    for (int i = 0;
    i < sources.size (); i ++) {
        Files.copy (sources.get (i), destinations.get (i));
    }
}
----------------------------------------

 public static void main(String[] args) throws IOException { 
        Path source = Paths.get("/path/to/source/dir");
        Path destination = Paths.get("/path/to/dest/dir");
        List<Path> files = Files.walk(source).collect(Collectors.toList());
        List<Path> destiPaths= files.stream().map(scl -> source.relativize(scl))
                                              .map(dsttl -> destination.resolve(dsttl))
                                              .collect(Collectors.toList());
        for(int j=0;j<files.size();j++){
            Files.copy(files.get(j),destiPaths.get(j));
        }
    }
 public static void main(String [] args) throws IOException { 
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (Collectors.toList ());
    List < Path > destinations = sources.stream ().map (source::relativize).map (destination::resolve).collect (Collectors.toList ());
    for(int i=0;i<sources.size();i++){
        Files.copy(sources.get(i),destinations.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
373
1
Gpt3D_Clone373_1.java 1 10
Gpt3D_Clone373_1.java 11 46
----------------------------------------

public static void main (String [] args) throws IOException {
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (toList ());
    List < Path > destinations = sources.stream ().map (source :: relativize).map (destination :: resolve).collect (toList ());
    for (int i = 0;
    i < sources.size (); i ++) {
        Files.copy (sources.get (i), destinations.get (i));
    }
}
----------------------------------------

 public static void main(String[] args) throws IOException { 
        Path source = Paths.get("/path/to/source/dir");
        Path destination = Paths.get("/path/to/dest/dir");
        List<Files> sources = Files.list(source).collect(Collectors.toList());
        List<Path> destinations = sources.stream().map(source::relativize)
                                                 .map(destination::resolve)
                                                 .collect(Collectors.toList());
        IntStream.range(0, sources.size())
                 .forEach(i -> copy(sources.get(i), destinations.get(i)));
    }
 public static void main(String[] args) throws IOException { 
        Path source = Paths.get("/path/to/source/dir");
        Path destination = Paths.get("/path/to/dest/dir");
        List<Path> sources = Files.walk(source).collect(Collectors.toList());
        List<Path> destinations = sources.stream()
                                        .map(src -> source.relativize(src))
                                        .map(dest -> destination.resolve(dest))
                                        .collect(Collectors.toList());
        for(int i=0;i<sources.size();i++){
            copy(sources.get(i), destinations.get(i));
        }
    }
 public static void main(String[] args) throws IOException { 
    Path source = Paths.get("/path/to/source/dir");
    Path destination = Paths.get("/path/to/dest/dir");
    List<Path> srcs = PFiles.walk(source).collect(Collectors.toList());
    List<Path> dests = srcs.stream().map(src -> source.relativize(src))
                                    .map(dst -> destination.resolve(dst))
                                    .collect(Collectors.toList());
    IntStream.range(0, srcs.size())
             .forEach(i -> copy(srcs.get(i), dests.get(i)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
373
2
Gpt3D_Clone373_2.java 1 10
Gpt3D_Clone373_2.java 11 33
----------------------------------------

public static void main (String [] args) throws IOException {
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (toList ());
    List < Path > destinations = sources.stream ().map (source :: relativize).map (destination :: resolve).collect (toList ());
    for (int i = 0;
    i < sources.size (); i ++) {
        Files.copy (sources.get (i), destinations.get (i));
    }
}
----------------------------------------

 public static void main(String[] args) throws IOException { 
        Path source = Paths.get("/path/to/source/dir");
        Path destination = Paths.get("/path/to/dest/dir");
        List<Path> files = Files.walk(source).collect(Collectors.toList());
        List<Path> destiPaths= files.stream().map(scl -> source.relativize(scl))
                                              .map(dsttl -> destination.resolve(dsttl))
                                              .collect(Collectors.toList());
        for(int j=0;j<files.size();j++){
            Files.copy(files.get(j),destiPaths.get(j));
        }
    }
 public static void main(String [] args) throws IOException { 
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (Collectors.toList ());
    List < Path > destinations = sources.stream ().map (source::relativize).map (destination::resolve).collect (Collectors.toList ());
    for(int i=0;i<sources.size();i++){
        Files.copy(sources.get(i),destinations.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
5
Gpt3D_Clone374_5.java 1 9
Gpt3D_Clone374_5.java 10 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        String[] items = (String[]) o;
        DefaultComboBoxModel model = new DefaultComboBoxModel(items);
        subComboBox.setModel (model);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
6
Gpt3D_Clone374_6.java 1 9
Gpt3D_Clone374_6.java 10 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel(new DefaultComboBoxModel ());
    } else {
        String[] items = (String[]) o;
        Vector<String> comboBoxItems = new Vector<>(Arrays.asList(items));
        subComboBox.setModel(new DefaultComboBoxModel(comboBoxItems));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
7
Gpt3D_Clone374_7.java 1 9
Gpt3D_Clone374_7.java 10 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        String[] items = (String[]) o;
        Vector comboBoxItems = new Vector(Arrays.asList(items));
        subComboBox.setModel (new DefaultComboBoxModel(comboBoxItems));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
8
Gpt3D_Clone374_8.java 1 9
Gpt3D_Clone374_8.java 10 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.removeAllItems();
    } else {
        String[] items = (String[]) o;
        for (String s : items){
            subComboBox.addItem(s);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
0
Gpt3D_Clone378_0.java 1 18
Gpt3D_Clone378_0.java 19 43
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        int[] reversedIndices = new int[indices.length];
        int index = indices.length - 1;
        for (int i = 0; i < indices.length; i++) {
            reversedIndices[index--] = indices[i];
        }
        for (int i : reversedIndices) {
            model.remove(i);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
1
Gpt3D_Clone378_1.java 1 18
Gpt3D_Clone378_1.java 19 39
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        int len = indices.length;
        //Iterate backwards in the array
        for (int i = len -1; i > -1; i--) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
2
Gpt3D_Clone378_2.java 1 18
Gpt3D_Clone378_2.java 19 38
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        Arrays.sort(indices);
        for (int i = indices.length - 1; i >= 0; i--) {
            model.remove(indices[i]);
        }
    }   
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
3
Gpt3D_Clone378_3.java 1 18
Gpt3D_Clone378_3.java 19 38
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) {if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        int len = indices.length;
        for (int i = 0; i < len; i++) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = indices.length - 1; i >= 0; i--) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
4
Gpt3D_Clone378_4.java 1 18
Gpt3D_Clone378_4.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i = 0; i < indices.length; i++) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = indices.length - 1; i >= 0; i--) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
5
Gpt3D_Clone378_5.java 1 18
Gpt3D_Clone378_5.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i = indices.length - 1; i > -1; i--) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
6
Gpt3D_Clone378_6.java 1 18
Gpt3D_Clone378_6.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i = indices.length - 1; i >= 0; i--) {
            model.removeElementAt(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
7
Gpt3D_Clone378_7.java 1 18
Gpt3D_Clone378_7.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) {if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i = indices.length - 1; i >= 0; i--) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i : indices) {
            if (i > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
8
Gpt3D_Clone378_8.java 1 18
Gpt3D_Clone378_8.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i : indices) {
            model.removeElementAt(i);
        }
    }
    if (addCount > 0) {
        for (int i : indices) {
            if (i > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
9
Gpt3D_Clone378_9.java 1 18
Gpt3D_Clone378_9.java 19 37
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

 protected void exportDone (JComponent c, Transferable data, int action) { if (action == MOVE) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for(int index : indices) {
            model.remove(index);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
37
9
Gpt3D_Clone37_9.java 1 9
Gpt3D_Clone37_9.java 10 21
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    ArrayList < Integer > l = new ArrayList < Integer > (10);
    for (int i = 0;
    i < 10; i ++) l.add (sc.nextInt ());
    Collections.shuffle (l);
    for (int j = 0;
    j < 10; j ++) System.out.println (l.get (j));
}
----------------------------------------

 public static void main(String[] args) {
    Scanner sc = new Scanner (System.in);
    List<Integer> list = new ArrayList<Integer>(10);
    for (int i = 0; i < 10; i++)
        list.add(sc.nextInt());
    Collections.shuffle(list, new Random());
    for (int i = 0; i < 10; i++)
        System.out.println(list.get(i));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
0
Gpt3D_Clone381_0.java 1 17
Gpt3D_Clone381_0.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort(int[] input) {
    for (int i = 0; i < input.length - 1; i++) {
        for (int j = i + 1; j < input.length; j++) {
            if (input[i] > input[j]) {
                int tmp = input[i];
                input[i] = input[j];
                input[j] = tmp;
            }
        }
    }
    System.out.println("Slow sorting is done and the result is:");
    for (int i = 0; i < input.length; i++) {
        System.out.print(input[i] + ",");
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
1
Gpt3D_Clone381_1.java 1 17
Gpt3D_Clone381_1.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort(int[] input) {
    for (int i = 0; i < input.length; i++) {
        for (int j = input.length - 1; j > i; j--) {
            if (input[j - 1] > input[j]) {
                int tmp = input[j - 1];
                input[j - 1] = input[j];
                input[j] = tmp;
            }
        }
    }
    System.out.println("Slow sorting is done and the result is:");
    for (int i : input) {
        System.out.print(i + ",");
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
2
Gpt3D_Clone381_2.java 1 17
Gpt3D_Clone381_2.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int[] input) {
    for (int i = 0; i < input.length; i++) {
        for (int j = input.length - 1; j > i; j--) {
            if (input[j - 1] < input[j]) {
                int tmp = input[j - 1];
                input[j - 1] = input[j];
                input[j] = tmp;
            }
        }
    }
    System.out.println("Slow sorting is done and the result is:");
    for (int i : input) {
        System.out.print(i + ",");
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
3
Gpt3D_Clone381_3.java 1 17
Gpt3D_Clone381_3.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort(int[] input) {
    for (int i = 0; i < input.length - 1; i++) {
        for (int j = i + 1; j < input.length; j++) {
            if (input[i] < input[j]) {
                int tmp = input[j];
                input[j] = input[i];
                input[i] = tmp;
                }
            }
        }
    System.out.println("Slow sorting is done and the result is:");
    for (int i = 0; i < input.length; i++) {
        System.out.print(input[i] + ",");
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
4
Gpt3D_Clone381_4.java 1 17
Gpt3D_Clone381_4.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int[] input) {
    for (int i = 0; i < input.length; i++) {
        for (int j = input.length - 1; j > i; j--) {
            if (input[j - 1] > input[j]) {
                int temp = input[j];
                input[j] = input[j - 1];
                input[j - 1] = temp;
            }
        }
    }
    System.out.println("Slow sorting is done and the result is:");
    for (int i : input) {
        System.out.print(i + ",");
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
0
Gpt3D_Clone382_0.java 1 17
Gpt3D_Clone382_0.java 18 44
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    boolean rerun = false;
    do{
        rerun = false;
        for (int i = 0;
        i < input.length - 1; i ++) {
            int k = i + 1;
            int nxtVal = input [k];
            while (input [k - 1] > nxtVal) {
                input [k] = input [k - 1];
                k --;
                if (k == 0) break;
            }
            input [k] = nxtVal;
            if (k!=i+1){
            rerun = true;
            }
        }
    }while(rerun);
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
1
Gpt3D_Clone382_1.java 1 17
Gpt3D_Clone382_1.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

   public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i;
        int nxtVal = input [k + 1];
        while (input [k] > nxtVal) {
            input [k+1] = input [k];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
3
Gpt3D_Clone382_3.java 1 17
Gpt3D_Clone382_3.java 18 35
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i;
        int nxtVal = input [k + 1];
        while (input [k] > nxtVal && k > 0) {
            input [k+1] = input [k];
            k --;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
5
Gpt3D_Clone382_5.java 1 17
Gpt3D_Clone382_5.java 18 35
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

  public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        int k = i;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal && k>0) {
            input [k] = input [k - 1];
            k --;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
7
Gpt3D_Clone382_7.java 1 17
Gpt3D_Clone382_7.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    for (int j = 0; j < input.length; j++) {
 
        int temp = input[j];
        int k = j;
 
        while(k > 0 && temp < input[k-1]) {
            input[k] = input[k-1];
            k--;
        }
        input[k] = temp;
    }
    System.out.println("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
384
0
Gpt3D_Clone384_0.java 1 17
Gpt3D_Clone384_0.java 18 39
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int min = input [k];
        int j = i;
        for (int l = 0; l <= i; l++) {
            if (input[l] < min) {
                min = input[l];
                j = l;
            }
        }
        input[j] = input[k];
        input[k] = min;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
384
1
Gpt3D_Clone384_1.java 1 17
Gpt3D_Clone384_1.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        int j = i;
        while (input [j] > nxtVal && j >= 0) {
            input [j + 1] = input [j];
            j--;
        }
        input [j + 1] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
384
2
Gpt3D_Clone384_2.java 1 17
Gpt3D_Clone384_2.java 18 37
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

 public void sort (int [] input) {
    for (int i = 0;
i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        for (int j = k; j > 0; j--) {
            input[j] = input[j - 1];
            if (input[j - 1] <= nxtVal) {
                input[j] = nxtVal;
                break;
            }
        }
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
38
2
Gpt3D_Clone38_2.java 1 11
Gpt3D_Clone38_2.java 12 25
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

 public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    int[] newArray = list.stream().mapToInt(Integer::intValue).toArray();
    for (int i = 0;
    i < list.size (); i ++) {
        array[i] = newArray[i];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
1
Gpt3D_Clone393_1.java 1 20
Gpt3D_Clone393_1.java 21 46
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    int startIndex = 0;
    int endIndex = 0;
    int longestLength = 1;
    String longestString = "" + currentChar;
    int currLength = 1;
    for (int i = 1; i < s.length (); i++) {
        if (s.charAt (i) == currentChar) {
            endIndex ++;
            String subString = s.substring (startIndex, endIndex+1);
            if (subString.length () > longestLength) {
                longestLength = subString.length ();
                longestString = subString;
            }
        } else {
            currentChar = s.charAt (i);
            startIndex = i;
            currLength = 1;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
2
Gpt3D_Clone393_2.java 1 20
Gpt3D_Clone393_2.java 21 47
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    int currentLength = 1; 
    char currentChar = s.charAt(0);
    String longestString = "" + currentChar;
    int maxLength = 1;
    int startIndex = 0;
    int endIndex = 0;
    for (int i = 1; i < s.length(); i++) {
        if (s.charAt(i) == currentChar) {
            endIndex = i;
            currentLength ++;
            if (currentLength > maxLength) {
                maxLength = currentLength;
                longestString = s.substring (startIndex, endIndex+1);
            }
        }
        else {
            currentChar = s.charAt(i);
            startIndex = i;
            currentLength = 1;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
4
Gpt3D_Clone393_4.java 1 20
Gpt3D_Clone393_4.java 21 44
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    int startIndex = 0;
    int endIndex = 0;
    String longestString = "" + currentChar;
    int maxLength = 1;
    for (int i = 1; i < s.length (); i++) {
        if (s.charAt (i) == currentChar) {
            endIndex = i;
            String subString = s.substring (startIndex, endIndex+1);
            if (subString.length () > maxLength) {
                maxLength = subString.length ();
                longestString = subString;
            }
        } else {
            currentChar = s.charAt (i);
            startIndex = i;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
5
Gpt3D_Clone393_5.java 1 20
Gpt3D_Clone393_5.java 21 44
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

  public String getLongestSubstring (String s) {
    if (s.length() == 0) return null;
    char currChar = s.charAt(0);
    int startIndex = 0;
    int endIndex = 0;
    String longestString = "" + currChar;
    int longestLength = 1;
    for (int i = 1; i < s.length(); i++) {
        if (s.charAt(i) == currChar) {
            endIndex = i;
            String subString = s.substring(startIndex, endIndex+1);
            if (subString.length() > longestLength) {
                longestLength = subString.length();
                longestString = subString;
            }
        } else {
            currChar = s.charAt(i);
            startIndex = i;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
6
Gpt3D_Clone393_6.java 1 20
Gpt3D_Clone393_6.java 21 45
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring(String s) {
    if (s.length() == 0) return null;
    char currentChar = s.charAt(0);
    String longestString = "" + currentChar;
    int startIndex = 0;
    int endIndex = 0;
    int longestLength = 1;
    for (int i = 1; i < s.length(); i++) {
        if (s.charAt(i) == currentChar) {
            endIndex = i;
            String subString = s.substring(startIndex, endIndex + 1);
            if (subString.length() > longestLength) {
                longestLength = subString.length();
                longestString = subString;
            }
        }
        else {
            currentChar = s.charAt(i);
            startIndex = i;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
7
Gpt3D_Clone393_7.java 1 20
Gpt3D_Clone393_7.java 21 42
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

  public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    int maxLength = 1;
    int currentLength = 1;
    for (int i = 1; i < s.length (); i++) {
        if (s.charAt (i) == currentChar) {
            currentLength ++;
            if (currentLength > maxLength) {
                maxLength = currentLength;
                longestString = s.substring (i - maxLength + 1, i + 1);
            }
        } else {
            currentChar = s.charAt (i);
            currentLength = 1;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
8
Gpt3D_Clone393_8.java 1 20
Gpt3D_Clone393_8.java 21 43
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    int currentLength = 1;
    char currentChar = s.charAt(0);
    String longestString = "" + currentChar;
    int longestLength = 1;
    for (int i = 1; i < s.length(); i++) {
        if (s.charAt(i) == currentChar) {
            currentLength ++;
            if (currentLength > longestLength) {
                longestLength = currentLength;
                longestString = s.substring (i - longestLength + 1, i + 1);
            }
        }
        else {
            currentChar = s.charAt(i);
            currentLength = 1;
        } 
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
9
Gpt3D_Clone393_9.java 1 20
Gpt3D_Clone393_9.java 21 41
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

 public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    int currentLength = 1;
    String longestString = "" + s.charAt (0);
    int longestLength = 1;
    for (int i = 1; i < s.length (); i++) {
        if (s.charAt (i) == s.charAt (i - 1)) {
            currentLength ++;
            if (currentLength > longestLength) {
                longestLength = currentLength;
                longestString = s.substring (i - longestLength + 1, i + 1);
            }
        } else {
            currentLength = 1;
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
395
0
Gpt3D_Clone395_0.java 1 18
Gpt3D_Clone395_0.java 19 39
----------------------------------------

public ListNode switchPairs () {
    if (this == null || this.next == null) return this;
    ListNode top = this.next;
    ListNode first = this;
    ListNode second = first.next;
    do {
        ListNode third = second.next;
        second.next = first;
        first.next = third;
        first = third;
        System.out.println ("@@@ " + this.toString ());
        if (first != null) {
            second.next.next = first.next;
            second = first.next;
        }
    } while (first != null && second != null);
    return top;
}
----------------------------------------

 public ListNode switchPairs () {
	if (this == null || this.next == null) 
	    return this;
	ListNode top = this.next;
	ListNode first = this;
	ListNode second = first.next;
	do {
	    ListNode third = second.next;
	    second.next = first;
	    first.next = third;
	    first = third;
	    if (first != null && first.next != null && second !=null && second.next != null) {
		second.next.next = first.next.next;
		second = first.next;
	    }
	} while (first != null && first.next != null && second != null && second.next != null);
	return top;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
395
1
Gpt3D_Clone395_1.java 1 18
Gpt3D_Clone395_1.java 19 42
----------------------------------------

public ListNode switchPairs () {
    if (this == null || this.next == null) return this;
    ListNode top = this.next;
    ListNode first = this;
    ListNode second = first.next;
    do {
        ListNode third = second.next;
        second.next = first;
        first.next = third;
        first = third;
        System.out.println ("@@@ " + this.toString ());
        if (first != null) {
            second.next.next = first.next;
            second = first.next;
        }
    } while (first != null && second != null);
    return top;
}
----------------------------------------

 public ListNode switchPairs () {
	if (this == null || this.next == null)
	    return this;
	ListNode first = this, second = first.next;
	ListNode head = this.next;
	do{
	    ListNode temp = second.next;
	    second.next = first;
	    first.next = temp;
	    if(temp == null){
		break;
	    }
	    first = temp;
	    second = first.next;
	} while (second != null);
	return head; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
395
3
Gpt3D_Clone395_3.java 1 18
Gpt3D_Clone395_3.java 19 40
----------------------------------------

public ListNode switchPairs () {
    if (this == null || this.next == null) return this;
    ListNode top = this.next;
    ListNode first = this;
    ListNode second = first.next;
    do {
        ListNode third = second.next;
        second.next = first;
        first.next = third;
        first = third;
        System.out.println ("@@@ " + this.toString ());
        if (first != null) {
            second.next.next = first.next;
            second = first.next;
        }
    } while (first != null && second != null);
    return top;
}
----------------------------------------

 public ListNode switchPairs () {
	if (this == null || this.next == null) 
	    return this;
	ListNode first = this;
	ListNode second = first.next;
	ListNode head = this.next;
	while(first != null && second != null){
	    ListNode third = second.next;
	    second.next = first;
	    first.next = third;
	    first = third;
	    if(first != null){
		second = first.next;
	    }  
	}
	return head;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
399
2
Gpt3D_Clone399_2.java 1 12
Gpt3D_Clone399_2.java 13 29
----------------------------------------

public void contextDestroyed (ServletContextEvent sce) {
    Context initContext = new InitialContext ();
    Context envContext = (Context) initContext.lookup ("java:/comp/env");
    DataSource datasource = (DataSource) envContext.lookup ("jdbc/database");
    try {
        java.sql.Driver mySqlDriver = DriverManager.getDriver ("jdbc:mysql://localhost:3306/");
        DriverManager.deregisterDriver (mySqlDriver);
    } catch (SQLException ex) {
        logger.info ("Could not deregister driver:".concat (ex.getMessage ()));
    }
    dataSource = null;
}
----------------------------------------

 public void contextDestroyed (ServletContextEvent sce) {
        try {
            Context initContext = new InitialContext ();
            Context envContext = (Context) initContext.lookup ("java:/comp/env");
            DataSource datasource = (DataSource) envContext.lookup ("jdbc/database");
            Driver driver = new com.mysql.jdbc.Driver();
            DriverManager.deregisterDriver(driver);
        } catch (NamingException ex) {
            logger.error("NamingException while deregistering driver:".concat(ex.getMessage()), ex);
        } catch (SQLException ex) {
            logger.error("SQL Exception while deregistering driver:".concat(ex.getMessage()), ex);
        } finally {
            datasource = null;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
399
9
Gpt3D_Clone399_9.java 1 12
Gpt3D_Clone399_9.java 13 27
----------------------------------------

public void contextDestroyed (ServletContextEvent sce) {
    Context initContext = new InitialContext ();
    Context envContext = (Context) initContext.lookup ("java:/comp/env");
    DataSource datasource = (DataSource) envContext.lookup ("jdbc/database");
    try {
        java.sql.Driver mySqlDriver = DriverManager.getDriver ("jdbc:mysql://localhost:3306/");
        DriverManager.deregisterDriver (mySqlDriver);
    } catch (SQLException ex) {
        logger.info ("Could not deregister driver:".concat (ex.getMessage ()));
    }
    dataSource = null;
}
----------------------------------------

 public void contextDestroyed (ServletContextEvent sce){
        try {
            Context initContext = new InitialContext();
            Context envContext = (Context) initContext.lookup("java:/comp/env");
            DataSource datasource = (DataSource) envContext.lookup("jdbc/database");
            Driver drv = new com.mysql.jdbc.Driver();
            DriverManager.deregisterDriver(drv);
        } catch (NamingException|SQLException ex) {
            logger.error("Could not deregister driver:".concat(ex.getMessage()), ex);
        } finally {
            datasource = null;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
3
4
Gpt3D_Clone3_4.java 1 18
Gpt3D_Clone3_4.java 19 40
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

 public static void copyFolder(Path source, Path dest) {
    try (Stream<Path> stream = Files.walk(source)) {
        stream.forEach(path -> {
            try {
                Path des = dest.resolve(source.relativize(path));
                if (Files.isDirectory(path)) {
                    if (!Files.exists(des)) {
                        Files.createDirectory(des);
                    }
                    return;
                }
                Files.copy(path, des, StandardCopyOption.REPLACE_EXISTING);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
400
0
Gpt3D_Clone400_0.java 1 17
Gpt3D_Clone400_0.java 18 39
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                log.error ("Error deregistering JDBC driver {}", driver, ex);
            }
        } else {
            log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
        }
    }
}
----------------------------------------

 
public final void contextDestroyed (ServletContextEvent sce) {
    try {
        Iterator<Driver> drivers = DriverManager.getDrivers();
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        while (drivers.hasNext()) {
            Driver driver = drivers.next();
            if (driver.getClass().getClassLoader() == cl) {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver(driver);
            } else {
                log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
            }
        }
    } catch (SQLException ex) {
        log.error ("Error deregistering JDBC driver {}", driver, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
400
1
Gpt3D_Clone400_1.java 1 17
Gpt3D_Clone400_1.java 18 38
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                log.error ("Error deregistering JDBC driver {}", driver, ex);
            }
        } else {
            log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
        }
    }
}
----------------------------------------

 
public final void contextDestroyed (ServletContextEvent sce) {
    try {
        Enumeration<Driver> drivers = DriverManager.getDrivers ();
        ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
        while (drivers.hasMoreElements ()) {
            Driver driver = drivers.nextElement ();
            if (driver.getClass ().getClassLoader () == cl) {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } else {
                log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
            }
        }
    } catch (SQLException ex) {
        log.error ("Error deregistering JDBC driver {}", driver, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
400
2
Gpt3D_Clone400_2.java 1 17
Gpt3D_Clone400_2.java 18 38
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                log.error ("Error deregistering JDBC driver {}", driver, ex);
            }
        } else {
            log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
        }
    }
}
----------------------------------------

 
public final void contextDestroyed (ServletContextEvent sce) {
    try {
        List<Driver> drivers = DriverManager.getDrivers();
        for (Driver driver : drivers) {
            ClassLoader cl = Thread.currentThread().getContextClassLoader();
            if (driver.getClass().getClassLoader() == cl) {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver(driver);
            } else {
                log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
            }
        }
    } catch (SQLException ex) {
        log.error ("Error deregistering JDBC driver {}", driver, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
400
3
Gpt3D_Clone400_3.java 1 17
Gpt3D_Clone400_3.java 18 36
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                log.error ("Error deregistering JDBC driver {}", driver, ex);
            }
        } else {
            log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
        }
    }
}
----------------------------------------

 
public final void contextDestroyed (ServletContextEvent sce) {
    try {
        ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
        while (DriverManager.getDrivers ().hasMoreElements ()) {
            Driver driver = DriverManager.getDrivers ().nextElement ();
            if (driver.getClass ().getClassLoader () == cl) {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } else {
                log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
            }
        }
    } catch (SQLException ex) {
        log.error ("Error deregistering JDBC driver {}", driver, ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
0
Gpt3D_Clone404_0.java 1 20
Gpt3D_Clone404_0.java 21 39
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel iconPanel = new JPanel (new FlowLayout());
JPanel grid = new JPanel (new BorderLayout());
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
iconPanel.add(firewallButton);
iconPanel.add(networkButton);
iconPanel.add(printerButton);
grid.add(iconPanel, BorderLayout.NORTH);
frame.add(grid);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
1
Gpt3D_Clone404_1.java 1 20
Gpt3D_Clone404_1.java 21 38
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel grid = new JPanel(new GridLayout(3, 2));
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
grid.add(firewallButton);
grid.add(networkButton);
grid.add(printerButton);
grid.setBackground(Color.GREEN);
frame.add(grid);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
2
Gpt3D_Clone404_2.java 1 20
Gpt3D_Clone404_2.java 21 39
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel grid = new JPanel(new GridLayout(2, 2));
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
grid.add(firewallButton);
grid.add(networkButton);
grid.add(printerButton);
grid.setBackground(Color.GREEN);
frame.add(grid);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
3
Gpt3D_Clone404_3.java 1 20
Gpt3D_Clone404_3.java 21 37
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel iconPanel = new JPanel (new CardLayout());
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
iconPanel.add(firewallButton);
iconPanel.add(networkButton);
iconPanel.add(printerButton);
frame.add(iconPanel);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
4
Gpt3D_Clone404_4.java 1 20
Gpt3D_Clone404_4.java 21 37
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel iconPanel = new JPanel (new BoxLayout(iconPanel, BoxLayout.LINE_AXIS));
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
iconPanel.add(firewallButton);
iconPanel.add(networkButton);
iconPanel.add(printerButton);
frame.add(iconPanel);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
5
Gpt3D_Clone404_5.java 1 20
Gpt3D_Clone404_5.java 21 37
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
JFrame frame = new JFrame ("Application Name");
JPanel iconPanel = new JPanel (new FlowLayout());
JButton firewallButton = new JButton ("Firewall");
JButton networkButton = new JButton ("Network");
JButton printerButton = new JButton ("Printer");
iconPanel.add(firewallButton);
iconPanel.add(networkButton);
iconPanel.add(printerButton);
frame.add(iconPanel);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
406
6
Gpt3D_Clone406_6.java 1 24
Gpt3D_Clone406_6.java 25 55
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci = 0, i = 0, j = 0, k = 0, l = 0;
    String str = null, str1 = null, result = null, subString = null;
    char c1 = 'A', c2 = 'A', ch = '';
    Scanner scan = new Scanner(System.in);
    System.out.print("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    while (c1 < 'z') {
        int c2Parser = 'A';
        while (c2Parser <= 'z') {
            result = new String(new char[]{c1, c2Parser});
            k = 0;
            int jParser = 0;
            while (jParser < i - 1) {
                subString = str.substring(jParser, jParser + 2);
                if (result.equals(subString)) {
                    k++;
                }
                jParser++;
            }
            if (k > 0) {
                System.out.println("" + result + ": " + k);
            }
            c2Parser++;
        }
        c1++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
406
7
Gpt3D_Clone406_7.java 1 24
Gpt3D_Clone406_7.java 25 55
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci = 0, i = 0, j = 0, k = 0, l = 0;
    String str = null, str1 = null, result = null, subString = null;
    char c1 = 'A', c2 = 'A', ch = '';
    Scanner scan = new Scanner(System.in);
    System.out.print("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    while (c1 <= 'z') {
        while (c2 <= 'z') {
            result = new String(new char[]{c1, c2});
            k = 0;
            int jParser = 0;
            while (jParser < i - 1) {
                subString = str.substring(jParser, jParser + 2);
                if (result.equals(subString)) {
                    k++;
                }
                jParser++;
            }
            if (k > 0) {
                System.out.println("" + result + ": " + k);
            }
            c2++;
        }
        c1++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
406
8
Gpt3D_Clone406_8.java 1 24
Gpt3D_Clone406_8.java 25 54
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci = 0, i = 0, j = 0, k = 0, l = 0;
    String str = null, str1 = null, result = null, subString = null;
    char c1 = 'A', c2 = 'A', ch = '';
    Scanner scan = new Scanner(System.in);
    System.out.print("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    for (c1 = 'A'; c1 <= 'z'; c1++) {
        int c2Parser = 'A';
        while (c2Parser <= 'z') {
           result = new String(new char[]{c1, c2Parser});
           k = 0;
           j = 0;
           while (j < i - 1) {
               subString = str.substring(j, j + 2);
               if (result.equals(subString)) {
                   k++;
               }
               j++;
           }
           if (k > 0) {
               System.out.println("" + result + ": " + k);
           }
           c2Parser++;
       }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
406
9
Gpt3D_Clone406_9.java 1 24
Gpt3D_Clone406_9.java 25 52
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci = 0, i = 0, j = 0, k = 0, l = 0;
    String str = null, str1 = null, result = null, subString = null;
    char c1 = 'A', c2 = 'A', ch = '';
    Scanner scan = new Scanner(System.in);
    System.out.print("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    for (c1 = 'A'; c1 < 'z'; c1++) {
        for (c2 = 'A'; c2 <= 'z'; c2++) {
            result = new String(new char[]{c1, c2});
            k = 0;
            int jParser = 0;
            while (jParser < i - 1) {
                subString = str.substring(jParser, jParser + 2);
                if (result.equals(subString)) {
                    k++;
                }
                jParser++;
            }
            if (k > 0) {
                System.out.println("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
407
0
Gpt3D_Clone407_0.java 1 24
Gpt3D_Clone407_0.java 25 52
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            char[] chars = str.toCharArray();
            for (int x = 0; x < chars.length-2; x +=2) {
                char first = chars[x];
                char second = chars[x+1];
                if (Character.valueOf(c1) == first && Character.valueOf(c2) == second ) {
                    k++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
407
1
Gpt3D_Clone407_1.java 1 24
Gpt3D_Clone407_1.java 25 54
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

 public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine();
    i = str.length();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j += 2) {
           	ch = str.charAt (j);
		 	if (c1 == ch) {
		        char ch2 = str.charAt (j+1);
		        if (c2 == ch2) {
		          k++;
		        }
		    }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
0
Gpt3D_Clone40_0.java 1 10
Gpt3D_Clone40_0.java 11 23
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    int n = a.length;
        for (int i = 0; i < n; i++) {
        int min = i;
        int max = n-1;
        int r = min + (int)(Math.random()*(max - min + 1));
            Object temp = a[i];
            a[i] = a[r];
            a[r] = temp;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
1
Gpt3D_Clone40_1.java 1 10
Gpt3D_Clone40_1.java 11 22
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    Random rand = new Random(); 
    int n = a.length;
    for (int i = 0; i < n; i++) { 
        int j = rand.nextInt(n - 1 - i) + i; 
        Object temp = a[i]; 
        a[i] = a[j]; 
        a[j] = temp; 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
2
Gpt3D_Clone40_2.java 1 10
Gpt3D_Clone40_2.java 11 22
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
     Random rand = new Random(); 
     int n = a.length;
     for (int i = 0; i < n; i++) { 
        int j = (int) (rand.nextDouble() * (n - i) + i); 
        Object temp = a[i]; 
        a[i] = a[j]; 
        a[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
3
Gpt3D_Clone40_3.java 1 10
Gpt3D_Clone40_3.java 11 22
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0; i < n; i++) {
        int dif = n-i;
        int r =  (int)(Math.random() * dif) + i;
        Object temp = a[i]; 
        a[i] = a[r];
        a[r] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
4
Gpt3D_Clone40_4.java 1 10
Gpt3D_Clone40_4.java 11 21
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0; i < n; i++) {
        int r = (int) (Math.random() * (n - i));
        Object temp = a[i]; 
        a[i] = a[r + i]; 
        a[r + i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
40
5
Gpt3D_Clone40_5.java 1 10
Gpt3D_Clone40_5.java 11 21
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
     Random rand = new Random(); 
     for (int i = 0; i < a.length; i++) { 
        int j = (int) (rand.nextDouble() * a.length - i + i); 
        Object temp = a[i]; 
        a[i] = a[j]; 
        a[j] = temp; 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
410
0
Gpt3D_Clone410_0.java 1 26
Gpt3D_Clone410_0.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int partDivider = getPartDivider ();
    String high, low;
    if (value.length () >= partDivider) {
        int index = value.length () - partDivider;
        high = value.substring (0, index);
        low = value.substring (index);
    } else {
        high = "";
        low = value;
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
410
1
Gpt3D_Clone410_1.java 1 26
Gpt3D_Clone410_1.java 27 53
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int partDivider = getPartDivider();
    String highPart, lowPart;
    if (value.length () >= partDivider) {
        int index = value.length () - partDivider;
        highPart = value.substring (0, index);
        lowPart = value.substring (index);
    } else {
        highPart = "";
        lowPart = value;
    }
    String highName = getHighProcessor ().getName (highPart);
    String lowName = getLowProcessor ().getName (lowPart);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        buffer.append (SEPARATOR);
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
410
2
Gpt3D_Clone410_2.java 1 26
Gpt3D_Clone410_2.java 27 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int totalLength = value.length();
    int partDivider = getPartDivider();
    if (totalLength >= partDivider) {
        String prefix = value.substring(0, totalLength - partDivider);
        String suffix = value.substring(totalLength - partDivider);
        String highName = getHighProcessor().getName(prefix);
        String lowName = getLowProcessor().getName(suffix);
        if (!highName.isEmpty()) {
            buffer.append(highName);
            buffer.append(SEPARATOR);
            buffer.append(getToken());
            buffer.append(SEPARATOR);
        }
        if (!lowName.isEmpty()) {
            buffer.append(lowName);
        }
    } else {
        String lowName = getLowProcessor().getName(value);
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
410
3
Gpt3D_Clone410_3.java 1 26
Gpt3D_Clone410_3.java 27 53
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int startIndex, endIndex;
    if (value.length () < getPartDivider ()) {
        startIndex = 0;
        endIndex = value.length ();
    } else {
        startIndex = 0;
        endIndex = getPartDivider ();
    }
    String highName = getHighProcessor ().getName (value.substring (startIndex, endIndex));
    String lowName = getLowProcessor ().getName (value.substring (endIndex));
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
412
0
Gpt3D_Clone412_0.java 1 26
Gpt3D_Clone412_0.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public  String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high = "";
   String low = "";
   
   int partDivider = getPartDivider();
   if (value.length () < partDivider) {
      high = "";
      low = value;
   } else {
      int index = value.length () - partDivider;
      high = value.substring (index);
      low = value.substring (0, index);
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (! "".equals (highName)) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (! "".equals (lowName)) {
         buffer.append (SEPARATOR);
      }
   }
   if (! "".equals (lowName)) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
412
5
Gpt3D_Clone412_5.java 1 26
Gpt3D_Clone412_5.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
   StringBuilder buffer = new StringBuilder();
   String high, low;
   int divider = getPartDivider();
   if(value.length() < divider) {
      high = "";
      low = value;
   } else {
      int index = value.length() - divider;
      high = value.substring(index);
      low = value.substring(0, index);
   }
   
   String highName = getHighProcessor().getName(high);
   String lowName = getLowProcessor().getName(low);
   
   // Check if highName string isn't empty
   if (!highName.equals("")) {
      buffer.append(highName).append(SEPARATOR).append(getToken());
      // Check if lowName string isn't empty
      if (!lowName.equals("")) {
         buffer.append(SEPARATOR);
      }
   }
   if (!lowName.equals("")) {
      buffer.append(lowName);
   }
   return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
412
6
Gpt3D_Clone412_6.java 1 26
Gpt3D_Clone412_6.java 27 56
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
   StringBuilder result = new StringBuilder();
   String high, low;
   int divider = getPartDivider();
   if(value.length() < divider) {
      high = "";
      low = value;
   } else {
      high = value.substring(0, value.length() - divider);
      low = value.substring(value.length() - divider);
   }
   
   String highName = getHighProcessor().getName(high);
   String lowName = getLowProcessor().getName(low);
   
   // Check if highName string isn't empty
   if (!highName.equals("")) {
      result.append(highName).append(SEPARATOR).append(getToken());
      // Check if lowName string isn't empty
      if (!lowName.equals("")) {
         result.append(SEPARATOR);
      }
   }
   if (!lowName.equals("")) {
      result.append(lowName);
   }
   return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
0
Gpt3D_Clone413_0.java 1 32
Gpt3D_Clone413_0.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 	public String getName (String value) {
		boolean mark = false;
		if (value.startsWith ("-")) {
			mark = true;
			value = value.substring (1);
		}
		int index = value.indexOf (".");
		String decimalval = null;
		if (0 <= index) {
			decimalval = value.substring (index + 1);
			value = value.substring (0, index);
		}
		String name = processor.getName (value);
		if (name.equals ("")) {
			name = ZERO_TOKEN;
		} else if (mark) {
			name = MINUS + SEPARATOR + name;
		}
		if (decimalval != null && !decimalval.equals ("")) {
			String zerodecimalval = "";
			for (int i = 0; i < decimalval.length (); i++) {
				zerodecimalval += "0";
			}
			if (decimalval.equals (zerodecimalval)) {
				name += SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName (- decimalval.length ());
			} else {
				name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName (decimalval) + SEPARATOR + SCALE.getName (- decimalval.length ());
			}
		}
		return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
1
Gpt3D_Clone413_1.java 1 32
Gpt3D_Clone413_1.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 	public String getName (String value) {
		boolean isNegative = false;
		if (value.startsWith("-")) {
			isNegative = true;
			value = value.substring(1);
		}
		
		int decimalPosition = value.indexOf(".");
		String decimalValue = null;
		if (0 <= decimalPosition) {
			decimalValue = value.substring (decimalPosition + 1);
			value = value.substring (0, decimalPosition);
		}
		String name = processor.getName(value);
		if (name.length() == 0) {
			name = ZERO_TOKEN;
		} else if (isNegative) {
			name = MINUS + SEPARATOR + name;
		}
		
		if (decimalValue != null && !decimalValue.equals("")) {
			String zeroDecimalsValue = "";
			for (int i = 0; i < decimalValue.length(); i++) {
				zeroDecimalsValue += "0";
			}
			if (decimalValue.equals(zeroDecimalsValue)) {
				name += SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName(- decimalValue.length());
			} else {
				name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(- decimalValue.length());	
			}
		}
		return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
2
Gpt3D_Clone413_2.java 1 32
Gpt3D_Clone413_2.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 	public String getName (String value) {
		boolean negative = false;
		if (value.startsWith ("-")) {
			negative = true;
			value = value.substring (1);
		}
		int iPos = value.indexOf (".");
		String decVal = null;
		if (0 <= iPos) {
			decVal = value.substring (iPos + 1);
			value = value.substring (0, iPos);
		}
		String name = processor.getName (value);
		if (name.isEmpty()) {
			name = ZERO_TOKEN;
		} else if (negative) {
			name = MINUS + SEPARATOR + name;
		}
		if (decVal != null && !decVal.isEmpty()) {
			String zerodecVal = "";
			for (int i = 0; i < decVal.length (); i++) {
				zerodecVal += "0";
			}
			if (decVal.equals (zerodecVal)) {
				name += SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName (- decVal.length ());
			} else {
				name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName (decVal) + SEPARATOR + SCALE.getName (- decVal.length ());
			}
		}
		return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
3
Gpt3D_Clone413_3.java 1 32
Gpt3D_Clone413_3.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 	public String getName (String value) {
		boolean sign = false;
		if (value.startsWith ("-")) {
			sign = true;
			value = value.substring (1);
		}
		int position = value.indexOf (".");
		String decimalNum = null;
		if (0 <= position) {
			decimalNum = value.substring (position + 1);
			value = value.substring (0, position);
		}
		String name = processor.getName(value);
		if (name.equals("")) {
			name = ZERO_TOKEN;
		} else if (sign) {	
			name = MINUS + SEPARATOR + name;
		}
		if (decimalNum != null && !decimalNum.equals("")) {
			String zeroString = "";
			for (int i = 0; i < decimalNum.length(); i++) {
				zeroString += "0";
			}
			if (decimalNum.equals (zeroString)) {
				name = name + SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName(- decimalNum.length());
			} else {
				name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName (decimalNum) + SEPARATOR + SCALE.getName(- decimalNum.length());
			}
		}
		return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
4
Gpt3D_Clone413_4.java 1 32
Gpt3D_Clone413_4.java 33 66
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 	public String getName (String value) {
		boolean isNegative = false;
		if (value.startsWith("-")) {
			isNegative = true;
			value = value.substring(1);
		}
		
		int decimalPosition = value.indexOf(".");
		String decimalValue = null;
		if (0 <= decimalPosition) {
			decimalValue = value.substring (decimalPosition + 1);
			value = value.substring (0, decimalPosition);
		}
		String name = processor.getName(value);
		if (name.equals("")) {
			name = ZERO_TOKEN;
		} else if (isNegative) {
			name = MINUS + SEPARATOR + name;
		}
		if (decimalValue != null && !decimalValue.equals("")) {
			String allzerocomprisedDecimalValue = "";
			for (int i = 0; i < decimalValue.length(); i++) {
				allzerocomprisedDecimalValue += "0";
			}
			if (decimalValue.equals(allzerocomprisedDecimalValue)) {
				name += SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName(- decimalValue.length());
			} else {
				name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(- decimalValue.length());
			}
		}
		return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
0
Gpt3D_Clone415_0.java 1 23
Gpt3D_Clone415_0.java 24 67
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    // check if the value is not empty
    if (value == null || value.length() == 0) {
        number = 0;
    }
    else {
        // if the length of value is more than 4
        if (value.length() > 4) {
            String lastFour = value.substring(value.length() - 4);
            int parsedNumber = Integer.parseInt(lastFour);
            // check if that number has 4 digits
            if (String.valueOf(parsedNumber).length() == 4) {
                number = parsedNumber;
            } else {
                number = Integer.valueOf(value, 10);
            }
        } else { // if the given value's length is not more than 4
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
1
Gpt3D_Clone415_1.java 1 23
Gpt3D_Clone415_1.java 24 64
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value.equals("") || value == null) {
        number = 0;
    }
    else {
        // if the length of value is more than 4
        if(value.length() > 4) {
            // converting the last 4 characters to integer
            int lastFourDigits = Integer.parseInt(value.substring(value.length()-4));
            // validating if the 4 digits is of length 4
            if(String.valueOf(lastFourDigits).length() == 4) {
                number = lastFourDigits;
            }
            else { // when the value does not contain 4 digits
                number = Integer.valueOf(value, 10);
            }
        }
        else { // when the length of value is less than 4
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
2
Gpt3D_Clone415_2.java 1 23
Gpt3D_Clone415_2.java 24 59
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    // check if the value is not empty
    if (value == null || value.length() == 0) {
        number = 0;
    } 
    else {                     
        // check if the length of value is more than 4
        if (value.length() > 4) {
            String lastFour = value.substring(value.length() - 4);
            if (lastFour.length() == 4) {
                number = Integer.parseInt(lastFour);
            } else {
                number = Integer.valueOf(value, 10);
            }
        } else { // if the value is less than or equal to 4
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
3
Gpt3D_Clone415_3.java 1 23
Gpt3D_Clone415_3.java 24 58
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals(value) || value == null) {
        number = 0;
    }
    else {
        if(value.length() > 4) {
            int lastFourDigits = Integer.valueOf(value.substring(value.length() - 4));
            if(String.valueOf(lastFourDigits).length() == 4) {
                number = lastFourDigits;
            }
            else {
                number = Integer.parseInt(value, 10);
            }
        }
        else {
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
4
Gpt3D_Clone415_4.java 1 23
Gpt3D_Clone415_4.java 24 62
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    // check value is not empty
    if (value == null || value.length() == 0) {
        number = 0;
    } 
    else { // if the value is not empty
    
        // check if the length of value is more than 4
        if (value.length() > 4) {
            int fourDigitNumber = Integer.parseInt(value.substring(value.length() - 4));
            
            // validate if that number has 4 digits
            if (String.valueOf(fourDigitNumber).length() == 4) {
                number = fourDigitNumber;
            } else {
                number = Integer.valueOf(value, 10);
            }
        } else {
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
5
Gpt3D_Clone415_5.java 1 23
Gpt3D_Clone415_5.java 24 64
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    // check if value is valid
    if (value.equals("")) {
        number = 0;
    } 
    else {   
        // Check if length of value is greater than 4
        if (value.length() > 4) {
            // getting the last four digits of the value
            int lastFourDigits = Integer.parseInt(value.substring(value.length()-4));
            // check if the four digits are of length 4
            if (String.valueOf(lastFourDigits).length() == 4) {
                // assigning last four digits to the number 
                number = lastFourDigits;
            }
            else {
                number = Integer.valueOf(value, 10);
            }
        }
        else { // when length of value is less than 4
            number = Integer.valueOf(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
415
6
Gpt3D_Clone415_6.java 1 23
Gpt3D_Clone415_6.java 24 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals(value) || value == null) {
        number = 0;
    }
    else {
        int lastFourDigits;
        if(value.length() > 4) {
            lastFourDigits = Integer.valueOf(value.substring(value.length() - 4));
            // We don't need to check the length if it is more than 4
            number = lastFourDigits;
        }
        else {
            number = Integer.parseInt(value, 10);
        }
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
0
Gpt3D_Clone416_0.java 1 26
Gpt3D_Clone416_0.java 27 62
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName;
    String lowName;
    if (value.length() % 2 == 0) {
        highName = getHighProcessor().getName(high);
        lowName = getLowProcessor().getName(low);
    }
    else {
        highName = getLowProcessor().getName(high);
        lowName = getHighProcessor().getName(low);
    }
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
1
Gpt3D_Clone416_1.java 1 26
Gpt3D_Clone416_1.java 27 62
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName;
    String lowName;
    if (value.length() == 1) {
        highName = getHighProcessor().getName(value);
        lowName = "";
    }
    else {
        highName = getHighProcessor().getName(high);
        lowName = getLowProcessor().getName(low);
    }
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
2
Gpt3D_Clone416_2.java 1 26
Gpt3D_Clone416_2.java 27 62
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    if (value.length () == 0) {
        high = "";
        low = "";
    }
    else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName;
    String lowName;
    if (value.length() % 5 == 0) {
        highName = getHighProcessor().getName(high);
        lowName = getLowProcessor().getName(low);
    }
    else {
        highName = getLowProcessor().getName(high);
        lowName = getHighProcessor().getName(low);
    }
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
3
Gpt3D_Clone416_3.java 1 26
Gpt3D_Clone416_3.java 27 53
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    if (value.length() == 1){
        buffer.append(getHighProcessor().getName(value));
    }
    else {
        int index = value.length() / getPartDivider();
        String high = value.substring(0, index);
        String low = value.substring(index);
        String highName = getHighProcessor().getName(high);
        String lowName = getLowProcessor().getName(low);
        if (! "".equals (highName)) {
            buffer.append (highName);
            buffer.append (SEPARATOR);
            buffer.append (getToken ());
            if (! "".equals (lowName)) {
                buffer.append (SEPARATOR);
            }
        }
        if (! "".equals (lowName)) {
            buffer.append (lowName);
        }
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
4
Gpt3D_Clone416_4.java 1 26
Gpt3D_Clone416_4.java 27 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int index;
    if (value.length() > getPartDivider()){
        index = value.length() - getPartDivider();
    }
    else {
        index = value.length();
    }
    String highName = getHighProcessor().getName(value.substring(0, index));
    String lowName = getLowProcessor().getName(value.substring(value.length() - getPartDivider()));
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
5
Gpt3D_Clone416_5.java 1 26
Gpt3D_Clone416_5.java 27 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int index = value.length() / 2;
    String high = value.substring(0, index);
    String low = value.substring(index);
    String highName = getHighProcessor().getName(high);
    String lowName = getLowProcessor().getName(low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
6
Gpt3D_Clone416_6.java 1 26
Gpt3D_Clone416_6.java 27 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int index = value.length() / getPartDivider ();
    String high = value.substring(0, index);
    String low = value.substring(index);
    String highName = getHighProcessor().getName(high);
    String lowName = getLowProcessor().getName(low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
416
7
Gpt3D_Clone416_7.java 1 26
Gpt3D_Clone416_7.java 27 47
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int endIndex = value.length() / getPartDivider ();
    int startIndex = 0;
    String highName = getHighProcessor().getName(value.substring(startIndex, endIndex));
    String lowName = getLowProcessor().getName(value.substring(endIndex));
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
1
Gpt3D_Clone417_1.java 1 32
Gpt3D_Clone417_1.java 33 72
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name;
    if (negative) {
        name = "Minus" + SEPARATOR;
    } else {
        name = "";
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        } else {
            name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        }
    }
    if (name.equals("")) {
        if (value.equals("") || null == value) {
            name = ZERO_TOKEN;
        } else {
            name = processor.getName(value);
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
2
Gpt3D_Clone417_2.java 1 32
Gpt3D_Clone417_2.java 33 73
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name;
    if (negative) {
        name = "Minus" + SEPARATOR;
    } else {
        name = "";
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue += "0";
        }
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        } else {
            name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        }
    }
    if (name.equals("")) {
        if (value != null && !value.equals("")) {
            name = processor.getName(value);
        }
        if ("".equals(name)) {
            name = ZERO_TOKEN;
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
4
Gpt3D_Clone417_4.java 1 32
Gpt3D_Clone417_4.java 33 71
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name;
    if (negative) {
        name = "Minus" + SEPARATOR;
    } else {
        name = "";
    }
    if (null != decimalValue && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue += "0";
        }
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        } else {
            name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        }
    }
    if (name.equals("")) {
        name = processor.getName(value);
        if ("".equals(name)) {
            name = ZERO_TOKEN;
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
5
Gpt3D_Clone417_5.java 1 32
Gpt3D_Clone417_5.java 33 71
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
   boolean negative = false;
   if (value.startsWith("-")) {
       negative = true;
       value = value.substring(1);
   }
   int decimals = value.indexOf(".");
   String decimalValue = null;
   if (0 <= decimals) {
       decimalValue = value.substring(decimals + 1);
       value = value.substring(0, decimals);
   }
   String name;
   if (negative) {
       name = "Minus" + SEPARATOR;
   } else {
       name = "";
   }
   if (decimalValue != null && !decimalValue.equals("")) {
       String zeroDecimalValue = "";
       for (int i = 0; i < decimalValue.length(); i++) {
           zeroDecimalValue = zeroDecimalValue + "0";
       }
       if (decimalValue.equals(zeroDecimalValue)) {
           name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
       } else {
           name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
       }
   }
   if (name.equals("")) {
       name = processor.getName(value);
       if (name.equals("")) {
           name = ZERO_TOKEN;
       }
   }
   return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
6
Gpt3D_Clone417_6.java 1 32
Gpt3D_Clone417_6.java 33 71
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name;
    if (negative) {
        name = "Minus" + SEPARATOR;
    } else {
        name = "";
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue += "0";
        }
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        } else {
            name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        }
    }
    if (name.equals("")) {
        name = processor.getName(value);
        if ("".equals(name)) {
            name = ZERO_TOKEN;
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
7
Gpt3D_Clone417_7.java 1 32
Gpt3D_Clone417_7.java 33 71
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name;
    if (negative) {
        name = "Minus" + SEPARATOR;
    } else {
        name = "";
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue +="0";
        }
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        } else {
            name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        }
    }
    if (name.equals("")) {
        name = processor.getName(value);
        if (name.equals("")) {
            name = ZERO_TOKEN;
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
8
Gpt3D_Clone417_8.java 1 32
Gpt3D_Clone417_8.java 33 70
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName(String value) {
   boolean negative = false;
   if (value.startsWith("-")) {
       negative = true;
       value = value.substring(1);
   }
   int decimals = value.indexOf(".");
   String decimalValue = null;
   if (0 <= decimals) {
       decimalValue = value.substring(decimals + 1);
       value = value.substring(0, decimals);
   }
   String name;
   if (negative) {
       name = "Minus" + SEPARATOR;
   } else {
       name = "";
   }
   if (!(null == decimalValue || "".equals(decimalValue))) {
       String zeroDecimalValue = "";
       for (int i = 0; i < decimalValue.length(); i++) {
           zeroDecimalValue = zeroDecimalValue + "0";
       }
       if (decimalValue.equals(zeroDecimalValue)) {
           name = name.concat("Zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
       } else {
           name = name.concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
       }
   } else {
       name = processor.getName(value);
       if ("".equals(name)) {
           name = ZERO_TOKEN;
       }
   }
   return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
0
Gpt3D_Clone418_0.java 1 26
Gpt3D_Clone418_0.java 27 44
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value){
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    String[] str = {highName, getToken (), lowName};
    return String.join(SEPARATOR, str);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
2
Gpt3D_Clone418_2.java 1 26
Gpt3D_Clone418_2.java 27 42
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    return highName + SEPARATOR + getToken () + SEPARATOR + lowName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
0
Gpt3D_Clone41_0.java 1 10
Gpt3D_Clone41_0.java 11 23
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    Random rand = new Random();
    int shuffles = a.length * 2;
    for (int i = 0; i < shuffles; i++) {
        int firstIndex = rand.nextInt(a.length);
        int secondIndex = rand.nextInt(a.length);
        Object temp = a[firstIndex];
        a[firstIndex] = a[secondIndex];
        a[secondIndex] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
1
Gpt3D_Clone41_1.java 1 10
Gpt3D_Clone41_1.java 11 21
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
	for (int i= a.length; i > 0;i--) {
		Random num = new Random();
		int index = num.nextInt(i);
		Object temp = a[i];
		a[i] = a[index];
		a[index] = temp;
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
2
Gpt3D_Clone41_2.java 1 10
Gpt3D_Clone41_2.java 11 23
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    for (int i = 0; i < a.length-1; i++) {
        for (int j = i+1; j < a.length; j++) {
            if (Math.random() < 0.5) {
                Object temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
3
Gpt3D_Clone41_3.java 1 10
Gpt3D_Clone41_3.java 11 21
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
	for (int i = 0; i < a.length; i++) {
		Random rand = new Random();
		int randomIndex = rand.nextInt(a.length - i) + i;
		Object temp = a[i];
		a[i] = a[randomIndex];
		a[randomIndex] = temp;
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
4
Gpt3D_Clone41_4.java 1 10
Gpt3D_Clone41_4.java 11 22
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    for(int i=0; i<a.length; i++) {
    	Random rand = new Random();
    	int randomIndex = rand.nextInt(a.length);
    	Object temp = a[randomIndex];
    	a[randomIndex] = a[i];
    	a[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
5
Gpt3D_Clone41_5.java 1 10
Gpt3D_Clone41_5.java 11 20
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
 	for (int i = a.length - 1; i > 0; i--) {
	      int index = (int) (Math.random() * (i + 1));
	      Object temp = a[index];
	      a[index] = a[i];
	      a[i] = temp;
 	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
6
Gpt3D_Clone41_6.java 1 10
Gpt3D_Clone41_6.java 11 20
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

 public static void shuffle (Object [] a) {
    for (int i = 0; i < a.length; i++) {
        Object temp = a[i];
        int randomIndex = (int)(Math.random() * a.length);
        a[i] = a[randomIndex];
        a[randomIndex] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
0
Gpt3D_Clone422_0.java 1 26
Gpt3D_Clone422_0.java 27 59
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    int index = 0;
    int partDivider = getPartDivider();
    StringBuilder buffer = new StringBuilder();
    String high, low, highName, lowName;
    if (value.length() < partDivider) {
        high = "";
        low = value;
    }
    else {
        index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    highName = getHighProcessor().getName(high);
    lowName = getLowProcessor().getName(low);
    if (!highName.equals("")) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (!lowName.equals("")) {
            buffer.append(SEPARATOR);
        }
    }
    if (!lowName.equals("")) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
1
Gpt3D_Clone422_1.java 1 26
Gpt3D_Clone422_1.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    int partDivider = getPartDivider(); 
    StringBuilder buffer = new StringBuilder(); 
    String high, low, highName, lowName; 
    if (value.length() < partDivider) { 
        high = "";
        low = value;
    }
    else {
        int index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    highName = getHighProcessor().getName(high);
    lowName = getLowProcessor().getName(low);
    if (!highName.equals("")) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (!lowName.equals("")) {
            buffer.append(SEPARATOR);
        }
    }
    if (!lowName.equals("")) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
2
Gpt3D_Clone422_2.java 1 26
Gpt3D_Clone422_2.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    int partDivider = getPartDivider ();
    if (value.length () < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length () - partDivider;
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.isEmpty ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.isEmpty ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.isEmpty ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
3
Gpt3D_Clone422_3.java 1 26
Gpt3D_Clone422_3.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    int partDivider = getPartDivider (); 
    StringBuilder buffer = new StringBuilder (); 
    String high, low, highName, lowName; 
    if (value.length () < partDivider) { 
        high = "";
        low = value;
    }
    else {
        int index = value.length () - partDivider;
        high = value.substring (0, index);
        low = value.substring (index);
    }
    highName = getHighProcessor ().getName (high);
    lowName = getLowProcessor ().getName (low);
    if (! highName.isBlank ()) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (!lowName.isBlank ()) {
            buffer.append (SEPARATOR);
        }
    }
    if (!lowName.isBlank ()) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
4
Gpt3D_Clone422_4.java 1 26
Gpt3D_Clone422_4.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    int partDivider = getPartDivider();
    StringBuilder buffer = new StringBuilder();
    String high, low, highName, lowName;
    if (value.length() < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    highName = getHighProcessor().getName(high);
    lowName = getLowProcessor().getName(low);
    if (highName.length() != 0) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (lowName.length() != 0) {
            buffer.append(SEPARATOR);
        }
    }
    if (lowName.length() != 0) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
5
Gpt3D_Clone422_5.java 1 26
Gpt3D_Clone422_5.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    int partDivider = getPartDivider();
    StringBuilder buffer = new StringBuilder();
    String high, low, highName, lowName;
    if (value.length() < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    highName = getHighProcessor().getName(high);
    lowName = getLowProcessor().getName(low);
    if (!highName.isEmpty()) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (!lowName.isEmpty()) {
            buffer.append(SEPARATOR);
        }
    }
    if (!lowName.isEmpty()) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
6
Gpt3D_Clone422_6.java 1 26
Gpt3D_Clone422_6.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    int partDivider = getPartDivider ();
    if (value.length () < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length () - partDivider;
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.equalsIgnoreCase("")) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.equalsIgnoreCase("")) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.equalsIgnoreCase("")) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
7
Gpt3D_Clone422_7.java 1 26
Gpt3D_Clone422_7.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    String high, low;
    int partDivider = getPartDivider();
    if (value.length() < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    String highName = getHighProcessor().getName(high);
    String lowName = getLowProcessor().getName(low);
    if (!highName.trim().isEmpty()) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (!lowName.trim().isEmpty()) {
            buffer.append(SEPARATOR);
        }
    }
    if (!lowName.trim().isEmpty()) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
422
8
Gpt3D_Clone422_8.java 1 26
Gpt3D_Clone422_8.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    int partDivider = getPartDivider();
    StringBuilder buffer = new StringBuilder();
    String high, low, highName, lowName;
    if (value.length() < partDivider) {
        high = "";
        low = value;
    } else {
        int index = value.length() - partDivider;
        high = value.substring(0, index);
        low = value.substring(index);
    }
    highName = getHighProcessor().getName(high);
    lowName = getLowProcessor().getName(low);
    if (!highName.contentEquals("")) {
        buffer.append(highName);
        buffer.append(SEPARATOR);
        buffer.append(getToken());
        if (!lowName.contentEquals("")) {
            buffer.append(SEPARATOR);
        }
    }
    if (!lowName.contentEquals("")) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
0
Gpt3D_Clone423_0.java 1 32
Gpt3D_Clone423_0.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if(decimals > 0){
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = "-" + SEPARATOR + name;
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i ++) {
            zeroDecimalValue += "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name + SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName (-decimalValue.length ());
        } else {
            name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName (decimalValue) + SEPARATOR + SCALE.getName (-decimalValue.length ());
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
1
Gpt3D_Clone423_1.java 1 32
Gpt3D_Clone423_1.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if (decimals >= 0) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
2
Gpt3D_Clone423_2.java 1 32
Gpt3D_Clone423_2.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.substring (0,1).equals ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if (decimals > 0) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = "-" + SEPARATOR + name;
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i ++) {
            zeroDecimalValue += "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
3
Gpt3D_Clone423_3.java 1 32
Gpt3D_Clone423_3.java 33 68
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if(decimals >= 0){
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue
.length (); i ++) {
            zeroDecimalValue += "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
6
Gpt3D_Clone423_6.java 1 32
Gpt3D_Clone423_6.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.substring(0,1).equals ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if (decimals >= 0) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name + SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName (-decimalValue.length ());
        } else {
            name = name + SEPARATOR + UNION_AND + SEPARATOR + processor.getName (decimalValue) + SEPARATOR + SCALE.getName (-decimalValue.length ());
        }
    }
    return name;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
423
8
Gpt3D_Clone423_8.java 1 32
Gpt3D_Clone423_8.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name = "";
    
    if (value.charAt(0) == '-') {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if(decimals > 0){
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName (value);
        
    if (negative) {
        name = "-" + SEPARATOR + name;
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
            
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
0
Gpt3D_Clone426_0.java 1 25
Gpt3D_Clone426_0.java 26 53
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 8);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        char[] unifiedNumber = new char[5];
        unifiedNumber[3] = (char)(number + '0');
        buffer.append(new String(unifiedNumber));
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
1
Gpt3D_Clone426_1.java 1 25
Gpt3D_Clone426_1.java 26 53
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 8);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        char[] unifiedNumber = new char[5];
        unifiedNumber[2] = (char)(number + '0');
        buffer.append(new String(unifiedNumber));
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
2
Gpt3D_Clone426_2.java 1 25
Gpt3D_Clone426_2.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 16);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = String.format("%04d", number);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
3
Gpt3D_Clone426_3.java 1 25
Gpt3D_Clone426_3.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) { 
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 4)
        number = Integer.valueOf(value.substring(value.length() - 4), 16);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        int unifiedNumber = Integer.parseInt(Integer.toHexString(number));
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
4
Gpt3D_Clone426_4.java 1 25
Gpt3D_Clone426_4.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) { 
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 16);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = String.valueOf(number);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
5
Gpt3D_Clone426_5.java 1 25
Gpt3D_Clone426_5.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 16);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = String.valueOf(number*10);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
6
Gpt3D_Clone426_6.java 1 25
Gpt3D_Clone426_6.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) { 
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 16);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = Integer.toString(number, 10);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
7
Gpt3D_Clone426_7.java 1 25
Gpt3D_Clone426_7.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) { 
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 10);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = String.format("%04d", number);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
426
8
Gpt3D_Clone426_8.java 1 25
Gpt3D_Clone426_8.java 26 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) { 
    StringBuilder buffer = new StringBuilder();
    boolean tensFound = false;
    int number;
    if (value.length() > 3)
        number = Integer.valueOf(value.substring(value.length() - 3), 10);
    else
        number = Integer.valueOf(value, 10);
    number %= 100;
    if (number >= 20) {
        buffer.append(TOKENS[(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append(UNION_SEPARATOR);
        }
        String unifiedNumber = String.valueOf(number*10);
        buffer.append(unifiedNumber);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
427
0
Gpt3D_Clone427_0.java 1 23
Gpt3D_Clone427_0.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
	int number;
	StringBuilder buffer = new StringBuilder(); 
	if(value.contentEquals("")) { 
		number = 0;
	}
	else if (value.length() > 4) { 
		String Value2 = value.substring(value.length()-4); 
		number = Integer.parseInt(Value2, 10);
	}
	else {
		number = Integer.parseInt(value, 10); 
	}
	number %= 1000; 
	if (number >= 100) { 
		buffer.append(unitProcessor.getName(number / 100)); 
		buffer.append(SEPARATOR); 
		buffer.append(SCALE.getName(EXPONENT));
	}
	String tensName = tensProcessor.getName(number % 100);
	if (!tensName.equals("") && (number >= 100)) { 
		buffer.append(SEPARATOR);
	}
	buffer.append(tensName); 
	return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
427
1
Gpt3D_Clone427_1.java 1 23
Gpt3D_Clone427_1.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
	int number;
	StringBuilder buffer = new StringBuilder(); 
	if(value.equals("")) { 
		number = 0;
	}
	else if (value.length() > 4) { 
		String Value2 = value.substring(value.length()-4); 
		number = Integer.parseInt(Value2, 10);
	}
	else {
		number = Integer.parseInt(value, 10); 
	}
	number %= 1000; 
	if (number >= 100) { 
		buffer.append(unitProcessor.getName(number / 100)); 
		buffer.append(SEPARATOR); 
		buffer.append(SCALE.getName(EXPONENT));
	}
	String tensName = tensProcessor.getName(number % 100);
	if (!tensName.equals("") && (number >= 100)) { 
		buffer.append(SEPARATOR);
	}
	buffer.append(tensName); 
	return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
427
2
Gpt3D_Clone427_2.java 1 23
Gpt3D_Clone427_2.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
	int number;
	StringBuilder buffer = new StringBuilder();
	if(value.isEmpty()) {
		number = 0;
	}
	else if (value.length() > 4) {
		String Value2 = value.substring(value.length()-4);
		number = Integer.valueOf(Value2, 10);
	}
	else {
		number = Integer.valueOf(value, 10);
	}
	number %= 1000;
	if (number >= 100) {
		buffer.append(unitProcessor.getName(number / 100));
		buffer.append(SEPARATOR);
		buffer.append(SCALE.getName(EXPONENT));
	}
	String tenName = tensProcessor.getName(number % 100);
	if (!tenName.equals("") && (number >= 100)) {
		buffer.append(SEPARATOR);
	}
	buffer.append(tenName);
	return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
427
3
Gpt3D_Clone427_3.java 1 23
Gpt3D_Clone427_3.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
	int number;
	StringBuilder buffer = new StringBuilder();
	if (value.equals("")) {
		number = 0;
	}
	else if (value.length() > 4) {
		String value2 = value.substring(value.length()-4);
		number = Integer.parseInt(value2, 10);
	}
	else {
		number = Integer.parseInt(value, 10);
	}
	number %= 1000;
	if (number >= 100) {
		buffer.append(unitProcessor.getName(number / 100));
		buffer.append(SEPARATOR);
		buffer.append(SCALE.getName(EXPONENT));
	}
	String tensName = tensProcessor.getName(number % 100);
	if (!tensName.equals("") && (number >= 100)) {
		buffer.append(SEPARATOR);
	}
	buffer.append(tensName);
	return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
427
4
Gpt3D_Clone427_4.java 1 23
Gpt3D_Clone427_4.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName(String value) {
	Integer number;
	StringBuilder buffer = new StringBuilder();
	if (value.equals("")) {
		number = 0;
	}
	else if (value.length() > 4) {
		String Value2 = value.substring(value.length()-4);
		number = Integer.valueOf(Value2, 10);
	}
	else {
		number = Integer.valueOf(value, 10);
	}
	number %= 1000;
	if (number >= 100) {
		buffer.append(unitProcessor.getName(number / 100));
		buffer.append(SEPARATOR);
		buffer.append(SCALE.getName(EXPONENT));
	}
	String tensName = tensProcessor.getName(number % 100);
	if (!tensName.equals("") && (number >= 100)) {
		buffer.append(SEPARATOR);
	}
	buffer.append(tensName);
	return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
428
3
Gpt3D_Clone428_3.java 1 32
Gpt3D_Clone428_3.java 33 66
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (decimals >= 0) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if (name.equals("")) {
        name = ZERO_TOKEN;
    } 
    else if (negative = true) {
        name = MINUS + SEPARATOR + name;
    }
    if (null != decimalValue && !"".equals(decimalValue)) {
        String zeroDecimalValue = "";
        int decimalTempLength = decimalValue.length();
        for (int i = 0; i < decimalTempLength; i++)
            zeroDecimalValue = zeroDecimalValue + "0";
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName(-1 * decimalTempLength));
        } else {
            name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-1 * decimalTempLength));
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
428
5
Gpt3D_Clone428_5.java 1 32
Gpt3D_Clone428_5.java 33 66
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getNamer(String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (decimals >= 0) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if (name.equals ("")) {
        name = "zero";
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (decimalValue != null && !decimalValue.equals ("")) {
        String zeroDecimalValue = "";
        int decimalLength = decimalValue.length ();
        for (int i = 0; i < decimalLength; i++)
            zeroDecimalValue = zeroDecimalValue + "0";
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalLength));
        }
        else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalLength));
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
429
0
Gpt3D_Clone429_0.java 1 20
Gpt3D_Clone429_0.java 21 49
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int offset = NO_VALUE;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number < 10) {
        offset = (number % 10) - 1;
    } else if (number < 20) {
        offset = (number % 20) - 1;
    }
    if (offset != NO_VALUE && offset < TOKENS.length) {
        buffer.append (TOKENS [offset]);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int offset = NO_VALUE;
    if (value.length() > 3) {
        int number = Integer.valueOf (value.substring (value.length () - 3), 10);
        number %= 100;
        if (number < 10) {
            offset = (number % 10) - 1;
        } else if (number < 20) {
            offset = (number % 20) - 1;
        }
    } else {
        int number = Integer.valueOf(value, 10);
        number %= 100;
        if (number < 10) {
            offset = (number % 10) - 1;
        } else if (number < 20) {
            offset = (number % 20) - 1;
        }
    }
    if (offset != NO_VALUE && offset < TOKENS.length) {
        buffer.append (TOKENS [offset]);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
42
0
Gpt3D_Clone42_0.java 1 41
Gpt3D_Clone42_0.java 42 76
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 2 :
                asRomanNumerals = RN [i] + RN [i] + asRomanNumerals;
                break;
            case 3 :
                asRomanNumerals = RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 6 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 7 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

 public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"I", "IV", "V", "IX", "X", "XL", "L", "XC", "C", "CD", "D", "CM", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 : case 2 : case 3 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 : case 6 : case 7 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        if (number % 10 == 1 || number % 10 == 2 ) {
            i += 2;
        } else {
            i += 4;
        }
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
42
1
Gpt3D_Clone42_1.java 1 41
Gpt3D_Clone42_1.java 42 72
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 2 :
                asRomanNumerals = RN [i] + RN [i] + asRomanNumerals;
                break;
            case 3 :
                asRomanNumerals = RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 6 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 7 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

 public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 : case 2 : case 3 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 : case 6 : case 7 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
430
3
Gpt3D_Clone430_3.java 1 25
Gpt3D_Clone430_3.java 26 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    boolean tensFound = false;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number >= 20) {
        buffer.append (TOKENS [(number / 10) - 2]);
        number %= 10;
        tensFound = true;
    } else {
        number %= 20;
    }
    if (number != 0) {
        if (tensFound) {
            buffer.append (UNION_SEPARATOR);
        }
        buffer.append (unitProcessor.getName (number));
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    int tens = number / 10;
    int units = number % 10;
    if (tens >= 2) {
        buffer.append(TOKENS[tens - 2]);
    }
    if (tens > 0 && tens%10 > 0 || tens == 2) {
        buffer.append(UNION_SEPARATOR);
    }
    if (units >= 0) {
        buffer.append(unitProcessor.getName (units));
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
433
0
Gpt3D_Clone433_0.java 1 32
Gpt3D_Clone433_0.java 33 67
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    StringBuilder sb = new StringBuilder();
    if ("".equals (name)) {
        sb.append(ZERO_TOKEN);
    } else if (negative) {
        sb.append(MINUS).append(SEPARATOR).append(name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            sb.append(SEPARATOR).append(UNION_AND).append(SEPARATOR).append("zero").append(SEPARATOR).append(SCALE.getName (- decimalValue.length ()));
        } else {
            sb.append(SEPARATOR).append(UNION_AND).append(SEPARATOR).append(processor.getName (decimalValue)).append(SEPARATOR).append(SCALE.getName (- decimalValue.length ()));
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
433
1
Gpt3D_Clone433_1.java 1 32
Gpt3D_Clone433_1.java 33 82
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public static String getName (String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    // Capture the position of the decimal point, if found
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if ("".equals(name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS + SEPARATOR + name;
    }
    // If there is a decimal part
    if (decimalValue != null) {
        // Create a string of 0 for comparison
        String zeroDecimalValue = "";
        for (int i = 0; 
            i < decimalValue.length(); i++) {
            zeroDecimalValue += "0";
        }
        // If the decimal part is all 0
        if (decimalValue.equals(zeroDecimalValue)) {
            name = name 
                    + SEPARATOR 
                    + UNION_AND 
                    + SEPARATOR + "zero" 
                    + SEPARATOR 
                    + SCALE.getName(- decimalValue.length());
        } else {
            // Decimals are not all 0
            name = name
                    + SEPARATOR 
                    + UNION_AND
                    + SEPARATOR
                    + processor.getName(decimalValue)
                    + SEPARATOR 
                    + SCALE.getName(- decimalValue.length());
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
0
Gpt3D_Clone43_0.java 1 12
Gpt3D_Clone43_0.java 13 29
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

  public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i ++) {
        if (nums [i] != 13 || nums [i] == 13 && i + 1 < nums.length && nums [i + 1] != 13) {
            if(nums[i] == 13) {
                sum -= nums[i];
            } else {
                sum += nums[i];
            }
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
1
Gpt3D_Clone43_1.java 1 12
Gpt3D_Clone43_1.java 13 26
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

  public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i ++) {
        if (nums [i] == 13 && i + 1 < nums.length) {
            sum -= nums [i];
            i++;
        } else {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
2
Gpt3D_Clone43_2.java 1 12
Gpt3D_Clone43_2.java 13 26
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

  public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i ++) {
        if (nums [i] == 13 && nums [i + 1] != 13) {
            sum -= nums [i];
            i++;
        } else {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
3
Gpt3D_Clone43_3.java 1 12
Gpt3D_Clone43_3.java 13 25
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

  public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i ++) {
        if (nums [i] == 13) {
            sum -= nums [i];
        } else {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
4
Gpt3D_Clone43_4.java 1 12
Gpt3D_Clone43_4.java 13 25
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

  public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i ++) {
        if (nums [i] == 13 && i + 1 < nums.length && nums [i + 1] == 13) {
            i++;
        } else {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
1
Gpt3D_Clone442_1.java 1 22
Gpt3D_Clone442_1.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main (String...args){ 
    processor = new DefaultProcessor(); 
    long[] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE}; 
    String[] strValues = {"0", "1.30", "0001.00", "3.141592"}; 
    for(long val : values){ 
        System.out.println(val + " = "+processor.getName(val.toString())); 
    } 
    for(String strVal : strValues){ 
        System.out.println(strVal + " = "+processor.getName(strVal)); 
    } 
    StringBuilder bigNumber = new StringBuilder(); 
    for(int d = 0; d < 66; d++){ 
        int randomNumber = (int)(Math.random() * 10) + 48; 
        bigNumber.append((char) randomNumber); 
    } 
    bigNumber.append("."); 
    for(int d = 0; d < 26; d++){ 
        int randomNumber = (int)(Math.random() * 10)+48; 
        bigNumber.append((char) randomNumber); 
    } 
    System.out.println(bigNumber.toString() + " = " + processor.getName(bigNumber.toString())); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
2
Gpt3D_Clone442_2.java 1 22
Gpt3D_Clone442_2.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main (String...args) {
     processor = new DefaultProcessor ();
     long[] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
     String[] strValues = {"0", "1.30", "0001.00", "3.141592"};
     for (long val : values) {
         System.out.println (val + " = " + processor.getName (Long.toString (val)));
     }
     for (String strVal : strValues) {
         System.out.println (strVal + " = " + processor.getName (strVal));
     }
     StringBuilder bigNumber = new StringBuilder ();
     for (int d = 0; d < 66; d++) {
         int randomNumber = (int)(Math.random () * 10) + 48;
         bigNumber.append ((char) randomNumber);
     }
     bigNumber.append (".");
     for (int d = 0; d < 26; d++) {
         int randomNumber = (int)(Math.random () * 10) + 48;
         bigNumber.append ((char) randomNumber);
     }
     System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
3
Gpt3D_Clone442_3.java 1 22
Gpt3D_Clone442_3.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (String.valueOf (val)));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0; d < 66; d++) {
        int randomNumber = (int)(Math.random () * 10) + 48;
        bigNumber.append ((char) randomNumber);
    }
    bigNumber.append (".");
    for (int d = 0; d < 26; d++) {
        int randomNumber = (int)(Math.random () * 10) + 48;
        bigNumber.append ((char) randomNumber);
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
4
Gpt3D_Clone442_4.java 1 22
Gpt3D_Clone442_4.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main (String...args) { 
    processor = new DefaultProcessor (); 
    long[] values = new long[] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE}; 
    String[] strValues = new String[] {"0", "1.30", "0001.00", "3.141592"}; 
    for (long val : values) { 
        System.out.println (val + " = " + processor.getName (String.valueOf (val))); 
    } 
    for (String strVal : strValues) { 
        System.out.println (strVal + " = " + processor.getName (strVal)); 
    } 
    StringBuilder bigNumber = new StringBuilder (); 
    for (int d = 0; d < 66; d++) { 
        int randomNumber = (int)(Math.random () * 10) + 48; 
        bigNumber.append ((char) randomNumber); 
    } 
    bigNumber.append ("."); 
    for (int d = 0; d < 26; d++) { 
        int randomNumber = (int)(Math.random () * 10) + 48; 
        bigNumber.append ((char) randomNumber) ; 
    } 
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ())); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
5
Gpt3D_Clone442_5.java 1 22
Gpt3D_Clone442_5.java 23 52
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main ( String...args ) 
{ 
    processor = new DefaultProcessor (); 
    long[] values = new long[] { 0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE }; 
    String[] strValues = new String[] { "0", "1.30", "0001.00", "3.141592" }; 
    for (long val : values) 
    { 
        System.out.println ( val + " = " + processor.getName ( Long.toString ( val ) ) ); 
    } 
    for (String strVal : strValues) 
    { 
        System.out.println ( strVal + " = " + processor.getName ( strVal ) ); 
    } 
    StringBuilder bigNumber = new StringBuilder (); 
    for (int d = 0; d < 66; d++) 
    { 
        int randomNumber = (int) ( Math.random () * 10 ) + 48; 
        bigNumber.append ( ( char ) randomNumber ); 
    } 
    bigNumber.append ( "." ); 
    for (int d = 0; d < 26; d++) 
    { 
        int randomNumber = (int) ( Math.random () * 10 ) + 48; 
        bigNumber.append ( ( char ) randomNumber ); 
    } 
    System.out.println ( bigNumber.toString () + " = " + processor.getName ( bigNumber.toString () ) ); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
6
Gpt3D_Clone442_6.java 1 22
Gpt3D_Clone442_6.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main(String... args) {
	processor = new DefaultProcessor();
	long[] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
	String[] strValues = {"0", "1.30", "0001.00", "3.141592"};
	for(long val : values) {
		System.out.println(val + " = " + processor.getName(String.valueOf(val)));
	}
	for(String strVal : strValues) {
		System.out.println(strVal + " = " + processor.getName(strVal));
	}
	StringBuilder bigNumber = new StringBuilder();
	for(int d = 0; d < 66; d++) {
		int randomNumber = (int)(Math.random() * 10) + 48;
		bigNumber.append((char) randomNumber);
	}
	bigNumber.append(".");
	for(int d = 0; d < 26; d++) {
		int randomNumber = (int)(Math.random() * 10) + 48;
		bigNumber.append((char) randomNumber);
	}
	System.out.println(bigNumber.toString() + " = " + processor.getName(bigNumber.toString()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
7
Gpt3D_Clone442_7.java 1 22
Gpt3D_Clone442_7.java 23 51
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main (String...args) 
{ 
	processor = new DefaultProcessor (); 
	long[] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE}; 
	String[] strValues = {"0", "1.30", "0001.00", "3.141592"}; 
	for (long val : values) 
	{ 
		System.out.println (val + " = "+processor.getName(val.toString())); 
	} 
	for (String strVal : strValues) 
	{ 
		System.out.println (strVal + " = "+processor.getName(strVal)); 
	} 
	StringBuilder bigNumber = new StringBuilder(); 
	for (int d = 0; d < 66; d++) 
	{ 
		int randomNumber = (int)(Math.random() * 10) + 48; 
		bigNumber.append((char) randomNumber); 
	} 
	bigNumber.append("."); 
	for (int d = 0; d < 26; d++) 
	{ 
		int randomNumber = (int)(Math.random() * 10)+48; 
		bigNumber.append((char) randomNumber); 
	} 
	System.out.println(bigNumber.toString() + " = " + processor.getName(bigNumber.toString())); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
8
Gpt3D_Clone442_8.java 1 22
Gpt3D_Clone442_8.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

 public static void main(String... args) {
    processor = new DefaultProcessor();
    long[] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String[] strValues = {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println(val + " = "+ processor.getName(String.valueOf(val)));
    }
    for (String strVal : strValues) {
        System.out.println(strVal + " = "+processor.getName(strVal));
    }
    StringBuilder bigNumber = new StringBuilder();
    for (int d = 0; d < 66; d++) {
        int randomNumber = (int)(Math.random() * 10) + 48;
        bigNumber.append((char) randomNumber);
    }
    bigNumber.append(".");
    for (int d = 0; d < 26; d++) {
        int randomNumber = (int)(Math.random () * 10) + 48;
        bigNumber.append((char) randomNumber);
    }
    System.out.println(bigNumber.toString() + " = "+ processor.getName(bigNumber.toString()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
0
Gpt3D_Clone446_0.java 1 23
Gpt3D_Clone446_0.java 24 56
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value == null || value.length() == 0) {
        number = 0;
    } else {
        String substring = "";
        int startIdx = 0;
        int len = value.length();
        if (len > 4) {
            substring = value.substring(len-4);
            startIdx = len - 4;
        }
        else {
            substring = value;
        }
        number = Integer.valueOf(substring, 10);
    }
    number = number % 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
1
Gpt3D_Clone446_1.java 1 23
Gpt3D_Clone446_1.java 24 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value == null || value.length() == 0) {
        number = 0;
    }
    else {
        String substringValue = "";
        int len = value.length();
        int start = 0;
        if (len > 4) {
            start = len - 4;
            substringValue = value.substring(start);
        }
        else {
            substringValue = value;
        }
        number = Integer.valueOf(substringValue, 10);
    }
    int modulo = number % 1000;
    if (modulo >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
2
Gpt3D_Clone446_2.java 1 23
Gpt3D_Clone446_2.java 24 54
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value.isEmpty()) {
        number = 0;
    }
    else {
        String newstr;
        if (value.length() > 4) {
            newstr = value.substring(value.length()-4);
        }
        else {
            newstr = value;
        }
        number = Integer.valueOf(newstr, 10);
    }
    int modulo = number % 1000;
    if (modulo >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && number >= 100) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
3
Gpt3D_Clone446_3.java 1 23
Gpt3D_Clone446_3.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value.length() == 0) {
        number = 0;
    } else {
        int len = value.length();
        int startIndex = 0;
        if (len > 4) {
            startIndex = len - 4;
        }
        number = Integer.valueOf(value.substring(startIndex), 10);
    }
    number = number % 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
4
Gpt3D_Clone446_4.java 1 23
Gpt3D_Clone446_4.java 24 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value != null && value.length() > 0) {
        int strLen = value.length();
        int startIdx = 0;
        if (strLen > 4) {
            startIdx = strLen - 4;
        }
        number = Integer.valueOf(value.substring(startIdx), 10);
    }
    else {
        number = 0;
    }
    number = number % 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (tensName.length() > 0 && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
5
Gpt3D_Clone446_5.java 1 23
Gpt3D_Clone446_5.java 24 50
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value == null && value.length() == 0) {
        number = 0;
    } else {
        int startIndex = 0;
        if (value.length() > 4) {
            startIndex = value.length() - 4;
        }
        number = Integer.valueOf(value.substring(startIndex), 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (tensName.length() > 0 && (number >= 100)) {
        buffer.append(SEPARATOR);
    }
    buffer.append(tensName);
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
6
Gpt3D_Clone446_6.java 1 23
Gpt3D_Clone446_6.java 24 50
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value == null|| value.isEmpty()) {
        number = 0;
    } else {
        String substringValue = value;
        if (value.length() > 4) {
            substringValue = value.substring(value.length() - 4);
        }
        number = Integer.valueOf(substringValue, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.equals("") && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
7
Gpt3D_Clone446_7.java 1 23
Gpt3D_Clone446_7.java 24 47
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value == null || "".equals(value)) {
        number = 0;
    } else {
        int startIndex = value.length() > 4 ? value.length() - 4 : 0;
        number = Integer.valueOf(value.substring(startIndex), 10);
    }
    int modulo = number % 1000;
    if (modulo >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
8
Gpt3D_Clone446_8.java 1 23
Gpt3D_Clone446_8.java 24 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value != null && value.length() > 0) {
        int start = value.length() <= 4 ? 0 : value.length() - 4;
        number = Integer.valueOf(value.substring(start), 10);
    }
    else {
        number = 0;
    }
    int modulo = number % 1000;
    if (modulo >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && number >= 100) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
446
9
Gpt3D_Clone446_9.java 1 23
Gpt3D_Clone446_9.java 24 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
    StringBuilder buffer = new StringBuilder();
    int number;
    if (value == null || value.length() == 0) {
        number = 0;
    }
    else {
        String substring = value.substring(value.length() > 4 ? value.length() - 4 : 0);
        number = Integer.valueOf(substring, 10);
    }
    int modulo = number % 1000;
    if (modulo >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (!tensName.isEmpty() && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
0
Gpt3D_Clone447_0.java 1 26
Gpt3D_Clone447_0.java 27 56
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   int valueLength = value.length ();
   if (valueLength >= partDivider) {
      int index = valueLength - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () != 0) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName.length () != 0) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () != 0) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
1
Gpt3D_Clone447_1.java 1 26
Gpt3D_Clone447_1.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (partDivider > 0 && value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName != null && ! highName.equals ("")) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName != null && ! lowName.equals ("")) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName != null && ! lowName.equals ("")) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
2
Gpt3D_Clone447_2.java 1 26
Gpt3D_Clone447_2.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (partDivider > 0 && value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () > 0 && ! highName.isEmpty ()) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName.length () > 0 && ! lowName.isEmpty ()) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () > 0 && ! lowName.isEmpty ()) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
3
Gpt3D_Clone447_3.java 1 26
Gpt3D_Clone447_3.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () > partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () > 0 && ! highName.isBlank ()) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName.length () > 0 && ! lowName.isBlank ()) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () > 0 && ! lowName.isBlank ()) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
4
Gpt3D_Clone447_4.java 1 26
Gpt3D_Clone447_4.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () > partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (! highName.isEmpty ()) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (! lowName.isEmpty ()) {
         buffer.append (SEPARATOR);
      }
   }
   if (! lowName.isEmpty ()) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
5
Gpt3D_Clone447_5.java 1 26
Gpt3D_Clone447_5.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () > 0) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName.length () > 0) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () > 0) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
6
Gpt3D_Clone447_6.java 1 26
Gpt3D_Clone447_6.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (!"".equals (highName)) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (!"".equals (lowName)) {
         buffer.append (SEPARATOR);
      }
   }
   if (!"".equals (lowName)) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
7
Gpt3D_Clone447_7.java 1 26
Gpt3D_Clone447_7.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () > 0 && !highName.equals("")) { 
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName.length () > 0 && !lowName.equals("")) { 
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () > 0 && !lowName.equals("")) { 
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
8
Gpt3D_Clone447_8.java 1 26
Gpt3D_Clone447_8.java 27 55
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) {
   StringBuilder buffer = new StringBuilder ();  
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () >= partDivider) {
      int index = value.length () - partDivider;
      high = value.substring (0, index);
      low = value.substring (index);
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName != null && !highName.isEmpty ()) { 
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
      if (lowName != null && !lowName.isEmpty ()) { 
         buffer.append (SEPARATOR);
      }
   }
   if (lowName != null && !lowName.isEmpty ()) { 
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
9
Gpt3D_Clone447_9.java 1 26
Gpt3D_Clone447_9.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

 public String getName (String value) { 
   StringBuilder buffer = new StringBuilder ();
   String high, low;
   int partDivider = getPartDivider ();
   if (value.length () >= partDivider) {
      int index = value.length () - partDivider;
      // subtracting the dividier from length to get the index
      high = value.substring (0, index); 
      low = value.substring (index); 
   } else {
      high = "";
      low = value;
   }
   String highName = getHighProcessor ().getName (high);
   String lowName = getLowProcessor ().getName (low);
   if (highName.length () > 0) {
      buffer.append (highName);
      buffer.append (SEPARATOR);
      buffer.append (getToken ());
	  //append the high processor
      if (lowName.length () > 0) {
         buffer.append (SEPARATOR);
      }
   }
   if (lowName.length () > 0) {
      buffer.append (lowName);
   }
   return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
448
1
Gpt3D_Clone448_1.java 1 32
Gpt3D_Clone448_1.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (decimals >= 0) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if (name.equals(""))
        name = ZERO_TOKEN;
    else if (negative) {
        name = MINUS.concat(SEPARATOR) + name;
    }
    if (decimalValue != null && !decimalValue.equals("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals(zeroDecimalValue))
            name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat("zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        else
            name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
448
2
Gpt3D_Clone448_2.java 1 32
Gpt3D_Clone448_2.java 33 63
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int index = value.indexOf (".");
    String decimalNumber = null;
    if (0 <= index) {
        decimalNumber = value.substring (index + 1);
        value = value.substring (0, index);
    }
    String name = processor.getName (value);
    if (name.equals (""))
        name = ZERO_TOKEN;
    else if (negative)
        name = MINUS.concat (SEPARATOR) + name;
    if (decimalNumber != null && !(decimalNumber.equals (""))) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalNumber.length (); i++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalNumber.equals (zeroDecimalValue))
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (-decimalNumber.length ()));
        else
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalNumber)).concat (SEPARATOR).concat (SCALE.getName (-decimalNumber.length ()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
448
3
Gpt3D_Clone448_3.java 1 32
Gpt3D_Clone448_3.java 33 64
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean isNegative = false;
    if (value.startsWith ("-")) {
        isNegative = true;
        value = value.substring (1);
    }
    int decimalPointPosition = value.indexOf (".");
    String decimalValue = null;
    if (decimalPointPosition >= 0) {
        decimalValue = value.substring (decimalPointPosition + 1);
        value = value.substring (0, decimalPointPosition);
    }
    String name = processor.getName (value);
    if (name.equals (""))
        name = ZERO_TOKEN;
    else if (isNegative)
        name = MINUS.concat (SEPARATOR).concat (name);
    if (decimalValue != null && !decimalValue.equals ("")) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length (); i++) {
            zeroDecimalValue += "0";
        }
        if (decimalValue.equals (zeroDecimalValue))
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (-decimalValue.length ()));
        else
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (-decimalValue.length ()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
448
4
Gpt3D_Clone448_4.java 1 32
Gpt3D_Clone448_4.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean isNegative = false;
    if (value.startsWith("-")) {
        isNegative = true;
        value = value.substring(1);
    }
    int locationOfDecimal = value.indexOf(".");
    String decimalValue = null;
    if (locationOfDecimal >= 0) {
        decimalValue = value.substring(locationOfDecimal + 1);
        value = value.substring(0, locationOfDecimal);
    }
    String name = processor.getName(value);
    if (name.equals("")) name = ZERO_TOKEN;
    else if (isNegative) name = MINUS.concat(SEPARATOR).concat(name);
    if (!(decimalValue == null || decimalValue.equals(""))) {
        String zeroDecimalValue = "";
        for (int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue += "0";
        }
        if (decimalValue.equals(zeroDecimalValue))
            name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat("zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
        else
            name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
1
Gpt3D_Clone44_1.java 1 23
Gpt3D_Clone44_1.java 24 48
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

 
    public static String output(String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int count = 1;
        int maxLength = Math.max(Math.max(fourLetter.length, fiveLetter.length), sixLetter.length);
        for (int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter[i];
            }
            if (fiveLetter.length > i) {
                answer += " " + fiveLetter[i];
            }
            if (fourLetter.length > i) {
                answer += " " + fourLetter[i];
            }
            for (int j = 0; j < count; j++) {
                answer += "\t";
            }
            count++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
2
Gpt3D_Clone44_2.java 1 23
Gpt3D_Clone44_2.java 24 47
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output (String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int count = 1;
        int maxLength = Math.max(Math.max(fourLetter.length, fiveLetter.length), sixLetter.length);
        for(int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter[i];
            }
            if (fiveLetter.length > i) {
                answer += " " + fiveLetter[i];
            }
            if (fourLetter.length > i) {
                answer += " " + fourLetter[i];
            }
            for (int j = 0; j < count; j++) {
                answer += "    ";
            }
            count++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
3
Gpt3D_Clone44_3.java 1 23
Gpt3D_Clone44_3.java 24 48
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
        String answer = "";
        int count = 0;
        int maxLength = Math.min (Math.max (fourLetter.length, fiveLetter.length),
            Math.max (fiveLetter.length, sixLetter.length));
        for (int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter [i];
            }
            if (fiveLetter.length > i) {
                answer += " " + fiveLetter [i];
            }
            if (fourLetter.length > i) {
                answer += " " + fourLetter [i];
            }
            for (int j = 0; j < count; j++) {
                answer += "\t";
            }
            count ++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
4
Gpt3D_Clone44_4.java 1 23
Gpt3D_Clone44_4.java 24 47
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output (String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int indentLeveL = 1;
        int maxLength = Math.max(Math.max(fourLetter.length, fiveLetter.length), sixLetter.length);
        for (int i = 0; i < maxLength; i++){  
            if (sixLetter.length > i) {
                answer += sixLetter[i] + " "; 
            }
            if (fiveLetter.length > i) {
                answer += fiveLetter[i] + " ";
            }
            if (fourLetter.length > i) {
                answer += fourLetter[i] + " ";
            }
            for(int j = 0; j < indentLeveL; j++){
                answer += "\t"; 
            }
            indentLeveL++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
5
Gpt3D_Clone44_5.java 1 23
Gpt3D_Clone44_5.java 24 48
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output(String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int indents = 1;
        int maxLength = Math.min(Math.min(fourLetter.length, fiveLetter.length),
                        Math.min(fiveLetter.length, sixLetter.length)); 
        for (int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter[i];
            }
            if (fiveLetter.length > i) {
                answer += " " + fiveLetter[i]; 
            }
            if (fourLetter.length > i) {
                answer += " " + fourLetter[i];
            }
            for (int j = 0; j < indents; j++) {
                answer += "\t";
            }
            answer += "\n";
            indents++;
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
6
Gpt3D_Clone44_6.java 1 23
Gpt3D_Clone44_6.java 24 47
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output(String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int tabCount = 1;
        int maxLength = Math.min(Math.max(fourLetter.length, fiveLetter.length),
                        Math.max(fiveLetter.length, sixLetter.length));
        for (int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter[i];
            }
            if (fiveLetter.length > i) {
                answer += " " + fiveLetter[i];
            }
            if (fourLetter.length > i) {
                answer += " " + fourLetter[i];
            }
            for(int j = 0; j < tabCount; j++)
                answer += "\t";
            tabCount++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
44
7
Gpt3D_Clone44_7.java 1 23
Gpt3D_Clone44_7.java 24 47
----------------------------------------

public static String output (String [] fourLetter, String [] fiveLetter, String [] sixLetter) {
    String answer = "";
    int count = 1;
    for (int i = 0;
    i < Math.max (Math.max (fourLetter.length, fiveLetter.length), sixLetter.length); i ++) {
        if (sixLetter.length > i) {
            answer += sixLetter [i] + " ";
        }
        if (fiveLetter.length > i) {
            answer += fiveLetter [i] + " ";
        }
        if (fourLetter.length > i) {
            answer += fourLetter [i];
        }
        answer += "\n";
        for (int j = 0;
        j < count; j ++) {
            answer += "\t";
        }
        count ++;
    }
    return answer;
}
----------------------------------------

    public static String output(String[] fourLetter, String[] fiveLetter, String[] sixLetter) {
        String answer = "";
        int count = 0;
        int maxLength = Math.min(Math.max(fourLetter.length, fiveLetter.length),
                        Math.max(fiveLetter.length, sixLetter.length));
        for (int i = 0; i < maxLength; i++) {
            if (sixLetter.length > i) {
                answer += sixLetter[i];
            }
            if (fiveLetter.length > i) {
                answer += (" " + fiveLetter[i]);
            }
            if (fourLetter.length > i) {
                answer += (" " + fourLetter[i]);
            }
            for(int j = 0; j < count; j++)
                answer += "\t\t";
            count++;
            answer += "\n";
        }
        return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
450
0
Gpt3D_Clone450_0.java 1 32
Gpt3D_Clone450_0.java 33 77
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

 public String getName (String value) {
    boolean negative = false;
    String name = "";
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf ("."); 
    String decimalValue = null; 
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    name = processor.getName(value); 
    if("".equals(name)) { 
        name = ZERO_TOKEN;
    } else { 
        if(negative) {
            name = MINUS.concat(SEPARATOR).concat(name); 
        }
    }
    if(decimalValue != null && ! "".equals(decimalValue)) { 
        String zeroDecimalValue = ""; 
        for(int i = 0; i < decimalValue.length(); i++) {
            zeroDecimalValue = zeroDecimalValue + "0"; 
        }
        if(decimalValue.equals(zeroDecimalValue)) {
            name += SEPARATOR + UNION_AND + SEPARATOR + "zero" + SEPARATOR + SCALE.getName(-decimalValue.length()); 
        } else {
            name += SEPARATOR + UNION_AND + SEPARATOR + processor.getName(decimalValue) + SEPARATOR + SCALE.getName(-decimalValue.length()); 
        }
    }
    return name; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
5
Gpt3D_Clone452_5.java 1 15
Gpt3D_Clone452_5.java 16 39
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

 public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sopl("\n\tEchoing inputs: \n");
    for (int i = 0; i < len; i++) {
        sop("\t" + args[i] + "\t");
        if ((i+1) % 4 == 0) {
            sopl();
        }
    }
    sopl("\n\tReversing the order: \n");
    for (int i = len - 1; i >= 0; i--) {
        sop("\t" + args[i] + "\t");
        if ((len - i) % 4 == 0) {
            sopl();
        }
    }
    sopl("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
6
Gpt3D_Clone452_6.java 1 15
Gpt3D_Clone452_6.java 16 35
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

 public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sopl("\n\tEchoing inputs: \n");
    for (int i = 0; i < len-1; i++){
        sop(args[i] + ", ");
    }
    sopl(args[len-1]);
    sopl("\n\tReversing the order: \n");
    for (int i  = len-1; i >= 1; i--){
        sop(args[i] + ", ");
    }
    sopl(args[0]);
    sopl("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
7
Gpt3D_Clone452_7.java 1 15
Gpt3D_Clone452_7.java 16 34
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

 public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sopl("\n\tEchoing inputs: ");
    for (int i = 0; i < len; i++) {
        sopl("\n\t" + args[i]);
    }
    sopl("\n\tReversing the order: ");
    while (len > 0) {
        sopl("\n\t" + args[len-1]);
        len--;
    }
    sopl("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
8
Gpt3D_Clone452_8.java 1 15
Gpt3D_Clone452_8.java 16 33
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

 public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sopl("\n\tEchoing inputs: \n");
    for (int i = 0; i < len; i++) {
        sopl("\t" + args[i]);
    }
    sopl("\n\tReversing the order: \n");
    for (int i = len-1; i >= 0; i--){
        sopl("\t" + args[i]);
    }
    sopl("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
9
Gpt3D_Clone452_9.java 1 15
Gpt3D_Clone452_9.java 16 33
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

 public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sopl ("\n\tEchoing inputs: \n");
    for (String str : args) {
        sop (str + " ");
    }
    sopl("\n\tReversing the order: \n");
    for (int i = len-1; i >= 0; i--) {
        sop (args[i] + " ");
    }
    sopl("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
453
6
Gpt3D_Clone453_6.java 1 13
Gpt3D_Clone453_6.java 14 34
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
}
----------------------------------------

 //using label-continue
public static void main (String [] args) {
    int len = args.length;
    int j;
     
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    aa : 
    for (int i = 0; i <= len; i ++) {
        for (j = 0; j <= i; j ++) {
            System.out.print("*");
            continue aa ; 
        }
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
453
7
Gpt3D_Clone453_7.java 1 13
Gpt3D_Clone453_7.java 14 33
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
}
----------------------------------------

 //using for loop with break statement
public static void main (String [] args) {
    int len = args.length;
    int j;
     
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    for (int i = 0; ; i++) {
        if (i > len) 
            break;
        for (j = 0; j <= i; j++) {
            System.out.print("*");
        }
        System.out.println("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
453
8
Gpt3D_Clone453_8.java 1 13
Gpt3D_Clone453_8.java 14 25
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
}
----------------------------------------

 //using recursive method
public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    } 
    printStars(len);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
1
Gpt3D_Clone456_1.java 1 15
Gpt3D_Clone456_1.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Boolean > expensiveObjects = new LinkedBlockingDeque < > ();
    expensiveObjects.put (true);
    expensiveObjects.put (false);
    expensiveObjects.put (true);
    expensiveObjects.put (false);
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
2
Gpt3D_Clone456_2.java 1 15
Gpt3D_Clone456_2.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Short > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put ((short)1);
    expensiveObjects.put ((short)2);
    expensiveObjects.put ((short)3);
    expensiveObjects.put ((short)4);
    ExecutorService executorService = Executors.newCachedThreadPool ();
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
3
Gpt3D_Clone456_3.java 1 15
Gpt3D_Clone456_3.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Double > expensiveObjects = new SynchronousQueue < > ();
    expensiveObjects.put (3.14);
    expensiveObjects.put (6.28);
    expensiveObjects.put (9.42);
    expensiveObjects.put (12.56);
    ExecutorService executorService = Executors.newSingleThreadExecutor ();
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
4
Gpt3D_Clone456_4.java 1 15
Gpt3D_Clone456_4.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Long > expensiveObjects = new PriorityBlockingQueue < > ();
    expensiveObjects.put (100L);
    expensiveObjects.put (150L);
    expensiveObjects.put (200L);
    expensiveObjects.put (230L);
    ExecutorService executorService = Executors.newScheduledThreadPool (4);
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
5
Gpt3D_Clone456_5.java 1 15
Gpt3D_Clone456_5.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue <Byte > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put ((byte)0x00);
    expensiveObjects.put ((byte)0x10);
    expensiveObjects.put ((byte)0x20);
    expensiveObjects.put ((byte)0x30);
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
6
Gpt3D_Clone456_6.java 1 15
Gpt3D_Clone456_6.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Character > expensiveObjects = new LinkedTransferQueue < > ();
    expensiveObjects.put ('a');
    expensiveObjects.put ('b');
    expensiveObjects.put ('c');
    expensiveObjects.put ('d');
    ExecutorService executorService = Executors.newCachedThreadPool ();
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
7
Gpt3D_Clone456_7.java 1 15
Gpt3D_Clone456_7.java 16 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < String > expensiveObjects = new DelayQueue < > ();
    expensiveObjects.put ("foo");
    expensiveObjects.put ("bar");
    expensiveObjects.put ("baz");
    expensiveObjects.put ("quux");
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0; i < 4; i++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
458
0
Gpt3D_Clone458_0.java 1 15
Gpt3D_Clone458_0.java 16 32
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

  public static void main (String [] args) throws InterruptedException {
    DelayQueue < Object > expensiveObjects = new DelayQueue < > ();
    expensiveObjects.put ( new DelayObject(new Object(), TimeUnit.SECONDS.toNanos(2)) );
    expensiveObjects.put ( new DelayObject(new Object(), TimeUnit.SECONDS.toNanos(2)) );
    expensiveObjects.put ( new DelayObject(new Object(), TimeUnit.SECONDS.toNanos(2)) );
    expensiveObjects.put ( new DelayObject(new Object(), TimeUnit.SECONDS.toNanos(2)) );
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
459
0
Gpt3D_Clone459_0.java 1 18
Gpt3D_Clone459_0.java 19 39
----------------------------------------

public void run () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

 public void iterateTask () {
    int counter = 0;
    while (counter < 100) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                counter = outputCount.incrementAndGet ();
                System.out.println (counter);
                if (counter == 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
459
1
Gpt3D_Clone459_1.java 1 18
Gpt3D_Clone459_1.java 19 39
----------------------------------------

public void run () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

  public void loop () {
    int counter = 0;
    while (counter < 100) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                counter++;
                System.out.println (counter);
                if (counter == 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
459
2
Gpt3D_Clone459_2.java 1 18
Gpt3D_Clone459_2.java 19 37
----------------------------------------

public void run () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

 public void execute () {
    int counter = outputCount.get ();
    while (counter < 100) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                counter++;
                System.out.println (counter);
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
        outputCount.set (counter);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
463
2
Gpt3D_Clone463_2.java 1 11
Gpt3D_Clone463_2.java 12 24
----------------------------------------

public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final char [] buf = new char [length];
    for (int idx = 0;
    idx < buf.length; ++ idx) {
        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];
    }
    return shuffle (new String (buf));
}
----------------------------------------

 public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final ThreadLocalRandom threadLocalRandom = ThreadLocalRandom.current ();
    final char[] buf = new char[length];
    for (int idx = 0; idx < buf.length; ++idx) {
        buf [idx] = symbols [threadLocalRandom.nextInt (symbols.length)];
    }
    return new String (buf);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
463
3
Gpt3D_Clone463_3.java 1 11
Gpt3D_Clone463_3.java 12 24
----------------------------------------

public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final char [] buf = new char [length];
    for (int idx = 0;
    idx < buf.length; ++ idx) {
        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];
    }
    return shuffle (new String (buf));
}
----------------------------------------

 public String generateRandomPassword ( final int length ) {
    if ( length < 1 ) {
        throw new IllegalArgumentException ( "length must be greater than 0" );
    }
    final char[] buf = new char[length];
    for ( int i = 0; i < length; i++ ) {
        Random rand = new Random (); 
        buf [ i ] = symbols [ rand.nextInt ( symbols.length ) ];
    }
    return new String(buf);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
463
6
Gpt3D_Clone463_6.java 1 11
Gpt3D_Clone463_6.java 12 24
----------------------------------------

public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final char [] buf = new char [length];
    for (int idx = 0;
    idx < buf.length; ++ idx) {
        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];
    }
    return shuffle (new String (buf));
}
----------------------------------------

 public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final SecureRandom secureRandom = new SecureRandom();
    final char[] buf = new char[length];
    for (int i = 0; i < buf.length; ++i) {
        buf[i] = symbols[secureRandom.nextInt(symbols.length)];
    }
    return new String(buf);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
463
8
Gpt3D_Clone463_8.java 1 11
Gpt3D_Clone463_8.java 12 23
----------------------------------------

public String generateRandomPassword (final int length) {
    if (length < 1) {
        throw new IllegalArgumentException ("length must be greater than 0");
    }
    final char [] buf = new char [length];
    for (int idx = 0;
    idx < buf.length; ++ idx) {
        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];
    }
    return shuffle (new String (buf));
}
----------------------------------------

 public String generateRandomPassword ( final int length ) {
    if ( length < 1 ) {
        throw new IllegalArgumentException ( "length must be greater than 0" );
    }
    final char[] buf = new char[length];
    for ( int idx = 0; idx < buf.length; ++idx ) {
        buf [ idx ] = symbols [ new Random().nextInt ( symbols.length ) ];
    }
    return new String(buf);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
1
Gpt3D_Clone464_1.java 1 4
Gpt3D_Clone464_1.java 5 11
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Path targetFile = Files.move(file, Paths.get("newName" + file));
                System.out.println(targetFile);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
2
Gpt3D_Clone464_2.java 1 4
Gpt3D_Clone464_2.java 5 11
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Map<String,Object> atrMap = Files.readAttributes(file, "*");
                System.out.println(atrMap);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
3
Gpt3D_Clone464_3.java 1 4
Gpt3D_Clone464_3.java 5 11
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Path targetFile = Files.copy(file, Paths.get("copyOf:" + file));
                System.out.println(targetFile);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
4
Gpt3D_Clone464_4.java 1 4
Gpt3D_Clone464_4.java 5 10
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Files.lines(file).forEach(System.out::println); 
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
5
Gpt3D_Clone464_5.java 1 4
Gpt3D_Clone464_5.java 5 10
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Files.walk(file).forEach(System.out::println);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
6
Gpt3D_Clone464_6.java 1 4
Gpt3D_Clone464_6.java 5 10
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Files.list(file).forEach(System.out::println);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
7
Gpt3D_Clone464_7.java 1 4
Gpt3D_Clone464_7.java 5 10
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println(FilenameUtils.getBaseName(file.getFileName().toString())); 
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
8
Gpt3D_Clone464_8.java 1 4
Gpt3D_Clone464_8.java 5 11
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                Files.readAllLines(file).forEach(System.out::println);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
464
9
Gpt3D_Clone464_9.java 1 4
Gpt3D_Clone464_9.java 5 10
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println (file);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                System.out.println(Files.getLastModifiedTime(file)); 
                return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
1
Gpt3D_Clone466_1.java 1 15
Gpt3D_Clone466_1.java 16 32
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        GregorianCalendar gc = new GregorianCalendar();
        for (int year = 1901; year <= 2000; year++) {
            for (int month = 1; month <= 12; month++) {
                Date d = gc.getGregorianChange ();
                if (d.getDay () == 0) {
                    counter ++;
                    System.out.println (String.valueOf (counter) + " " + d);
                    System.out.println ("Month Name : " + gc.getDisplayName (Calendar.MONTH, Calendar.SHORT, Locale.US));
                }
            }
        }
        System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
3
Gpt3D_Clone466_3.java 1 15
Gpt3D_Clone466_3.java 16 31
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

 public static void main (String [] argv) {
        int counter = 0;
        for (int year = 1901; year <= 2000; year++) {
            for (int month = 1; month <= 12; month++) {
                Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
                if (d.getDay () == 0) {
                    counter ++;
                    System.out.println (String.valueOf (counter) + " " + d);
                    System.out.println("Current Month : " + DateFormat.getDateInstance(DateFormat.LONG).format(d));
                }
            }
        }
        System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
4
Gpt3D_Clone466_4.java 1 15
Gpt3D_Clone466_4.java 16 31
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        for (int year = 1901; year <= 2000; year++) {
            for (int month = 1; month <= 12; month++) {
                Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
                if (d.getDay () == 0) {
                    counter ++;
                    System.out.println (String.valueOf (counter) + " " + d);
                    System.out.println ("Month Number: " + month);
                }
            }
        }
        System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
5
Gpt3D_Clone466_5.java 1 15
Gpt3D_Clone466_5.java 16 31
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        for (int year = 1901, lastYear = 2000; year <= lastYear; year++) {
            for (int month = 1; month <= 12; month++) {
                Calendar cal = new GregorianCalendar(year, month-1, 1);
                Date date = cal.getTime();
                if (date.getDay() == 0) {
                    counter++;
                    System.out.println(String.valueOf(counter) + " -- "+ date + " at month : " + cal.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.US));
                } 
            }
        }
        System.out.println("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
6
Gpt3D_Clone466_6.java 1 15
Gpt3D_Clone466_6.java 16 77
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        for (int year = 1901; year <= 2000; year++) {
            for (int month = 1; month <= 12; month++) {
                Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
                if (d.getDay () == 0) {
                    counter ++;
                    System.out.println (String.valueOf (counter) + " " + d);
                    System.out.println ("Month: " + getMonthName (month));
                }
            }
        }
        System.out.println ("Total sunday in XX century: " + counter);
      }
    
    private static String getMonthName (int month) {
        String retval = "";
        switch (month) {
            case 1:
                retval = "January";
                break;
            case 2:
                retval = "February";
                break;
            case 3:
                retval = "March";
                break;
            case 4:
                retval = "April";
                break;
            case 5:
                retval = "May";
                break;
            case 6:
                retval = "June";
                break;
            case 7:
                retval = "July";
                break;
            case 8:
                retval = "August";
                break;
            case 9:
                retval = "September";
                break;
            case 10:
                retval = "October";
                break;
            case 11:
                retval = "November";
                break;
            case 12:
                retval = "December";
                break;
            default:
                retval = "Invalid month";
                break;
        }
        return retval;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
7
Gpt3D_Clone466_7.java 1 15
Gpt3D_Clone466_7.java 16 30
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        int year = 1901;
        while (year <= 2000) {
            if (new GregorianCalendar (year, 0, 1).getTime ().getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + year);
            }
            year ++;
        }
        System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
8
Gpt3D_Clone466_8.java 1 15
Gpt3D_Clone466_8.java 16 28
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

  public static void main (String [] argv) {
        int counter = 0;
        for (int year = 1901, last_year = 2000;
            year <= last_year; year++) {
            if (new GregorianCalendar (year, 0, 1).getTime ().getDay () == 0) {
                counter++;
                System.out.println("Sunday on: " + year);  
            }
        }
        System.out.println("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
1
Gpt3D_Clone468_1.java 1 9
Gpt3D_Clone468_1.java 10 28
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) {
   try {
      InetAddress inet;
      inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
      System.out.println ("Sending Ping Request to " + inet);
      System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
      inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
      System.out.println ("Sending Ping Request to " + inet);
      System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   }
   catch(UnknownHostException e) {
      System.out.println("Error: UnknownHostException");
   }
   catch(IOException e) {
      System.out.println("Error connecting to host");
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
2
Gpt3D_Clone469_2.java 1 9
Gpt3D_Clone469_2.java 10 20
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) throws UnknownHostException, IOException {byte[] ipAddr = {127, 0, 0, 1};
   InetAddress inet = InetAddress.getByAddress(ipAddr);
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   byte[] ipAddr2 = {(byte) 173, (byte) 194, 32, 38};
   inet = InetAddress.getByAddress (ipAddr2);
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
4
Gpt3D_Clone469_4.java 1 9
Gpt3D_Clone469_4.java 10 18
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) throws UnknownHostException, IOException {InetAddress inet = InetAddress.getLocalHost();
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   InetAddress inet2 = InetAddress.getByName ("173.194.32.38");
   System.out.println ("Sending Ping Request to " + inet2);
   System.out.println (inet2.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
6
Gpt3D_Clone469_6.java 1 9
Gpt3D_Clone469_6.java 10 18
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) throws UnknownHostException, IOException {InetAddress inet = InetAddress.getByName("localhost");
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   InetAddress inet2 = InetAddress.getByName ("173.194.32.38");
   System.out.println ("Sending Ping Request to " + inet2);
   System.out.println (inet2.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
7
Gpt3D_Clone469_7.java 1 9
Gpt3D_Clone469_7.java 10 18
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) throws UnknownHostException, IOException {InetAddress inet = InetAddress.getLoopbackAddress();
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   InetAddress inet2 = InetAddress.getByName ("173.194.32.38");
   System.out.println ("Sending Ping Request to " + inet2);
   System.out.println (inet2.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
8
Gpt3D_Clone469_8.java 1 9
Gpt3D_Clone469_8.java 10 19
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

 public static void main (String [] args) throws UnknownHostException, IOException {InetAddress inet = InetAddress.getByName("120.0.1");
   System.out.println ("Sending Ping Request to " + inet);
   System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
   InetAddress inet2 = InetAddress.getByName ("173.194.32.38");
   System.out.println ("Sending Ping Request to " + inet2);
   System.out.println (inet2.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
0
Gpt3D_Clone472_0.java 1 9
Gpt3D_Clone472_0.java 10 19
----------------------------------------

public void run () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setLocation (200, 200);
    frame2.setVisible (true);
    isThereReallyEDT ();
}
----------------------------------------

 public void run () {JFrame frame2 = new JFrame("Frame 2");
    frame2.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    frame2.setContentPane(new JPanel(new FlowLayout()));
    frame2.getContentPane().add(new JLabel("Hello in Frame 2"));
    frame2.setBounds(200, 200, 200, 200);
    frame2.setVisible(true);
    isThereReallyEDT();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
1
Gpt3D_Clone472_1.java 1 9
Gpt3D_Clone472_1.java 10 19
----------------------------------------

public void run () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setLocation (200, 200);
    frame2.setVisible (true);
    isThereReallyEDT ();
}
----------------------------------------

 public void run () {JFrame frame2 = new JFrame("Frame 2");
    frame2.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame2.add(new JLabel("Hello in Frame 2"));
    frame2.setSize(200,200);
    frame2.setLocationRelativeTo(null);
    frame2.setVisible(true);
    isThereReallyEDT();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
2
Gpt3D_Clone472_2.java 1 9
Gpt3D_Clone472_2.java 10 19
----------------------------------------

public void run () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setLocation (200, 200);
    frame2.setVisible (true);
    isThereReallyEDT ();
}
----------------------------------------

 public void run () {JFrame frame2 = new JFrame("Frame 2");
    frame2.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    frame2.getContentPane().add(new JLabel("Hello in Frame 2"));
    frame2.setSize(new Dimension(200,200));
    frame2.setBounds(200, 200, 200, 200);
    frame2.setVisible(true);
    isThereReallyEDT();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
3
Gpt3D_Clone472_3.java 1 9
Gpt3D_Clone472_3.java 10 18
----------------------------------------

public void run () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setLocation (200, 200);
    frame2.setVisible (true);
    isThereReallyEDT ();
}
----------------------------------------

 public void run () {JFrame frame2 = new JFrame("Frame 2");
    frame2.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    frame2.getContentPane().add(new JLabel("Hello in Frame 2"));
    frame2.setBounds(200, 200, 200, 200);
    frame2.setVisible(true);
    isThereReallyEDT();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
0
Gpt3D_Clone473_0.java 1 16
Gpt3D_Clone473_0.java 17 41
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath,String zipFilePath) throws IOException{
        Path p = Files.createFile(Paths.get(zipFilePath));
        Path pp = Paths.get(sourceDirPath);
        byte[] buffer = new byte[1024];
        try(ZipOutputStream zs = new ZipOutputStream(Files.newOutputStream(p));
            Stream<Path> paths = Files.walk(pp)){
            paths.filter(path -> !Files.isDirectory(path)).forEach(path -> {
                try{
                    ZipEntry zipEntry = new ZipEntry(pp.relativize(path).toString());
                    zs.putNextEntry(zipEntry);
                    FileInputStream fis = new FileInputStream(path.toString());
                    int length;
                    while((length = fis.read(buffer)) > 0) {
                        zs.write(buffer,0,length);
                    }
                    zs.closeEntry();
                    fis.close();
                }catch (IOException ex){
                    System.err.println(ex);
                }
            });
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
1
Gpt3D_Clone473_1.java 1 16
Gpt3D_Clone473_1.java 17 42
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

  public static void pack(String sourceDirPath, String zipFilePath) throws IOException {
        Path p = Files.createFile(Paths.get(zipFilePath));
        Path pp = Paths.get(sourceDirPath);
        byte[] buffer = new byte[1024];
        try (ZipOutputStream zs = new ZipOutputStream(Files.newOutputStream(p));
             Stream<Path> paths = Files.list(pp)) {
            paths.filter(path -> !Files.isDirectory(path)).forEach(path -> {
                try {
                    ZipEntry zipEntry = new ZipEntry(pp.relativize(path).toString());
                    zs.putNextEntry(zipEntry);
                    BufferedInputStream bis = new BufferedInputStream(Files.newInputStream(path));
                    int length;
                    while ((length = bis.read(buffer)) > 0) {
                        zs.write(buffer, 0, length);
                    }
                    zs.closeEntry();
                    bis.close();
                } catch (IOException ex) {
                    System.err.println(ex);
                }
            });
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
2
Gpt3D_Clone473_2.java 1 16
Gpt3D_Clone473_2.java 17 40
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

  public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
        Path p = Files.createFile (Paths.get (zipFilePath));
        Path pp = Paths.get (sourceDirPath);
        try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
            paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
                ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
                try {
                    zs.putNextEntry (zipEntry);
                    FileInputStream fStream = new FileInputStream (path.toString ());
                    byte[] b = new byte[1024];
                    int count;
                    while ((count = fStream.read (b)) > 0) {
                        zs.write (b, 0, count);
                    }
                    zs.closeEntry ();
                    fStream.close ();
                } catch (IOException e) {
                    System.err.println (e);
                }
            });
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
3
Gpt3D_Clone473_3.java 1 16
Gpt3D_Clone473_3.java 17 41
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath, String zipFilePath) throws IOException {
            Path p = Files.createFile(Paths.get(zipFilePath));
            Path pp = Paths.get(sourceDirPath);
            byte[] buffer = new byte[1024];
            try (ZipOutputStream zs = new ZipOutputStream(Files.newOutputStream(p));
                 Stream<Path> paths = Files.walk(pp)) {
                paths.filter(path -> !Files.isDirectory(path)).forEach(path -> {
                    try {
                        ZipEntry zipEntry = new ZipEntry(pp.relativize(path).toString());
                        zs.putNextEntry(zipEntry);
                        BufferedInputStream bis = new BufferedInputStream(Files.newInputStream(path));
                        int length;
                        while ((length = bis.read(buffer)) > 0) {
                            zs.write(buffer, 0, length);
                        }
                        zs.closeEntry();
                        bis.close();
                    } catch (IOException ex) {
                        System.err.println(ex);
                    }
                });
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
4
Gpt3D_Clone473_4.java 1 16
Gpt3D_Clone473_4.java 17 42
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

  public static void pack(String sourceDirPath, String zipFilePath) throws IOException {
        Path p = Files.createFile(Paths.get(zipFilePath));
        Path pp = Paths.get(sourceDirPath);
        try (ZipOutputStream zs = new ZipOutputStream(Files.newOutputStream(p));
             Stream<Path> paths = Files.walk(pp)) {
            paths.filter(path -> !Files.isDirectory(path)).forEach(path -> {
                try {
                    ZipEntry zipEntry = new ZipEntry(pp.relativize(path).toString());
                    zs.putNextEntry(zipEntry);
                    InputStream inputStream = Files.newInputStream(path);
                    byte[] b = new byte[1024];
                    int count;
                    while ((count = inputStream.read(b)) > 0) {
                        zs.write(b, 0, count);
                    }
                    zs.closeEntry();
                    inputStream.close();
                } catch (IOException e) {
                    System.err.println(e);
                }
            });
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
6
Gpt3D_Clone473_6.java 1 16
Gpt3D_Clone473_6.java 17 37
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

  public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
        Path p = Files.createFile (Paths.get (zipFilePath));
        Path pp = Paths.get (sourceDirPath);
        try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
            paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
                ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
                try {
                    zs.putNextEntry (zipEntry);
                    InputStream is = Files.newInputStream (path);
                    byte[] bytes = is.readAllBytes();
                    zs.write(bytes);
                    zs.closeEntry ();
                    is.close();
                } catch (IOException e) {
                    System.err.println (e);
                }
            });
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
474
2
Gpt3D_Clone474_2.java 1 16
Gpt3D_Clone474_2.java 17 34
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p))) {
        Path pp = Paths.get (sourceDirPath);
        Files.walk (pp).filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath, String zipFilePath) throws IOException{ 
    ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFilePath)); 
    Path pp = Paths.get(sourceDirPath); 
    Files.walk(pp).filter(path -> !Files.isDirectory(path)).forEach( path -> { 
        try{ 
            ZipEntry zipEntry = new ZipEntry(pp.relativize(path).toString()); 
            zos.putNextEntry(zipEntry); 
            Files.copy(path, zos); 
            zos.closeEntry(); 
        } catch(IOException e){ 
            e.printStackTrace(); 
        } 
    }); 
    zos.finish(); 
    zos.close(); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
474
3
Gpt3D_Clone474_3.java 1 16
Gpt3D_Clone474_3.java 17 34
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p))) {
        Path pp = Paths.get (sourceDirPath);
        Files.walk (pp).filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath, String zipFilePath) throws IOException{
    ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFilePath));
    Path pathSource = Paths.get(sourceDirPath);
    Files.find(pathSource,Integer.MAX_VALUE,(path,attrs)->attrs.isRegularFile())
    .forEach(path -> {
        try {
            ZipEntry entry = new ZipEntry(pathSource.relativize(path).toString());
            zos.putNextEntry(entry);
            Files.copy(path,zos);
            zos.closeEntry();
        } catch (IOException e) {
            e.printStackTrace();
        }
    });
    zos.close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
474
6
Gpt3D_Clone474_6.java 1 16
Gpt3D_Clone474_6.java 17 33
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p))) {
        Path pp = Paths.get (sourceDirPath);
        Files.walk (pp).filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath, String zipFilePath) throws IOException{
    Path pathZipFile = Files.createFile(Paths.get(zipFilePath));
    try(ZipOutputStream zout = new ZipOutputStream(Files.newOutputStream(pathZipFile))){
        Files.list(Paths.get(sourceDirPath)).filter(Files::isRegularFile).forEach(path -> {
            try {
                ZipEntry entry = new ZipEntry(path.getFileName().toString());
                zout.putNextEntry(entry);
                Files.copy(path,zout);
                zout.closeEntry();
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
474
7
Gpt3D_Clone474_7.java 1 16
Gpt3D_Clone474_7.java 17 33
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p))) {
        Path pp = Paths.get (sourceDirPath);
        Files.walk (pp).filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

 public static void pack(String sourceDirPath, String zipFilePath) throws IOException{
    Path zipOutput = Files.createFile(Paths.get(zipFilePath));
    try(ZipOutputStream zs = new ZipOutputStream(Files.newOutputStream(zipOutput))){
        Files.walk(Paths.get(sourceDirPath)).filter(Files::isRegularFile).forEach(path -> {
            try{
                ZipEntry zipEntry = new ZipEntry(path.getFileName().toString());
                zs.putNextEntry(zipEntry);
                Files.copy(path, zs);
                zs.closeEntry();
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
0
Gpt3D_Clone475_0.java 1 14
Gpt3D_Clone475_0.java 15 33
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File folder = new File(srcFolder);
        if(folder.list().length == 0) {
            addFileToZip(path, srcFolder, zip, true);
        } else {
            for(String fileName : folder.list()) {
                String folderPath;
                if(path.equals("")) {
                    folderPath = folder.getName();
                } else {
                    folderPath = path + "/" + folder.getName(); 
                }
                addFileToZip(folderPath, srcFolder +"/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
1
Gpt3D_Clone475_1.java 1 14
Gpt3D_Clone475_1.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File directory = new File(srcFolder);
        if(directory.list().length == 0) {
            addFileToZip(srcFolder, zip, true);
        } else {
            for(String file : directory.list()) {
                String folderPath;
                if(path.equals("")) {
                    folderPath = directory.getName() + "/" + file;
                } else {
                    folderPath = path + "/" + directory.getName() + "/" + file; 
                }
                addFileToZip(folderPath, srcFolder, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
2
Gpt3D_Clone475_2.java 1 14
Gpt3D_Clone475_2.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String folderPath, ZipOutputStream zip) throws IOException {
        File folder = new File(folderPath);
        if(folder.list().length == 0) {
            addFileToZip(path, folderPath, zip, true);
        } else {
            for(String file : folder.list()) {
                String fullPath;
                if(path.isEmpty()) {
                    fullPath = folder.getName();
                } else {
                    fullPath = path + "/" + folder.getName();
                }
                addFileToZip(fullPath, folderPath + "/" + file, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
3
Gpt3D_Clone475_3.java 1 14
Gpt3D_Clone475_3.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

 private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File folder = new File(srcFolder);
        if(folder.list().length == 0) {
            addFileToZip("", srcFolder, zip, true);
        } else {
            for(String fileName : folder.list()) {
                String folderPath;
                if(path.equals("")) {
                    folderPath = folder.getName() + "/" + fileName;
                } else {
                    folderPath = path + "/" + folder.getName() + "/" + fileName; 
                }
                addFileToZip(folderPath, srcFolder + "/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
4
Gpt3D_Clone475_4.java 1 14
Gpt3D_Clone475_4.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File folder = new File(srcFolder);
        if(folder.list().length == 0) {
            addFileToZip(path, srcFolder, zip, true);
        } else {
            for(String fileName : folder.list()) {
                String folderPath;
                if(path.equals("")) {
                    folderPath = folder.getName() + "/" + fileName;
                } else {
                    folderPath = path + "/" + folder.getName() + "/" + fileName; 
                }
                addFileToZip(folderPath, srcFolder, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
5
Gpt3D_Clone475_5.java 1 14
Gpt3D_Clone475_5.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File folder = new File(srcFolder);
        if(folder.list().length == 0) {
            addFileToZip(srcFolder, zip, true);
        } else {
            for(String fileName : folder.list()) {
                String folderPath;
                if(path.equals("")) {
                    folderPath = folder.getName() + "/" + fileName;
                } else {
                    folderPath = path + "/" + folder.getName() + "/" + fileName; 
                }
                addFileToZip(srcFolder + "/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
6
Gpt3D_Clone475_6.java 1 14
Gpt3D_Clone475_6.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String srcPath, String folderPath, ZipOutputStream zip) throws IOException {
        File directory = new File(folderPath);
        if(directory.list().length == 0) {
            addFileToZip("", folderPath, zip, true);
        } else {
            for(String fileName : directory.list()) {
                String folderName;
                if(srcPath.equals("")) {
                    folderName = directory.getName();
                } else {
                    folderName = srcPath + "/" + directory.getName();
                }
                addFileToZip(folderName, folderPath + "/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
7
Gpt3D_Clone475_7.java 1 14
Gpt3D_Clone475_7.java 15 27
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File directory = new File(srcFolder);
        if(directory.list().length == 0) {
            addFileToZip(path, srcFolder, zip, true);
        } else {
            for(String fileName : directory.list()) {
                String folderPath = path.equals("") ? directory.getName() : path + "/" + directory.getName(); 
                addFileToZip(folderPath, srcFolder + "/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
8
Gpt3D_Clone475_8.java 1 14
Gpt3D_Clone475_8.java 15 27
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

  private void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws IOException {
        File folder = new File(srcFolder);
        if(folder.list().length == 0) {
            addFileToZip(path, srcFolder, zip, true);
        } else {
            for(String fileName : folder.list()) {
                String folderPath = path.equals("") ? folder.getName() : path + "/" + folder.getName();
                addFileToZip(folderPath, srcFolder +"/" + fileName, zip, false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
488
0
Gpt3D_Clone488_0.java 1 24
Gpt3D_Clone488_0.java 25 54
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        FileInputStream fis = new FileInputStream(fileName);
        Scanner scan = new Scanner(fis);
        while (scan.hasNext ()) {
            String line = scan.next ();
            if (! output && line.contains (startToken)) {
                output = true;
                line = line.replaceFirst(startToken, "");
            } else if (output && line.contains (endToken)) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
        fis.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException ex) { 
      ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
488
1
Gpt3D_Clone488_1.java 1 24
Gpt3D_Clone488_1.java 25 54
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        InputStreamReader isr = new InputStreamReader(new FileInputStream(fileName));
        Scanner scan = new Scanner(isr);
        while (scan.hasNext ()) {
            String line = scan.next ();
            if (! output && line.contains (startToken)) {
                output = true;
                line = line.replaceFirst(startToken, "");
            } else if (output && line.contains (endToken)) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
        isr.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException ex) { 
      ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
488
2
Gpt3D_Clone488_2.java 1 24
Gpt3D_Clone488_2.java 25 53
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        BufferedReader br = new BufferedReader(new FileReader(fileName));
        String line;
        while ((line = br.readLine()) != null) {
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
         br.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException ex) { 
      ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
488
3
Gpt3D_Clone488_3.java 1 24
Gpt3D_Clone488_3.java 25 53
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        BufferedReader br = new BufferedReader(new FileReader(fileName));
        String line;
        while ((line = br.readLine()) != null) {
            if (! output && line.contains (startToken)) {
                output = true;
                line = line.replaceFirst(startToken, "");
            } else if (output && line.contains (endToken)) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }
            if (output) {
                System.out.println (line);
            }
        }
         br.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException ex) { 
      ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
490
0
Gpt3D_Clone490_0.java 1 10
Gpt3D_Clone490_0.java 11 22
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

 static public void main (String [] argv) {
    System.out.println ("Begin");
    C0 newObj = new C0();
    try {
        System.out.println ("Access item: " + newObj. nested.innerItem);
    } catch (NullPointerException e) {
        System.out.println ("Failed to access item: " + e.toString ());
    }
    System.out.println ("Done");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
0
Gpt3D_Clone491_0.java 1 9
Gpt3D_Clone491_0.java 10 23
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    try {
        while (true) {
            System.out.println (info); 
            synchronized(this) {
                this.wait();
            }
        }
    } catch (Exception e) {
        e.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
1
Gpt3D_Clone491_1.java 1 9
Gpt3D_Clone491_1.java 10 21
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    try {
        while (true) {
            System.out.println (info); 
            LockSupport.park();
        }
    } catch (Exception e) {
        e.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
2
Gpt3D_Clone491_2.java 1 9
Gpt3D_Clone491_2.java 10 22
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    try {
        while (true) {
            System.out.println (info); 
            this.wait(); 
        }
    } catch (Exception e) {
        e.printStackTrace(); 
    }
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
3
Gpt3D_Clone491_3.java 1 9
Gpt3D_Clone491_3.java 10 21
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    try {
        while (true) {
            System.out.println (info); 
            synchronized(info) {
                info.wait(1000);
            }
        }
    } catch (Exception e) { }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
4
Gpt3D_Clone491_4.java 1 9
Gpt3D_Clone491_4.java 10 21
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    while (true) {
        System.out.println (info);
        try {
            this.wait();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
5
Gpt3D_Clone491_5.java 1 9
Gpt3D_Clone491_5.java 10 21
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    try {
        while (true) {
            System.out.println (info); 
            synchronized (info) {
                info.wait();
            }
        }
    } catch (Exception e) {}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
8
Gpt3D_Clone491_8.java 1 9
Gpt3D_Clone491_8.java 10 18
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

 public synchronized void run () {
    while (true) {
        System.out.println(info); 
        Thread.sleep(1000); 
        wait();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
0
Gpt3D_Clone492_0.java 1 19
Gpt3D_Clone492_0.java 20 34
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

  public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        c.setBackground (Color.WHITE);
        c.setForeground (Color.BLACK);
        JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
            l.setBackground (Color.GREEN);
        } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBackground (Color.RED);
        }
        return l;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
1
Gpt3D_Clone492_1.java 1 19
Gpt3D_Clone492_1.java 20 34
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
            c.setBackground (Color.GREEN);
            c.setForeground (Color.BLACK);
        } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            c.setBackground (Color.YELLOW);
            c.setForeground (Color.BLACK);
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            c.setBackground (Color.RED);
            c.setForeground (Color.BLACK);
        }
        return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
2
Gpt3D_Clone492_2.java 1 19
Gpt3D_Clone492_2.java 20 34
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
            c.setBackground (Color.GREEN);
            c.setForeground (Color.BLACK);
        } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            c.setBackground (Color.YELLOW);
            c.setForeground (Color.BLACK);
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            c.setBackground (Color.RED);
            c.setForeground (Color.BLACK);
        }
        return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
3
Gpt3D_Clone492_3.java 1 19
Gpt3D_Clone492_3.java 20 33
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        c.setBackground (Color.WHITE);
        c.setForeground (Color.BLACK);
        if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
            c.setBackground (Color.GREEN);
        } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            c.setBackground (Color.YELLOW);
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            c.setBackground (Color.RED);
        }
        return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
4
Gpt3D_Clone492_4.java 1 19
Gpt3D_Clone492_4.java 20 33
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

  public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        c.setBackground (Color.GREEN);
    } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
        c.setBackground (Color.YELLOW);
    } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
        c.setBackground (Color.RED);
    }
    return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
5
Gpt3D_Clone492_5.java 1 19
Gpt3D_Clone492_5.java 20 36
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        c.setBackground (Color.DARK_GRAY);
        c.setForeground (Color.WHITE);
        if(separatedVariable.equals("YOUR VALUE TO GREEN")) {
            c.setBackground(Color.GREEN);
        } 
        else if(separatedValue.equals("YOUR VALUE TO YELLOW")) {
            c.setBackground(Color.YELLOW);
        }
        else if (separatedValue.equals("YOUR VALUE TO RED")) {
            c.setBackground(Color.RED);
        }
        return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
492
6
Gpt3D_Clone492_6.java 1 19
Gpt3D_Clone492_6.java 20 32
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
    Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    c.setBackground (Color.WHITE);
    c.setForeground (Color.BLACK);
    JLabel l = (JLabel) super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
    if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
        l.setBackground (Color.GREEN);
        return l;
    } else {
        if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            l.setBackground (Color.YELLOW);
            return l;
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            l.setBaground (Color.RED);
            return l;
        }
    }
    return c;
}
----------------------------------------

 public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) { Component c = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, col);
        c.setForeground (Color.BLACK);
        if (separatedVariable.equals ("YOUR VALUE TO GREEN")) {
            c.setBackground (Color.GREEN);
        } else if (separatedValue.equals ("YOUR VALUE TO YELLOW")) {
            c.setBackground (Color.YELLOW);
        } else if (separatedValue.equals ("YOUR VALUE TO RED")) {
            c.setBackground (Color.RED);
        }
        return c;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
7
Gpt3D_Clone494_7.java 1 10
Gpt3D_Clone494_7.java 11 21
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

 public void move (Container container) {if (xPos >= canvasWidth || xPos <= 0){
        deltaX *= -1;
   }
   if (yPos >= canvasHeight || yPos <= 0){
        deltaY *= -1;
   }
   xPos += deltaX;
    yPos += deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
9
Gpt3D_Clone494_9.java 1 10
Gpt3D_Clone494_9.java 11 21
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

 public void move (Container container) {if (xLocation >= canvasWidth || xLocation <= 0){
        callX *= -1;
   }
   if (yLocation >= canvasHeight || yLocation <= 0){
        callY *= -1;
   }
    xLocation += callX;
    yLocation += callY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
498
0
Gpt3D_Clone498_0.java 1 13
Gpt3D_Clone498_0.java 14 31
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == 0) {
        try {
            Bitmap cameraBitmap;
            cameraBitmap = BitmapFactory.decodeFile (myFilesDir + "/temp.jpg");
            Bitmap.createBitmap (cameraBitmap);
            ivPhoto.setImageBitmap (cameraBitmap);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

  protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 0) {
            try {
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inPreferredConfig = Bitmap.Config.ARGB_8888;
                Bitmap cameraBitmap;
                cameraBitmap = BitmapFactory.decodeFile(myFilesDir + "/temp.jpg",options);
                Bitmap resizedBitmap = Bitmap.createScaledBitmap(cameraBitmap, 1280, 720, false);
                ivPhoto.setImageBitmap(resizedBitmap);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
0
Gpt3D_Clone499_0.java 1 36
Gpt3D_Clone499_0.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiagnol = n - 1;
    int rightDiagnol = 0;
    int leftSum = 0;
    int rightSum = 0;
    int matrix [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            matrix [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiagnol++;
        for (int col = 0; col < n; col++) {
            if (leftDiagnol == col && !leftFound) {
                leftSum = leftSum + matrix [row][col];
                leftFound = true;
            }
            if (rightDiagnol == col && !rightFound) {
                rightSum = rightSum + matrix [row][col];
                rightFound = true;
            }
        }
        rightDiagnol--;
    }
    int difference = leftSum - rightSum;
    System.out.println (Math.abs (difference));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
1
Gpt3D_Clone499_1.java 1 36
Gpt3D_Clone499_1.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) { 
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiagStart = 0;
    int rightDiagStart = n - 1;
    int leftTotal = 0;
    int rightTotal = 0;
    int mat [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            mat [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiagStart++;
        for (int col = 0; col < n; col++) {
            if (leftDiagStart == col && !leftFound) {
                leftTotal = leftTotal + mat [row][col];
                leftFound = true;
            }
            if (rightDiagStart == col && !rightFound) {
                rightTotal = rightTotal + mat [row][col];
                rightFound = true;
            }
        }
        rightDiagStart--;
    }
    int diff = leftTotal - rightTotal;
    System.out.println (Math.abs (diff));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
2
Gpt3D_Clone499_2.java 1 36
Gpt3D_Clone499_2.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiagStart = 0;
    int rightDiagStart = n - 1;
    int leftTot = 0;
    int rightTot = 0;
    int arr [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            arr [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiagStart++;
        for (int col = 0; col < n; col++) {
            if (leftDiagStart == col && !leftFound) {
                leftTot = leftTot + arr [row][col];
                leftFound = true;
            }
            if (rightDiagStart == col && !rightFound) {
                rightTot = rightTot + arr [row][col];
                rightFound = true;
            }
        }
        rightDiagStart--;
    }
    int diff = leftTot - rightTot;
    System.out.println (Math.abs (diff));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
3
Gpt3D_Clone499_3.java 1 36
Gpt3D_Clone499_3.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiagStart = 0;
    int rightDiagStart = n - 1;
    int leftSum = 0;
    int rightSum = 0;
    int arr [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            arr [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiagStart++;
        for (int col = 0; col < n; col++) {
            if (leftDiagStart == col && !leftFound) {
                leftSum = leftSum + arr [row][col];
                leftFound = true;
            }
            if (rightDiagStart == col && !rightFound) {
                rightSum = rightSum + arr [row][col];
                rightFound = true;
            }
        }
        rightDiagStart--;
    }
    int difference = leftSum - rightSum;
    System.out.println (Math.abs (difference));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
4
Gpt3D_Clone499_4.java 1 36
Gpt3D_Clone499_4.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) { 
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftStartDiagonal = 0;
    int rightStartDiagonal = n-1;
    int leftTotal = 0;
    int rightTotal = 0;
    int matrix [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            matrix [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftStartDiagonal++;
        for (int col = 0; col < n; col++) {
            if (leftStartDiagonal == col && !leftFound) {
                leftTotal = leftTotal + matrix [row][col];
                leftFound = true;
            }
            if (rightStartDiagonal == col && !rightFound) {
                rightTotal = rightTotal + matrix [row][col];
                rightFound = true;
            }
        }
        rightStartDiagonal--;
    }
    int difference = leftTotal - rightTotal;
    System.out.println (Math.abs (difference));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
5
Gpt3D_Clone499_5.java 1 36
Gpt3D_Clone499_5.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiag = 0;
    int rightDiag = n - 1;
    int leftSum = 0;
    int rightSum = 0;
    int mat [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            mat [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiag++;
        for (int col = 0; col < n; col++) {
            if (leftDiag == col && !leftFound) {
                leftSum = leftSum + mat [row][col];
                leftFound = true;
            }
            if (rightDiag == col && !rightFound) {
                rightSum = rightSum + mat [row][col];
                rightFound = true;
            }
        }
        rightDiag--;
    }
    int result = leftSum - rightSum;
    System.out.println (Math.abs (result));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
6
Gpt3D_Clone499_6.java 1 36
Gpt3D_Clone499_6.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftStartDiag = 0;
    int rightStartDiag = n-1;
    int leftTotal = 0;
    int rightTotal = 0;
    int mess [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            mess [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftStartDiag++;
        for (int col = 0; col < n; col++) {
            if (leftStartDiag == col && !leftFound) {
                leftTotal = leftTotal + mess [row][col];
                leftFound = true;
            }
            if (rightStartDiag == col && !rightFound) {
                rightTotal = rightTotal + mess [row][col];
                rightFound = true;
            }
        }
        rightStartDiag--;
    }
    int diff = leftTotal - rightTotal;
    System.out.println (Math.abs (diff));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
7
Gpt3D_Clone499_7.java 1 36
Gpt3D_Clone499_7.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiag = n-1;
    int rightDiag = 0;
    int leftSum = 0;
    int rightSum = 0;
    int matrix [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            matrix [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiag++;
        for (int col = 0; col < n; col++) {
            if (leftDiag == col && !leftFound) {
                leftSum = leftSum + matrix [row][col];
                leftFound = true;
            }
            if (rightDiag == col && !rightFound) {
                rightSum = rightSum + matrix [row][col];
                rightFound = true;
            }
        }
        rightDiag--;
    }
    int difference = leftSum - rightSum;
    System.out.println (Math.abs (difference));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
8
Gpt3D_Clone499_8.java 1 36
Gpt3D_Clone499_8.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) { 
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiag = 0;
    int rightDiag = n - 1;
    int leftSum = 0;
    int rightSum = 0;
    int mat [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            mat [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiag++;
        for (int col = 0; col < n; col++) {
            if (leftDiag == col && !leftFound) {
                leftSum = leftSum + mat [row][col];
                leftFound = true;
            }
            if (rightDiag == col && !rightFound) {
                rightSum = rightSum + mat [row][col];
                rightFound = true;
            }
        }
        rightDiag--;
    }
    int diff = leftSum - rightSum;
    System.out.println (Math.abs (diff));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
499
9
Gpt3D_Clone499_9.java 1 36
Gpt3D_Clone499_9.java 37 70
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int leftStartDiagnol = 0;
    int rightStartDiagnol = n;
    int leftTotal = 0;
    int rightTotal = 0;
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    for (int a_i = 0;
    a_i < n; a_i ++) {
        boolean leftNotFound = true;
        boolean rightNotFound = true;
        rightStartDiagnol = -- rightStartDiagnol;
        for (int a_j = 0;
        a_j < n; a_j ++) {
            if (leftStartDiagnol == a_j && leftNotFound) {
                leftTotal = leftTotal + a [a_i] [a_j];
                leftNotFound = false;
            }
            if (rightStartDiagnol == a_j && rightNotFound) {
                rightTotal = rightTotal + a [a_i] [a_j];
                rightNotFound = false;
            }
        }
        leftStartDiagnol = ++ leftStartDiagnol;
    }
    int data = leftTotal - rightTotal;
    System.out.println (Math.abs (data));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt();
    int leftDiag = n-1;
    int rightDiag = 0;
    int leftSum = 0;
    int rightSum = 0;
    int mess [][] = new int [n][n];
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++) {
            mess [row][col] = in.nextInt();
        }
    }
    for (int row = 0; row < n; row++) {
        boolean leftFound = false;
        boolean rightFound = false;
        leftDiag++;
        for (int col = 0; col < n; col++) {
            if (leftDiag == col && !leftFound) {
                leftSum = leftSum + mess [row][col];
                leftFound = true;
            }
            if (rightDiag == col && !rightFound) {
                rightSum = rightSum + mess [row][col];
                rightFound = true;
            }
        }
        rightDiag--;
    }
    int result = leftSum - rightSum;
    System.out.println (Math.abs (result));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
0
Gpt3D_Clone49_0.java 1 16
Gpt3D_Clone49_0.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 2;
    do
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 2;
            slow = fast;
        }
    } while (fast.next != null);
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
1
Gpt3D_Clone49_1.java 1 16
Gpt3D_Clone49_1.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    int taken = 0;
    int limit = 6;
    Node slow = root;
    Node fast = root;
    do
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 6;
            slow = fast;
        }
    } while (fast.next != null);
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
2
Gpt3D_Clone49_2.java 1 16
Gpt3D_Clone49_2.java 17 50
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 16;
    while (true) 
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 16;
            slow = fast;
        }
        if (fast == null)
            break;
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
3
Gpt3D_Clone49_3.java 1 16
Gpt3D_Clone49_3.java 17 50
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    int taken = 0;
    int limit = 2;
    Node slow = root;
    Node fast = root;
    while (true)
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 2;
            slow = fast;
        }
        if (fast == null)
            break;
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
4
Gpt3D_Clone49_4.java 1 16
Gpt3D_Clone49_4.java 17 50
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 6;
    while (true)
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 6;
            slow = fast;
        }
        if (fast == null)
            break;
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
5
Gpt3D_Clone49_5.java 1 16
Gpt3D_Clone49_5.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 32;
    do
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 32;
            slow = fast;
        }
    } while (fast.next != null);
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
6
Gpt3D_Clone49_6.java 1 16
Gpt3D_Clone49_6.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 4;
    while (fast.next != null)
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 4;
            slow = fast;
        }
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
7
Gpt3D_Clone49_7.java 1 16
Gpt3D_Clone49_7.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    int taken = 0;
    int limit = 4;
    Node slow = root;
    Node fast = root;
    while (fast.next != null)
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 4;
            slow = fast;
        }
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
8
Gpt3D_Clone49_8.java 1 16
Gpt3D_Clone49_8.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    int taken = 0;
    int limit = 2;
    Node slow = root;
    Node fast = root;
    while (fast.next != null)
    {
        fast = fast.next;
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 2;
            slow = fast;
        }
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
49
9
Gpt3D_Clone49_9.java 1 16
Gpt3D_Clone49_9.java 17 47
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

 public static boolean hasLoop (Node root) 
{
    if (root == null) 
        return false;
    Node slow = root;
    Node fast = root;
    int taken = 0;
    int limit = 8;
    while (fast.next != null) 
    {
        fast = fast.next; 
        taken++;
        if (slow == fast) 
            return true;
        if (taken == limit)
        {
            taken = 0;
            limit *= 8;
            slow = fast;
        }
    }
    
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
500
0
Gpt3D_Clone500_0.java 1 24
Gpt3D_Clone500_0.java 25 54
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    int l_sum = 0;
    for (int i = 0;
    i < n; i ++) {
        l_sum += a [i] [i];
    }
    int r_sum = 0;
    for (int j = 0;
    j < n; j ++) {
        r_sum += a [j] [n - 1 - j];
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [] [] = new int [n] [n];
    for (int a_i = 0; a_i < n; a_i ++) {
        for (int a_j = 0; a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    int l_sum = 0;
    for (int i = 0; i < n; i ++) {
        for (int j = 0; j < n; j ++) {
            if (i == j){
                l_sum += a [i] [j];
            }
        }    
    }
    int r_sum = 0;
    for (int i = 0; i < n; i ++) {
        for (int j = 0; j < n; j ++) {
            if (i + j == n - 1){
                r_sum += a [i] [j];
            }
        }    
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
500
1
Gpt3D_Clone500_1.java 1 24
Gpt3D_Clone500_1.java 25 50
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    int l_sum = 0;
    for (int i = 0;
    i < n; i ++) {
        l_sum += a [i] [i];
    }
    int r_sum = 0;
    for (int j = 0;
    j < n; j ++) {
        r_sum += a [j] [n - 1 - j];
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [][] = new int [n][n];
    for (int row = 0; row < n; row ++) {
        for (int col = 0; col < n; col ++) {
            a [row][col] = in.nextInt ();
        }
    }
    int l_sum = 0;
    int right_index = 0;
    while (right_index < n) {
        l_sum += a [right_index] [right_index] ;
        right_index++;
    }
    int r_sum = 0;
    int left_index = n - 1;
    while (left_index >= 0) {
        r_sum += a [n - 1 - left_index] [left_index] ;
        left_index--;
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
500
2
Gpt3D_Clone500_2.java 1 24
Gpt3D_Clone500_2.java 25 50
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [] [] = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    int l_sum = 0;
    for (int i = 0;
    i < n; i ++) {
        l_sum += a [i] [i];
    }
    int r_sum = 0;
    for (int j = 0;
    j < n; j ++) {
        r_sum += a [j] [n - 1 - j];
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int a [][] = new int [n][n];
    for (int i = 0; i < n; i ++) {
        for (int j = 0; j < n; j ++) {
            a [i][j] = in.nextInt ();
        }
    }
    int l_sum = 0;
    int index = 0;
    while (index < n) {
        l_sum += a [index] [index];
        index = index + 1;
    }
    int r_sum = 0;
    int index1 = 0;
    while (index1 < n) {
        r_sum += a [n - 1 - index1] [index1];
        index1 = index1 + 1;
    }
    int sum = l_sum + r_sum;
    System.out.println (sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
2
Gpt3D_Clone506_2.java 1 14
Gpt3D_Clone506_2.java 15 34
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

 public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (isImageExist (strfilename)) {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    } else {
        try {
            image = ImageIO.read (getClass().getResourceAsStream("NOIMAGE.jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
6
Gpt3D_Clone506_6.java 1 14
Gpt3D_Clone506_6.java 15 29
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

 public void displayImage (String strfilename, JLabel JLlabel) {
    if (! isImageExist (strfilename)) {
        strfilename = "NOIMAGE";
    }
    BufferedImage image = null;
    try {
        image = ImageIO.read (new File (strfilename + ".jpg"));
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
7
Gpt3D_Clone506_7.java 1 14
Gpt3D_Clone506_7.java 15 29
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

 public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    try {
        if (isImageExist (strfilename)) 
            image = ImageIO.read (new File (strfilename + ".jpg"));
        else
            image = ImageIO.read (ClassLoader.getSystemResource ("NOIMAGE.jpg"));
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    }    
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
8
Gpt3D_Clone506_8.java 1 14
Gpt3D_Clone506_8.java 15 29
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

 public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    try {
        if (isImageExist (strfilename)) 
            image = ImageIO.read (new File (strfilename + ".jpg"));
        else 
            image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
507
0
Gpt3D_Clone507_0.java 1 11
Gpt3D_Clone507_0.java 12 23
----------------------------------------

        public void run () {
            WhiteSpace ws = new WhiteSpace ();
            Container gui = ws.getGui ();
            JFrame f = new JFrame ("White (OK Red) Space");
            f.add (gui);
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.setResizable (false);
            f.pack ();
            f.setVisible (true);
}
----------------------------------------

 public void run(){
		WhiteSpace ws = new WhiteSpace();
		Container gui = ws.getGui();
		JDialog dlg = new JDialog(new JFrame("White (OK Red) Space"), true);
		dlg.add(gui);
		dlg.pack();
		dlg.setResizable(false);
		dlg.setVisible(true);
		dlg.setLocation(150,150);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
507
1
Gpt3D_Clone507_1.java 1 11
Gpt3D_Clone507_1.java 12 23
----------------------------------------

        public void run () {
            WhiteSpace ws = new WhiteSpace ();
            Container gui = ws.getGui ();
            JFrame f = new JFrame ("White (OK Red) Space");
            f.add (gui);
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.setResizable (false);
            f.pack ();
            f.setVisible (true);
}
----------------------------------------

 public void run(){
		WhiteSpace ws = new WhiteSpace();
		Container gui = ws.getGui();
		JDialog dlg = new JDialog(new JFrame("White (OK Red) Space"), true);
		dlg.add(gui);
		dlg.pack();
		dlg.setResizable(false);
		dlg.setVisible(true);
		dlg.setLocationByPlatform(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
507
2
Gpt3D_Clone507_2.java 1 11
Gpt3D_Clone507_2.java 12 24
----------------------------------------

        public void run () {
            WhiteSpace ws = new WhiteSpace ();
            Container gui = ws.getGui ();
            JFrame f = new JFrame ("White (OK Red) Space");
            f.add (gui);
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.setResizable (false);
            f.pack ();
            f.setVisible (true);
}
----------------------------------------

    
 public void run(){
		WhiteSpace ws = new WhiteSpace();
		Container gui = ws.getGui();
		JDialog dlg = new JDialog(new JFrame("White (OK Red) Space"), true);
		dlg.add(gui);
		dlg.pack();
		dlg.setResizable(false);
		dlg.setLocationByPlatform(true);
		dlg.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
508
0
Gpt3D_Clone508_0.java 1 11
Gpt3D_Clone508_0.java 12 25
----------------------------------------

        public void run () {
            WhiteSpace ws = new WhiteSpace ();
            Container gui = ws.getGui ();
            JFrame f = new JFrame ("White (OK Red) Space");
            f.add (gui);
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.setResizable (false);
            f.pack ();
            f.setVisible (true);
}
----------------------------------------

          public void run () {
                        WhiteSpace ws = new WhiteSpace();
                        Container gui = ws.getGui();
                        JFrame f = new JFrame("White (OK Red) Space");
                        f.add(gui);
                        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                        f.setLocationByPlatform (false);
                        f.setLocation(500,600);
                        f.setResizable (false);
                        f.setSize(500,500);
                        f.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
508
1
Gpt3D_Clone508_1.java 1 11
Gpt3D_Clone508_1.java 12 24
----------------------------------------

        public void run () {
            WhiteSpace ws = new WhiteSpace ();
            Container gui = ws.getGui ();
            JFrame f = new JFrame ("White (OK Red) Space");
            f.add (gui);
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.setResizable (false);
            f.pack ();
            f.setVisible (true);
}
----------------------------------------

          public void run () {
                Container gui = WhiteSpace.getGui();
                JFrame f = new JFrame("White (OK Red) Space");
                f.add(gui);
                f.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
                f.setLocationByPlatform (false);
                f.setLocation(400,200);
                f.setResizable (false);
                f.setSize(700,500);
                f.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
2
Gpt3D_Clone510_2.java 1 9
Gpt3D_Clone510_2.java 10 26
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

 
public void shuffle(int numberOfCards) {
    Random rand = new Random();
    for (int i = 0; i < numberOfCards; i++) {
        int j = rand.nextInt(protoDeck.length - i) + i;
        Card temp = deck[i];
        int pos = j;
        while (pos > i) {
            deck[pos] = deck[pos - 1];
            pos--;
        }
        deck[i] = deck[j];
        deck[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
3
Gpt3D_Clone510_3.java 1 9
Gpt3D_Clone510_3.java 10 26
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

 
public void shuffle(int numberOfCards) {
    Random random = new Random();
    for (int i = 0; i < numberOfCards; i++) {
        int j = random.nextInt(protoDeck.length - i) + i;
        Card temp = deck[i];
        int pos = j;
        while (pos > i + 1) {
            deck[pos] = deck[pos - 1];
            pos--;
        }
        deck[i] = deck[j];
        deck[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
6
Gpt3D_Clone510_6.java 1 9
Gpt3D_Clone510_6.java 10 26
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

 
public void shuffle(int numberOfCards) {
    Random generator = new Random();
    for (int i = 0; i < numberOfCards; i++) {
        int j = generator.nextInt(protoDeck.length - i) + i;
        Card temp = deck[i];
        int shift = j;
        while (shift > i) {
            deck[shift] = deck[shift - 1];
            shift--;
        }
        deck[i] = deck[j];
        deck[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
7
Gpt3D_Clone510_7.java 1 9
Gpt3D_Clone510_7.java 10 26
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

 
public void shuffle(int numberOfCards) {
    Random generator = new Random();
    for (int i = 0; i < numberOfCards; i++) {
        int j = generator.nextInt(protoDeck.length - i) + i;
        Card temp = deck[i];
        int shiftPos = j;
        while (shiftPos > i) {
            deck[shiftPos] = deck[shiftPos - 1];
            shiftPos--;
        }
        deck[i] = deck[j];
        deck[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
8
Gpt3D_Clone510_8.java 1 9
Gpt3D_Clone510_8.java 10 22
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

 
public void shuffle(int numberOfCards) {
    Random rng = new Random();
    for (int i = 0; i < numberOfCards; i++) {
        int j = rng.nextInt(protoDeck.length - i) + i;
        Card temp = deck[i];
        deck[i] = deck [j];
        for (int k = j; k > i; k--) deck[k] = deck[k -1];
        deck[i+1] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
510
9
Gpt3D_Clone510_9.java 1 9
Gpt3D_Clone510_9.java 10 20
----------------------------------------

public void shuffle (int numberOfCards) {
    for (int i = 0;
    i < numberOfCards; i ++) {
        int j = rand.nextInt (protoDeck.length - i) + i;
        Card tmp = deck [i];
        deck [i] = deck [j];
        deck [j] = tmp;
    }
}
----------------------------------------

public void shuffle(int numberOfCards) { 
    Random randomGenerator = new Random(); 
    for (int i = 0; i < numberOfCards; i++) { 
        int index = randomGenerator.nextInt(protoDeck.length - i + 1) + i; 
        Card temp = deck[index]; 
        for (int j = index; j > i; j--) deck[j] = deck[j - 1]; 
        deck[i] = temp; 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
511
9
Gpt3D_Clone511_9.java 1 10
Gpt3D_Clone511_9.java 11 22
----------------------------------------

public static boolean isBetween (int currentMonth, int currentDay, int fromMonth, int fromDay, int untilMonth, int untilDay) {
    MonthDay current = MonthDay.of (currentMonth, currentDay);
    MonthDay from = MonthDay.of (fromMonth, fromDay);
    MonthDay until = MonthDay.of (untilMonth, untilDay);
    if (from.compareTo (until) <= 0) {
        return from.compareTo (current) <= 0 && current.compareTo (until) <= 0;
    } else {
        return current.compareTo (until) <= 0 || current.compareTo (from) >= 0;
    }
}
----------------------------------------

 public static boolean isBetween (int currentMonth, int currentDay, int fromMonth, int fromDay, int untilMonth, int untilDay) {
    MonthDay present = MonthDay.of (currentMonth, currentDay);
    MonthDay since = MonthDay.of (fromMonth, fromDay);
    MonthDay upTo = MonthDay.of (untilMonth, untilDay);
    if (since.isBefore(upTo)) {
        return present.isAfter(since) && present.isBefore(upTo);
    } else {
        return present.isBefore(upTo) || present.isAfter(since);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
0
Gpt3D_Clone512_0.java 1 26
Gpt3D_Clone512_0.java 27 52
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

   public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red value. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green value. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue value. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red << 16) + (green << 8) + blue;
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code >> 16) & 0xFF;
    green = (code >> 8) & 0xFF;
    blue = (code) & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
1
Gpt3D_Clone512_1.java 1 26
Gpt3D_Clone512_1.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red << 16) & rMask + (green << 8) & gMask + (blue & bMask);
    System.out.println ("The code is " + code + ".");
    red = (code >> 16) & 0xFF;
    green = (code >> 8) & 0xFF;
    blue = code & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
2
Gpt3D_Clone512_2.java 1 26
Gpt3D_Clone512_2.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red << 16 & rMask) | (green << 8 & gMask) | (blue & bMask);
    System.out.println ("The code is " + code + ".");
    red = code >>> 16;
    green = (code >>> 8) & 0xFF;
    blue = code & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
3
Gpt3D_Clone512_3.java 1 26
Gpt3D_Clone512_3.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red << 16 & rMask) | (green << 8 & gMask) | (blue & bMask);
    System.out.println ("The code is " + code + ".");
    red = code >> 16;
    green = (code >> 8) & 0xFF;
    blue = code & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
4
Gpt3D_Clone512_4.java 1 26
Gpt3D_Clone512_4.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red value. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green value. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue value. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red << 16) | (green << 8) | blue;
    System.out.println ("The code is " + code + ".");
    red = (code & rMask) >> 16;
    green = (code & gMask) >> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
5
Gpt3D_Clone512_5.java 1 26
Gpt3D_Clone512_5.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red * (2^16)) + (green * (2^8)) + (blue * (2^0));
    System.out.println ("The code is " + code + ".");
    red = (code >> 16) & 0xFF;
    green = (code >> 8) & 0xFF;
    blue = code & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
6
Gpt3D_Clone512_6.java 1 26
Gpt3D_Clone512_6.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (int) (red * Math.pow (2, 16)) + (int) (green * Math.pow (2, 8)) + (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = code >> 16;
    green = (code >> 8) & 255;
    blue = (code & 255);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
7
Gpt3D_Clone512_7.java 1 26
Gpt3D_Clone512_7.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red value. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green value. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue value. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (int) (red * (1 << 16)) + (green * (1 << 8)) + blue;
    System.out.println ("The code is " + code + ".");
    red = (code >> 16) & 0xFF;
    green = (code >> 8) & 0xFF;
    blue = code & 0xFF;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
8
Gpt3D_Clone512_8.java 1 26
Gpt3D_Clone512_8.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red value. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green value. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue value. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (red * (1 << 16)) + (green * (1 << 8)) + blue;
    System.out.println ("The code is " + code + ".");
    red = (code & rMask) >> 16;
    green = (code & gMask) >> 8;
    blue = code & bMask;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
512
9
Gpt3D_Clone512_9.java 1 26
Gpt3D_Clone512_9.java 27 48
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = 0;
    code += (int) (red * Math.pow (2, 16));
    code += (int) (green * Math.pow (2, 8));
    code += (int) (blue * Math.pow (2, 0));
    System.out.println ("The code is " + code + ".");
    red = 0;
    green = 0;
    blue = 0;
    red = (code & rMask)>> 16;
    green = (code & gMask)>> 8;
    blue = (code & bMask);
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int code;
    int red, green, blue;
    int rMask = 0xFF0000, gMask = 0xFF00, bMask = 0xFF;
    System.out.println ("Please enter the red color. Range [0, 255] only please.");
    red = scan.nextInt ();
    System.out.println ("Please enter the green color. Range [0, 255] only please.");
    green = scan.nextInt ();
    System.out.println ("Please enter the blue color. Range [0, 255] only please.");
    blue = scan.nextInt ();
    code = (int) ((red << 16) & 0xFFFF0000)  + (int) ((green << 8) & 0xFF00) + (int) (blue & 0xFF);
    System.out.println ("The code is " + code + ".");
    red = code >>> 16;
    green = (code >>> 8) & 255;
    blue = code & 255;
    System.out.println ("Your red value is: " + red);
    System.out.println ("Your green value is: " + green);
    System.out.println ("Your blue value is: " + blue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
513
4
Gpt3D_Clone513_4.java 1 9
Gpt3D_Clone513_4.java 10 21
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (i = 1; i <= size; i ++) {
            System.out.print (" " + i);
        }
        System.out.println ();
    }
}
----------------------------------------

	public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    int space_num = 0;
    if (e.getStateChange () == ItemEvent.SELECTED) {
       while (space_num < size) {
            System.out.print (" " + ++space_num);
            }
        System.out.println ();
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
513
6
Gpt3D_Clone513_6.java 1 9
Gpt3D_Clone513_6.java 10 22
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (i = 1; i <= size; i ++) {
            System.out.print (" " + i);
        }
        System.out.println ();
    }
}
----------------------------------------

	public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (int i = 0; i<size; i++) {
            for (int j=0; j<=i; j++){
                System.out.print((j+1) + " ");
            }
            System.out.println();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
513
7
Gpt3D_Clone513_7.java 1 9
Gpt3D_Clone513_7.java 10 22
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (i = 1; i <= size; i ++) {
            System.out.print (" " + i);
        }
        System.out.println ();
    }
}
----------------------------------------

	public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (int i = size; i > 0; i --) {
            if (i == size) 
                System.out.print(" ");
            System.out.print (i);
        }
        System.out.println();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
513
8
Gpt3D_Clone513_8.java 1 9
Gpt3D_Clone513_8.java 10 21
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (i = 1; i <= size; i ++) {
            System.out.print (" " + i);
        }
        System.out.println ();
    }
}
----------------------------------------

	public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        String num_string = "";
        for (i = 1; i <= size; i ++) {
            num_string += " " + i;
        }
        System.out.println (num_string);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
515
0
Gpt3D_Clone515_0.java 1 10
Gpt3D_Clone515_0.java 11 23
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    sumInches += (sumInches % 12);
    sumFeet += (sumInches / 12);
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

  public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    int totalInches = sumInches + (sumFeet * 12);
    int sumFeet = totalInches / 12;
    int sumInches = totalInches % 12;
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
515
1
Gpt3D_Clone515_1.java 1 10
Gpt3D_Clone515_1.java 11 23
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    sumInches += (sumInches % 12);
    sumFeet += (sumInches / 12);
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

  public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    int resultInches = sumInches % 12;
    int resultFeet = (sumInches/12) + sumFeet;
    int totalInches = resultFeet * 12 + resultInches;
    this.setFeet (resultFeet);
    this.setInches (totalInches);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
515
2
Gpt3D_Clone515_2.java 1 10
Gpt3D_Clone515_2.java 11 23
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    sumInches += (sumInches % 12);
    sumFeet += (sumInches / 12);
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

  public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    int totalInches = (sumFeet * 12) + sumInches;
    int resultFeet = totalInches / 12;
    int resultInches = totalInches % 12;
    this.setFeet (sumFeet);
    this.setInches (resultInches);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
0
Gpt3D_Clone517_0.java 1 10
Gpt3D_Clone517_0.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

 public static void main (String [] args) throws Exception{ 
    CodilityTest ct = new CodilityTest ();
    int[] arr1 = {1,2,-3,4,-5,-11,-2,3,-4,5};
    int[] arr2 = new int[0]; 
    int count = 0;
    ct.setInput(arr1);
    for(int i=0; i<arr1.length; i++){ 
        int val = ct.getOutput(arr1[i]);
        if (val > 0) count++;
    }
    System.out.println(count); 
    CodilityTest ct2 = new CodilityTest();
    ct2.getOutput(arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
1
Gpt3D_Clone517_1.java 1 10
Gpt3D_Clone517_1.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

 public static void main (String [] args) throws Exception{ 
    CodilityTest ct = new CodilityTest ();
    int[] array1 = {1,2,-3,4,-5,-11,-2,3,-4,5};
    int[] array2 = new int[0]; 
    int count = 0;
    ct.setInput(array1);
    for(int i : array1){
        int val = ct.getOutput(i);
        if (val > 0) count++;
    }
    System.out.println(count); 
    CodilityTest ct2 = new CodilityTest();
    ct2.getOutput(array2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
2
Gpt3D_Clone517_2.java 1 10
Gpt3D_Clone517_2.java 11 28
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception { 
    CodilityTest testCase = new CodilityTest ();
    int [] inputArray = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] finalArray = new int[0];
    int count = 0;
    testCase.setInput(inputArray);
    for(int i : inputArray){
        if(testCase.getOutput(i) > 0){
            count++;
        }
    }
    System.out.println(count); 
    CodilityTest obj2 = new CodilityTest ();
    obj2.getOutput(finalArray);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
3
Gpt3D_Clone517_3.java 1 10
Gpt3D_Clone517_3.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

 public static void main (String [] args) throws Exception{ 
    CodilityTest ct = new CodilityTest ();
    int[] arr1 = {1,2,-3,4,-5,-11,-2,3,-4,5};
    int[] arr2 = new int[0]; 
    int count = 0;
    ct.setInput(arr1);
    for(int i=0; i<arr1.length; i++){
        int val = ct.getOutput(arr1[i]); 
        if (val > 0) count++;
    }
    System.out.println(count);
    CodilityTest ct2 = new CodilityTest();
    ct2.getOutput(arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
4
Gpt3D_Clone517_4.java 1 10
Gpt3D_Clone517_4.java 11 28
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception {
   CodilityTest obj = new CodilityTest ();
   int [] arr1 = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
   int [] arr2 = new int [0];
   int count = 0;
   
   for (int x : arr1) {
       int val = obj.getOutput (x);
       if (val > 0) count++;
   }
   System.out.println (count);
   
   CodilityTest obj1 = new CodilityTest ();
   obj1.setInput (arr2);
   obj1.getOutput (arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
5
Gpt3D_Clone517_5.java 1 10
Gpt3D_Clone517_5.java 11 28
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception { 
   CodilityTest obj = new CodilityTest ();
   int [] arr1 = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
   int [] arr2 = new int [0];
   int count = 0;
   
   for (int i = 0; i < arr1.length; i++) {
      int val = obj.getOutput (arr1[i]); 
      if (val > 0) count++;
   }
   System.out.println (count);
   
   CodilityTest obj1 = new CodilityTest ();
   obj1.setInput (arr2);
   obj1.getOutput (arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
6
Gpt3D_Clone517_6.java 1 10
Gpt3D_Clone517_6.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

 public static void main (String [] args) throws Exception{ 
    CodilityTest ct = new CodilityTest ();
    int[] arr1 = {1,2,-3,4,-5,-11,-2,3,-4,5};
    int[] arr2 = new int[0]; 
    int count = 0;
    for(int i=0; i<arr1.length; i++){
        ct.setInput(arr1[i]);
        int val = ct.getOutput(arr1[i]);
        if (val > 0) count++;
    }
    System.out.println(count);
    CodilityTest ct2 = new CodilityTest();
    ct2.getOutput(arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
7
Gpt3D_Clone517_7.java 1 10
Gpt3D_Clone517_7.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

 public static void main (String [] args) throws Exception{ 
    CodilityTest ct = new CodilityTest ();
    int[] arr = {1,2,-3,4,-5,-11,-2,3,-4,5};
    int[] arr2 = new int[0];
    int count = 0;
    for(int i=0; i<arr.length;i++){
        ct.setInput(arr[i]);
        int val = ct.getOutput(arr[i]); 
        if (val > 0) count++;
    }
    System.out.println(count);
    CodilityTest ct2 = new CodilityTest();
    ct2.getOutput(arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
8
Gpt3D_Clone517_8.java 1 10
Gpt3D_Clone517_8.java 11 25
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception { 
    CodilityTest obj = new CodilityTest ();
    int [] arr1 = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int count = 0;
    for (int i = 0; i < arr1.length; i++) {
        int val = obj.getOutput (arr1[i]); 
        if (val>0) count++;
    }
    System.out.println (count);
    int [] arr2 = new int [0];
    CodilityTest obj1 = new CodilityTest ();
    obj1.getOutput (arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
9
Gpt3D_Clone517_9.java 1 10
Gpt3D_Clone517_9.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest t1 = new CodilityTest();
    int [] ipArray = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int count = 0;
    for (int num : ipArray){
        if (t1.getOutput(num) > 0){
            count++;
        }
    }
    System.out.println(count);
    int [] IPArray = new int[0];
    CodilityTest t2 = new CodilityTest();
    t2.getOutput(IPArray);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
1
Gpt3D_Clone518_1.java 1 12
Gpt3D_Clone518_1.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search(int[] A, int K) {
    int left = 0;
    int right = A.length - 1;
    int mid;
    while (left <= right) {
        mid = (right - left) / 2 + left;
        if (A[mid] == K) {
            return mid;
        } else if (A[mid] > K) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
2
Gpt3D_Clone518_2.java 1 12
Gpt3D_Clone518_2.java 13 32
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search(int[] array, int K){
    int low = 0;
    int high = array.length - 1;
    int mid;
    
    while(low <= high){
        mid = (high - low) / 2 + low;
        if(array[mid] < K){
            low = mid + 1;
        }else if(array[mid] == K){
            return mid;
        }else{
            high = mid - 1;
        }
    }
    
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
4
Gpt3D_Clone518_4.java 1 12
Gpt3D_Clone518_4.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search (int [] A, int K) {
    int left = 0;
    int right = A.length - 1;
    int middle;
    while (left <= right) {
        middle = (right - left) / 2 + left;
        if (A [middle] == K) {
          return middle;
        } else if (A [middle] < K) {
          left = middle + 1;
        } else {
          right = middle - 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
5
Gpt3D_Clone518_5.java 1 12
Gpt3D_Clone518_5.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search(int[] A, int K) {
    int low = 0;
    int high = A.length - 1;
    int mid;
    while (low <= high) {
        mid = (high - low) / 2 + low;
        if (A[mid] == K) {
            return mid;
        } else if (A[mid] > K) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
6
Gpt3D_Clone518_6.java 1 12
Gpt3D_Clone518_6.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search(int[] list, int K){
    int min = 0;
    int max = list.length - 1;
    int mid;
    while(min <= max){
        mid = (max - min) / 2 + min;
        if(list[mid] < K){
            min = mid + 1;
        }else if(list[mid] == K){
            return mid;
        }else{
            max = mid - 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
7
Gpt3D_Clone518_7.java 1 12
Gpt3D_Clone518_7.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search (int[] list, int K) {
    int bottom = 0;
    int top = list.length - 1;
    int middle;
    while (bottom <= top){
        middle = (top - bottom) / 2 + bottom;
        if(list[middle] == K){
          return middle;
        } else if (list[middle] < K){
          bottom = middle + 1;
        } else {
          top = middle - 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
518
8
Gpt3D_Clone518_8.java 1 12
Gpt3D_Clone518_8.java 13 30
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;
    }
    return - 1;
}
----------------------------------------

 static int search(int[] arr, int K){
    int lo = 0;
    int hi = arr.length - 1;
    int mid;
    while(lo <= hi){
        mid = (hi - lo) / 2 + lo;
        if(arr[mid] == K){
            return mid;
        }else if(arr[mid] > K){
            hi = mid - 1;
        }else{
            lo = mid + 1;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
519
0
Gpt3D_Clone519_0.java 1 22
Gpt3D_Clone519_0.java 23 52
----------------------------------------

public void inOrder () {
    if (m_root == null) {
        return;
    }
    Stack < BSTNode > myStack = new Stack < BSTNode > ();
    BSTNode current = m_root;
    while (current != null) {
        myStack.push (current);
        current = current.getLeft ();
    }
    while (! myStack.isEmpty ()) {
        current = (BSTNode) myStack.pop ();
        System.out.print (current.getInfo () + " ");
        if (current.getRight () != null) {
            current = current.getRight ();
            while (current != null) {
                myStack.push (current);
                current = current.getLeft ();
            }
        }
    }
}
----------------------------------------

 public void inOrder() 
    { 
        if (m_root == null) 
            return; 
          
        Deque<BSTNode> myDeque = new ArrayDeque<BSTNode>(); 
      
        BSTNode current = m_root; 
        while(current!=null) 
        { 
            myDeque.addLast(current); 
            current=current.getLeft(); 
        } 
          
        while(!myDeque.isEmpty()) 
        { 
            // pop the node 
            current=myDeque.removeLast(); 
            System.out.print(current.getInfo()+" "); 
            current=current.getRight(); 
              
            while(current!=null) 
            { 
                myDeque.addLast(current); 
                current=current.getLeft(); 
            } 
        } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
4
Gpt3D_Clone520_4.java 1 9
Gpt3D_Clone520_4.java 10 23
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

  private byte [] readData (File file, int startByte, int chunkSize) throws Exception {
    FileInputStream fis = new FileInputStream(file);
    fis.skip(startByte);
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    byte[] buff = new byte[chunkSize];
    int readSize = fis.read(buff);
    fis.close();
    if(readSize == chunkSize)
        return buff;
    else 
        return Arrays.copyOf(buff, readSize);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
5
Gpt3D_Clone520_5.java 1 9
Gpt3D_Clone520_5.java 10 22
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

   private byte [] readData (File file, int startByte, int chunkSize) throws Exception {
    BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file));
    bis.skip(startByte);
    byte[] buff = new byte[chunkSize];
    int readSize = bis.read(buff);
    bis.close();
    if(readSize == chunkSize)
        return buff;
    else 
        return Arrays.copyOf(buff, readSize);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
6
Gpt3D_Clone520_6.java 1 9
Gpt3D_Clone520_6.java 10 22
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

    private byte [] readData (File file, int startByte, int chunkSize) throws Exception {
    DataInputStream dis = new DataInputStream(new FileInputStream(file));
    dis.skipBytes(startByte);
    byte[] buff = new byte[chunkSize];
    int readSize = dis.read(buff);
    dis.close();
    if(readSize == chunkSize)
        return buff;
    else 
        return Arrays.copyOf(buff, readSize);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
0
Gpt3D_Clone522_0.java 1 18
Gpt3D_Clone522_0.java 19 41
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () { JMenuBar menuBar = new JMenuBar();
    JMenu menu = new JMenu("Main Menu");
    JMenuItem menuItem1 = new JMenuItem("Option 1");
    JMenuItem menuItem2 = new JMenuItem("Option 2");
    menu.add(menuItem1);
    menu.add(menuItem2);
    menuBar.add(menu);
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new GridLayout(2,2));
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    menu.add(gridMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
1
Gpt3D_Clone522_1.java 1 18
Gpt3D_Clone522_1.java 19 40
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () {JMenuBar menuBar = new JMenuBar();
    JMenu menu = new JMenu("Main Menu");
    JMenuItem menuItem1 = new JMenuItem("Option 1");
    JMenuItem menuItem2 = new JMenuItem("Option 2");
    menu.add(menuItem1);
    menu.add(menuItem2);
    menu.addSeparator();
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new GridLayout(2,2));
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    menu.add(gridMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
2
Gpt3D_Clone522_2.java 1 18
Gpt3D_Clone522_2.java 19 38
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () {JMenuBar menuBar = new JMenuBar();
    JMenu mainMenu = new JMenu("A regular menu");
    mainMenu.add(new JMenuItem("Menu item"));
    mainMenu.addSeparator();
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new GridLayout(2,2));
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    mainMenu.add(gridMenu);
    menuBar.add(mainMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
3
Gpt3D_Clone522_3.java 1 18
Gpt3D_Clone522_3.java 19 37
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () {JMenuBar menuBar = new JMenuBar();
    JMenu mainMenu = new JMenu("A regular menu");
    mainMenu.add(new JMenuItem("Menu item"));
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new GridBagLayout());
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    mainMenu.add(gridMenu);
    menuBar.add(mainMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
4
Gpt3D_Clone522_4.java 1 18
Gpt3D_Clone522_4.java 19 37
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () {JMenuBar menuBar = new JMenuBar();
    JMenu mainMenu = new JMenu("A regular menu");
    mainMenu.add(new JMenuItem("Menu item"));
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new BoxLayout(gridMenu, BoxLayout.X_AXIS));
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    mainMenu.add(gridMenu);
    menuBar.add(mainMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
522
5
Gpt3D_Clone522_5.java 1 18
Gpt3D_Clone522_5.java 19 37
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public void run () {JMenuBar menuBar = new JMenuBar();
    JMenu mainMenu = new JMenu("A regular menu");
    mainMenu.add(new JMenuItem("Menu item"));
    JMenu gridMenu = new JMenu("Grid Menu");
    gridMenu.getPopupMenu().setLayout(new FlowLayout());
    gridMenu.add(new JMenuItem("Top Left"));
    gridMenu.add(new JMenuItem("Top Right"));
    gridMenu.add(new JMenuItem("Bottom Left"));
    gridMenu.add(new JMenuItem("Bottom Right"));
    mainMenu.add(gridMenu);
    menuBar.add(mainMenu);
    JFrame frame = new JFrame("Menus");
    frame.setJMenuBar(menuBar);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
524
3
Gpt3D_Clone524_3.java 1 15
Gpt3D_Clone524_3.java 16 32
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------

 public static String decrypt(final String msg) {
    final Pattern pattern = Pattern.compile("(#|(\\d\\d)|(\\d))");
    final Matcher matcher = pattern.matcher(msg);
    StringBuffer stringBuffer = new StringBuffer();
    char decryptChar;
    while (matcher.find()) {
        if (matcher.group(2) == null) {
            decryptChar = (char) (Integer.parseInt(matcher.group(1)) + 'a' - 1);
        } else {
            decryptChar = (char) (Integer.parseInt(matcher.group(2)) + 'a' - 1);
        }
        stringBuffer.append(decryptChar);
    }
    return stringBuffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
524
4
Gpt3D_Clone524_4.java 1 15
Gpt3D_Clone524_4.java 16 32
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------

 public static String decrypt(final String msg) {
    final Pattern regex = Pattern.compile("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher(msg);
    final StringBuffer sb = new StringBuffer();
    while (regexMatcher.find()) {
        int c;
        if (regexMatcher.group(2) == null) {
            c = Integer.parseInt(regexMatcher.group(1));
        } else {
            c = Integer.parseInt(regexMatcher.group(2));
        }
        sb.append((char) (c + 'a' - 1));
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
0
Gpt3D_Clone526_0.java 1 28
Gpt3D_Clone526_0.java 29 61
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

 private static String decrypt(final String s) {
    int charIndx = 0;
    final List < Integer > crypt = new ArrayList < >();
    final String [] groups = s.split("#");
    for (int i = 0; i < groups.length; i++) {
        final String group = groups[i];
        int j = 0;
        if (i == (groups.length - 1) && !s.endsWith("#")) {
            j = group.length ();
        }
        if (group.length() > 2) {
            j = group.length() - 1;
        } else if (group.length() == 2) {
            j = group.length() - 2;
        }
        while (j >= 0) {
            final int k = (int) group.charAt(j) - 48;
            crypt.add(k + 1);
            j--;
        }
        if (j < group.length()) {
            crypt.add(Integer.valueOf(group.substring(j, group.length())));
        }
    }   
    final StringBuilder n = new StringBuilder(crypt.size());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append(d);
    }
    return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
1
Gpt3D_Clone526_1.java 1 28
Gpt3D_Clone526_1.java 29 62
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

 private static String decrypt(final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0; 
    i < groups.length; i ++) {
        final String group = groups[i];
        int begin = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            begin = group.length() - 1;
        } else if (group.length () > 2) {
            begin = group.length () - 2;
        }
        int end = group.length ();
        if (begin == end) {
            end--;
        }
        while (begin >= 0) {
            final int k = (int) group.charAt (begin) - 48;
            crypt.add (k + 1);
            begin--;
        }
        if (begin < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (begin, end)));
        }
    }   
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
2
Gpt3D_Clone526_2.java 1 28
Gpt3D_Clone526_2.java 29 57
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

 private static String decrypt(final String s) {
    final List<Integer> crypt = new ArrayList<>();
    final String[] groups = s.split("#");
    for (int i = 0; i < groups.length; i++) {
        final String group = groups[i];
        int j = 0;
        if ((i == (groups.length - 1)) && !s.endsWith("#")) {
            j = group.length() - 1;
        } else if (group.length() > 2) {
            j = group.length() - 2;
        }
        while (j >= 0) {
            final int k = (int) group.charAt(j) - 48;
            crypt.add(k + 1);
            j--;
        }
        if (j < group.length()) {
            crypt.add(Integer.valueOf(group.substring(j, group.length())));
        }
    }
    final StringBuilder n = new StringBuilder(crypt.size());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append(d);
    }
    return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
3
Gpt3D_Clone526_3.java 1 28
Gpt3D_Clone526_3.java 29 55
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

 private static String decrypt(final String s){
    final List<Integer> crypt = new ArrayList<>();
    final String [] groups = s.split("#");
    for (int i = 0; i < groups.length; i++){
        final String group = groups[i];
        int j = group.length()-2;
        if ((i == (groups.length - 1)) && !s.endsWith("#")) {
            j = group.length () - 1;
        }
        while (j >= 0) {
            final int k = (int) group.charAt(j) - 48;
            crypt.add(k + 1);
            j--;
        }
        if (j < group.length()){ 
            crypt.add(Integer.valueOf(group.substring(j,group.length())));
        }
    } 
    final StringBuilder n = new StringBuilder(crypt.size());
    for (final Integer c : crypt){ 
        final char d = (char)(('a' + c) - 1);
        n.append(d); 
    } 
    return n.toString(); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
4
Gpt3D_Clone526_4.java 1 28
Gpt3D_Clone526_4.java 29 55
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

 private static String decrypt(final String s) {
    List < Integer > crypt = new ArrayList < > ();
    String[] groups = s.split("#");
    for (int i = 0; i < groups.length; i++) {
        String group = groups[i];
        int j = 0;
        if (i == (groups.length - 1) && !s.endsWith("#")) {
            j = group.length() - 1;
        } else if (group.length() > 2) {
            j = group.length() - 2;
        }
        for (int k = 0; k < j; k++) {
            crypt.add(Integer.valueOf(group.substring(k, k + 1)));
        }
        if (j < group.length()) {
            crypt.add(Integer.valueOf(group.substring(j, group.length())));
        }
    }
    StringBuilder n = new StringBuilder(crypt.size());
    for (Integer c : crypt) {
        char d = (char)(('a' + c) - 1);
        n.append(d);
    }
    return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
0
Gpt3D_Clone527_0.java 1 10
Gpt3D_Clone527_0.java 11 27
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: " + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: " + balance);
        balance -= 1;
    }
}
----------------------------------------

 public void refund (int balance) {
    boolean done = false;
    while (!done) {
        if (balance >= 10) {
            System.out.println("Balance: " + balance);
            balance -= 10;
        } else {
            done = true;
        }
    }
    while (balance >= 0) {
        System.out.println("Balance: " + balance);
        balance -= 1;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
4
Gpt3D_Clone527_4.java 1 10
Gpt3D_Clone527_4.java 11 22
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: " + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: " + balance);
        balance -= 1;
    }
}
----------------------------------------

  public void refund (int balance) {
   while (balance >= 10) { 
        int maxRefund = balance - 10; 
        System.out.println("Balance: " + maxRefund);
        balance -= 10; 
   }
   for (int i=balance; i>=0; i-=1) {
    System.out.println("Balance: " + i);
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
5
Gpt3D_Clone527_5.java 1 10
Gpt3D_Clone527_5.java 11 21
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: " + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: " + balance);
        balance -= 1;
    }
}
----------------------------------------

  public void refund (int balance) {
    while (balance >= 10) {
        System.out.println("Balance: " + balance);
        balance -= 10;
    }
    for (int i=balance; i>=0; i-=1) { 
        System.out.println("Balance: " + i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
6
Gpt3D_Clone527_6.java 1 10
Gpt3D_Clone527_6.java 11 19
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: " + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: " + balance);
        balance -= 1;
    }
}
----------------------------------------

  public void refund (int balance) {
    while (balance >= 0) {
        int refundAmount = 10 * (balance / 10);
        System.out.println("Balance: " + refundAmount);
        balance -= 10;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
528
3
Gpt3D_Clone528_3.java 1 9
Gpt3D_Clone528_3.java 10 56
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    convertView = mInflater.inflate (R.layout.listview_row, null);
    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    tvName.setText (item.getName ());
    myTimer.setTimer (tvTimer, item.getTime ());
    return convertView;
}
----------------------------------------

 public View getView (int position, View convertView, ViewGroup parent) {
    if(convertView == null) {
        convertView = mInflater.inflate (R.layout.listview_row, parent, false);
        TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
        TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
        convertView.setTag(tvName);
        convertView.setTag(tvTimer);
    }
    Item item = data.get (position);
    tvName.setText (item.getName ());
    myTimer.setTimer (tvTimer, item.getTime ());
    return convertView;
    }
  public View getView (int position, View convertView, ViewGroup parent) {
    convertView = mInflater.inflate (R.layout.listview_row, parent, false);
    ViewHolder holder;
    if (holder == null) {
        holder = new ViewHolder();
        holder.tvName = (TextView) convertView.findViewById(R.id.textview_name);
        holder.tvTimer = (TextView) convertView.findViewById(R.id.textview_timer);
        convertView.setTag(holder);
    } else {
        holder = (ViewHolder) convertView.getTag();
    }
    Item item = data.get (position);
    holder.tvName.setText (item.getName ());
     myTimer.setTimer (holder.tvTimer, item.getTime ());
    return convertView;
   }
  public View getView (int position, View convertView, ViewGroup parent) {
     convertView = mInflater.inflate (R.layout.listview_row, null);
    ViewHolder holder;
    holder = new ViewHolder();
    holder.tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    holder.tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    holder.tvName.setText (item.getName ());
    myTimer.setTimer (holder.tvTimer, item.getTime ());
    convertView.setTag(holder);
    return convertView;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
528
5
Gpt3D_Clone528_5.java 1 9
Gpt3D_Clone528_5.java 10 24
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    convertView = mInflater.inflate (R.layout.listview_row, null);
    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    tvName.setText (item.getName ());
    myTimer.setTimer (tvTimer, item.getTime ());
    return convertView;
}
----------------------------------------

  public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        convertView = mInflater.inflate(R.layout.listview_row,parent, false);
    }
    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    tvName.setText (item.getName ());
    myTimer.setTimer (tvTimer, item.getTime ());
    convertView.setTag(tvName);
    convertView.setTag(tvTimer);
    return convertView;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
0
Gpt3D_Clone533_0.java 1 25
Gpt3D_Clone533_0.java 26 59
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 public boolean equals(Object object) { 
 		if (this == object) { 
 			return true; 
 		} 
 		if (object == null || getClass() != object.getClass()) { 
 			return false; 
 		} 
 		CircularList<?> that = (CircularList<?>) object; 
 		Element<?> first0 = first; 
 		Element<?> current0 = first0; 
 		Element<?> first1 = that.first; 
 		Element<?> current1 = first1; 
 
 		if (equalSequence(current0, current0, current1, current1)) { 
 			return true; 
 		} 
 		if (current1 != first1 && current0 != first0) { 
 			current1 = current1.next; 
 			current0 = current0.next; 
 		} else { 
 			return false; 
 		} 
 		while (true) { 
 			if (equalSequence(current0, current0, current1, current1)) { 
 				return true; 
 			} 
 			current1 = current1.next; 
 			if (current1 == first1) { 
 				return false; 
 			} 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
1
Gpt3D_Clone533_1.java 1 25
Gpt3D_Clone533_1.java 26 54
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 	public boolean equals(Object object) { 
 		if(this == object) { 
 			return true; 
 		} 
 		if(object == null || !(object instanceof CircularList<?>)) { 
 			return false; 
 		} 
 		CircularList<?> that = (CircularList<?>) object; 
 		Element<?> first0 = first; 
 		Element<?> current0 = first0; 
 		Element<?> first1 = that.first; 
 		Element<?> current1 = first1; 
 		while (true) { 
 			if(equalSequence(current0, current0, current1, current1)) { 
 				return true; 
 			} 
 			current1 = current1.next; 
 			if(current1 == first1) { 
 				return false; 
 			} else { 
 				current0 = current0.next; 
 				if(current0 == first0) { 
 					return false; 
 				} 
 			} 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
2
Gpt3D_Clone533_2.java 1 25
Gpt3D_Clone533_2.java 26 53
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 public boolean equals(Object object) { 
 		if(this==object) { 
 			return true; 
 		} 
 		if(object==null || !(object instanceof CircularList<?>)) { 
 			return false; 
 		} 
 		CircularList<?> that = (CircularList<?>) object; 
 		Element<?> first0 = first; 
 		Element<?> current0 = first0; 
 		Element<?> first1 = that.first; 
 		Element<?> current1 = first1; 
 		while(true) { 
 			if(current1.equals(current0) && first1.equals(first0)) { 
 				return true; 
 			} else if(current1 == first1 || current0 == first0) { 
 				return false; 
 			} 
 			current0 = current0.next; 
 			current1 = current1.next; 
 			if(equalSequence(current0, current0, current1, current1)) { 
 				return true; 
 			} 
 				 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
3
Gpt3D_Clone533_3.java 1 25
Gpt3D_Clone533_3.java 26 56
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 	public boolean equals(Object object) { 
 		if (this == object) { 
 			return true; 
 		} 
 	
 		if (object == null || !(object instanceof CircularList<?>)) { 
 			return false; 
 		} 
 
 		CircularList<?> that = (CircularList<?>) object; 
 		Element<?> first0 = first; 
 		Element<?> current0 = first0; 
 		Element<?> first1 = that.first; 
 		Element<?> current1 = first1; 
 
 		while (true) { 
 			if (current1.equals(current0) && first1.equals(first0)) { 
 				return true; 
 			} 
 			current0 = current0.next; 
 			if (current0 == first0) { 
 				return false; 
 			} 
 			current1 = current1.next; 
 			if (current1 == first1) { 
 				return false; 
 			} 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
4
Gpt3D_Clone533_4.java 1 25
Gpt3D_Clone533_4.java 26 54
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 	public boolean equals(Object object) { 
 		if (this == object) { 
 			return true; 
 		} 
 		if (object == null || getClass() != object.getClass()) { 
 			return false; 
 		} 
 		CircularList<?> that = (CircularList<?>) object; 
 		Element<?> first0 = first; 
 		Element<?> first1 = that.first; 
 		Element<?> current0 = first0; 
 		Element<?> current1 = first1; 
 		while (true) { 
 			if (equalSequence(current0, current0, current1, current1)) { 
 				return true; 
 			} 
 			current1 = current1.next; 
 			if (current1 == first1) { 
 				return false; 
 			} 
 			current0 = current0.next; 
 			if (current0 == first0) { 
 				return false; 
 			} 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
5
Gpt3D_Clone533_5.java 1 25
Gpt3D_Clone533_5.java 26 53
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

 	public boolean equals(Object object) { 
 		if (!(object instanceof CircularList<?>)) { 
 			return false; 
 		} 
 
 		CircularList<?> that = (CircularList<?>) object; 
 
 		Element<?> first0 = first; 
 		Element<?> current0 = first0; 
 
 		Element<?> first1 = that.first; 
 		Element<?> current1 = first1; 
 
 		while (true) { 
 			if (equalSequence(current0, current0, current1, current1)) { 
 				return true; 
 			} 
 
 			current0 = current0.next; 
 			current1 = current1.next; 
 
 			if (current1 == first1 || current0 == first0) { 
 				return false; 
 			} 
 		} 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
2
Gpt3D_Clone534_2.java 1 13
Gpt3D_Clone534_2.java 14 35
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", false)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	int i;
	try {
		while (true) {
			i = ap.evalXPath();
			if (i == -1)
				break;
			xm.updateToken(i + 1, "499");
			xm.output("new.xml");
		}
	}
	catch (VTDException e) {
		e.printStackTrace();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
3
Gpt3D_Clone534_3.java 1 13
Gpt3D_Clone534_3.java 14 30
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	int i = 0;
	do {
		i = ap.evalXPath(); 
		if (i != -1) {
			xm.updateToken(i + 1, "499");
			xm.output("new.xml");
		}
	} while (i != -1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
4
Gpt3D_Clone534_4.java 1 13
Gpt3D_Clone534_4.java 14 32
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	try {
		int i;
		while ( (i = ap.evalXPath()) != -1) {
			xm.updateToken(i + 1, "499");
			xm.output("new.xml");
		}
	}
	catch (VTDException e) {
		e.printStackTrace();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
5
Gpt3D_Clone534_5.java 1 13
Gpt3D_Clone534_5.java 14 32
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	int i = 0;
	try {
		while ((i = ap.evalXPath()) != -1) {
			xm.updateToken(i + 1, "499");
			xm.output("new.xml");
		}
	}
	catch (VTDException e) {
		e.printStackTrace();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
6
Gpt3D_Clone534_6.java 1 13
Gpt3D_Clone534_6.java 14 28
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	int i = ap.evalXPath();
	while (i != -1) {
		xm.updateToken(i + 1, "499");
		xm.output("new.xml");
		i = ap.evalXPath();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
7
Gpt3D_Clone534_7.java 1 13
Gpt3D_Clone534_7.java 14 27
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	int i;
	if ((i = ap.evalXPath()) != -1) {
		xm.updateToken(i + 1, "499");
		xm.output("new.xml");
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
534
8
Gpt3D_Clone534_8.java 1 13
Gpt3D_Clone534_8.java 14 26
----------------------------------------

public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    XMLModifier xm = new XMLModifier (vn);
    ap.selectXPath ("/*/place[@id=\"p14\" and   @initialMarking=\"2\"]/@initialMarking");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        xm.updateToken (i + 1, "499");
    }
    xm.output ("new.xml");
}
----------------------------------------

 public static void main (String s []) throws VTDException, java.io.UnsupportedEncodingException, java.io.IOException {VTDGen vg = new VTDGen();
	if (!vg.parseFile("input.xml", true)) return;
	VTDNav vn = vg.getNav();
	AutoPilot ap = new AutoPilot(vn);
	XMLModifier xm = new XMLModifier(vn);
	ap.selectXPath("/*/place[@id=\"p14\" and @initialMarking=\"2\"]/@initialMarking");
	while (ap.evalXPath() != -1) {
		xm.updateToken(i + 1, "499");
		xm.output("new.xml");
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
535
0
Gpt3D_Clone535_0.java 1 12
Gpt3D_Clone535_0.java 13 28
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

 public synchronized void launch() {
        if (!this.infinite) {
            int counter = this.repeatCounter;
            while (counter > 0) {
                this.command.run();
                counter--;
            }
            this.control.cancel(false);
        } else {
            do {
                this.command.run();
            } while (this.infinite);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
535
1
Gpt3D_Clone535_1.java 1 12
Gpt3D_Clone535_1.java 13 28
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

 public synchronized void execute() {
        if (!this.infinite) {
            while (this.repeatCounter > 0) {
                this.command.run();
                this.repeatCounter--;
            }
            this.control.cancel(false);
        } else {
            do {
                this.command.run();
            } while (this.infinite);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
535
3
Gpt3D_Clone535_3.java 1 12
Gpt3D_Clone535_3.java 13 27
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

 public synchronized void run() {
        if (this.infinite) {
            for (; this.infinite; )
                this.command.run();
        } else {
            if (this.repeatCounter > 0) {
                this.command.run();
                this.repeatCounter--;
            } else {
                this.control.cancel(false);
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
535
6
Gpt3D_Clone535_6.java 1 12
Gpt3D_Clone535_6.java 13 26
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

 public synchronized void execute() {
        if (!this.infinite) {
            for (int i = 0; i < this.repeatCounter && i > 0; i--) {
                this.command.run();
            }
            this.control.cancel(false);
        } else {
            while (this.infinite) {
                this.command.run();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
535
8
Gpt3D_Clone535_8.java 1 12
Gpt3D_Clone535_8.java 13 25
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

 public synchronized void run() {
        if (!this.infinite) {
            for (int i = 0; i < this.repeatCounter; i++) {
                this.command.run();
            }
            this.control.cancel(false);
        } else {
            while (this.infinite)
                this.command.run();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
0
Gpt3D_Clone537_0.java 1 11
Gpt3D_Clone537_0.java 12 32
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    if (histogram.findInLine(name) != null) {
        System.out.println("This name exist");
    } else {
        System.out.println("Name not found");
        while (histogram.hasNext()) {
            String line = histogram.nextLine();
            if (line.contains(name)) {
                System.out.println("Name found");
                break;
            } else {
                user = validName(input, histogram);
            }
        }
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
1
Gpt3D_Clone537_1.java 1 11
Gpt3D_Clone537_1.java 12 31
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    boolean isPresent = false;
    while (histogram.hasNext()) {
        if (histogram.nextLine().contains(name)) {
            isPresent = true;
            break;
        }
    }
    if (isPresent) {
        System.out.println("This name exist");
    } else {
        System.out.println("Name not found");
        user = validName(input, histogram);
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
2
Gpt3D_Clone537_2.java 1 11
Gpt3D_Clone537_2.java 12 31
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    boolean found = false;
    while (histogram.hasNext()) {
        if (histogram.nextLine().contains(name)) {
            found = true;
            break;
        }
    }
    if (found) {
        System.out.println("This name exist");
    } else {
        System.out.println("Name not found");
        user = validName(input, histogram);
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
3
Gpt3D_Clone537_3.java 1 11
Gpt3D_Clone537_3.java 12 27
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    while (histogram.hasNext()) {
        String line = histogram.nextLine();
        if (line.contains(name)) {
            System.out.println("This name exist");
            break;
        }
    }
    System.out.println("Name not found");
    user = validName(input, histogram);
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
4
Gpt3D_Clone537_4.java 1 11
Gpt3D_Clone537_4.java 12 27
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    while (histogram.hasNext()) {
        if (histogram.nextLine().equals(name)) {
            System.out.println("This name exist");
            break;
        } else {
            System.out.println("Name not found");
            user = validName(input, histogram);
        }
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
5
Gpt3D_Clone537_5.java 1 11
Gpt3D_Clone537_5.java 12 27
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName(Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next();
    while (histogram.hasNext()) {
        if (histogram.findWithinHorizon(name, 0) != null) {
            System.out.println("This name exist");
            break;
        } else {
            System.out.println("Name not found");
            user = validName(input, histogram);
        }
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
6
Gpt3D_Clone537_6.java 1 11
Gpt3D_Clone537_6.java 12 27
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

 public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    while (histogram.hasNextLine ()) {
        String line = histogram.nextLine ();
        if (name.equals (line)) {
            System.out.println ("This name exist");
            break;
        }
    }
    System.out.println ("Name not found");
    user = validName (input, histogram);
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
0
Gpt3D_Clone539_0.java 1 13
Gpt3D_Clone539_0.java 14 31
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord(String[] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0; i < words.length; i++) {
        if (words[i].length() <= 3) {
            nthShortWord++;
            if (nthShortWord == n) {
                shortWord = words[i];
                break;
            }
        } else {
            continue;
        }
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
1
Gpt3D_Clone539_1.java 1 13
Gpt3D_Clone539_1.java 14 32
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    int i = 0;
    while (i < words.length && nthShortWord < n) {
        if (words[i].length() <= 3) {
            nthShortWord++;
            if (nthShortWord == n) {
                shortWord = words[i];
                break;
            }
        }
        i++;
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
2
Gpt3D_Clone539_2.java 1 13
Gpt3D_Clone539_2.java 14 31
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    int i = 0;
    while (i < words.length) {
        if (words[i].length() <= 3) {
            nthShortWord++;
            if (nthShortWord == n) {
                shortWord = words[i];
                break;
            }
        }
        i++;
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
3
Gpt3D_Clone539_3.java 1 13
Gpt3D_Clone539_3.java 14 31
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord(String[] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    int i = 0;
    while (nthShortWord <= n - 1) {
        if (words[i].length() <= 3) {
            nthShortWord++;
            if (nthShortWord == n) {
                shortWord = words[i];
                break;
            }
        }
        i++;
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
4
Gpt3D_Clone539_4.java 1 13
Gpt3D_Clone539_4.java 14 29
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord(String[] words, int n) {
     int nthShortWord = 0;
     String shortWord = "notFound";
     int i = 0;
     while (i < words.length) {
         if (words[i].length() <= 3 && nthShortWord == n - 1) {
             shortWord = words[i];
             break;
         }
         nthShortWord++;
         i++;
     }
     return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
5
Gpt3D_Clone539_5.java 1 13
Gpt3D_Clone539_5.java 14 29
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (String word :words) {
        if (word.length() <= 3) {
            nthShortWord++;
        }
        if (nthShortWord == n) {
            shortWord = word;
            break;
        }
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
6
Gpt3D_Clone539_6.java 1 13
Gpt3D_Clone539_6.java 14 30
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord (String [] words, int n) {
   int nthShortWord = 0;
   String shortWord = "notFound";
   for (String word :words) {
       if (word.length() <= 3) {
           nthShortWord++;
           if (nthShortWord == n) {
               shortWord = word;
               break;
           }
       }
   }
   return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
7
Gpt3D_Clone539_7.java 1 13
Gpt3D_Clone539_7.java 14 26
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

 public String nthShortWord(String[] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = n-1; i < words.length; i++) {
        if (words[i].length() <= 3) {
            shortWord = words[i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
2
Gpt3D_Clone53_2.java 1 14
Gpt3D_Clone53_2.java 15 33
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

 public boolean isBalanced(String str) {
    Map<Character, Character> balanceMap = new HashMap<>();
    balanceMap.put('(', ')');
    balanceMap.put('[', ']');
    balanceMap.put('{', '}');
    Stack<Character> brackets = new Stack<>();
    for (int i = 0; i < str.length(); i++) {
        if (balanceMap.containsKey(str.charAt(i)))
            brackets.push(str.charAt(i));
        else if (balanceMap.containsValue(str.charAt(i)))
            if (brackets.empty() || balanceMap.get(brackets.pop()) != str.charAt(i)) return false;
    }
    if (brackets.empty()) return true;
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
3
Gpt3D_Clone53_3.java 1 14
Gpt3D_Clone53_3.java 15 36
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

 public boolean isBalanced(String expression) {
    Map<Character, Character> bracketsPair = new HashMap<>();
    bracketsPair.put('(', ')');
    bracketsPair.put('[', ']');
    bracketsPair.put('{', '}');
    Stack<Character> openingBrackets = new Stack<>();
    for (int i = 0; i < expression.length(); i++) {
        if (bracketsPair.containsKey(expression.charAt(i)))
            openingBrackets.push(expression.charAt(i));
        if (bracketsPair.containsValue(expression.charAt(i))) 
			if (openingBrackets.isEmpty() || bracketsPair.get(openingBrackets.pop()) != expression.charAt(i))
                return false;
    }
    if (openingBrackets.isEmpty()) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
5
Gpt3D_Clone53_5.java 1 14
Gpt3D_Clone53_5.java 15 34
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

 public boolean isBalanced(String str) {
    Map<Character, Character> bracketMapping = new HashMap<Character, Character>();
    bracketMapping.put('(', ')');
    bracketMapping.put('[', ']');
    bracketMapping.put('{', '}');
    Stack<Character> openBrackets = new Stack<>();
    for (int i = 0; i < str.length(); i++) {
        Character character = str.charAt(i);
        if (bracketMapping.containsKey(character))
            openBrackets.push(str.charAt(i));
        else if (bracketMapping.containsValue(character)) 
			if (openBrackets.isEmpty() || bracketMapping.get(openBrackets.pop()) != character) 
				return false;
    }
    return openBrackets.isEmpty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
6
Gpt3D_Clone53_6.java 1 14
Gpt3D_Clone53_6.java 15 34
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

 public boolean isBalanced(String input) {
    Map<Character, Character> bracketPair = new HashMap<>();
    bracketPair.put('(', ')');
    bracketPair.put('[', ']');
    bracketPair.put('{', '}');
    Stack<Character> openBrackets = new Stack<>();
    for (int i = 0; i < input.length(); i++) {
        if (bracketPair.containsKey(input.charAt(i)))
            openBrackets.push(input.charAt(i));
        else if (bracketPair.containsValue(input.charAt(i))) 
			if (openBrackets.isEmpty() || bracketPair.get(openBrackets.pop()) != input.charAt(i))
                return false;
    }
    return openBrackets.isEmpty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
7
Gpt3D_Clone53_7.java 1 14
Gpt3D_Clone53_7.java 15 33
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

 public boolean isBalanced(String strExpression) {
    HashMap<Character, Character> bracketPairs = new HashMap<>();
    bracketPairs.put('(', ')');
    bracketPairs.put('[', ']');
    bracketPairs.put('{', '}');
    Stack<Character> brackets = new Stack<>();
    for (int i = 0; i < strExpression.length(); i++) {
        if (bracketPairs.containsKey(strExpression.charAt(i)))
            brackets.push(strExpression.charAt(i));
        else if (bracketPairs.containsValue(strExpression.charAt(i)))
            if (brackets.isEmpty() || bracketPairs.get(brackets.pop()) != strExpression.charAt(i))
                return false;
    }
    return brackets.isEmpty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
541
0
Gpt3D_Clone541_0.java 1 18
Gpt3D_Clone541_0.java 19 38
----------------------------------------

private int interpolateColor (int a, int b, float proportion) {
    if (proportion > 1 || proportion < 0) {
        throw new IllegalArgumentException ("proportion must be [0 - 1]");
    }
    float [] hsva = new float [3];
    float [] hsvb = new float [3];
    float [] hsv_output = new float [3];
    Color.colorToHSV (a, hsva);
    Color.colorToHSV (b, hsvb);
    for (int i = 0;
    i < 3; i ++) {
        hsv_output [i] = interpolate (hsva [i], hsvb [i], proportion);
    }
    int alpha_a = Color.alpha (a);
    int alpha_b = Color.alpha (b);
    float alpha_output = interpolate (alpha_a, alpha_b, proportion);
    return Color.HSVToColor ((int) alpha_output, hsv_output);
}
----------------------------------------

  private int interpolateColor (int a, int b, float proportion) {
        if (proportion > 1 || proportion < 0) {
            throw new IllegalArgumentException ("proportion must be [0 - 1]");
        }
        int[] hsva = new int[3];
        int[] hsvb = new int[3];
        int[] hsv_output = new int[3];
        Color.colorToHSV(a, hsva);
        Color.colorToHSV(b, hsvb);
        for(int i = 0; i < 3; i++) {
            hsv_output[i] = (int) interpolate(hsva[i], hsvb[i], proportion);
        }
        int alpha_a = Color.alpha(a);
        int alpha_b = Color.alpha(b);
        int alpha_output = (int) interpolate(alpha_a, alpha_b, proportion);
        return Color.HSVToColor(alpha_output, hsv_output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
54
1
Gpt3D_Clone54_1.java 1 18
Gpt3D_Clone54_1.java 19 65
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack ();
    for (char ch : brackets.toCharArray ()) {
        if (braces.containsKey (ch)) {
            halfBraces.push (braces.get (ch));
        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

 public static boolean isBalanced(String brackets) { 
        Stack<Character> stack  = new Stack<>(); 
        int lenString = brackets.length(); 
        if (lenString % 2 != 0){
         return false; 
        }
        else { 
            for (int i = 0; i < lenString; i++){ 
                char ch = brackets.charAt(i); 
                if (ch == '{') 
                    stack.push('}'); 
                else if (ch == '[') 
                    stack.push(']'); 
                else if (ch == '(') 
                    stack.push(')'); 
                else if (stack.isEmpty() || stack.peek() != ch) 
                    return false; 
                else
                    stack.pop(); 
            }
            return stack.isEmpty(); 
        } 
    } 
  public static boolean isBalanced(String brackets) {
    if (brackets.length() % 2 != 0) {
        return false;
    }
    Map<Character, Character> map = new HashMap<>();
    map.put('(', ')'); 
    map.put('[', ']'); 
    map.put('{', '}'); 
    Deque<Character> stack = new ArrayDeque<Character>();
    for (int i = 0; i < brackets.length(); i++) {
        char curr = brackets.charAt(i);
        if (map.containsKey(curr)) {
            stack.addLast(map.get(curr));
        } else if(!stack.isEmpty() && stack.getLast() == curr) {
            stack.removeLast();
        } else {
            return false;
        }
    }
    return stack.isEmpty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
54
3
Gpt3D_Clone54_3.java 1 18
Gpt3D_Clone54_3.java 19 65
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack ();
    for (char ch : brackets.toCharArray ()) {
        if (braces.containsKey (ch)) {
            halfBraces.push (braces.get (ch));
        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

 public static boolean isBalanced (String brackets) { 
        Map<Character, Character> map = new HashMap<Character, Character>();
        map.put('(', ')'); 
        map.put('[', ']'); 
        map.put('{', '}'); 
        if (brackets.length() % 2 != 0) 
            return false; 
        Stack<Character> stack = new Stack<Character>(); 
        for (int i = 0; i < brackets.length(); i++) { 
            char curr = brackets.charAt(i); 
            if (map.containsKey(curr)) { 
                stack.push(map.get(curr));
            }  
            else if (!stack.isEmpty() && 
                     stack.peek() == curr) { 
                stack.pop(); 
            }
            else {
                return false; 
            }
        } 
        return stack.isEmpty(); 
    } 
 public static boolean isBalanced(String brackets) {
    if (brackets.length() % 2 != 0) {
        return false;
    }
    Map<Character, Character> map = new HashMap<>();
    map.put('(', ')');
    map.put('[', ']');
    map.put('{', '}');
    Stack<Character> stack = new Stack<>();
    for (int i = 0; i < brackets.length(); i++) {
        char curr = brackets.charAt(i);
        if (map.containsKey(curr)) {
            stack.push(map.get(curr));
        } else if (stack.empty() || stack.peek() != curr) {
            return false;
        } else {
            stack.pop();
        }
    }
    return stack.empty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
54
5
Gpt3D_Clone54_5.java 1 18
Gpt3D_Clone54_5.java 19 60
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack ();
    for (char ch : brackets.toCharArray ()) {
        if (braces.containsKey (ch)) {
            halfBraces.push (braces.get (ch));
        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

 public static boolean isBalanced(String brackets) {
        if (brackets.length() % 2 != 0) return false;
        HashMap<Character, Character> hm = new HashMap<Character, Character>();
        hm.put('(', ')');
        hm.put('{', '}');
        hm.put('[', ']');
        Stack<Character> stack = new Stack<Character>();
        int len = brackets.length();
        for(int i=0; i<len; i++) {
            char ch = brackets.charAt(i);
            if(hm.containsKey(ch)) {
                stack.push(hm.get(ch));
            } else if(stack.isEmpty() || ch!=stack.pop()) {
                return false;
            }
        }
        return true; 
    } 
 public static boolean isBalanced (String brackets) {
    Map<Character, Character> braces = new HashMap<>();
    braces.put('(', ')');
    braces.put('[', ']');
    braces.put('{', '}');
    if (brackets.length() % 2 != 0) {
        return false;
    }
    Deque<Character> halfBraces = new ArrayDeque<>();
    for (char ch : brackets.toCharArray()) {
        if (braces.containsKey(ch)) {
            halfBraces.push(braces.get(ch));
        } else if (halfBraces.isEmpty() || ch != halfBraces.poll()) {
            return false;
        }
    }
    return halfBraces.isEmpty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
54
6
Gpt3D_Clone54_6.java 1 18
Gpt3D_Clone54_6.java 19 41
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack ();
    for (char ch : brackets.toCharArray ()) {
        if (braces.containsKey (ch)) {
            halfBraces.push (braces.get (ch));
        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

 public static boolean isBalanced(String brackets) {
    HashMap<Character, Character> hm = new HashMap<>();
    hm.put('{', '}');
    hm.put('(', ')');
    hm.put('[', ']');
    
    if (brackets.length() % 2 != 0){
        return false;
    }
    Stack<Character> stack = new Stack<Character>();;
    for (int i = 0 ; i < brackets.length(); i++) {
        char ch = brackets.charAt(i);
        if (hm.get(ch) != null){
            stack.push(hm.get(ch));
        } else if (stack.empty() || stack.pop() != ch) {
            return false;
        }
    }
        return stack.empty();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
554
0
Gpt3D_Clone554_0.java 1 11
Gpt3D_Clone554_0.java 12 24
----------------------------------------

public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    String capitalizedWord = "";
    for (String w : words) {
        String first = w.substring (0, 1);
        String f_after = w.substring (1);
        capitalizedWord += first.toUpperCase () + f_after + " ";
    }
    System.out.println (capitalizedWord);
}
----------------------------------------

 public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    StringBuilder capitalizedWord = new StringBuilder();
    for (String w : words) {
       String first = w.substring(0, 1).toUpperCase();
       String after = w.substring(1);
       capitalizedWord.append(first+after).append(" ");
    }
    System.out.println(capitalizedWord.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
554
1
Gpt3D_Clone554_1.java 1 11
Gpt3D_Clone554_1.java 12 24
----------------------------------------

public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    String capitalizedWord = "";
    for (String w : words) {
        String first = w.substring (0, 1);
        String f_after = w.substring (1);
        capitalizedWord += first.toUpperCase () + f_after + " ";
    }
    System.out.println (capitalizedWord);
}
----------------------------------------

 public static void main(String[] args) {
    String str = "my name is khan";
    String[] words = str.split("\\s");
    StringBuilder capitalizedWord = new StringBuilder();
    for (String w : words) {
        String first = w.substring(0, 1);
        String after = w.substring(1);
        capitalizedWord.append(Character.toUpperCase(first.charAt(0))).append(after).append(" ");
    }
    System.out.println(capitalizedWord);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
554
2
Gpt3D_Clone554_2.java 1 11
Gpt3D_Clone554_2.java 12 24
----------------------------------------

public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    String capitalizedWord = "";
    for (String w : words) {
        String first = w.substring (0, 1);
        String f_after = w.substring (1);
        capitalizedWord += first.toUpperCase () + f_after + " ";
    }
    System.out.println (capitalizedWord);
}
----------------------------------------

 public static void main(String[] args) {
    String str = "my name is khan";
    String[] words = str.split("\\s");
    StringBuilder capitalizedWord = new StringBuilder();
    for (String w : words) {
        String first = w.substring(0, 1).toUpperCase();
        String after = w.substring(1);
        capitalizedWord.append(first).append(after).append(" ");
    }
    System.out.println(capitalizedWord);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
554
4
Gpt3D_Clone554_4.java 1 11
Gpt3D_Clone554_4.java 12 24
----------------------------------------

public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    String capitalizedWord = "";
    for (String w : words) {
        String first = w.substring (0, 1);
        String f_after = w.substring (1);
        capitalizedWord += first.toUpperCase () + f_after + " ";
    }
    System.out.println (capitalizedWord);
}
----------------------------------------

 public static void main(String[] args) {
    String str = "my name is khan";
    String[] words = str.split("\\s");
    StringBuilder capitalizedWord = new StringBuilder();
    for (String w : words) {
        String first = String.valueOf(w.charAt(0)).toUpperCase();
        String after = w.substring(1);
        capitalizedWord.append(first).append(after).append(" ");
    }
    System.out.println(capitalizedWord);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
554
5
Gpt3D_Clone554_5.java 1 11
Gpt3D_Clone554_5.java 12 23
----------------------------------------

public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    String capitalizedWord = "";
    for (String w : words) {
        String first = w.substring (0, 1);
        String f_after = w.substring (1);
        capitalizedWord += first.toUpperCase () + f_after + " ";
    }
    System.out.println (capitalizedWord);
}
----------------------------------------

 public static void main (String [] args) {
    String str = "my name is khan";
    String words [] = str.split ("\\s");
    StringBuilder capitalizedWord = new StringBuilder();
    for (String word : words) {
        char capLetter = Character.toUpperCase(word.charAt(0));
        capitalizedWord.append(capLetter).append(word.substring(1)).append(" ");
    }
    System.out.println(capitalizedWord);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
559
0
Gpt3D_Clone559_0.java 1 15
Gpt3D_Clone559_0.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {int x = (int) (Math.random() * getWidth());
	 int y = (int) (Math.random() * getHeight());
	int width = (int) (Math.random() * getWidth()/2); 
	 int height = (int) (Math.random() * getHeight()/2); 
	 if (x + width > getWidth()) { 
	     x = getWidth() - width; 
	 } 
	 if (y + height > getHeight()) { 
	     y = getHeight() - height; 
	 }
	 Color c = new Color((int) (Math.random() * 360), 1.0f, 1.0f);
	 lstShapes.add(new MyCircle(x, y, width, height, c)); 
	 repaint();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
559
1
Gpt3D_Clone559_1.java 1 15
Gpt3D_Clone559_1.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
	 int x = (int) (Math.random() * (getWidth() / 2));
	 int y = (int) (Math.random() * (getHeight() / 2));
	 int width = (int) (Math.random() * (getWidth() / 3));
	 int height = (int) (Math.random() * (getHeight() / 3));
	if (x + width > getWidth()) {
	    x = getWidth() - width;
	}
	 if (y + height > getHeight()) {
	     y = getHeight() - height;
	 }
	 Color c = new Color((int) (Math.random() * 255), 0, 0);
	 lstShapes.add(new MyOval(x, y, width, height, c));
	 repaint();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
559
2
Gpt3D_Clone559_2.java 1 15
Gpt3D_Clone559_2.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
	 int x = (int) (Math.random() * (getWidth() / 4));
	 int y = (int) (Math.random() * (getHeight() / 4));
	 int width = (int) (Math.random() * (getWidth() / 8));
	 int height = (int) (Math.random() * (getHeight() / 8));
	 if (x + width > getWidth()) {
	     x = getWidth() - width;
	 }
	 if (y + height > getHeight()) {
	     y = getHeight() - height;
	 }
	 Color c = new Color((int) (Math.random() * 255), (int) (Math.random() * 255), 0);
	 lstShapes.add(new MyArc(x, y, width, height, c)); 
	 repaint();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
55
0
Gpt3D_Clone55_0.java 1 23
Gpt3D_Clone55_0.java 24 56
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced(String str) {
    boolean result = false;
    if (str.length() < 2) 
        return false;
    Stack <Character> stack = new Stack <Character> ();
    for (int i = 0; i < str.length(); i++) {
        char ch = str.charAt(i);
        // If the character does not have a left/right mapping, ignore it and move onto the next character.
        if (! parenthesesMapRight.containsKey(ch) && ! parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        // If the character has a left mapping, add it to the stack
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push(ch);
        } 
        // Otherwise, if the character has a right mapping, 
        // check the top element of the stack and see if it's a match
        else {
            if (!stack.isEmpty() && stack.pop() == parenthesesMapRight.get(ch).charValue())
                result = true;
            else 
                return false;
        }
    }
    // If the stack is not empty, then the brackets were not balanced
    if (!stack.isEmpty())
        return result = false;
    // Otherwise, the brackets were balanced
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
55
1
Gpt3D_Clone55_1.java 1 23
Gpt3D_Clone55_1.java 24 61
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced(String str) {
    boolean result = false;
    // Return false if the string is shorter than 2
    if (str.length () < 2)
        return false;
    // Create a stack to track characters
    Stack <Character> stack = new Stack <Character> ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        // If the character does not have a left/right mapping, ignore it.
        if (! parenthesesMapRight.containsKey(ch) && ! parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        // If the character has a left mapping push it to the stack.
        if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(ch);
        } 
        // Otherwise, if the character has a right mapping, 
        // check the top of the stack for a match.
        else {
            if (!stack.isEmpty() && stack.pop() == parenthesesMapRight.get(ch).charValue())
                result = true;
            else 
                return false;
        }
    }
    // If the stack is not empty, then the brackets were not balanced
    if (!stack.isEmpty())
        return result = false;
    // Otherwise, the brackets were balanced
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
1
Gpt3D_Clone562_1.java 1 15
Gpt3D_Clone562_1.java 16 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
     int x = (int) (Math.random () * (getWidth () -50));
     int y = (int) (Math.random () * (getHeight () -50));
     int width = (int) (Math.random () * (getWidth () / 3));
     int height = (int) (Math.random () * (getHeight () / 3));
     if (x + width > getWidth ()) {
        x = getWidth () - width;
     }
     if (y + height > getHeight ()) {
         y = getHeight () - height;
     }
     int r = (int) (Math.random () * 255);
     int g = (int) (Math.random () * 255);
     int b = (int) (Math.random () * 126 + 130);
     Color color = new Color (r, g, b);
     lstShapes.add (new MyRectangle (x, y, width, height, color));
     repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
3
Gpt3D_Clone562_3.java 1 15
Gpt3D_Clone562_3.java 16 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    int x = (int) (150 + Math.random () * (getWidth () - 350));
    int y = (int) (150 + Math.random () * (getHeight () - 350));
    int width = (int) (Math.random () * (getWidth () / 6));
    int height = (int) (Math.random () * (getHeight () / 6));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    float a = (float) (Math.random () * 360);
    float b = (float) (Math.random () * 0.5f + 0.5f);
    float c = (float) (Math.random () * 0.5f + 0.5f);
    Color color = Color.getHSBColor(a, b, c);
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
4
Gpt3D_Clone562_4.java 1 15
Gpt3D_Clone562_4.java 16 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
     int x = (int) (200+ Math.random () * (getWidth () -400));
     int y = (int) (200+ Math.random () * (getHeight () -400));
     int width = (int) (Math.random () * (getWidth () / 5));
     int height = (int) (Math.random () * (getHeight () / 5));
     if (x + width > getWidth ()) {
         x = getWidth () - width;
     }
     if (y + height > getHeight ()) {
         y = getHeight () - height;
     }
     a= (int) (Math.random () * 180);
     b= (int) (Math.random () * 180);
     c= (int) (Math.random () * 180);
     Color color = Color.getHSBColor(a, b, c);
     lstShapes.add (new MyRectangle (x, y, width, height, color));
     repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
7
Gpt3D_Clone562_7.java 1 15
Gpt3D_Clone562_7.java 16 33
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
     int x = (int) (Math.random () * getWidth () - 30);
     int y = (int) (Math.random () * getHeight () - 30);
     int width = (int) (40 + Math.random () * (getWidth () / 6));
     int height = (int) (40 + Math.random () * (getHeight () / 6));
     if (x + width > getWidth ()) {
         x = getWidth () - width;
     }
     if (y + height > getHeight ()) {
         y = getHeight () - height;
     }
     int[] rgb = {(int) (Math.random() * 255), (int) (Math.random () * 255), (int) (Math.random () * 255)};
     Color color = Color.getHSBColor(rgb[0], rgb[1], rgb[2]);
     lstShapes.add (new MyRectangle (x, y, width, height, color));
     repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
8
Gpt3D_Clone562_8.java 1 15
Gpt3D_Clone562_8.java 16 33
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    int x = (int) (50 + Math.random () * (getWidth () -150));
    int y = (int) (50 + Math.random () * (getHeight () -150));
    int width = (int) (Math.random () * (getWidth () / 5));
    int height = (int) (Math.random () * (getHeight () / 5));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    int[] rgb = {(int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255)};
    Color color = Color.getRGB(rgb[0], rgb[1], rgb[2]);
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
9
Gpt3D_Clone562_9.java 1 15
Gpt3D_Clone562_9.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
     int x = (int) (Math.random () * getWidth ()-100);
     int y = (int) (Math.random () * getHeight ()-100);
     int width = (int) (110 + Math.random () * (getWidth () / 4));
     int height = (int) (110 + Math.random () * (getHeight () / 4));
     if (x + width > getWidth ()) {
         x = getWidth () - width;
     }
     if (y + height > getHeight ()) {
         y = getHeight () - height;
     }
     Color color = new Color ((int) (20 + Math.random () * 230), (int) (20 + Math.random () * 230), (int) (20 + Math.random () * 230));
     lstShapes.add (new MyRectangle (x, y, width, height, color));
     repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
563
0
Gpt3D_Clone563_0.java 1 15
Gpt3D_Clone563_0.java 16 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        int x = (int) (Math.random () * getWidth ());
        int y = (int) (Math.random () * getHeight ());
        int radius = (int) (Math.random () * (getWidth () / 4));
        if (x + radius > getWidth ()) {
            x = getWidth () - radius;
        }
        Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
        lstShapes.add (new MyArc (x, y, radius, color));
        repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
563
1
Gpt3D_Clone563_1.java 1 15
Gpt3D_Clone563_1.java 16 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        int x = (int) (Math.random () * getWidth ());
        int y = (int) (Math.random () * getHeight ());
        int width = (int) (Math.random () * (getWidth () / 4));
        if (x + width > getWidth ()) {
            x = getWidth () - width;
        }
        Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
        lstShapes.add (new MyLine (x, y, width, color));
        repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
567
8
Gpt3D_Clone567_8.java 1 24
Gpt3D_Clone567_8.java 25 54
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println (i + " " + zipf.getProbability (i));
    }
    int hist [] = new int [12];
    for (int i = 0;
    i < 12; i ++) {
        hist [i] = 0;
    }
    System.out.println ("Testing the probability distribution:");
    int sum = 0;
    for (int i = 1;
    i <= 1000000; i ++) {
        hist [zipf.next ()] ++;
    }
    for (int i = 0;
    i < 12; i ++) System.out.println (i + " " + hist [i] / 1000000.0);
}
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    int size = Integer.valueOf (args [0]);
    double dSkew = Double.valueOf (args [1]);
    ZipfGenerator zipf = new ZipfGenerator (size, dSkew);
    double[] probArray = new double[size+1];
    for (int i =1; i<=size ;i++){
        probArray[i] = zipf.getProbability (i);
        System.out.println (i + " " + probArray[i]);
    }
    int hist [] = new int [12];
    for (int i = 0;
    i < 12; i ++) {
        hist [i] = 0;
    }
    System.out.println ("Testing the probability distribution:");
    int sum = 0;
    for (int i = 1;
    i <= 1000000; i ++) {
        hist [zipf.getNumberByProbability(probArray)] ++;
    }
    for (int i = 0;
    i < 12; i ++) System.out.println (i + " " + hist [i] / 1000000.0);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
569
0
Gpt3D_Clone569_0.java 1 35
Gpt3D_Clone569_0.java 36 74
----------------------------------------

public static void main (String args []) {
    int i;
    int largestSize = 4;
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};
    int large [] = Arrays.copyOf (array, largestSize);
    int smallest = large [0];
    int smallestIndex = 0;
    for (int j = 1;
    j < large.length; ++ j) {
        if (smallest > large [j]) {
            smallest = large [j];
            smallestIndex = j;
        }
    }
    for (i = large.length; i < array.length; i ++) {
        if (smallest < array [i]) {
            large [smallestIndex] = array [i];
            smallest = large [0];
            smallestIndex = 0;
            for (int j = 1;
            j < large.length; ++ j) {
                if (smallest > large [j]) {
                    smallest = large [j];
                    smallestIndex = j;
                }
            }
        }
    }
    for (int j = 0;
    j < large.length; j ++) {
        System.out.println ("Largest 5 : " + large [j]);
    }
    System.out.println ();
    System.out.println ("Largest is: " + getHighest (large));
}
----------------------------------------

public static void main(String args[]) {
    int i;
    int array[] = {33, 55, 13, 46, 87, 42, 10, 34};
    int largestSize = 4;
    int large[] = Arrays.copyOf(array, largestSize);
    int smallestIndex = 0;
    int smallestValue = large[0];
    for (i = 1; i < large.length; i++) {
        if (smallestValue > large[i]) {
            smallestValue = large[i];
            smallestIndex = i;
        }
    }
    while (i < array.length) {
        if (smallestValue < array[i]) {
            large[smallestIndex] = array[i];
            smallestIndex = 0;
            smallestValue = large[0];
            for (int j = 0; j < large.length; j++) {
                if (smallestValue > large[j]) {
                    smallestValue = large[j];
                    smallestIndex = j;
                }
            }
        }
        i++;
    }
    for (int j = 0; j < largestSize; j++) {
        System.out.println("Largest " + (j + 1) + ": " + large[j]);
    }
    System.out.println();
    System.out.println("Largest is: " + getHighest(large));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
569
1
Gpt3D_Clone569_1.java 1 35
Gpt3D_Clone569_1.java 36 70
----------------------------------------

public static void main (String args []) {
    int i;
    int largestSize = 4;
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};
    int large [] = Arrays.copyOf (array, largestSize);
    int smallest = large [0];
    int smallestIndex = 0;
    for (int j = 1;
    j < large.length; ++ j) {
        if (smallest > large [j]) {
            smallest = large [j];
            smallestIndex = j;
        }
    }
    for (i = large.length; i < array.length; i ++) {
        if (smallest < array [i]) {
            large [smallestIndex] = array [i];
            smallest = large [0];
            smallestIndex = 0;
            for (int j = 1;
            j < large.length; ++ j) {
                if (smallest > large [j]) {
                    smallest = large [j];
                    smallestIndex = j;
                }
            }
        }
    }
    for (int j = 0;
    j < large.length; j ++) {
        System.out.println ("Largest 5 : " + large [j]);
    }
    System.out.println ();
    System.out.println ("Largest is: " + getHighest (large));
}
----------------------------------------

public static void main(String args[]) {
    int i;
    int minIndex;
    int maximumSize = 4;
    int array[] = {33, 55, 13, 46, 87, 42, 10, 34};
    int topValues[] = Arrays.copyOf(array, maximumSize);
    int smallestValue = topValues[0];
    minIndex = 0;
    for (i = 0; i < topValues.length; i++) {
        if (smallestValue > topValues[i]) {
            smallestValue = topValues[i];
            minIndex = i;
        }
    }
    for (int j = topValues.length; j < array.length; j++) {
        if (smallestValue < array[j]) {
            topValues[minIndex] = array[j];
            smallestValue = topValues[0];
            minIndex = 0;
            for (i = 1; i < topValues.length; i++) {
                if (smallestValue > topValues[i]) {
                    smallestValue = topValues[i];
                    minIndex = i;
                }
            }
        }
    }
    for (i = 0; i < topValues.length; i++) {
        System.out.println("Largest " + (i + 1) + ": " + topValues[i]);
    }
    System.out.println();
    System.out.println("Largest is: " + getHighest(topValues));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
569
2
Gpt3D_Clone569_2.java 1 35
Gpt3D_Clone569_2.java 36 70
----------------------------------------

public static void main (String args []) {
    int i;
    int largestSize = 4;
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};
    int large [] = Arrays.copyOf (array, largestSize);
    int smallest = large [0];
    int smallestIndex = 0;
    for (int j = 1;
    j < large.length; ++ j) {
        if (smallest > large [j]) {
            smallest = large [j];
            smallestIndex = j;
        }
    }
    for (i = large.length; i < array.length; i ++) {
        if (smallest < array [i]) {
            large [smallestIndex] = array [i];
            smallest = large [0];
            smallestIndex = 0;
            for (int j = 1;
            j < large.length; ++ j) {
                if (smallest > large [j]) {
                    smallest = large [j];
                    smallestIndex = j;
                }
            }
        }
    }
    for (int j = 0;
    j < large.length; j ++) {
        System.out.println ("Largest 5 : " + large [j]);
    }
    System.out.println ();
    System.out.println ("Largest is: " + getHighest (large));
}
----------------------------------------

public static void main (String args []) {
    int i;
    int array[] = {33, 55, 13, 46, 87, 42, 10, 34};
    int largestSize = 4;
    int large[] = Arrays.copyOf(array, largestSize);
    int minIndex = 0;
    int minValue = large[0];
    for (i = 1; i<large.length; i++){
        if (minValue > large[i]){
            minValue = large[i];
            minIndex = i;
        }
    }
    for (int j = large.length; j<array.length; j++){
        if (minValue < array[j]) {
            large[minIndex] = array[j];
            minValue = large[0];
            minIndex = 0;
            for (int k = 1; k < large.length; k++) {
                if (minValue > large[k]) {
                    minValue = large[k];
                    minIndex = k;
                }
            }
        }
    }
    for (int l = 0; l<large.length; l++){
        System.out.println("Largest " + (l + 1) + ": " + large[l]);
    }
    System.out.println();
    System.out.println("Largest is: " + getHighest(large));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
0
Gpt3D_Clone56_0.java 1 23
Gpt3D_Clone56_0.java 24 52
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length() < 2) return false;
    Character[] arr = new Character[str.length()];
    for (int i = 0; i < str.length(); i++) {
        char ch = str.charAt(i);
        if (!parenthesesMapRight.containsKey(ch) && ! parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey(ch)) {
            arr[i] = ch;
        } else {
            if (i > 0 && arr[i-1] != null && arr[i-1] == parenthesesMapRight.get(ch).charValue()) {
                result = true;
           } else {
                return false;
            }
        }
    }
    int count = 0;
    for (int j = 0; j<arr.length; j++) {
        if (arr[j] != null)
            count++;
    }
    if (count > 0) return result = false;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
1
Gpt3D_Clone56_1.java 1 23
Gpt3D_Clone56_1.java 24 52
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Character[] array = new Character[str.length()];
    for (int i = 0; i < str.length(); i++) {
        char ch = str.charAt(i);
        if (!parenthesesMapRight.containsKey(ch) && ! parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey(ch)) {
            array[i] = ch;
        }
        else {
            if(i>0 && array[i-1] != null && array[i-1] == parenthesesMapRight.get(ch).charValue()) {
                result = true;
            }
            else {
                return false;
            }
        }
    }
    for (int j=0; j<array.length; j++) {
        if (array[j] != null)
         return result = false;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
571
7
Gpt3D_Clone571_7.java 1 10
Gpt3D_Clone571_7.java 11 27
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        int max = Integer.MIN_VALUE; 
        for (int j = 0; j < array.length; j++) {
            max = Math.max(max, array[j]);
        }
        large[k++] = max;
        array[i] = Integer.MIN_VALUE;
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
571
8
Gpt3D_Clone571_8.java 1 10
Gpt3D_Clone571_8.java 11 26
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    
    PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());
    for (int i = 0; i < array.length; i++) {
        maxHeap.add(array[i]);
    }
    while (k < 10) {
        large[k++] = maxHeap.poll();
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
0
Gpt3D_Clone572_0.java 1 10
Gpt3D_Clone572_0.java 11 25
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxVal = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array[i] > maxVal) {
            maxVal = array[i];
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
1
Gpt3D_Clone572_1.java 1 10
Gpt3D_Clone572_1.java 11 25
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxVal = array[0];
    for (int i = 1;
    i < array.length; i ++) {
        if (array[i] > maxVal) {
            maxVal = array[i];
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
2
Gpt3D_Clone572_2.java 1 10
Gpt3D_Clone572_2.java 11 25
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    for (int i = 0;
    i < array.length; i ++) {
        int maxVal = Integer.MIN_VALUE;
        if (array[i] > maxVal) {
            maxVal = array[i];
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
3
Gpt3D_Clone572_3.java 1 10
Gpt3D_Clone572_3.java 11 24
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxVal = Integer.MIN_VALUE;
    for (int i = 0; i < array.length; i++) {
        if (array[i] > maxVal) {
            maxVal = array[i];
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
4
Gpt3D_Clone572_4.java 1 10
Gpt3D_Clone572_4.java 11 25
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxVal = Integer.MIN_VALUE;
    for (int i = 0;
    i < array.length; i ++) {
        if (array[i] > maxVal) {
            maxVal = array[i];
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
5
Gpt3D_Clone572_5.java 1 10
Gpt3D_Clone572_5.java 11 25
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxIndex = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array[i] > array[maxIndex]) {
            maxIndex = i;
            large[i] = array[maxIndex];
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
6
Gpt3D_Clone572_6.java 1 10
Gpt3D_Clone572_6.java 11 24
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    for (int i = 0; i < array.length; i++) {
        int maxVal = array[0];
        if (array[i] > maxVal) {
            maxVal = array[i]; 
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
7
Gpt3D_Clone572_7.java 1 10
Gpt3D_Clone572_7.java 11 24
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int maxVal = array[0];
    for (int i = 1; i < array.length; i++) {
        if (array[i] > maxVal) {
            maxVal = array[i]; 
            large[i] = maxVal;
        }
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
9
Gpt3D_Clone572_9.java 1 10
Gpt3D_Clone572_9.java 11 20
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

 public static void main (String[] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    for (int k = 0, i = 0; i < array.length; k++, i++) {
        large [k] = getMax (i, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
573
0
Gpt3D_Clone573_0.java 1 9
Gpt3D_Clone573_0.java 10 20
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int cases = sc.nextInt ();
    String [] str = new String [cases];
    for (int i = 0;
    i < cases; i ++) {
        str [i] = sc.next ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int cases = Integer.parseInt (sc.next ());
    String [] str = new String [cases];
    sc.nextLine();
    for (int i = 0; i < cases; i ++) {
        str [i] = sc.nextLine ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
573
1
Gpt3D_Clone573_1.java 1 9
Gpt3D_Clone573_1.java 10 18
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int cases = sc.nextInt ();
    String [] str = new String [cases];
    for (int i = 0;
    i < cases; i ++) {
        str [i] = sc.next ();
    }
}
----------------------------------------

 public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int cases = reader.nextInt();
    String [] str = new String[cases];
    for (int i = 0; i < cases; i++)
        str[i] = sc.nextLine ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
0
Gpt3D_Clone575_0.java 1 27
Gpt3D_Clone575_0.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void launchGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
1
Gpt3D_Clone575_1.java 1 27
Gpt3D_Clone575_1.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void constructGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
2
Gpt3D_Clone575_2.java 1 27
Gpt3D_Clone575_2.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void initGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
3
Gpt3D_Clone575_3.java 1 27
Gpt3D_Clone575_3.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void configureFrame() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
4
Gpt3D_Clone575_4.java 1 27
Gpt3D_Clone575_4.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void setupGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
5
Gpt3D_Clone575_5.java 1 27
Gpt3D_Clone575_5.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void buildGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
6
Gpt3D_Clone575_6.java 1 27
Gpt3D_Clone575_6.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void showGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
7
Gpt3D_Clone575_7.java 1 27
Gpt3D_Clone575_7.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void displayGUI() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
575
8
Gpt3D_Clone575_8.java 1 27
Gpt3D_Clone575_8.java 28 48
----------------------------------------

private static void createAndShowGUI () {
    final JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new FlowLayout ());
    JPanel operationButtons_ = new JPanel ();
    JButton readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin (new Insets (0, - 30, 0, - 30));
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    readerStopButton_ = new JButton ();
    readerStopButton_.setBackground (javax.swing.UIManager.getDefaults ().getColor ("Button.light"));
    readerStopButton_.setFont (new java.awt.Font ("Geneva", 0, 12));
    readerStopButton_.setText ("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText ("<html><b>Stop</b> button is currently inactive.  ");
    System.out.println (readerStopButton_.getPreferredSize ());
    readerStopButton_.setPreferredSize (new Dimension (66, 40));
    operationButtons_.add (readerStopButton_);
    operationButtons_.add (new JButton ("yCoder.com"));
    frame.add (operationButtons_);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

  private static void constructFrame() {
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new FlowLayout());
    JPanel operationButtons_ = new JPanel();
    JButton readerStopButton_ = new JButton();
    readerStopButton_.setBackground(UIManager.getDefaults().getColor("Button.light"));
    readerStopButton_.setFont(new Font("Geneva", 0, 12));
    readerStopButton_.setText("<html><center>READER<br>STOP</center></html>\n");
    readerStopButton_.setToolTipText("<html><b>Stop</b> button is currently inactive.  ");
    readerStopButton_.setMargin(new Insets(0, -30, 0, -30));
    readerStopButton_.setPreferredSize(new Dimension(66, 40));
    operationButtons_.add(readerStopButton_);
    operationButtons_.add(new JButton("yCoder.com"));
    frame.add(operationButtons_);
    frame.pack();
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
0
Gpt3D_Clone577_0.java 1 12
Gpt3D_Clone577_0.java 13 25
----------------------------------------

private static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {
    if (numberOne == numberTwo) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float rand = (float) Math.random ();
    float highRange = Math.max (numberOne, numberTwo);
    float lowRange = Math.min (numberOne, numberTwo);
    float lowRand = (float) Math.floor (rand - 1);
    float highRand = (float) Math.ceil (rand + 1);
    float genRand = (highRange - lowRange) * ((rand - lowRand) / (highRand - lowRand)) + lowRange;
    return genRand;
}
----------------------------------------

 private static float getRandomNumberBetween (float firstNumber, float secondNumber) throws Exception {
    if (firstNumber == secondNumber) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float randomNumBetween = 0;
    float lowerRange = Math.min(firstNumber, secondNumber);
    float upperRange = Math.max(firstNumber, secondNumber);
    double normalizedDouble = Math.random() *(upperRange - lowerRange) + lowerRange;
    randomNumBetween = (float)normalizedDouble;
    return randomNumBetween;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
578
0
Gpt3D_Clone578_0.java 1 24
Gpt3D_Clone578_0.java 25 50
----------------------------------------

public static void main (String [] args) {
    int a = 100;
    int b = 1000;
    int lowest = b;
    int highest = a;
    int count = 100000;
    Random random = new Random ();
    for (int i = 0;
    i < count; i ++) {
        int nextNumber = (int) ((Math.abs (random.nextDouble ()) * (b - a))) + a;
        if (nextNumber < a || nextNumber > b) {
            System.err.println ("number not in range :" + nextNumber);
        } else {
            System.out.println (nextNumber);
        }
        if (nextNumber < lowest) {
            lowest = nextNumber;
        }
        if (nextNumber > highest) {
            highest = nextNumber;
        }
    }
    System.out.println ("Produced " + count + " numbers from " + lowest + " to " + highest);
}
----------------------------------------

 public static void main (String [] args) {
    int a = 100;
    int b = 1000;
    int lowest = b;
    int highest = a;
    int count = 100000;
    Random random = new Random ();
    while (count > 0) {
        int nextNumber = (int) ((Math.abs (random.nextDouble ()) * (b - a))) + a;
        if (nextNumber < a || nextNumber > b) {
            System.err.println ("number not in range :" + nextNumber);
        } else {
            System.out.println (nextNumber);
        }
        if (nextNumber <= lowest) {
            lowest = nextNumber;
        }
        if (nextNumber >= highest) {
            highest = nextNumber;
        }
        count--;
    }
    System.out.println ("Generated " + (100000 - count) + " numbers between " + lowest + " and " + highest);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
0
Gpt3D_Clone57_0.java 1 23
Gpt3D_Clone57_0.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapRight.containsKey(ch)) {
            if (stack.isEmpty() || parenthesesMapLeft.get(stack.pop()) != str.charAt(i)) {
                return false;
            } else {
                result =  true;
            }
        } else if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
1
Gpt3D_Clone57_1.java 1 23
Gpt3D_Clone57_1.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = true;
    if (str.length () < 2) return false;
    Stack < Character > st = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapLeft.containsKey(ch)) {
            st.push(str.charAt(i));
        } else if (parenthesesMapRight.containsKey(ch)) {
            if (st.isEmpty() || !parenthesesMapLeft.get(st.pop()).equals(str.charAt(i))) {
                return false;
            } else {
                result = true;
            }
        }
    }
    if (! st.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
2
Gpt3D_Clone57_2.java 1 23
Gpt3D_Clone57_2.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        } else if (parenthesesMapRight.containsKey(ch)) {
            if (stack.isEmpty() || !parenthesesMapLeft.get(stack.pop()).equals(str.charAt(i))) {
                return false;
            } else {
                result =  true;
            }
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
3
Gpt3D_Clone57_3.java 1 23
Gpt3D_Clone57_3.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapRight.containsKey(ch)) {
            if (!stack.isEmpty() && parenthesesMapLeft.get(stack.peek()).equals(str.charAt(i))) {
                result =  true;
            } else {
                return false;
            }
        } else if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
4
Gpt3D_Clone57_4.java 1 23
Gpt3D_Clone57_4.java 24 44
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        }  else if (parenthesesMapRight.containsKey(ch)) {
            if (! stack.isEmpty() && parenthesesMapLeft.get(stack.peek()).equals(str.charAt(i))) {
                result =  true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
5
Gpt3D_Clone57_5.java 1 23
Gpt3D_Clone57_5.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = true;
    if (str.length () < 2) return false;
    Stack < Character > stk = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapRight.containsKey(ch)) {
            if (stk.isEmpty() || !parenthesesMapLeft.get(stk.pop()).equals(str.charAt(i))) {
                return false;
            } else {
                result = true;
            }
        } else if (parenthesesMapLeft.containsKey(ch)) {
            stk.push(str.charAt(i));
        }
    }
    if (! stk.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
6
Gpt3D_Clone57_6.java 1 23
Gpt3D_Clone57_6.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        } else if (parenthesesMapRight.containsKey(ch)) {
            if (stack.isEmpty() || parenthesesMapLeft.get(stack.pop()) != str.charAt(i)) {
                return false;
            } else {
                result =  true;
            }
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
7
Gpt3D_Clone57_7.java 1 23
Gpt3D_Clone57_7.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapRight.containsKey(ch)) {
            if (stack.isEmpty() || !parenthesesMapLeft.get(stack.pop()).equals(str.charAt(i))) {
                return false;
            } else {
                result =  true;
            }
        } else if (parenthesesMapLeft.containsKey(ch)) {
            stack.push(str.charAt(i));
        }
    }
    if (! stack.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
8
Gpt3D_Clone57_8.java 1 23
Gpt3D_Clone57_8.java 24 43
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

 public static boolean isBalanced (String str) {boolean result = true;
    if (str.length () < 2) return false;
    Stack < Character > stck = new Stack < > ();
    for (int i = 0; i < str.length (); i++) {
        char ch = str.charAt(i);
        if (parenthesesMapLeft.containsKey(ch)) {
            stck.push(str.charAt(i));
        } else if (parenthesesMapRight.containsKey(ch)) {
            if (stck.isEmpty() || parenthesesMapLeft.get(stck.pop()) != str.charAt(i)) {
                return false;
            } else {
                result = true;
            }
        }
    }
    if (! stck.isEmpty()) return false; 
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
0
Gpt3D_Clone580_0.java 1 12
Gpt3D_Clone580_0.java 13 26
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter lowerbound range:");
    min = sc.nextInt ();
    System.out.println ("Enter upperbound range:");
    max = sc.nextInt ();
    int difference = max - min;
    num = ran.nextInt (difference) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
1
Gpt3D_Clone580_1.java 1 12
Gpt3D_Clone580_1.java 13 26
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter the minimum value:");
    min = sc.nextInt ();
    System.out.println("Enter the maximum value:");
    max = sc.nextInt ();
    int range = max - min + 1;
    num = ran.nextInt(range) + min;
    System.out.println("Random number between given range is: " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
2
Gpt3D_Clone580_2.java 1 12
Gpt3D_Clone580_2.java 13 26
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter lowerbound range:");
    min = sc.nextInt ();
    System.out.println ("Enter upperbound range:");
    max = sc.nextInt ();
    int difference = max - min;
    num = ran.nextInt (difference + 1) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
3
Gpt3D_Clone580_3.java 1 12
Gpt3D_Clone580_3.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
   int min, max, difference, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter start of range:");
    min = sc.nextInt ();
    System.out.println ("Enter end of range:");
    max = sc.nextInt ();
    difference = max - min;
    num = (int)(Math.random() * difference) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
4
Gpt3D_Clone580_4.java 1 12
Gpt3D_Clone580_4.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter lower limit:");
    min = sc.nextInt ();
    System.out.println ("Enter upper limit:");
    max = sc.nextInt ();
    num = ran.nextInt (max - min + 1) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
5
Gpt3D_Clone580_5.java 1 12
Gpt3D_Clone580_5.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter minimum range:");
    min = sc.nextInt ();
    System.out.println ("Enter maximum range:");
    max = sc.nextInt ();
    num = ran.nextInt (max - min + 1) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
6
Gpt3D_Clone580_6.java 1 12
Gpt3D_Clone580_6.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter low limit:");
    min = sc.nextInt ();
    System.out.println ("Enter high limit:");
    max = sc.nextInt ();
    num = ran.nextInt (max - min + 1) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
7
Gpt3D_Clone580_7.java 1 12
Gpt3D_Clone580_7.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
   int min, max, num;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter lower limit:");
    min = sc.nextInt ();
    System.out.println ("Enter upper limit:");
    max = sc.nextInt ();
    num = (int)(Math.random() * (max - min + 1)) + min;
    System.out.println("Random number between given range is: " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
581
0
Gpt3D_Clone581_0.java 1 15
Gpt3D_Clone581_0.java 16 36
----------------------------------------

public static void main (String [] args) {
    int first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    Random generator = new Random ();
    int num = (int) (Math.random () * numTwo);
    System.out.println ("Random number: " + ((num > numOne) ? num : numOne + num));
}
----------------------------------------

  public static void main (String [] args) {
    int first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    int randomInt = (int)(Math.random() * numTwo);
    if (randomInt < numOne) {
        randomInt = numOne;
    } else {
        randomInt = numTwo;
    }
    System.out.println ("Random number: " + randomInt);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
581
1
Gpt3D_Clone581_1.java 1 15
Gpt3D_Clone581_1.java 16 34
----------------------------------------

public static void main (String [] args) {
    int first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    Random generator = new Random ();
    int num = (int) (Math.random () * numTwo);
    System.out.println ("Random number: " + ((num > numOne) ? num : numOne + num));
}
----------------------------------------

 public static void main (String [] args) {
    int first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    int randomNum = (int) (Math.random () * numTwo) + 1;
    if (randomNum < numOne) {
        randomNum = numOne;
    }
    System.out.println ("Random number: " + randomNum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
0
Gpt3D_Clone583_0.java 1 12
Gpt3D_Clone583_0.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please enter two numbers to determine the min and max range:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int range = max - min;
    int num = ran.nextInt(range) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
1
Gpt3D_Clone583_1.java 1 12
Gpt3D_Clone583_1.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Input lower and upper range of random number:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int range = max - min + 1;
    int num = (int) (Math.random () * range) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
2
Gpt3D_Clone583_2.java 1 12
Gpt3D_Clone583_2.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args){
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please provide lower and upper bounds of the range:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int range = max - min + 1;
    int num = (int)(ran.nextDouble() * range) + min;
    System.out.println ("Random number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
3
Gpt3D_Clone583_3.java 1 12
Gpt3D_Clone583_3.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the range of numbers you want the random number to be between:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    double num = min + (ran.nextDouble()*(max - min));
    System.out.println("Random number between given range is " + (int) num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
4
Gpt3D_Clone583_4.java 1 12
Gpt3D_Clone583_4.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please enter the lower and upper bounds of the range you would like:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int num = min + (int)(ran.nextDouble()*((max-min)+1));
    System.out.println ("Random number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
5
Gpt3D_Clone583_5.java 1 12
Gpt3D_Clone583_5.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please input the lower and upper range desired:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int num = (int)(ran.nextDouble() * (max - min + 1) + min);
    System.out.println ("Random number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
583
6
Gpt3D_Clone583_6.java 1 12
Gpt3D_Clone583_6.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please enter the lower and upper limits (in order) of the range for the random number:");
    min = sc.nextInt ();
    max = sc.nextInt ();
    int num = (int)(ran.nextDouble() * (max - min + 1)) + min;
    System.out.println ("Random number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
1
Gpt3D_Clone584_1.java 1 11
Gpt3D_Clone584_1.java 12 26
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    secureRandom randomGenerator = new secureRandom ();
    byte[] randomBytes = new byte[20];
    randomGenerator.nextBytes( randomBytes );
    for (int i = 0; i < 10; i++ ) {
        int randomInt = ( randomBytes[i] % (END - START + 1) ) + START;
        log ("Generated : " + randomInt );
    }
    log ("Done");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
2
Gpt3D_Clone584_2.java 1 11
Gpt3D_Clone584_2.java 12 26
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    ArrayList<Integer> list = new ArrayList<>();
    for (int i = 0; i < 10; i++){
        int randomInt = START + (int)(Math.random() * ((END - START) + 1));
        list.add(randomInt);
        log ("Generated : " + list.get(i) );
    }
    log ("Done");	
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
3
Gpt3D_Clone584_3.java 1 11
Gpt3D_Clone584_3.java 12 25
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    ThreadLocalRandom randomGenerator = ThreadLocalRandom.current();
    for (int idx = 1;
    idx <= 10; ++idx) {
        int randomInt = START + randomGenerator.nextInt(END - START + 1);
        log ("Generated : " + randomInt );
    }
    log ("Done");	
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
0
Gpt3D_Clone586_0.java 1 12
Gpt3D_Clone586_0.java 13 26
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String[] args) { 
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    SecureRandom ran = new SecureRandom();
    int range = max - min;
    int randomNumber = min + ran.nextInt(range);
    System.out.println("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
1
Gpt3D_Clone586_1.java 1 12
Gpt3D_Clone586_1.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int range = max - min;
    int randomNumber = min + (int)(Math.random() * range);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
2
Gpt3D_Clone586_2.java 1 12
Gpt3D_Clone586_2.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int range = max - min;
    double randomNumber = Math.random() * range + min;
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
3
Gpt3D_Clone586_3.java 1 12
Gpt3D_Clone586_3.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int range = max - min;
    int randomNumber = min + (int)(range * Math.random() + 0.5);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
4
Gpt3D_Clone586_4.java 1 12
Gpt3D_Clone586_4.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    Random ran = new Random();
    int randomNumber = ran.nextInt(max - min) + min;
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
5
Gpt3D_Clone586_5.java 1 12
Gpt3D_Clone586_5.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    Random ran = new Random();
    int randomNumber = min + ran.nextInt(max - min + 1);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
6
Gpt3D_Clone586_6.java 1 12
Gpt3D_Clone586_6.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int range = max - min;
    int randomNumber = (int)(min + range * Math.random());
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
7
Gpt3D_Clone586_7.java 1 12
Gpt3D_Clone586_7.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    Random ran = new Random();
    int randomNumber = (min + 1) + ran.nextInt(max - min - 1);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
8
Gpt3D_Clone586_8.java 1 12
Gpt3D_Clone586_8.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int randomNumber = (int)(min + Math.random() * max);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
586
9
Gpt3D_Clone586_9.java 1 12
Gpt3D_Clone586_9.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

 public static void main (String [] args) {
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int randomNumber = (int) (Math.random()*(max - min + 1) + min);
    System.out.println ("Random Number between given range is " + randomNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
589
0
Gpt3D_Clone589_0.java 1 9
Gpt3D_Clone589_0.java 10 19
----------------------------------------

public static void main (String [] args) throws Exception {
    AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);
    NexmoClient client = new NexmoClient (auth);
    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, "Hello from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult response : responses) {
        System.out.println (response);
    }
}
----------------------------------------

 public static void main (String [] args) throws Exception {AuthMethod auth = AuthMethodFactory.createTokenAuthMethod(API_KEY, API_SECRET);
    NexusClient client = new NexusClient (auth);
    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, "Hi from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult resp : responses) {
        System.out.println ("Message successfully processed: " + resp);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
589
1
Gpt3D_Clone589_1.java 1 9
Gpt3D_Clone589_1.java 10 19
----------------------------------------

public static void main (String [] args) throws Exception {
    AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);
    NexmoClient client = new NexmoClient (auth);
    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, "Hello from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult response : responses) {
        System.out.println (response);
    }
}
----------------------------------------

 public static void main (String [] args) throws Exception {AuthMethod auth = AuthMethodFactory.createExternalAuthMethod(API_KEY, API_SECRET);
    NexmoClient client = new NexmoClient (auth);
    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, "Howdy from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult response : responses) {
        System.out.println ("Message sent: " + response);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
58
2
Gpt3D_Clone58_2.java 1 14
Gpt3D_Clone58_2.java 15 34
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileInputStream fin = new FileInputStream ("line.srt");
    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));
    PrintWriter out = new PrintWriter ("newline.srt");
    int i = 0;
    String line = reader.readLine ();
    while (line != null) {
        if (! line.trim ().equals ("")) {
            out.println (line);
        }
        line = reader.readLine ();
    }
    out.close ();
}
----------------------------------------

 public static void main (String[] args) throws IOException {
    File lineFile = new File("line.srt");
    BufferedReader reader = new BufferedReader(new FileReader(lineFile));
    FileWriter fw = new FileWriter("newline.srt");
    BufferedWriter bw = new BufferedWriter(fw);
    String line = reader.readLine();
    while (line != null) {
        if(!line.trim().equals("")) {
            bw.write(line);
            bw.newLine();
        }
        line = reader.readLine();
    }
    reader.close();
    bw.close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
58
4
Gpt3D_Clone58_4.java 1 14
Gpt3D_Clone58_4.java 15 34
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileInputStream fin = new FileInputStream ("line.srt");
    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));
    PrintWriter out = new PrintWriter ("newline.srt");
    int i = 0;
    String line = reader.readLine ();
    while (line != null) {
        if (! line.trim ().equals ("")) {
            out.println (line);
        }
        line = reader.readLine ();
    }
    out.close ();
}
----------------------------------------

 public static void main(String[] args) throws FileNotFoundException, IOException
{
    FileInputStream in = new FileInputStream("line.srt");
    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
 
    FileOutputStream out = new FileOutputStream("newline.srt");
    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(out));
 
    String line;
    while((line = reader.readLine()) != null) {
        if(!line.trim().equals("")) {
            writer.write(line + "\n");
        }
    }
 
    reader.close();
    writer.close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
58
5
Gpt3D_Clone58_5.java 1 14
Gpt3D_Clone58_5.java 15 31
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileInputStream fin = new FileInputStream ("line.srt");
    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));
    PrintWriter out = new PrintWriter ("newline.srt");
    int i = 0;
    String line = reader.readLine ();
    while (line != null) {
        if (! line.trim ().equals ("")) {
            out.println (line);
        }
        line = reader.readLine ();
    }
    out.close ();
}
----------------------------------------

 public static void main (String [] args) throws FileNotFoundException, IOException {
    Scanner fin = new Scanner(new FileInputStream("line.srt"));
    FileWriter fw = new FileWriter("newline.srt");
    BufferedWriter bw = new BufferedWriter(fw);
    
    while (fin.hasNextLine()) {
        String line = fin.nextLine();
        if (!line.trim().equals("")) {
            bw.write(line);
            bw.newLine();
        }
    }
    fin.close();
    bw.close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
591
0
Gpt3D_Clone591_0.java 1 23
Gpt3D_Clone591_0.java 24 51
----------------------------------------

public static void main (String args []) {
    GSMConnect gsm = new GSMConnect (comPort);
    if (gsm.init ()) {
        try {
            System.out.println ("Initialization Success");
            gsm.connect ();
            Thread.sleep (5000);
            gsm.checkStatus ();
            Thread.sleep (5000);
            gsm.sendMessage ("+91XXXXXXXX", "Trial Success");
            Thread.sleep (1000);
            gsm.hangup ();
            Thread.sleep (1000);
            gsm.closePort ();
            gsm.outCommand ();
            System.exit (1);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("Can't init this card");
    }
}
----------------------------------------

  public static void main(String args[]) {
	GSMConnect gsm = new GSMConnect(comPort);
	boolean initResult = gsm.init();
	if (initResult) {
		try {
			System.out.println("Initialization Success");
			gsm.connect();
			Thread.sleep(5000);
			String status = gsm.checkStatus();
			Thread.sleep(5000);
			gsm.sendMessage("+91XXXXXXXX", "Trial Success", "TXT", "TXT");
			Thread.sleep(1000);
			gsm.hangup();
			Thread.sleep(1000);
			boolean portClosingResult = gsm.closePort();
			if (portClosingResult) {
				gsm.outCommand();
			}
			System.exit(1);
		} catch (Exception e) {
			e.printStackTrace();
		}
	} else {
		System.out.println("Can't init this card");
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
591
1
Gpt3D_Clone591_1.java 1 23
Gpt3D_Clone591_1.java 24 51
----------------------------------------

public static void main (String args []) {
    GSMConnect gsm = new GSMConnect (comPort);
    if (gsm.init ()) {
        try {
            System.out.println ("Initialization Success");
            gsm.connect ();
            Thread.sleep (5000);
            gsm.checkStatus ();
            Thread.sleep (5000);
            gsm.sendMessage ("+91XXXXXXXX", "Trial Success");
            Thread.sleep (1000);
            gsm.hangup ();
            Thread.sleep (1000);
            gsm.closePort ();
            gsm.outCommand ();
            System.exit (1);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("Can't init this card");
    }
}
----------------------------------------

  public static void main (String args []) {
    GSMConnect gsm = new GSMConnect (comPort);
    boolean initResult = gsm.init();
    if (initResult) {
        try {
            System.out.println("Initialization Success");
            boolean connectResult = gsm.connect();
            Thread.sleep(5000);
            String status = gsm.checkStatus();
            Thread.sleep(5000);
            String messageResult = gsm.sendMessage("+91XXXXXXXX", "Trial Success");
            Thread.sleep(1000);
            gsm.hangup();
            Thread.sleep(1000);
            gsm.closePort();
            if (connectResult) {
                gsm.outCommand(status, messageResult);
            }
            System.exit(1);
        } catch (Exception e) {
            e.printStackTrace();
        }
    } else { 
        System.out.println("Can't init this card");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
0
Gpt3D_Clone592_0.java 1 15
Gpt3D_Clone592_0.java 16 40
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    int textIndex;
    java.util.HashMap<Integer, String> textMap = new java.util.HashMap<Integer, String>();
    while ((i = ap.evalXPath ()) != - 1) {
        textIndex = vn.getText ();
        textMap.put(i, vn.toNormalizedString(textIndex));
    }
    java.util.Set<Integer> keys = textMap.keySet();
    for (Integer iKey : keys) {
        System.out.println (vn.toRawString(iKey) + " = " + textMap.get(iKey));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
1
Gpt3D_Clone592_1.java 1 15
Gpt3D_Clone592_1.java 16 38
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    String sTagName;
    String sTextValue;
    int textLength;
    while ((i = ap.evalXPath ()) != - 1) {
        sTagName = vn.toString (i);
        sTextValue = vn.toNormalizedString (vn.getText ());
        textLength = vn.getTextLength ();
        System.out.println(" "+sTagName+" = "+sTextValue+" Length: "+textLength);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
2
Gpt3D_Clone592_2.java 1 15
Gpt3D_Clone592_2.java 16 38
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    String sTagName;
    String sTextValue;
    int offset;
    while ((i = ap.evalXPath ()) != - 1) {
        sTagName = vn.toString (i);
        sTextValue = vn.toNormalizedString (vn.getText ());
        offset = vn.getTextOffset ();
        System.out.println(" "+sTagName+" = "+sTextValue+" Offset: "+offset);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
3
Gpt3D_Clone592_3.java 1 15
Gpt3D_Clone592_3.java 16 36
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    String sTagName;
    String sTextValue;
    while ((i = ap.evalXPath ()) != - 1) {
        sTagName = vn.toString (i);
        sTextValue = vn.toNormalizedString (vn.getText ());
        System.out.println(" " + sTagName + " = " + sTextValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
4
Gpt3D_Clone592_4.java 1 15
Gpt3D_Clone592_4.java 16 38
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    java.util.HashMap<Integer, String> textMap = new java.util.HashMap<Integer, String> ();
    int i = 0;
    while ((i = ap.evalXPath ()) != -1) { 
        textMap.put(i, vn.toNormalizedString(vn.getText ()) );
    }
    java.util.Set<Integer> keys = textMap.keySet();
    for (Integer iKey : keys) {
        System.out.println (vn.toRawString(iKey) + " = " + textMap.get(iKey));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
5
Gpt3D_Clone592_5.java 1 15
Gpt3D_Clone592_5.java 16 35
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    VTDExactTextExtractor reader = new VTDExactTextExtractor (vn);
    int i = 0;
    while (ap.evalXPath () != -1) { 
        reader.updateCursor (i);
        System.out.println (" " + reader.extractFast (i) + " = " + vn.toNormalizedString (vn.getText ()));
        i = ap.evalXPath();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
592
6
Gpt3D_Clone592_6.java 1 15
Gpt3D_Clone592_6.java 16 37
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" " + vn.toRawString (i) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

 public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    AutoPilot ap = new AutoPilot ();
    ap.selectXPath ("//part/*[text()]");
    if (! vg.parseFile ("d:\\xml\\soap.xml", false)) {
        System.out.println ("invalid xml");
        System.exit (0);
    }
    VTDNav vn = vg.getNav ();
    ap.bind (vn);
    java.util.ArrayList<Integer> textIndexList = new java.util.ArrayList<Integer> ();
    int i = 0;
    while ((i = ap.evalXPath ()) != -1) { 
        textIndexList.add(i);
    }
    for (Integer index: textIndexList) {
        System.out.println (vn.toRawString(index) + " = " + vn.toNormalizedString (vn.getText ()));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
593
4
Gpt3D_Clone593_4.java 1 9
Gpt3D_Clone593_4.java 10 20
----------------------------------------

public static void main (String args []) {
    Object sharedObject = new Object ();
    MyClass sampleA = new MyClass ();
    sampleA.myObject = sharedObject;
    MyClass sampleB = new MyClass ();
    sampleB.myObject = sharedObject;
    System.out.println (sampleA.sharedObject == sampleB.sharedObject);
    System.out.println (sampleA == sampleB);
}
----------------------------------------

 public static void main (String args []) {
    Object sharedObject = new Object ();
    MyClass sampleA = new MyClass ();
    MyClass sampleB = new MyClass ();
    sampleA.myObject = sharedObject;
    sampleB.myObject = sharedObject;
    System.out.println (Objects.equals(sampleA.sharedObject, sampleB.sharedObject));
    System.out.println (sampleA == sampleB);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
594
9
Gpt3D_Clone594_9.java 1 12
Gpt3D_Clone594_9.java 13 25
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

  public static int[] front11 (int[] a, int[] b) {
    if (a != null && a.length > 0 && b != null && b.length > 0) {
        return new int[] {a[0], b[0]};
    } else if (a != null && a.length > 0) {
        return new int[] {a[0]};
    } else if (b != null && b.length > 0) {
        return new int[] {b[0]};
    } else {
        return new int[0];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
1
Gpt3D_Clone597_1.java 1 11
Gpt3D_Clone597_1.java 12 31
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 0;
    int index = 0;
    while (index != -1) {
        index = str.indexOf('\n', index);
        if (index != -1) {
            lines++;
            index++;
            while (index < str.length() && str.charAt(index) == '\n') {
                index++;
            }
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
2
Gpt3D_Clone597_2.java 1 11
Gpt3D_Clone597_2.java 12 31
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty()) {
        return 0;
    }
    int lines = 1;
    int index = 0;
    int last_index = 0;
    while(index != -1){
        last_index = index;
        index = str.indexOf('\n', index);
        if (index != -1){
            lines++;
            index++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
3
Gpt3D_Clone597_3.java 1 11
Gpt3D_Clone597_3.java 12 28
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while (pos < str.length()) {
        pos = str.indexOf('\n', pos);
        if (pos != -1) {
            lines++;
            pos++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
4
Gpt3D_Clone597_4.java 1 11
Gpt3D_Clone597_4.java 12 28
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 0;
    for (int i = 0; i < str.length(); i++) {
        if (str.charAt(i) == '\n') {
            lines++;
            while (i < str.length() - 1 && str.charAt(i + 1) == '\n') {
                i++;
            }
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
5
Gpt3D_Clone597_5.java 1 11
Gpt3D_Clone597_5.java 12 27
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 0;
    int pos = 0;
    while ((pos = str.indexOf('\n', pos)) != -1) {
        lines++;
        while (pos + 1 < str.length() && str.charAt(pos + 1) == '\n') {
            pos++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
6
Gpt3D_Clone597_6.java 1 11
Gpt3D_Clone597_6.java 12 25
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 0;
    for (int i = 0; i < str.length(); i++) {
        if (str.charAt(i) == '\n') {
            lines++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
7
Gpt3D_Clone597_7.java 1 11
Gpt3D_Clone597_7.java 12 25
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

 public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 0;
    for (Character ch : str.toCharArray()) {
        if (ch == '\n') {
            lines++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
2
Gpt3D_Clone599_2.java 1 12
Gpt3D_Clone599_2.java 13 30
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

 public static String compress (String text) {
        String result = "";
        int pos = 0;
        while (pos < text.length()) {
            char runChar = text.charAt (pos);
            int runLength = 1;
            pos++;
            while (pos < text.length() && text.charAt (pos) == runChar) {
                runLength++;
                pos++;
            }
            if (runLength == 1) result += "" + runChar;
            else result += "" + runLength + runChar;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
3
Gpt3D_Clone599_3.java 1 12
Gpt3D_Clone599_3.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

  public static String compress (String text) {
        String result = "";
        int loc = 0;
        while (loc < text.length()) {
            char chara = text.charAt(loc);
            int count = 0;
            while (loc < text.length() && chara == text.charAt(loc)) {
                count++;
                loc++;
            }
            if (count == 1) result += "" + chara;
            else result += "" + count + chara;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
4
Gpt3D_Clone599_4.java 1 12
Gpt3D_Clone599_4.java 13 32
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

  public static String compress (String text){
        String result = "";
        int counter = 0;
        while(counter < text.length()){
           char x = text.charAt(counter);
           int occurance = 0;
            while (counter < text.length() && x == text.charAt(counter)){
                occurance++;
                counter++;
            }
            if (occurance == 1)
                result += "" + x;
            else
                result += "" + occurance + x;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
5
Gpt3D_Clone599_5.java 1 12
Gpt3D_Clone599_5.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

  public static String compress (String text) {
        String result = "";
        int position = 0;
        while (position < text.length()) {
            char character = text.charAt(position);
            int number = 0;
            while (position < text.length() && character == text.charAt(position)) {
                number++;
                position++;
            }
            if (number == 1) result += "" + character;
            else result += "" + number + character;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
6
Gpt3D_Clone599_6.java 1 12
Gpt3D_Clone599_6.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

 public static String compress (String text) {
        String result = "";
        int index = 0;
        while (index < text.length()) {
            char c = text.charAt(index);
            int length = 0;
            while (length < text.length() && c == text.charAt(length)) {
                length++;
                index++;
            }
            if (length == 1) result += "" + c;
            else result += "" + length + c;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
7
Gpt3D_Clone599_7.java 1 12
Gpt3D_Clone599_7.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

  public static String compress (String text) {
        String result = "";
        int curr = 0;
        while (curr < text.length()) {
            char letter = text.charAt(curr);
            int occur = 0;
            while (curr < text.length() && letter == text.charAt(curr)) {
                occur++;
                curr++;
            }
            if (occur == 1) result += "" + letter;
            else result += "" + occur + letter;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
8
Gpt3D_Clone599_8.java 1 12
Gpt3D_Clone599_8.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

  public static String compress (String text) {
        String result = "";
        int index = 0;
        while (index < text.length()) {
            char c = text.charAt(index);
            int num = 0;
            while (num < text.length() && c == text.charAt(num)) {
                num++;
                index++;
            }
            if (num == 1) result += "" + c;
            else result += "" + num + c;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
9
Gpt3D_Clone599_9.java 1 12
Gpt3D_Clone599_9.java 13 29
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

 public static String compress (String text) {
        String result = "";
        int index = 0;
        while (index < text.length()) {
            char c = text.charAt(index);
            int count = 0;
            while (index < text.length() && c == text.charAt(index)) {
                count++;
                index++;
            }
            if (count == 1) result += "" + c;
            else result += ""+ count + c;
        }
        return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
59
0
Gpt3D_Clone59_0.java 1 15
Gpt3D_Clone59_0.java 16 30
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        char firstChar = k.charAt (0);
        if (! result.containsKey (firstChar)) {
            result.put (firstChar, new ArrayList < String > ());
        }
        result.get (firstChar).add (k);
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

 public static void main (String [] args) {
    List<String> keywords = Arrays.asList("Apple", "Ananas", "Mango", "Banana", "Beer");
    LinkedHashMap<Character, List<String>> result = new LinkedHashMap<>();
    keywords.forEach(k ->{
        char firstChar = k.charAt(0);
        if(!result.containsKey(firstChar)) {
            result.put(firstChar, new ArrayList<>());
        }
        result.get(firstChar).add(k);
    });
    result.values().forEach(list -> list.sort(Comparator.naturalOrder()));
    System.out.println(result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
59
1
Gpt3D_Clone59_1.java 1 15
Gpt3D_Clone59_1.java 16 30
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        char firstChar = k.charAt (0);
        if (! result.containsKey (firstChar)) {
            result.put (firstChar, new ArrayList < String > ());
        }
        result.get (firstChar).add (k);
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

 public static void main (String [] args) {
    List<String> keywords = Arrays.asList("Apple", "Ananas", "Mango", "Banana", "Beer");
    HashMap<Character, List<String>> result = new HashMap<Character, List<String>>();
    keywords.forEach(k ->{
        char firstChar = k.charAt(0);
        if(!result.containsKey(firstChar)) {
            result.put(firstChar, new ArrayList<>());
        }
        result.get(firstChar).add(k);
    });
    result.values().forEach(list -> Collections.sort(list));
    System.out.println(result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
59
4
Gpt3D_Clone59_4.java 1 15
Gpt3D_Clone59_4.java 16 29
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        char firstChar = k.charAt (0);
        if (! result.containsKey (firstChar)) {
            result.put (firstChar, new ArrayList < String > ());
        }
        result.get (firstChar).add (k);
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

 public static void main (String [] args) {
    List<String> keywords = Arrays.asList("Apple", "Ananas", "Mango", "Banana", "Beer");
    HashMap<Character, List<String>> result = new HashMap<>();
    for(String k : keywords) {
        char firstChar = k.charAt(0);
        if(result.get(firstChar) == null)
            result.put(firstChar, new ArrayList<>());
        result.get(firstChar).add(k);
    }
    result.values().forEach(list -> Collections.sort(list));
    System.out.println(result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
59
5
Gpt3D_Clone59_5.java 1 15
Gpt3D_Clone59_5.java 16 29
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        char firstChar = k.charAt (0);
        if (! result.containsKey (firstChar)) {
            result.put (firstChar, new ArrayList < String > ());
        }
        result.get (firstChar).add (k);
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

 public static void main (String [] args) {
    List<String> keywords = Arrays.asList("Apple", "Ananas", "Mango", "Banana", "Beer");
    TreeMap<Character, List<String>> result = new TreeMap<>();
    for (String k : keywords) {
        char firstChar = k.charAt(0);
        if (result.get(firstChar) == null)
            result.put(firstChar, new ArrayList<>());
        result.get(firstChar).add(k);
    }
    result.values().forEach(list -> list.sort(String::compareTo));
    System.out.println(result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
0
Gpt3D_Clone5_0.java 1 18
Gpt3D_Clone5_0.java 19 42
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        List<Path> filePaths = Files.list (src).collect (Collectors.toList ());
        filePaths.forEach (s -> {
            Path d = dest.resolve (src.relativize (s));
            try {
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) {
                        Files.createDirectory (d);
                        return;
                    }
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
1
Gpt3D_Clone5_1.java 1 18
Gpt3D_Clone5_1.java 19 41
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

 
public static void copyFolder (Path src, Path dest) {
    try (DirectoryStream<Path> stream = Files.newDirectoryStream (src)) {
        stream.forEach (s -> {
            Path d = dest.resolve (src.relativize (s));
            try {
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) {
                        Files.createDirectory (d);
                        return;
                    }
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
2
Gpt3D_Clone5_2.java 1 18
Gpt3D_Clone5_2.java 19 35
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

   public static void copyFolder (Path src, Path dest) {
    try {
        for (Path s : Files.newDirectoryStream (src)) {
            Path d = dest.resolve (src.relativize (s));
            if (Files.isDirectory (s)) {
                if (! Files.exists (d)) Files.createDirectory (d);
                return;
            }
            Files.copy (s, d);
        }
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
1
Gpt3D_Clone600_1.java 1 20
Gpt3D_Clone600_1.java 21 46
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main(String[] args) {
    String str = "AAABBBBCC";
    int length = str.length();
    int count = 1;
    char currentCharacter = str.charAt(0);
    StringBuilder stringBuilder = new StringBuilder();
    for (int i=1; i<length; i++) {
        char newCharacter = str.charAt(i);
        
        if (newCharacter == currentCharacter) {
            count++;
        } else {
            stringBuilder.append(currentCharacter + "" + count);
            currentCharacter = newCharacter;
            count = 1;
        }
    }
    stringBuilder.append(currentCharacter + "" + count);
    System.out.println(stringBuilder.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
2
Gpt3D_Clone600_2.java 1 20
Gpt3D_Clone600_2.java 21 41
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main(String[] args) { 
    String str = "AAABBBBCC";
    char currentChar = str.charAt(0);
    StringBuilder sb = new StringBuilder();
    int charCount = 1; 
    for (int i = 1; i < str.length(); i++) { 
        char c = str.charAt(i); 
        if (c == currentChar) { 
            charCount++; 
        }
        else { 
            sb.append(currentChar + "" + charCount); 
            charCount = 1; 
            currentChar = c; 
        }  
    } 
    sb.append(currentChar + "" + charCount); 
    System.out.println(sb.toString()); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
3
Gpt3D_Clone600_3.java 1 20
Gpt3D_Clone600_3.java 21 40
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main(String[] args) {
    String str = "AAABBBBCC";
    int length = str.length();
    StringBuilder sb = new StringBuilder();
    char currentChar = str.charAt(0);
    int count = 1;
    for (int i = 1; i < length; i++) {
        if (str.charAt(i) == currentChar) {
            count++;
        } else {
            sb.append(currentChar + "" + count);
            currentChar = str.charAt(i);
            count = 1;
        }
    }
    sb.append(currentChar + "" + count);
    System.out.println(sb.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
5
Gpt3D_Clone600_5.java 1 20
Gpt3D_Clone600_5.java 21 41
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main(String[] args) {
    String str = "AAABBBBCC";
    int length = str.length();
    StringBuilder sb = new StringBuilder();
    int count = 1;
    int j = 0;
    for (int i = 1; i < length; i++) {
        if (str.charAt(j) == str.charAt(i)) {
            count++;
        } else {
            sb.append(str.charAt(j) + "" + count);
            j = i;
            count = 1;
        }
    }
    sb.append(str.charAt(j) + "" + count);
    System.out.println(sb.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
6
Gpt3D_Clone600_6.java 1 20
Gpt3D_Clone600_6.java 21 43
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main (String [] args) { 
    String str = "AAABBBBCC"; 
    int length = str.length(); 
    String result=""; 
    int count = 1;
    
    for (int i=0; i<length ;i++){
        if (i == length - 1) {
            result+=str.charAt(i) + "" + count; 
            break;
        }
        if (str.charAt(i) == str.charAt(i + 1)) { 
            count++;
         } 
        else { 
            result+=str.charAt(i) + "" + count;
            count = 1; 
         }
    }
    System.out.println (result); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
7
Gpt3D_Clone600_7.java 1 20
Gpt3D_Clone600_7.java 21 41
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
 
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    
    sb.append(str.charAt(0) + "" + count);
    for (int i=0; i<str.length() - 1; i++){
        if (str.charAt(i) == str.charAt(i + 1)){
            count ++;  
        } else {
            sb.append(str.charAt(i + 1) + "" + count);
            count = 1;
        }
    }
    
    System.out.println (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
8
Gpt3D_Clone600_8.java 1 20
Gpt3D_Clone600_8.java 21 37
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

 public static void main(String[] args) {
    String str = "AAABBBBCC";
    int count = 1;
    StringBuilder builder = new StringBuilder();
    for (int i = 0; i < str.length() - 1; i++) {
        if (str.charAt(i) == str.charAt(i + 1)) {
            count++;
        } else {
            builder.append(str.charAt(i)).append(count);
            count = 1;
        }
    }
    builder.append(str.charAt(str.length() - 1)).append(count);
    System.out.println(builder.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
7
Gpt3D_Clone604_7.java 1 14
Gpt3D_Clone604_7.java 15 35
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

 public static void main (String args []) {
    Scanner inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int count = 0;
        for(int j=0; j < str.length(); j++){
            if(arrlist.get(i) == arrlist.get(j)){
                count++;
            }
        }
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + count);
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
9
Gpt3D_Clone604_9.java 1 14
Gpt3D_Clone604_9.java 15 29
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

 public static void main (String args []) {
    Scanner inp = new Scanner (System.in);
    String str = inp.nextLine ();
    int[] arr = new int[str.length()];
    for (int i = 0; i < str.length(); i++) {
        int freq = 0;
        for (int j = 0; j < str.length(); j++) {
            if (str.charAt(i) == str.charAt(j)) freq++;
        }
        System.out.println("Frequency of " + str.charAt(i) + "  is:   " + freq);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
0
Gpt3D_Clone605_0.java 1 19
Gpt3D_Clone605_0.java 20 39
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int totalLength = string.length ();
        String result = "";
        int startIndex = 0;
        while (startIndex < totalLength){
            int count = 0;
            for (int i = startIndex; i < totalLength; i++){
                if (string.charAt(startIndex) == string.charAt (i)){
                    count ++;
                }
            }
            result = result + string.charAt (startIndex) + count;
            string = string.replaceAll (String.valueOf (string.charAt (startIndex)), "");
            startIndex ++;
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
1
Gpt3D_Clone605_1.java 1 19
Gpt3D_Clone605_1.java 20 39
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int totalLength = string.length ();
        String result = "";
        int beginIndex = 0;
        while (beginIndex < totalLength){
            int counter = 1;
            for (int i = beginIndex+1; i < totalLength ; i++){
                if (string.charAt (beginIndex) == string.charAt (i)){
                    counter ++;
                }
            }
            result = result + string.charAt (beginIndex) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (beginIndex)), "");
            beginIndex ++;
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
2
Gpt3D_Clone605_2.java 1 19
Gpt3D_Clone605_2.java 20 38
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

   public static void main (String [] args){
        String string = "aaabbbbbaccc";
        String result = "";
        int startIndex = 0;
        for (int i = 0; i < string.length (); i ++){
            int counter = 0;
            for (int j = startIndex; j < string.length (); j ++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
            startIndex = 0;
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
3
Gpt3D_Clone605_3.java 1 19
Gpt3D_Clone605_3.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int length = string.length ();
        String result = "";
        for (int i = 0; i < length; i++){
            int count = 0;
            for (int j = 0; j < length; j ++){
                if (string.charAt(i) == string.charAt (j)){
                    count ++;
                }
            }
            result = result + string.charAt(i) + count;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
4
Gpt3D_Clone605_4.java 1 19
Gpt3D_Clone605_4.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int length = string.length ();
        String result = "";
        for (int i = 0; i < length; i ++){
            int counter = 1;
            for (int j = i + 1; j < length; j ++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
5
Gpt3D_Clone605_5.java 1 19
Gpt3D_Clone605_5.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int length = string.length ();
        String result = "";
        for (int i = 0; i < length; i++){
            int counter = 1;
            for (int j = 0; j < length; j++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
6
Gpt3D_Clone605_6.java 1 19
Gpt3D_Clone605_6.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int length = string.length ();
        String result = "";
        for (int i = 0; i < length; i ++){
            int counter = 0;
            for (int j = 0; j < string.length (); j ++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
7
Gpt3D_Clone605_7.java 1 19
Gpt3D_Clone605_7.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        String result = "";
        int length = string.length ();
        for (int i = 0; i < length; i ++){
            int counter = 1;
            for (int j = i + 1; j < length; j ++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
8
Gpt3D_Clone605_8.java 1 19
Gpt3D_Clone605_8.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

  public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int length = string.length ();
        String result = "";
        for (int i = 0; i < length; i++){
            int counter = 1;
            for (int j = i + 1; j < length; j++){
                if (string.charAt(i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt(i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
605
9
Gpt3D_Clone605_9.java 1 19
Gpt3D_Clone605_9.java 20 37
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

 public static void main (String [] args){
        String string = "aaabbbbbaccc";
        int totalLength = string.length ();
        String result = "";
        for (int i = 0; i < totalLength; i ++){
            int counter = 0;
            for (int j = 0; j < totalLength; j ++){
                if (string.charAt (i) == string.charAt (j)){
                    counter ++;
                }
            }
            result = result + string.charAt (i) + counter;
            string = string.replaceAll (String.valueOf (string.charAt (i)), "");
        }
        System.out.println ("result is = " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
1
Gpt3D_Clone606_1.java 1 10
Gpt3D_Clone606_1.java 11 26
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main (String [] args) 
{
    String output = "";
    Multiset <String> wordsMultiset = HashMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(words);
    Iterator <Entry<String>> entrySetIterator = wordsMultiset.entrySet().iterator();
    while (entrySetIterator.hasNext()) {
        Entry <String> item = entrySetIterator.next();
        if (!item.getElement().isEmpty())
            output += item.getCount() + "" + item.getElement();
    }
    System.out.println(output);   
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
2
Gpt3D_Clone606_2.java 1 10
Gpt3D_Clone606_2.java 11 27
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main (String [] args) 
{
    String output = "";
    Multiset <String> wordsMultiset = HashMultiset.create();
    for (char ch : "AAABBBBCC".toCharArray()) {
        wordsMultiset.add(String.valueOf(ch));
    }
    Iterator <Entry<String>> entrySetIterator = wordsMultiset.entrySet().iterator();
    while (entrySetIterator.hasNext()) {
        Entry <String> item = entrySetIterator.next();
        if (!item.getElement().isEmpty())
            output += item.getCount() + "" + item.getElement();
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
3
Gpt3D_Clone606_3.java 1 10
Gpt3D_Clone606_3.java 11 26
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main (String [] args) 
{
    String output = "";
    Multiset <String> wordsMultiset = HashMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
    Iterator <Entry<String>> entrySetIterator = wordsMultiset.entrySet().iterator();
    while (entrySetIterator.hasNext()) {
        Entry <String> item = entrySetIterator.next();
        if (!item.getElement().isEmpty())
            output += item.getCount() + "" + item.getElement();
    }
    System.out.println(output);      
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
6
Gpt3D_Clone606_6.java 1 10
Gpt3D_Clone606_6.java 11 26
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main (String [] args) 
{
    String output = "";
    Multiset <String> wordsMultiset = HashMultiset.create();
    String[] words = "AAABBBBCC".split("");
    for (String word : words) {
        wordsMultiset.add(word);
    }
    for (String string : wordsMultiset.elementSet()) {
        if (!string.isEmpty())
            output += wordsMultiset.count(string) + "" + string;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
607
3
Gpt3D_Clone607_3.java 1 19
Gpt3D_Clone607_3.java 20 39
----------------------------------------

public static void main (String [] args) {
    String string = "aaabbbbbaccc";
    int counter;
    String result = "";
    int i = 0;
    while (i < string.length ()) {
        counter = 1;
        for (int j = i + 1;
        j < string.length (); j ++) {
            System.out.println ("string length =" + string.length ());
            if (string.charAt (i) == string.charAt (j)) {
                counter ++;
            }
        }
        result = result + string.charAt (i) + counter;
        string = string.replaceAll (String.valueOf (string.charAt (i)), "");
    }
    System.out.println ("result is = " + result);
}
----------------------------------------

 public static void main(String [] args){
    String string = "aaabbbbbaccc";
    int counter;
    char ch ;
    String result = "";
    for(int i = 0; i < string.length(); i++){
        ch = string.charAt(i);
        counter = 1;
        for(int j = i + 1; j < string.length(); j++){
            if(string.charAt(i) == string.charAt(j)){
                counter++;
                string = string.substring(0, j) + string.substring(j + 1);
            }
        }
        result = result + ch + counter;
    }
    System.out.println("result is = "+result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
0
Gpt3D_Clone608_0.java 1 10
Gpt3D_Clone608_0.java 11 24
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main(String[] args) {
    String output = "";
    Multiset<String> wordsMultiset = Sets.newConcurrentHashMultiset();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
    Iterator<String> iterator = wordsMultiset.iterator();
    while(iterator.hasNext()) {
        String string = iterator.next();
        if (! string.isEmpty()) output += wordsMultiset.count(string) + "" + string;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
1
Gpt3D_Clone608_1.java 1 10
Gpt3D_Clone608_1.java 11 25
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main(String[] args) { 
    String output = "";
    Multiset<String> wordsMultiset = TreeMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
 
    Iterator<String> iterator = wordsMultiset.iterator();
    while(iterator.hasNext()) {
        String string = iterator.next();
        if (! string.isEmpty()) output += wordsMultiset.count(string) + "" + string;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
3
Gpt3D_Clone608_3.java 1 10
Gpt3D_Clone608_3.java 11 22
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main(String[] args) {
    String output = "";
    Multiset<String> wordsMultiset = ArrayListMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
    for(String word : wordsMultiset.elementSet()) {
        if (!word.isEmpty()) output += wordsMultiset.count(word) + "" + word;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
4
Gpt3D_Clone608_4.java 1 10
Gpt3D_Clone608_4.java 11 22
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main(String[] args) {
    String output = "";
    Multiset<String> wordsMultiset = ConcurrentHashMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
    for(String word : wordsMultiset.elementSet()) {
        if (!word.isEmpty()) output += wordsMultiset.count(word) + "" + word;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
5
Gpt3D_Clone608_5.java 1 10
Gpt3D_Clone608_5.java 11 22
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

  public static void main (String [] args) {
    String output = "";
    Multiset<String> wordsMultiset = LinkedHashMultiset.create();
    String[] words = "AAABBBBCC".split("");
    wordsMultiset.addAll(Arrays.asList(words));
    for (String string : wordsMultiset) {
        if (! string.isEmpty()) output += wordsMultiset.count(string) + "" + string;
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
6
Gpt3D_Clone608_6.java 1 10
Gpt3D_Clone608_6.java 11 21
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

 public static void main(String[] args) {
    String output = "";
    Multiset<String> wordsMultiset = LinkedHashMultiset.create();
    wordsMultiset.addAll(Arrays.asList("AAABBBBCC".split("")));
    for (Entry<String> string : wordsMultiset.entrySet()) {
        if (! string.getElement().isEmpty()) output += string.getCount() + "" + string.getElement();
    }
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
609
0
Gpt3D_Clone609_0.java 1 10
Gpt3D_Clone609_0.java 11 20
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

  public static void main (String [] args) {
    String output = "";
    ImmutableMultiset<String> wordsMultiset = ImmutableMultiset.copyOf("AAABBBBCC".split(""));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
60
0
Gpt3D_Clone60_0.java 1 12
Gpt3D_Clone60_0.java 13 27
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A[c];
    int position = c;
    while (c < A.length) {
        if (x > A[c+1]) {
            x = A[c+1];
            position = c+1;
        }
        c++;
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
60
1
Gpt3D_Clone60_1.java 1 12
Gpt3D_Clone60_1.java 13 26
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A[c];
    int position = c;
    for (int i = c; i < A.length; i++) {
        if (x > A[i] && i != A.length-1) {
            x = A[i];
            position = i;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
60
2
Gpt3D_Clone60_2.java 1 12
Gpt3D_Clone60_2.java 13 26
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A[c];
    int position = c;
    for (int i = c; i < A.length; i++) {
        if (x > A[i] && i != A.length) {
            x = A[i];
            position = i;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
0
Gpt3D_Clone612_0.java 1 11
Gpt3D_Clone612_0.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
       Robot robot = new Robot(); 
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize(); 
       Rectangle captureRect = new Rectangle(0, 0, screenSize.width, screenSize.height); 
       BufferedImage bi = robot.createScreenCapture(captureRect); 
       ImageIO.write(bi, "jpg", new File("/Users/example/Desktop/screenshot.jpg")); 
   } catch (AWTException e) { 
       e.printStackTrace(); 
   } catch (IOException e) { 
       e.printStackTrace(); 
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
1
Gpt3D_Clone612_1.java 1 11
Gpt3D_Clone612_1.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
        Robot robot = new Robot(); 
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize(); 
        Rectangle captureRect = new Rectangle(0, 0, dim.width, dim.height); 
        BufferedImage bi = robot.createScreenCapture(captureRect); 
        ImageIO.write(bi, "jpg", new File("/Users/example/Desktop/images.jpg")); 
    } catch (AWTException e) { 
        e.printStackTrace(); 
    } catch (IOException e) { 
        e.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
2
Gpt3D_Clone612_2.java 1 11
Gpt3D_Clone612_2.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
       Robot robot = new Robot(); 
       Dimension returnDimension = Toolkit.getDefaultToolkit().getScreenSize(); 
       Rectangle rect = new Rectangle(returnDimension); 
       BufferedImage bi = robot.createScreenCapture(rect); 
       ImageIO.write(bi, "JPG", new File("C:/Ascreenshot.jpg")); 
   } catch (AWTException ex) { 
       ex.printStackTrace(); 
   } catch (IOException ex) { 
       ex.printStackTrace(); 
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
3
Gpt3D_Clone612_3.java 1 11
Gpt3D_Clone612_3.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
       Robot robot = new Robot(); 
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize(); 
       Rectangle captureRect = new Rectangle(dim.width, dim.height); 
       BufferedImage bi = robot.createScreenCapture(captureRect); 
       ImageIO.write(bi, "jpg", new File("C:/screenshotCapture.jpg")); 
   } catch (AWTException e) { 
       e.printStackTrace(); 
   } catch (IOException e) { 
       e.printStackTrace(); 
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
4
Gpt3D_Clone612_4.java 1 11
Gpt3D_Clone612_4.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
        Robot robot = new Robot(); 
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize(); 
        Rectangle rect = new Rectangle(dimension); 
        BufferedImage bi = robot.createScreenCapture(rect); 
        ImageIO.write(bi, "JPG", new File("D:/screenshot.jpg")); 
    } catch (AWTException ex) { 
        ex.printStackTrace(); 
    } catch (IOException ex) { 
        ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
612
5
Gpt3D_Clone612_5.java 1 11
Gpt3D_Clone612_5.java 12 25
----------------------------------------

public static void main (String [] args) {
    try {
        Robot robot = new Robot ();
        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));
        ImageIO.write (bi, "jpg", new File ("C:/imageTest.jpg"));
    } catch (AWTException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String [] args) {try { 
        Robot robot = new Robot(); 
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize(); 
        Rectangle rect = new Rectangle(screen.width, screen.height); 
        BufferedImage bi = robot.createScreenCapture(rect); 
        ImageIO.write(bi, "Jpg", new File("C:/myScreenshot.jpg")); 
    } catch (AWTException ex) { 
        ex.printStackTrace(); 
    } catch (IOException ex) { 
        ex.printStackTrace(); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
61
0
Gpt3D_Clone61_0.java 1 12
Gpt3D_Clone61_0.java 13 31
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (true) {
        if (c <= A.length-1) {
            if (x > A [c]) {
                x = A [c];
                position = c;
               }
            c ++;
        }
        else {
            break;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
61
1
Gpt3D_Clone61_1.java 1 12
Gpt3D_Clone61_1.java 13 26
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    int i;
    for (i=c; i<A.length;i++){
        if (x >= A [i]) {
            x = A [i];
            position = i;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
61
2
Gpt3D_Clone61_2.java 1 12
Gpt3D_Clone61_2.java 13 25
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int min=A[c];
    int position = c;
    for(int i=c+1; i<A.length; i++){
        if (A[i] < min){
            min = A[i];
            position = i;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
61
3
Gpt3D_Clone61_3.java 1 12
Gpt3D_Clone61_3.java 13 25
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

 static int findMIN (int [] A, int c) {
    int x = A [c];  
    int pos = c;
    for ( ;c < A.length; c++) {
        if (A[c]<x) {
            x = A[c];
            pos=c;
        }
    }
    return pos;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
626
0
Gpt3D_Clone626_0.java 1 36
Gpt3D_Clone626_0.java 37 67
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    for (int i = 0;
    i < l; i ++) {
        for (int j = 0;
        j < l - 1; j ++) {
            if (a [j] > a [j + 1]) {
                int temp = a [j];
                a [j] = a [j + 1];
                a [j + 1] = temp;
            }
        }
    }
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    for (int i = 0;
    i <= b; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------

 public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    Arrays.sort(a); 
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(); 
    for (int i = 0; i <= b; i++) {
        linkedHashSet.add(a[i]);
    }
    for (Integer el : linkedHashSet) {
        System.out.println(el);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
626
1
Gpt3D_Clone626_1.java 1 36
Gpt3D_Clone626_1.java 37 67
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    for (int i = 0;
    i < l; i ++) {
        for (int j = 0;
        j < l - 1; j ++) {
            if (a [j] > a [j + 1]) {
                int temp = a [j];
                a [j] = a [j + 1];
                a [j + 1] = temp;
            }
        }
    }
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    for (int i = 0;
    i <= b; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------

 public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    Arrays.sort(a); 
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    Vector<Integer> vector = new Vector<Integer>();
    for (int i = 0; i <= b; i++) {
        vector.addElement(a[i]);
    }
    for (Integer el : vector) {
        System.out.println(el);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
626
2
Gpt3D_Clone626_2.java 1 36
Gpt3D_Clone626_2.java 37 67
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    for (int i = 0;
    i < l; i ++) {
        for (int j = 0;
        j < l - 1; j ++) {
            if (a [j] > a [j + 1]) {
                int temp = a [j];
                a [j] = a [j + 1];
                a [j + 1] = temp;
            }
        }
    }
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    for (int i = 0;
    i <= b; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------

 public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    Arrays.sort(a); 
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    HashMap<Integer, Integer> map = new HashMap<>();  
    for (int i = 0; i <= b; i++) {
        if (!map.containsKey(a[i]))
            map.put(a[i], 1);
    }
    for (Integer key : map.keySet())
        System.out.println(key);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
626
3
Gpt3D_Clone626_3.java 1 36
Gpt3D_Clone626_3.java 37 64
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    for (int i = 0;
    i < l; i ++) {
        for (int j = 0;
        j < l - 1; j ++) {
            if (a [j] > a [j + 1]) {
                int temp = a [j];
                a [j] = a [j + 1];
                a [j + 1] = temp;
            }
        }
    }
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    for (int i = 0;
    i <= b; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------

 public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter size of the array");
    int l = Integer.parseInt (br.readLine ());
    int [] a = new int [l];
    for (int i = 0;
    i < l; i ++) {
        System.out.println ("enter a element");
        int el = Integer.parseInt (br.readLine ());
        a [i] = el;
    }
    Arrays.sort(a); 
    int b = 0;
    a [b] = a [0];
    for (int i = 1;
    i < l; i ++) {
        if (a [b] != a [i]) {
            b ++;
            a [b] = a [i];
        }
    }
    for (int i = 0;
    i <= b; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
2
Gpt3D_Clone627_2.java 1 29
Gpt3D_Clone627_2.java 30 62
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

 public static Comparable[] findCommonElements(Comparable[][] collections) {
    Comparable[] arr1 = collections[0];
    Comparable[] arr2 = collections[1];
    Comparable[] arr3 = collections[2];
    Comparable[] minArray;
    Comparable[] maxArray;
    if (arr1.length <= arr2.length && arr1.length <= arr3.length) {
        minArray = arr1;
        maxArray = ArrayUtils.addAll(arr2, arr3);
    } else if (arr2.length <= arr1.length && arr2.length <= arr3.length) {
        minArray = arr2;
        maxArray = ArrayUtils.addAll(arr1, arr3);
    } else {
        minArray = arr3;
        maxArray = ArrayUtils.addAll(arr2, arr1);
    }
    List<Comparable> resultList = new ArrayList<>();
    for (Comparable small : minArray) {
        for (Comparable large : maxArray) {
            if (small.equals(large)) {
                resultList.add(small);
            }
        }
    }
    return resultList.toArray(new Comparable[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
3
Gpt3D_Clone627_3.java 1 29
Gpt3D_Clone627_3.java 30 59
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

 public static Comparable[] findCommonElements(Comparable[][] collections) {
    Comparable[] arr1 = collections[0];
    Comparable[] arr2 = collections[1];
    Comparable[] arr3 = collections[2];
    Comparable[] smallArray;
    Comparable[] bigArray;
    if (arr1.length < arr2.length && arr1.length < arr3.length) {
        smallArray = arr1; bigArray = ArrayUtils.addAll(arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length) {
        smallArray = arr2; bigArray = ArrayUtils.addAll(arr1, arr3);
    } else {
        smallArray = arr3; bigArray = ArrayUtils.addAll(arr1, arr2);
    }
    HashSet<Comparable> intersectionSet = new HashSet<>();
    for (Comparable element : smallArray) {
        for (Comparable element2 : bigArray) {
            if (element.equals(element2)) {
                intersectionSet.add(element);
            }
        }
    }
    return intersectionSet.toArray(new Comparable[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
4
Gpt3D_Clone627_4.java 1 29
Gpt3D_Clone627_4.java 30 57
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

 public static Comparable[] findCommonElements(Comparable[][] collections) {
    Comparable[] arr1 = collections[0];
    Comparable[] arr2 = collections[1];
    Comparable[] arr3 = collections[2];
    if (arr1.length < arr2.length && arr1.length < arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll(arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll(arr1, arr3);
    } else {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll(arr1, arr2);
    }
    HashSet<Comparable> intersectionSet = new HashSet<>();
    for (Comparable hashElement : hashArray) {
        for (Comparable queryElement : queryArray) {
            if (hashElement.equals(queryElement)) {
                intersectionSet.add(hashElement);
            }
        }
    }
    return intersectionSet.toArray(new Comparable[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
5
Gpt3D_Clone627_5.java 1 29
Gpt3D_Clone627_5.java 30 59
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

 public static Comparable[] findCommonElements(Comparable[][] collections) {
    Comparable[] arr1 = collections[0];
    Comparable[] arr2 = collections[1];
    Comparable[] arr3 = collections[2];
    if (arr1.length < arr2.length && arr1.length < arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll(arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll(arr1, arr3);
    } else {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll(arr1, arr2);
    }
    List<Comparable> intersectionList = new ArrayList<>();
    for (Comparable hashElement : hashArray) {
        for (Comparable queryElement : queryArray) {
            if (hashElement.equals(queryElement)) {
                intersectionList.add(hashElement);
            }
        }
    }
    return intersectionList.toArray(new Comparable[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
7
Gpt3D_Clone627_7.java 1 29
Gpt3D_Clone627_7.java 30 58
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

 public static Comparable[] findCommonElements(Comparable[][] collections) {
    Comparable[] arr1 = collections[0];
    Comparable[] arr2 = collections[1];
    Comparable[] arr3 = collections[2];
    HashSet<Comparable> hashSet = new HashSet<>();
    hashSet.addAll(Arrays.asList(arr1));
    List<Comparable> resultList = new ArrayList<>();
    for (Comparable c : arr2) {
        if (hashSet.contains(c)) {
            resultList.add(c);
            hashSet.remove(c);
        }
    }
    for (Comparable c : arr3) {
        if (hashSet.contains(c)) {
            if (!resultList.contains(c)) {
                resultList.add(c);
                hashSet.remove(c);
            }
        }
    }
    return resultList.toArray(new Comparable[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
0
Gpt3D_Clone62_0.java 1 17
Gpt3D_Clone62_0.java 18 44
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    int index1, index2, temp;
    for (int i = 0; i < nums.length; i++) { 
        index1 = (int)(Math.random() * nums.length); 
        index2 = (int)(Math.random() * nums.length); 
        temp = nums[index1]; 
        nums[index1] = nums[index2]; 
        nums[index2] = temp; 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
1
Gpt3D_Clone62_1.java 1 17
Gpt3D_Clone62_1.java 18 43
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    int m; 
    for (int i = nums.length - 1; i > 1; i--) { 
        m = (int)(Math.random() * (i+1)); 
        int temp = nums[m]; 
        nums[m] = nums[i]; 
        nums[i] = temp; 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
2
Gpt3D_Clone62_2.java 1 17
Gpt3D_Clone62_2.java 18 42
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    for (int first = 0; first < nums.length; first++) {  
        int second = (int) (Math.random() * nums.length);  
        int temp = nums[first];  
        nums[first] = nums[second];  
        nums[second] = temp;  
    }  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
3
Gpt3D_Clone62_3.java 1 17
Gpt3D_Clone62_3.java 18 43
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    for (int i = nums.length - 1; i > 0; i--) {
        int j = (int) (Math.random() * (i + 1));
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
4
Gpt3D_Clone62_4.java 1 17
Gpt3D_Clone62_4.java 18 42
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

  public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    for (int i = 0; i < nums.length; ++i) { 
        int rand = (int)(Math.random() * nums.length); 
        int temp = nums[i]; 
        nums[i] = nums[rand]; 
        nums[rand] = temp; 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
5
Gpt3D_Clone62_5.java 1 17
Gpt3D_Clone62_5.java 18 43
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
    for (int i = 0; i < nums.length; i++) 
    { 
        int location = (int) (Math.random() * nums.length); 
        int temp = nums[i]; 
        nums[i] = nums[location]; 
        nums[location] = temp; 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
6
Gpt3D_Clone62_6.java 1 17
Gpt3D_Clone62_6.java 18 35
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    int index1, index2, temp; 
    for (int i = nums.length-1; i > 0; i--)  
    { 
        index1 = (int)(Math.random() * i); 
        index2 = (int)(Math.random() * i); 
        temp = nums[index1]; 
        nums[index1] = nums[index2]; 
        nums[index2] = temp; 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
62
7
Gpt3D_Clone62_7.java 1 17
Gpt3D_Clone62_7.java 18 34
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    Random randomGenerator = new Random ();
    int randomIndex;
    int randomValue;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = randomGenerator.nextInt (nums.length);
        randomValue = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = randomValue;
    }
}
----------------------------------------

 public static void main (String [] args) {
    int [] nums = new int [N];
    for (int i = 0;
    i < nums.length; ++ i) {
        nums [i] = i;
    }
    int randomIndex;
    for (int i = 0;
    i < nums.length; ++ i) {
        randomIndex = (int)(Math.random() * nums.length);
        int temp = nums [randomIndex];
        nums [randomIndex] = nums [i];
        nums [i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
0
Gpt3D_Clone630_0.java 1 7
Gpt3D_Clone630_0.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText("Name: " + name);
    } else {
        timer.stop();
        _textField.setText("No more names");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
1
Gpt3D_Clone630_1.java 1 7
Gpt3D_Clone630_1.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText("The next name is " + name);
    } else {
        timer.stop();
        _textField.setText("End of list");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
2
Gpt3D_Clone630_2.java 1 7
Gpt3D_Clone630_2.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText("Found: " + name);
    } else {
        timer.stop();
        _textField.setText("No further names");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
3
Gpt3D_Clone630_3.java 1 7
Gpt3D_Clone630_3.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText("Current name is " + name);
    } else {
        timer.stop();
        _textField.setText("No more names left");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
4
Gpt3D_Clone630_4.java 1 7
Gpt3D_Clone630_4.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText(name);
    } else {
        timer.stop();
        _textField.setText("Name not found");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
5
Gpt3D_Clone630_5.java 1 7
Gpt3D_Clone630_5.java 8 17
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        String name = w.next().getName();
        _textField.setText("Next name is: " + name);
    } else {
        timer.stop();
        _textField.setText("End Reached");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
6
Gpt3D_Clone630_6.java 1 7
Gpt3D_Clone630_6.java 8 16
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        _textField.setText("Found: " + w.next().getName());
    } else {
        timer.stop();
        _textField.setText("That's all folks!");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
7
Gpt3D_Clone630_7.java 1 7
Gpt3D_Clone630_7.java 8 16
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) { if (w.hasNext()) {
        _textField.setText("Name found " + w.next().getName());
    } else {
        timer.stop();
        _textField.setText("No names found");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
1
Gpt3D_Clone631_1.java 1 9
Gpt3D_Clone631_1.java 10 21
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
    Object o = object;
    while (Long.MAX_VALUE > 0){
        try {
            Thread.sleep(1);
        } catch (InterruptedException e) {
        }
        Long.MAX_VALUE--;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
2
Gpt3D_Clone631_2.java 1 9
Gpt3D_Clone631_2.java 10 21
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
    Object o = object;
     while (Long.MAX_VALUE > 0){
        try {
            Thread.sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
        Long.MAX_VALUE--;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
3
Gpt3D_Clone631_3.java 1 9
Gpt3D_Clone631_3.java 10 21
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
     Object o = object;
     int count = 0;
     while (count++ < Long.MAX_VALUE){
        try {
            Thread.sleep(count);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
4
Gpt3D_Clone631_4.java 1 9
Gpt3D_Clone631_4.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

  public void run () {
    Object o = object;
    do{
        try {
            Thread.sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }while (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
5
Gpt3D_Clone631_5.java 1 9
Gpt3D_Clone631_5.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
     Object o = object;
     for (int i=0; true; i++){
        try {
            Thread.sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
6
Gpt3D_Clone631_6.java 1 9
Gpt3D_Clone631_6.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

  public void run () {
    Object o = object;
    try {
        while (true){
            Thread.sleep(Long.MAX_VALUE);
        }
    } catch (InterruptedException e) {
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
7
Gpt3D_Clone631_7.java 1 9
Gpt3D_Clone631_7.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
    Object o = object;
    for (int i=0; i<Long.MAX_VALUE; i++){
        try {
            Thread.sleep(i);
        } catch (InterruptedException e) {
        }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
8
Gpt3D_Clone631_8.java 1 9
Gpt3D_Clone631_8.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

 public void run () {
     Object o = object;
     while (o != null){
        try {
            Thread.sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
9
Gpt3D_Clone631_9.java 1 9
Gpt3D_Clone631_9.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

  public void run () {
    Object o = object;
    while (true) {
        try {
            Thread.sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
1
Gpt3D_Clone632_1.java 1 9
Gpt3D_Clone632_1.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee leaks = new Leakee(0);
	   checkLeaks(leaks);
	  }
	  while(true){
	    System.out.println("Current Memory Status: " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
2
Gpt3D_Clone632_2.java 1 9
Gpt3D_Clone632_2.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee findLeaks = new Leakee(0);
	   inspections(findLeaks);
	  }
	  while(true){
	    System.out.println("Free memory = " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
3
Gpt3D_Clone632_3.java 1 9
Gpt3D_Clone632_3.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee leakChecking = new Leakee(0);
	   findLeaks(leakChecking);
	  }
	  while(true){
	    System.out.println("Available Memory = " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
4
Gpt3D_Clone632_4.java 1 9
Gpt3D_Clone632_4.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee inspectLeaks = new Leakee(0);
	   inspectLeaks.check();
	  }
	  while(true){
	    System.out.println("Checking free memory = " + 
	    Runtime.getRuntime().freeMemory() + " / " + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
5
Gpt3D_Clone632_5.java 1 9
Gpt3D_Clone632_5.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee investigateMemoryLeaks = new Leakee(0);
	   investigateMemoryLeaks.check();
	  }
	  while(true){
	    System.out.println("Free Memory Status = " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
6
Gpt3D_Clone632_6.java 1 9
Gpt3D_Clone632_6.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee checkLeaking = new Leakee(0);
	   loggingLeaks(checkLeaking);
	  }
	  while(true){
	    System.out.println("Remaining free memory: " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
7
Gpt3D_Clone632_7.java 1 9
Gpt3D_Clone632_7.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee leakageTest = new Leakee(0);
	   leakageTest.check();
	  }
	  while(true){
	    System.out.println("Checking Memory = " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
8
Gpt3D_Clone632_8.java 1 9
Gpt3D_Clone632_8.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee leakedMemory = new Leakee(0);
	   checkResult(leakedMemory);
	  }
	  while(true){
	    System.out.println("Total free memory: " + 
	    Runtime.getRuntime().freeMemory() + "/" + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
632
9
Gpt3D_Clone632_9.java 1 9
Gpt3D_Clone632_9.java 10 22
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (makeMore) {
        new Leakee (0).check ();
    }
    while (true) {
        Thread.sleep (1000);
        System.out.println ("memory=" + Runtime.getRuntime ().freeMemory () + " / " + Runtime.getRuntime ().totalMemory ());
    }
}
----------------------------------------

 public static void main (String [] args) throws InterruptedException {while(makeMore){
	   Leakee memoryLeaksInspection = new Leakee(0);
	   memoryLeaksInspection.check();
	  }
	  while(true){
	    System.out.println("Checking memory=" + 
	    Runtime.getRuntime().freeMemory() + " / " + 
	    Runtime.getRuntime().totalMemory());
	    Thread.sleep(1000);
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
633
0
Gpt3D_Clone633_0.java 1 13
Gpt3D_Clone633_0.java 14 33
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        boolean randomBoolean = Math.random() < 0.5;
        if(randomBoolean){
            zos.write((int) (Math.round(Math.random() * 100) + 20));
        }else{
            zos.write(Integer.toString((int) (Math.round(Math.random() * 100) + 20)).getBytes());
        }
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
633
1
Gpt3D_Clone633_1.java 1 13
Gpt3D_Clone633_1.java 14 33
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 5000000; i ++) {
        boolean randomBoolean = Math.random() < 0.5;
        if(randomBoolean){
            zos.write((int) (Math.round(Math.random() * 100) + 20));
        }else{
            zos.write(Integer.toString((int) (Math.round(Math.random() * 100) + 20)).getBytes());
        }
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
633
2
Gpt3D_Clone633_2.java 1 13
Gpt3D_Clone633_2.java 14 31
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i += 4) {
        zos.write((int) (Math.round(Math.random() * 100) + 20));
        zos.write((int) (Math.round(Math.random() * 100) + 20));
        zos.write((int) (Math.round(Math.random() * 100) + 20));
        zos.write((int) (Math.round(Math.random() * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
0
Gpt3D_Clone634_0.java 1 13
Gpt3D_Clone634_0.java 14 32
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

  public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    GZIPOutputStream gos = new GZIPOutputStream(baos);
    DataOutputStream out = new DataOutputStream(gos);
    out.writeBytes("not too much in here");
    byte[] bytes = baos.toByteArray();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
1
Gpt3D_Clone634_1.java 1 13
Gpt3D_Clone634_1.java 14 31
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

  public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    DataOutputStream out = new DataOutputStream(baos);
    out.writeBytes("not too much in here");
    byte[] bytes = baos.toByteArray();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
2
Gpt3D_Clone634_2.java 1 13
Gpt3D_Clone634_2.java 14 31
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    FileOutputStream fos = new FileOutputStream (new File("big.jar"));
    GZIPOutputStream gos = new GZIPOutputStream (fos);
    ZipOutputStream zos = new ZipOutputStream(gos);
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    String s = "not too much in here";
    byte[] bytes = s.getBytes();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
3
Gpt3D_Clone634_3.java 1 13
Gpt3D_Clone634_3.java 14 32
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

  public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    InputStream is = new ByteArrayInputStream("not too much in here".getBytes());
    byte[] bytes = new byte[1024];
    int len;
    while ((len = is.read(bytes)) > 0) {
        zos.write(bytes, 0, len);
    }
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
4
Gpt3D_Clone634_4.java 1 13
Gpt3D_Clone634_4.java 14 31
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    FileOutputStream fos = new FileOutputStream (new File("big.jar"));
    DeflaterOutputStream dos = new DeflaterOutputStream (fos);
    ZipOutputStream zos = new ZipOutputStream(dos);
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    String s = "not too much in here";
    byte[] bytes = s.getBytes();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
5
Gpt3D_Clone634_5.java 1 13
Gpt3D_Clone634_5.java 14 30
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

  public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    String s = "not too much in here";
    byte[] bytes = s.getBytes();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.finish();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
6
Gpt3D_Clone634_6.java 1 13
Gpt3D_Clone634_6.java 14 30
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.setMethod(ZipOutputStream.DEFLATED);
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    String s = "not too much in here";
    byte[] bytes = s.getBytes();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
7
Gpt3D_Clone634_7.java 1 13
Gpt3D_Clone634_7.java 14 30
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.setLevel(Deflater.NO_COMPRESSION);
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    OutputStreamWriter os = new OutputStreamWriter(zos);
    os.write("not too much in here");
    os.flush();
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
8
Gpt3D_Clone634_8.java 1 13
Gpt3D_Clone634_8.java 14 30
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

  public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.setLevel(Deflater.BEST_COMPRESSION);
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    String s = "not too much in here";
    byte[] bytes = s.getBytes();
    zos.write(bytes);
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
634
9
Gpt3D_Clone634_9.java 1 13
Gpt3D_Clone634_9.java 14 29
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    zos.write ("not too much in here".getBytes ());
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;
    i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

 public static void main (String [] args) throws IOException {
    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File ("big.jar")));
    zos.putNextEntry (new ZipEntry ("resource.txt"));
    OutputStreamWriter os = new OutputStreamWriter(zos);
    os.write("not too much in here");
    os.flush();
    zos.closeEntry ();
    zos.putNextEntry (new ZipEntry ("largeFile.out"));
    for (int i = 0;  i < 10000000; i ++) {
        zos.write ((int) (Math.round (Math.random () * 100) + 20));
    }
    zos.closeEntry ();
    zos.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
0
Gpt3D_Clone63_0.java 1 23
Gpt3D_Clone63_0.java 24 60
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            ExecutorService executor = Executors.newFixedThreadPool(1);
            CompletableFuture<Void> moveScheduledFuture = executor.submit(() ->  move(newIndex).whenComplete((result, exception) -> {
                if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                } else {
                    exception.printStackTrace();
                }
            })).handle((result, exception) -> {
                if (exception == null) {
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
1
Gpt3D_Clone63_1.java 1 23
Gpt3D_Clone63_1.java 24 55
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            ExecutorService executor = Executors.newFixedThreadPool(1);
            CompletableFuture<Void> moveScheduledFuture = executor.submit(() -> move(newIndex)).handle((result, exception) -> {
                if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
2
Gpt3D_Clone63_2.java 1 23
Gpt3D_Clone63_2.java 24 54
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            CompletableFuture<Void> moveScheduledFuture = roll(diceRoll).thenCompose(() -> move(newIndex)).handle((result, exception) -> {
                if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
3
Gpt3D_Clone63_3.java 1 23
Gpt3D_Clone63_3.java 24 55
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            CompletableFuture<Void> moveScheduledFuture = move(newIndex).handle((result, exception) -> {
                if (exception == null) {
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            }); 
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            System.out.println("change turns");
            swapTurns();
            System.out.println(isComputerTurn());
            gameGUI.updateCurrentTurnLabel();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer();
                    gameGUI.updateScore(winner);
                    gameGUI.playAgain();
                } else {
                    System.exit(0);
                }
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
4
Gpt3D_Clone63_4.java 1 23
Gpt3D_Clone63_4.java 24 54
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            CompletableFuture<Void> moveScheduledFuture = submitAsync(() -> move(newIndex)).handle((result, exception) -> {
               if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
5
Gpt3D_Clone63_5.java 1 23
Gpt3D_Clone63_5.java 24 54
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
            ScheduledFuture<Void> moveScheduledFuture = executor.schedule(() -> move(newIndex).whenComplete((result, exception) -> {
                if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                } else {
                    exception.printStackTrace();
                }
            }), 0, TimeUnit.MILLISECONDS);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
6
Gpt3D_Clone63_6.java 1 23
Gpt3D_Clone63_6.java 24 54
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);
            CompletableFuture<Void> moveScheduledFuture = supplyAsync(() -> move(newIndex)).handle((result, exception) -> {
                if (exception == null) {
                    System.out.println("change turns");
                    swapTurns();
                    System.out.println(isComputerTurn());
                    gameGUI.updateCurrentTurnLabel();
                    if (newIndex == GameBoard.WIN_POINT) {
                        boolean restartGame = gameBoard.playAgainOrExit();
                        if (restartGame) {
                            Player winner = gameBoard.getCurrentPlayer();
                            gameGUI.updateScore(winner);
                            gameGUI.playAgain();
                        } else {
                            System.exit(0);
                        }
                    }
                    return null;
                } else {
                    throw invocationTargetException(exception);
                }
            });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
63
7
Gpt3D_Clone63_7.java 1 23
Gpt3D_Clone63_7.java 24 54
----------------------------------------

        public Void call () {
            gameGUI.indicateDiceRoll (diceRoll);
            int newIndex = getPlayerIndexAfterRoll (diceRoll);
            ScheduledFuture < Void > moveScheduledFuture = move (newIndex);
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get ();
            }
            System.out.println ("change turns");
            swapTurns ();
            System.out.println (isComputerTurn ());
            gameGUI.updateCurrentTurnLabel ();
            if (newIndex == GameBoard.WIN_POINT) {
                boolean restartGame = gameBoard.playAgainOrExit ();
                if (restartGame) {
                    Player winner = gameBoard.getCurrentPlayer ();
                    gameGUI.updateScore (winner);
                    gameGUI.playAgain ();
                } else {
                    System.exit (0);
                }
            }
            return null;
}
----------------------------------------

 public Void call() {
            gameGUI.indicateDiceRoll(diceRoll);
            int newIndex = getPlayerIndexAfterRoll(diceRoll);           
            ScheduledFuture<Void> moveScheduledFuture = roll(diceRoll).thenCompose(() -> move(newIndex))
                    .whenComplete((result, exception) -> {
                        if(exception == null) {
                            System.out.println("change turns");
                            swapTurns();
                            System.out.println(isComputerTurn());
                            gameGUI.updateCurrentTurnLabel();
                            if (newIndex == GameBoard.WIN_POINT) {
                                boolean restartGame = gameBoard.playAgainOrExit();
                                if (restartGame) {
                                    Player winner = gameBoard.getCurrentPlayer();
                                    gameGUI.updateScore(winner);
                                    gameGUI.playAgain();
                                } else {
                                    System.exit(0);
                                }
                            }
                        } else {
                            exception.printStackTrace();
                        }
                    });
            if (moveScheduledFuture != null) {
                moveScheduledFuture.get();
            }
            return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
0
Gpt3D_Clone642_0.java 1 12
Gpt3D_Clone642_0.java 13 27
----------------------------------------

private String join (String [] input, String delimiter) {
    StringBuilder sb = new StringBuilder ();
    for (String value : input) {
        sb.append (value);
        sb.append (delimiter);
    }
    int length = sb.length ();
    if (length > 0) {
        sb.setLength (length - delimiter.length ());
    }
    return sb.toString ();
}
----------------------------------------

 private String join (String [] input, String delimiter) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0; i < input.length -1; i++) {
        sb.append(input[i]);
        sb.append(delimiter);
    }
    sb.append(input[input.length-1]);
    int length = sb.length();
    if (length > 0) { 
        sb.setLength(length - delimiter.length());
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
643
4
Gpt3D_Clone643_4.java 1 14
Gpt3D_Clone643_4.java 15 29
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) {
        return "";
    }
    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());
    StringBuilder ret = new StringBuilder (capacityGuess);
    ret.append (objects [0]);
    for (int i = 1;
    i < objects.length; i ++) {
        ret.append (delimiter);
        ret.append (objects [i]);
    }
    return ret.toString ();
}
----------------------------------------

 public static String join (Object [] objects, String delimiter) {
    StringBuilder sb = new StringBuilder();
    if (objects.length == 0) 
        return "";
    else {
        sb.append(objects[0]);
        for (int i = 1; i < objects.length; i++) {
            sb.append(delimiter);
            sb.append(objects[i]);
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
644
1
Gpt3D_Clone644_1.java 1 11
Gpt3D_Clone644_1.java 12 26
----------------------------------------

public static String join (String r [], String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        sb.append (r [i]);
        sb.append (d);
    }
    sb.append (r [i]);
    return sb.toString ();
}
----------------------------------------

public static String join(String[] arr, String delim) {
    if(arr.length == 0) return "";
    
    StringBuilder sb = new StringBuilder();
    
    sb.append(arr[0]);
    for (int i = 1; i < arr.length; i++) {
        sb.append(delim);
        sb.append(arr[i]);
    }
    
    return sb.toString();
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
644
3
Gpt3D_Clone644_3.java 1 11
Gpt3D_Clone644_3.java 12 23
----------------------------------------

public static String join (String r [], String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        sb.append (r [i]);
        sb.append (d);
    }
    sb.append (r [i]);
    return sb.toString ();
}
----------------------------------------

public static String join (String[] r, String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    for (int i = 0; i < r.length - 1; i ++) {
        sb.append(r[i]);
        sb.append(d);
    }
    sb.append(r[r.length-1]);
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
1
Gpt3D_Clone649_1.java 1 5
Gpt3D_Clone649_1.java 6 16
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
  StampedLock lock = new StampedLock();
  long stamp = lock.tryOptimisticRead();
  acquireUninterruptibly();
  System.err.println(max - availablePermits());
  if (!lock.validate(stamp))
    lock.readLock();
  go();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
2
Gpt3D_Clone649_2.java 1 5
Gpt3D_Clone649_2.java 6 15
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
  Semaphore semaphore = new Semaphore(1);
  semaphore.acquireUninterruptibly();
  acquireUninterruptibly();
  System.err.println(max - availablePermits());
  semaphore.release();
  go();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
3
Gpt3D_Clone649_3.java 1 5
Gpt3D_Clone649_3.java 6 16
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
	  try {
	    acquireUninterruptibly();
	  } catch (InterruptedException e) {
	    Thread.currentThread().interrupt();
	  }
	  System.err.println(max - availablePermits());
	  go();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
4
Gpt3D_Clone649_4.java 1 5
Gpt3D_Clone649_4.java 6 16
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
	  while (true) {
	    while(!Thread.holdsLock(this))
	      synchronized(this) {};
	    acquireUninterruptibly();
	    System.err.println(max - availablePermits());
	    go();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
5
Gpt3D_Clone649_5.java 1 5
Gpt3D_Clone649_5.java 6 16
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
	  while(!Thread.holdsLock(this)){
	    synchronized(this) {
	      acquireUninterruptibly();
	      System.err.println(max - availablePermits());
	      go();
	    }
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
6
Gpt3D_Clone649_6.java 1 5
Gpt3D_Clone649_6.java 6 14
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
	  CountDownLatch latch = new CountDownLatch(1);
	  acquireUninterruptibly();
	  System.err.println(max - availablePermits());
	  latch.await();
	  go();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
649
7
Gpt3D_Clone649_7.java 1 5
Gpt3D_Clone649_7.java 6 15
----------------------------------------

        void go () {
            acquireUninterruptibly ();
            System.err.println (max - availablePermits ());
            go ();
}
----------------------------------------

 void go() {
	  try (Lock lock = new ReentrantLock()) {
	    lock.lock();
	    acquireUninterruptibly();
	    System.err.println(max - availablePermits());
	    go();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
0
Gpt3D_Clone64_0.java 1 18
Gpt3D_Clone64_0.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.shiftY(-1);
                break;
            case DOWN :
                draw.shiftY(1);
                break;
            case LEFT :
                draw.shiftX(-1);
                break;
            case RIGHT :
                draw.shiftX(1);
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
1
Gpt3D_Clone64_1.java 1 18
Gpt3D_Clone64_1.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.coordinateShift(0,-1);
                break;
            case DOWN :
                draw.coordinateShift(0,1);
                break;
            case LEFT :
                draw.coordinateShift(-1,0);
                break;
            case RIGHT :
                draw.coordinateShift(1,0);
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
2
Gpt3D_Clone64_2.java 1 18
Gpt3D_Clone64_2.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.goUp();
                break;
            case DOWN :
                draw.goDown();
                break;
            case LEFT :
                draw.goLeft();
                break;
            case RIGHT :
                draw.goRight();
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
3
Gpt3D_Clone64_3.java 1 18
Gpt3D_Clone64_3.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.moveUp();
                break;
            case DOWN :
                draw.moveDown();
                break;
            case LEFT :
                draw.moveLeft();
                break;
            case RIGHT :
                draw.moveRight();
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
4
Gpt3D_Clone64_4.java 1 18
Gpt3D_Clone64_4.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.positionY(draw.getPositionY - 1);
                break;
            case DOWN :
                draw.positionY(draw.getPositionY + 1);
                break;
            case LEFT :
                draw.positionX(draw.getPositionX - 1);
                break;
            case RIGHT :
                draw.positionX(draw.getPositionX + 1);
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
5
Gpt3D_Clone64_5.java 1 18
Gpt3D_Clone64_5.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.increaseHeight();
                break;
            case DOWN :
                draw.decreaseHeight();
                break;
            case LEFT :
                draw.decreaseWidth();
                break;
            case RIGHT :
                draw.increaseWidth();
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
6
Gpt3D_Clone64_6.java 1 18
Gpt3D_Clone64_6.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.changeY(-1);
                break;
            case DOWN :
                draw.changeY(1);
                break;
            case LEFT :
                draw.changeX(-1);
                break;
            case RIGHT :
                draw.changeX(1);
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
7
Gpt3D_Clone64_7.java 1 18
Gpt3D_Clone64_7.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.y--;
                break;
            case DOWN :
                draw.y++;
                break;
            case LEFT :
                draw.x--;
                break;
            case RIGHT :
                draw.x++;
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
8
Gpt3D_Clone64_8.java 1 18
Gpt3D_Clone64_8.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

  public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.offsetY(-1);
                break;
            case DOWN :
                draw.offsetY(1);
                break;
            case LEFT :
                draw.offsetX(-1);
                break;
            case RIGHT :
                draw.offsetX(1);
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
9
Gpt3D_Clone64_9.java 1 18
Gpt3D_Clone64_9.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
        switch (direction) {
            case UP :
                draw.yLocationDecrement();
                break;
            case DOWN :
                draw.yLocationIncrement();
                break;
            case LEFT :
                draw.xLocationDecrement();
                break;
            case RIGHT :
                draw.xLocationIncrement();
                break;
            default :
                break;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
656
3
Gpt3D_Clone656_3.java 1 14
Gpt3D_Clone656_3.java 15 36
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    for (int i = 0;
    i < input.length (); i ++) {
        int k = 0;
        for (; k < list.length (); k ++) {
            if (input.charAt (i) == list.charAt (k)) {
                break;
            }
        }
        if (k == list.length ()) r += input.charAt (i);
    }
    return r;
}
----------------------------------------

 public static String myTrim(String input, String list) {
    String outputString = "";
    for(int i = 0; i < input.length(); i++) {
        int k = 0;
        boolean charNotMatched = true;
        while(k < list.length()) {
            if(input.charAt(i) == list.charAt(k)) {
                charNotMatched = false;
                break;
            }
            k++;
        }
        if(charNotMatched) {
            outputString += input.charAt(i);
        }
    }
    return outputString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
0
Gpt3D_Clone661_0.java 1 12
Gpt3D_Clone661_0.java 13 30
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int output = i;
    System.out.println(output);
    try {
        cb.await();
    } catch (InterruptedException | BrokenBarrierException e) {
        e.printStackTrace();
    }
    output += 3;
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    i = output;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
1
Gpt3D_Clone661_1.java 1 12
Gpt3D_Clone661_1.java 13 30
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int num = i;
    System.out.println(num);
    try {
        cb.await();
    } catch (BrokenBarrierException | InterruptedException e) {
        e.printStackTrace();
    }
    num += 3;
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    i = num;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
2
Gpt3D_Clone661_2.java 1 12
Gpt3D_Clone661_2.java 13 30
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int index = i;
    System.out.println(index);
    try {
        cb.await();
    } catch (InterruptedException | BrokenBarrierException e) {
       e.printStackTrace();
    }
    index += 3;
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    i = index;  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
3
Gpt3D_Clone661_3.java 1 12
Gpt3D_Clone661_3.java 13 26
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int value = i;
    System.out.println(value);
    try {
        cb.await();
        value += 3;
        Thread.sleep(1000);
    } catch (Exception e) {
        e.printStackTrace();
    }
    i = value;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
4
Gpt3D_Clone661_4.java 1 12
Gpt3D_Clone661_4.java 13 26
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int j = i;
    System.out.println(j);
    cb.await();
    j += 3;
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    i = j;  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
5
Gpt3D_Clone661_5.java 1 12
Gpt3D_Clone661_5.java 13 26
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int orig = i;
    System.out.println(orig);
    try {
        cb.await();
        orig += 3;
        Thread.sleep(1000);
    } catch (InterruptedException | BrokenBarrierException e) {
        e.printStackTrace();
    }
    i = orig;  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
6
Gpt3D_Clone661_6.java 1 12
Gpt3D_Clone661_6.java 13 26
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int sum = i;
    System.out.println(sum);
    try {
        cb.await();
        sum = sum +3;
        Thread.sleep(1000);
    } catch (InterruptedException | BrokenBarrierException e) {
        e.printStackTrace();
    }
    i = sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
7
Gpt3D_Clone661_7.java 1 12
Gpt3D_Clone661_7.java 13 25
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    System.out.println(i);
    cb.await();
    int x = i + 3;
    try {
        Thread.sleep(1000);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    i = x;  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
8
Gpt3D_Clone661_8.java 1 12
Gpt3D_Clone661_8.java 13 25
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public void run() {
    System.out.println(i);
    try {
        cb.await();
        i = i + 3;
        Thread.sleep(1000);
    } catch (InterruptedException | BrokenBarrierException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
663
1
Gpt3D_Clone663_1.java 1 20
Gpt3D_Clone663_1.java 21 40
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public synchronized void run () { while (i < 50) {
        synchronized (s) {
            if (s.getState () != 1) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            else {
                System.out.println ("t2 " + i);
                s.setState (2);
                i = i + 3;
                s.notifyAll ();
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
663
3
Gpt3D_Clone663_3.java 1 20
Gpt3D_Clone663_3.java 21 38
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public synchronized void run () {while (i < 50) {
        while (s.getState () != 1) {
            try {
                wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        synchronized (s) {
           if (s.getState () == 1) System.out.println ("t2 " + i);
           s.setState (2);
           i = i + 2;
           notify ();
        }
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
663
4
Gpt3D_Clone663_4.java 1 20
Gpt3D_Clone663_4.java 21 36
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

  public synchronized void run () {synchronized (s) {
        while (s.getState () != 1) {
            try {
                s.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        if (s.getState () == 1) System.out.println ("t2 " + i);
        s.setState (2);
        i = i + 3;
        s.notifyAll ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
663
5
Gpt3D_Clone663_5.java 1 20
Gpt3D_Clone663_5.java 21 36
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public synchronized void run () {synchronized (s) {
        while (s.getState () != 1) {
            try {
                s.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        if (s.getState () == 1) System.out.println ("t2 " + i);
        s.setState (2);
        i = i + 2;
        s.notifyAll ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
1
Gpt3D_Clone665_1.java 1 10
Gpt3D_Clone665_1.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    boolean proceed = true;
    while(proceed) {
        try {
            for (int i = 0; i < 2; i++){
                System.out.println ("tic");
            }
            proceed = false;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
2
Gpt3D_Clone665_2.java 1 10
Gpt3D_Clone665_2.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.println("tic");
        } catch (Exception e) {
            System.err.println("ERROR! - "+e.toString());
            System.out.println("Error Trace - \n" + e.getStackTrace());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
3
Gpt3D_Clone665_3.java 1 10
Gpt3D_Clone665_3.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.println ("tic");
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Exception: " + e);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
4
Gpt3D_Clone665_4.java 1 10
Gpt3D_Clone665_4.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    for (int i = 0; i < 2; i++){
        try {
            System.out.println ("tic");
        } catch (Exception error) {
            System.out.println("Error: " + error);
            throw error;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
5
Gpt3D_Clone665_5.java 1 10
Gpt3D_Clone665_5.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    try {
        for (int i = 0; i < 2; i++){
            System.out.println ("tic");
        }
    } catch (Exception e) {
        String errorMessage = e.getMessage();
        System.err.println("Error: " + errorMessage);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
6
Gpt3D_Clone665_6.java 1 10
Gpt3D_Clone665_6.java 11 21
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    for (int i = 0; i < 2; i++){
        try {
            System.out.println ("tic");
        } catch (Exception error) {
            System.out.println("Error message: " + error.getMessage());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
7
Gpt3D_Clone665_7.java 1 10
Gpt3D_Clone665_7.java 11 21
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.println ("tic");
        } catch (Exception e) {
            System.err.println("Exception!");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
0
Gpt3D_Clone666_0.java 1 10
Gpt3D_Clone666_0.java 11 26
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    for(int i = 0; i<2; i++){
        try{
            if(i == 0){
                System.out.println("tac");
            }
            else if(i == 1){
                System.out.println("tac");
            }
        }catch(Exception e){
            e.getStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
1
Gpt3D_Clone666_1.java 1 10
Gpt3D_Clone666_1.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    int limit = 2;
    int i = 0;
    while(i<limit){
        try{
            System.out.println("tac");
        }catch(Exception e){
            e.getStackTrace();
        }
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
2
Gpt3D_Clone666_2.java 1 10
Gpt3D_Clone666_2.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    try {
        int tac = 0;
        while(tac<2){
            System.out.println("tac");
            tac++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }   
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
3
Gpt3D_Clone666_3.java 1 10
Gpt3D_Clone666_3.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    int i = 0;
    try{
        while(i<2){
            System.out.println("tac");
            i++;
        }
    }catch(Exception e){
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
4
Gpt3D_Clone666_4.java 1 10
Gpt3D_Clone666_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    int loops = 2;
    for(int i=0; i<loops; ){
        try{
            System.out.println("tac");
            i++;
        }catch(Exception e){
            e.getStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
5
Gpt3D_Clone666_5.java 1 10
Gpt3D_Clone666_5.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    try{
        for(int i=1; i<=2; i++){
           if(i%2 == 1){
               System.out.println("tac");
           }
        }
    }catch(Exception e){
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
6
Gpt3D_Clone666_6.java 1 10
Gpt3D_Clone666_6.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    try{
        for(int i=0; i<2;){
            System.out.println("tac");
            i++;
        }
    }catch(Exception e){
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
7
Gpt3D_Clone666_7.java 1 10
Gpt3D_Clone666_7.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    int limit = 2;
    try{
        for(int i = 0; i<limit; i++){
            System.out.println("tac");
        }
    }catch(Exception e){
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
8
Gpt3D_Clone666_8.java 1 10
Gpt3D_Clone666_8.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    try{
        int limit = 2;
        for(int i=1; i<=limit; i++){
            System.out.println("tac");
        }
    }catch(Exception e){
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
1
Gpt3D_Clone667_1.java 1 10
Gpt3D_Clone667_1.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
       int i = 0;
       do {
            try{
                System.out.println("toe");
            i++;
            }catch (Exception e){
                e.printStackTrace();
            }
       }while(i < 2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
3
Gpt3D_Clone667_3.java 1 10
Gpt3D_Clone667_3.java 11 26
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public static void run() {
        try {
            for (int i = 0; i < 2; i++) {
                if (i == 0) {
                    System.out.println("toe");
                } else if (i == 1) {
                    System.out.println("toe");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
4
Gpt3D_Clone667_4.java 1 10
Gpt3D_Clone667_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
        int i = 0;
        while(i < 2) {
            try {
                System.out.println("toe");
            } catch(Exception e) {
                e.printStackTrace();
            }
            i++;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
5
Gpt3D_Clone667_5.java 1 10
Gpt3D_Clone667_5.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public static void run () {
        try {
            for (int i = 0; i < 2; i ++) {
                System.out.println ("toe");
                if (i == 1) {
                    break;
                }
            }
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
6
Gpt3D_Clone667_6.java 1 10
Gpt3D_Clone667_6.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
       int i = 0;
       try {
            for (; i < 2; i++) {
                System.out.println("toe");
            }
        } catch (Exception e) {
        e.printStackTrace();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
669
0
Gpt3D_Clone669_0.java 1 20
Gpt3D_Clone669_0.java 21 42
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public void run() {
    int i = 2;
    while (i < 50) {
        while (s.getState() != 1) {
            try {
                synchronized (s) {
                    s.wait();
                }
            } catch (InterruptedException e) {
                System.err.println(e);
            }
        }
        synchronized (s) {
            System.out.println("t2 " + i);
            s.setState(2);
            i = i + 3;
            s.notifyAll();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
669
1
Gpt3D_Clone669_1.java 1 20
Gpt3D_Clone669_1.java 21 40
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public void run() {
    int i = 2;
    while (i < 50) {
        synchronized (s) {
            while (s.getState () != 1) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
669
2
Gpt3D_Clone669_2.java 1 20
Gpt3D_Clone669_2.java 21 40
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

public void run() {
    int i = 2;
    while (i < 50) {
        synchronized (s) {
            if (s.getState() != 1) {
            		try {
                    s.wait();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            System.out.println("t2 " + i);
            s.setState(2);
            i = i + 3;
            s.notifyAll();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
669
4
Gpt3D_Clone669_4.java 1 20
Gpt3D_Clone669_4.java 21 34
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

 public synchronized void run() {
    int i = 2;
    while (i < 50) {
        while (s.getState() != 1) {
            s.wait();
        }
        System.out.println("t2 " + i);
        s.setState(2);
        i = i + 3;
        s.notifyAll();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
671
0
Gpt3D_Clone671_0.java 1 10
Gpt3D_Clone671_0.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        for (int i = 0; i < 2; i++) {
            System.out.println("tic");
            if (i == 1) {
                System.out.println("tac");
            }
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
671
1
Gpt3D_Clone671_1.java 1 10
Gpt3D_Clone671_1.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        for (int i = 0; i < 2; i++) {
            System.out.println("tic");
            if (i == 1) {
                System.out.println("toe");
            }
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
0
Gpt3D_Clone672_0.java 1 10
Gpt3D_Clone672_0.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            if (i==0) {
                System.out.println ("tac");   
            } else {
                System.out.println("tac");
            }
        } catch (Exception e) {
            e.getStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
1
Gpt3D_Clone672_1.java 1 10
Gpt3D_Clone672_1.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int i = 0;
    do {
        try {
            System.out.println ("tac");
            i++;
        } catch (Exception e) {
            e.getStackTrace ();
        }
    } while (i < 2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
2
Gpt3D_Clone672_2.java 1 10
Gpt3D_Clone672_2.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int i = 1;
    while (i <= 2) {
            try {
            System.out.println ("tac");
            } catch (Exception e) {
                e.getStackTrace ();
            }
            i++;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
3
Gpt3D_Clone672_3.java 1 10
Gpt3D_Clone672_3.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int i = 0;
    while (i < 2) {
            try {
            System.out.println ("tac");
            } catch (Exception e) {
                e.getStackTrace ();
            }
            i++;
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
4
Gpt3D_Clone672_4.java 1 10
Gpt3D_Clone672_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            if (i % 2 == 0) {
            System.out.println ("tac");   
            }
        } catch (Exception e) {
            e.getStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
5
Gpt3D_Clone672_5.java 1 10
Gpt3D_Clone672_5.java 11 21
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.printf("tac %d\n", i);
        } catch (Exception e) {
            e.getStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
0
Gpt3D_Clone673_0.java 1 10
Gpt3D_Clone673_0.java 11 27
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  System.out.print("toe");
		  if (i == 0){
		      System.out.println(" one");
		  } else{
		      System.out.println(" two");
		  }
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
2
Gpt3D_Clone673_2.java 1 10
Gpt3D_Clone673_2.java 11 26
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  if (i == 0) {
		      System.out.println("toe one");
		  } else {
		      System.out.println("toe two");
		  }
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
3
Gpt3D_Clone673_3.java 1 10
Gpt3D_Clone673_3.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      int count = 1;
	      for (int i = 0;
	      i < 2; i++) {
		  String msg = String.format("toe %s", count++);
		  System.out.println(msg);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
4
Gpt3D_Clone673_4.java 1 10
Gpt3D_Clone673_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  String msg = String.format("toe number %s", i+1);
		  System.out.println(msg);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
5
Gpt3D_Clone673_5.java 1 10
Gpt3D_Clone673_5.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  int val = i == 0 ? 1 : 2;
		  System.out.println("toe" + val);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
6
Gpt3D_Clone673_6.java 1 10
Gpt3D_Clone673_6.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  System.out.print("toe" + (i+1) + " ");
	      }
	       System.out.println();
	  } catch (Exception e) {
	      e.printStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
7
Gpt3D_Clone673_7.java 1 10
Gpt3D_Clone673_7.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 0;
	      i < 2; i++) {
		  String msg = "toe" + (i + 1);
		  System.out.println(msg);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
8
Gpt3D_Clone673_8.java 1 10
Gpt3D_Clone673_8.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 1;
	      i <= 2; i++) {
		  System.out.println("toe, iteration: " + i);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
673
9
Gpt3D_Clone673_9.java 1 10
Gpt3D_Clone673_9.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
	  try {
	      for (int i = 1;
	      i <= 2; i++) {
		  System.out.println("toe" + i);
	      }
	  } catch (Exception e) {
	      e.getStackTrace();
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
1
Gpt3D_Clone674_1.java 1 9
Gpt3D_Clone674_1.java 10 23
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

 public static void main (String [] args) {
    State s = new State ();
    Thread thread1 = new Thread (new T1 (s));
    Thread thread2 = new Thread (new T2 (s));
    Thread thread3 = new Thread (new T3 (s));
    thread1.setName ("Thread1");
    thread2.setName ("Thread2");
    thread3.setName ("Thread3");
    thread1.start ();
    thread2.start ();
    thread3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
3
Gpt3D_Clone674_3.java 1 9
Gpt3D_Clone674_3.java 10 20
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (() -> new T1 (s));
    Thread t2 = new Thread (() -> new T2 (s));
    Thread t3 = new Thread (() -> new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
4
Gpt3D_Clone674_4.java 1 9
Gpt3D_Clone674_4.java 10 20
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    State s1 = new State ();
    Thread t1 = new Thread (new T1 (s1));
    t1.start ();
    Thread t2 = new Thread (new T2 (s1));
    t2.start ();
    Thread t3 = new Thread (new T3 (s1));
    t3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
676
1
Gpt3D_Clone676_1.java 1 10
Gpt3D_Clone676_1.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int counter = 0;
        while (counter < 2) {
            System.out.println("tic");
            counter++;
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
676
2
Gpt3D_Clone676_2.java 1 10
Gpt3D_Clone676_2.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int[] arr = {0, 1};
        for (int i : arr) {
            System.out.println("tic");
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
676
3
Gpt3D_Clone676_3.java 1 10
Gpt3D_Clone676_3.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    for (int i = 0; i < 2;) {
        try {
            System.out.println("tic");
            i++;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
676
4
Gpt3D_Clone676_4.java 1 10
Gpt3D_Clone676_4.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    for (int i = 0; i < 2;) {
        try {
            System.out.println("tic");
            i++;
        } catch (Exception e) {
            e.getStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
0
Gpt3D_Clone677_0.java 1 10
Gpt3D_Clone677_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run() {
    int numTries = 2;
    while (numTries > 0) {
        try {
            System.out.print("tac");
            numTries--;
        } catch (Exception e) {
            e.getStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
1
Gpt3D_Clone677_1.java 1 10
Gpt3D_Clone677_1.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.print("tac");
        } catch (Exception e) {
            e.getStackTrace();
        } finally {
            System.out.println(" Done");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
2
Gpt3D_Clone677_2.java 1 10
Gpt3D_Clone677_2.java 11 26
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    int i = 0;
    while (i < 2) {
        try {
            System.out.println("tac");
        } catch (Exception e) {
            e.printStackTrace();
        }
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
3
Gpt3D_Clone677_3.java 1 10
Gpt3D_Clone677_3.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    for (int i = 0; i < 2; i++) {
        try {
            System.out.println("tac");
        } catch (Exception e) {
            e.getStackTrace();
        } finally {
            System.out.println("Done !");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
4
Gpt3D_Clone677_4.java 1 10
Gpt3D_Clone677_4.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run(){
    for(int i=0;i<2;i++){
        try{
            System.out.println("tac");
            if (i == 1)
                break;
        }catch(Exception e){
            e.getStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
6
Gpt3D_Clone677_6.java 1 10
Gpt3D_Clone677_6.java 11 19
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        execute(2);
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
4
Gpt3D_Clone678_4.java 1 10
Gpt3D_Clone678_4.java 11 26
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            if (i == 0) {
                System.out.println ("toe");
            } else {
                System.out.println ("tow");
            }
        } 
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
5
Gpt3D_Clone678_5.java 1 10
Gpt3D_Clone678_5.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        int i = 0;
        while (i < 2) {
            System.out.println ("toe");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
6
Gpt3D_Clone678_6.java 1 10
Gpt3D_Clone678_6.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int i = 0;
    try {
        for (;i<2;) {
            System.out.println("toe");
            i++;
        }
    } catch(Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
7
Gpt3D_Clone678_7.java 1 10
Gpt3D_Clone678_7.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        int i = 1;
        while (i <= 2) {
            System.out.println ("toe");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
8
Gpt3D_Clone678_8.java 1 10
Gpt3D_Clone678_8.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int i;
    try {
        for (i=0;i<2;i++) {
            System.out.println("toe");
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
1
Gpt3D_Clone679_1.java 1 10
Gpt3D_Clone679_1.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 	public void run () {
    try {
        for (int i = 0; i < 2; i ++) {
            if (i == 0) {
                System.out.println ("tic");
            } else {
                System.out.println ("tac");
            }
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
2
Gpt3D_Clone679_2.java 1 10
Gpt3D_Clone679_2.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        for (int i=1; i< 3; i++) {
            if (i == 1) {
                System.out.println("tic");
            } else {
                System.out.println("tac");
            }
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
3
Gpt3D_Clone679_3.java 1 10
Gpt3D_Clone679_3.java 11 25
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        while (true) {
            System.out.println("tic");
            Thread.sleep(1000); //Sleep for 1 second
            if (Thread.activeCount() == 1) {
                break;
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
4
Gpt3D_Clone679_4.java 1 10
Gpt3D_Clone679_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int count = 0;
        while (count < 2) {
            System.out.print("tic ");
            count++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
5
Gpt3D_Clone679_5.java 1 10
Gpt3D_Clone679_5.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int counter = 0;
        while(counter < 2) {
            System.out.println("tic");
            counter++;
        }
    } catch(Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
6
Gpt3D_Clone679_6.java 1 10
Gpt3D_Clone679_6.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int loopCount = 0;
        while (loopCount<2) {
            System.out.println("tic");
            loopCount += 1;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
7
Gpt3D_Clone679_7.java 1 10
Gpt3D_Clone679_7.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        for (int i=0; i <2; i++) {
            System.out.println("tic");
            if (i == 1) {
                i=1-2;
            }
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
8
Gpt3D_Clone679_8.java 1 10
Gpt3D_Clone679_8.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        int round = 0;
        while (round < 2) {
            System.out.println("tic");
            round++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
9
Gpt3D_Clone679_9.java 1 10
Gpt3D_Clone679_9.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run() {
    try {
        for (int i=0; i<2;) {
            System.out.println("tic");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
0
Gpt3D_Clone680_0.java 1 10
Gpt3D_Clone680_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    try {
        int i = 0;
        while (i < 2) {
            System.out.println ("tac");
            i++;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
1
Gpt3D_Clone680_1.java 1 10
Gpt3D_Clone680_1.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int counter = 0;
    try {
        do {
            System.out.println ("tac");
        } while (counter++ < 2);
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
2
Gpt3D_Clone680_2.java 1 10
Gpt3D_Clone680_2.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int counter = 0;
    try {
        while (counter >= 0 && counter < 2) {
            System.out.println ("tac");
            counter++;
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
3
Gpt3D_Clone680_3.java 1 10
Gpt3D_Clone680_3.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

  public void run () {
    int counter = 0;
    try {
        for (; counter < 2;) {
            System.out.println ("tac");
            counter++;
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
4
Gpt3D_Clone680_4.java 1 10
Gpt3D_Clone680_4.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    int counter = 0;
    try {
        while (counter < 2) {
            System.out.println ("tac");
            counter++;
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
5
Gpt3D_Clone680_5.java 1 10
Gpt3D_Clone680_5.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        int i = 2;
        while (i > 0) {
            System.out.println ("tac");
            i--;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
680
6
Gpt3D_Clone680_6.java 1 10
Gpt3D_Clone680_6.java 11 22
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

 public void run () {
    try {
        AtomicInteger counter = new AtomicInteger(0);
        while(counter.getAndIncrement() < 2) {
            System.out.println("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
682
1
Gpt3D_Clone682_1.java 1 19
Gpt3D_Clone682_1.java 20 38
----------------------------------------

public static void main (String [] args) {
    String s = "harikrishna";
    String s2 = "";
    for (int i = 0;
    i < s.length (); i ++) {
        Boolean found = false;
        for (int j = 0;
        j < s2.length (); j ++) {
            if (s.charAt (i) == s2.charAt (j)) {
                found = true;
                break;
            }
        }
        if (found == false) {
            s2 = s2.concat (String.valueOf (s.charAt (i)));
        }
    }
    System.out.println (s2);
}
----------------------------------------

 public static void main (String[] args){
	String s = "harikrishna";
	boolean found;
	String s2="";
	for (int i = 0; i < s.length(); i++) {
	    found = false;
	    for (int j = 0; j < s2.length(); j++) {
		if (s.charAt(i) == s2.charAt(j)) {
		    found = true;
		    break;
		}
	    }
	    if (!found)
		s2 = s2.concat(String.valueOf(s.charAt(i)));
	}
	System.out.println(s2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
0
Gpt3D_Clone684_0.java 1 17
Gpt3D_Clone684_0.java 18 36
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 0;
    int j = 0;
    for (int i = 0; i < arr.length; i ++) {
        int k = 0;
        while (k < arr.length && arr[i].equals(arr[k])) {
            count++;
            k++;
        }
        Number_arr[j] = count;
        j++;
        count = 0;
        i += k - 1;
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
1
Gpt3D_Clone684_1.java 1 17
Gpt3D_Clone684_1.java 18 36
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 0;
    int j = 0;
    String temp = arr[0];
    for (int i = 0; i < arr.length - 1; i ++) {
        if (temp.equals(arr[i+1])){
            count ++;
        } else {
             Number_arr [j] = count + 1;
             j ++;
             count = 0;
             temp = arr[i+1];
        }
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
3
Gpt3D_Clone684_3.java 1 17
Gpt3D_Clone684_3.java 18 39
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int j = 0;
    for (int i = 0; i < arr.length - 1; i ++) {
        int count = 1;
        for (int k = i+1; k < arr.length; k++) {
            if (arr[i].equals(arr[k])) {
                count++;
            } else {
                i = k - 1;
                break;
            }
        }
        Number_arr[j] = count;
        j++;
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
4
Gpt3D_Clone684_4.java 1 17
Gpt3D_Clone684_4.java 18 37
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

  public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 0;
    int j = 0;
    for (int i = 0; i < arr.length; i ++) {
        if (i == 0 || !arr[i].equals(arr[i-1])) {
            count = 0;
            for (int k = 0; k < arr.length; k++) {
                if (arr[i].equals(arr[k])) {
                    count ++;
                }
            }
            Number_arr[j] = count;
            j++;
        }
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
5
Gpt3D_Clone684_5.java 1 17
Gpt3D_Clone684_5.java 18 36
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int j = 0;
    for (int i = 0; i < arr.length - 1; i ++) {
        int count = 0;
        if (arr[i].equals(arr[i+1])) {
            count++;
            while (i < arr.length && arr[i].equals(arr[i+1])) {
                count++;
                i++;
            }
           Number_arr[j] = count;
            j++;
        }
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
6
Gpt3D_Clone684_6.java 1 17
Gpt3D_Clone684_6.java 18 36
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int j = 0;
    for (int i = 0; i < arr.length; i ++) {
        int count = 0;
        String temp = arr[i];
        while (i < arr.length && temp.equals(arr[i])) {
            count++;
            i++;
        }
        Number_arr[j] = count;
        j++;
        i--;
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
7
Gpt3D_Clone684_7.java 1 17
Gpt3D_Clone684_7.java 18 35
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int j = 0;
    for (int i = 0; i < arr.length; i ++) {
        int count = 1;
        for (int k = i + 1; k < arr.length; k ++) {
            if (arr[i].equals(arr[k])) {
                count++;
            }
        }
        Number_arr[j] = count;
        j++;
        i += count - 1;
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
684
8
Gpt3D_Clone684_8.java 1 17
Gpt3D_Clone684_8.java 18 35
----------------------------------------

public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int count = 1;
    int j = 0;
    int k = 0;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (arr [i].equals (arr [i + 1])) count ++;
        else {
            Number_arr [j] = count;
            j ++;
            count = 1;
        }
    }
    Number_arr [j] = count;
    return Number_arr;
}
----------------------------------------

 public static int [] MaxNumber (String [] arr) {
    int [] Number_arr = new int [11];
    int j = 0;
    for (int i = 0; i < arr.length; i ++) {
        int count = 0;
        for (int k = i; k < arr.length; k ++) {
            if (arr[i].equals(arr[k]))
                count++;
        }
        Number_arr[j] = count;
        j++;
        i += count-1;
    }
    return Number_arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
0
Gpt3D_Clone686_0.java 1 9
Gpt3D_Clone686_0.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport vp = (JViewport) e.getSource();
    JComponent comp = (JComponent) vp.getView();
    Point mouseCoordinate = e.getPoint();
    Point viewPosition = vp.getViewPosition();
    int diffX = mouseCoordinate.x - pp.x;
    int diffY = mouseCoordinate.y - pp.y;
    viewPosition.setLocation(diffX, diffY);
    comp.scrollRectToVisible(new Rectangle(viewPosition, vp.getSize()));
    pp.setLocation(mouseCoordinate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
1
Gpt3D_Clone686_1.java 1 9
Gpt3D_Clone686_1.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport view = (JViewport) e.getSource();
    JComponent comp = (JComponent) view.getView();
    Point mouseLoc = e.getPoint();
    Point loc = view.getViewPosition();
    int x = mouseLoc.x - pp.x;
    int y = mouseLoc.y - pp.y;
    loc.translate(x, y);
    comp.scrollRectToVisible(new Rectangle(loc, view.getSize()));
    pp.setLocation(mouseLoc);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
2
Gpt3D_Clone686_2.java 1 9
Gpt3D_Clone686_2.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport viewport = (JViewport) e.getSource();
    JComponent component = (JComponent) viewport.getView();
    Point mousePosition = e.getPoint();
    Point viewLocation = viewport.getViewPosition();
    int xMovement = mousePosition.x - pp.x;
    int yMovement = mousePosition.y - pp.y;
    viewLocation.translate(xMovement, yMovement);
    component.scrollRectToVisible(new Rectangle(viewLocation, viewport.getSize()));
    pp.setLocation(mousePosition);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
3
Gpt3D_Clone686_3.java 1 9
Gpt3D_Clone686_3.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport viewPort = (JViewport) e.getSource();
    JComponent comp = (JComponent) viewPort.getView();
    Point mouseCoords = e.getPoint();
    Point currentPosition = viewPort.getViewPosition();
    int xDifference = mouseCoords.x - pp.x;
    int yDifference = mouseCoords.y - pp.y;
    currentPosition.translate(xDifference, yDifference);
    comp.scrollRectToVisible(new Rectangle(currentPosition, viewPort.getSize()));
    pp.setLocation(mouseCoords);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
4
Gpt3D_Clone686_4.java 1 9
Gpt3D_Clone686_4.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport vp = (JViewport) e.getSource();
    JComponent comp = (JComponent) vp.getView();
    Point mousePoint = e.getPoint();
    Point viewportPosition = vp.getViewPosition();
    int xOffset = mousePoint.x - pp.x;
    int yOffset = mousePoint.y - pp.y;
    viewportPosition.translate(xOffset, yOffset);
    comp.scrollRectToVisible(new Rectangle(viewportPosition, vp.getSize()));
    pp.setLocation(mousePoint);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
5
Gpt3D_Clone686_5.java 1 9
Gpt3D_Clone686_5.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport vp = (JViewport) e.getSource();
    JComponent comp = (JComponent) vp.getView();
    Point mouseCoordinate = e.getPoint();
    Point viewPosition = vp.getViewPosition();
    int xDifference = mouseCoordinate.x - pp.x;
    int yDifference = mouseCoordinate.y - pp.y;
    viewPosition.translate(xDifference, yDifference);
    comp.scrollRectToVisible(new Rectangle(viewPosition, vp.getSize()));
    pp.setLocation(mouseCoordinate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
6
Gpt3D_Clone686_6.java 1 9
Gpt3D_Clone686_6.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport view = (JViewport) e.getSource();
    JComponent component = (JComponent) view.getView();
    Point mouseLoc = e.getPoint();
    Point location = view.getViewPosition();
    int xValue = mouseLoc.x - pp.x;
    int yValue = mouseLoc.y - pp.y;
    location.translate(xValue, yValue);
    component.scrollRectToVisible(new Rectangle(location, view.getSize()));
    pp.setLocation(mouseLoc);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
7
Gpt3D_Clone686_7.java 1 9
Gpt3D_Clone686_7.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport viewPoint = (JViewport) e.getSource();
    JComponent compnt = (JComponent) viewPoint.getView();
    Point mouseP = e.getPoint();
    Point viewPos = viewPoint.getViewPosition();
    int xDist = mouseP.x - pp.x;
    int yDist = mouseP.y - pp.y;
    viewPos.translate(xDist, yDist);
    compnt.scrollRectToVisible(new Rectangle(viewPos, viewPoint.getSize()));
    pp.setLocation(mouseP);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
8
Gpt3D_Clone686_8.java 1 9
Gpt3D_Clone686_8.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource();
    JComponent label = (JComponent) vport.getView();  
    Point mouseCursor = e.getPoint();
    Point displayLocation = vport.getViewPosition();
    int xDifference = mouseCursor.x - pp.x;
    int yDifference = mouseCursor.y - pp.y;
    displayLocation.translate(xDifference, yDifference);
    label.scrollRectToVisible(new Rectangle(displayLocation, vport.getSize()));
    pp.setLocation(mouseCursor);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
9
Gpt3D_Clone686_9.java 1 9
Gpt3D_Clone686_9.java 10 22
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

 public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource();
    JComponent label = (JComponent) vport.getView();
    Point clickPoint = e.getPoint();
    Point currentPoint = vport.getViewPosition();
    int shiftX = clickPoint.x - pp.x;
    int shiftY = clickPoint.y - pp.y;
    currentPoint.translate(shiftX, shiftY);
    label.scrollRectToVisible(new Rectangle(currentPoint, vport.getSize()));
    pp.setLocation(clickPoint);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
1
Gpt3D_Clone688_1.java 1 19
Gpt3D_Clone688_1.java 20 38
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

 public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        if (thisMax < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = new Random().nextInt(thisMax + 1);
        if (rndValue < 0) rndValue = 0;
        ret[i] = rndValue + minimumValue;
        totalLeft -= rndValue;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
2
Gpt3D_Clone688_2.java 1 19
Gpt3D_Clone688_2.java 20 37
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

 public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        int rndValue = (int) Math.floor(Math.random() * range) + thisMin;
        totalLeft -= ret [i] = rndValue;     
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
3
Gpt3D_Clone688_3.java 1 19
Gpt3D_Clone688_3.java 20 37
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

  public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        if (thisMax < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = (int) (rnd.nextDouble() * thisMax);
        ret[i] = rndValue + minimumValue;
        totalLeft -= rndValue;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
4
Gpt3D_Clone688_4.java 1 19
Gpt3D_Clone688_4.java 20 36
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

 public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int rndValue = (int) (rnd.nextGaussian() * thisMax);
        ret[i] = rndValue + minimumValue;
        totalLeft -= rndValue;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
5
Gpt3D_Clone688_5.java 1 19
Gpt3D_Clone688_5.java 20 36
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

  public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int rndValue = rnd.nextInt (thisMax + 1);
        ret[i] = rndValue + minimumValue;
        totalLeft -= rndValue;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
6
Gpt3D_Clone688_6.java 1 19
Gpt3D_Clone688_6.java 20 36
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

  public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        double rndVal = rnd.nextDouble() * (thisMax - minimumValue) + minimumValue;
        ret[i] = (int) Math.round(rndVal);
        totalLeft -= ret[i];
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
7
Gpt3D_Clone688_7.java 1 19
Gpt3D_Clone688_7.java 20 36
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

 public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        double rndVal = rnd.nextGaussian() * (thisMax - minimumValue) + minimumValue;
        ret[i] = (int) Math.round(rndVal);
        totalLeft -= ret[i];
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
689
0
Gpt3D_Clone689_0.java 1 27
Gpt3D_Clone689_0.java 28 56
----------------------------------------

private int [] randNums (int total, int n) {
    final int [] results = new int [n];
    if (total == 0) {
        Arrays.fill (results, 0);
        return results;
    }
    final BigInteger [] rs = new BigInteger [n];
    final BigInteger totalPlus1 = BigInteger.valueOf (total + 1L);
    while (true) {
        for (int i = 0;
        i < n; ++ i) {
            rs [i] = new BigInteger (256, rand);
        }
        BigInteger sum = BigInteger.ZERO;
        for (BigInteger r : rs) {
            sum = sum.add (r);
        }
        if (sum.compareTo (BigInteger.ZERO) == 0) {
            continue;
        }
        for (int i = 0;
        i < n; ++ i) {
            results [i] = sum.mod (rs [i]).mod (totalPlus1).intValue ();
        }
        return results;
    }
}
----------------------------------------

  private int [] randNums (int total, int n) {
    final int [] results = new int [n];
    if (total == 0) {
        Arrays.fill (results, 0);
        return results;
    }
    final int[] rs = new int [n];
    int totalPlus1 = total + 1;
    while (true) {
        for (int i = 0;
        i < n; ++ i) {
            rs [i] = (int) (Math.random() * 1000);
        }
        int sum = 0;
        for (int r : rs) {
            sum = sum + r;
        }
        if (sum == 0) {
            continue;
        }
        for (int i = 0;
        i < n; ++ i) {
            results [i] = (sum % rs [i]) % totalPlus1;
        }
        return results;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
0
Gpt3D_Clone68_0.java 1 11
Gpt3D_Clone68_0.java 12 28
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        int k = dims; 
        while(k>0) { 
            int s = 1 + r.nextInt(3); 
            sizes[dims-k] = s; 
            k--; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
1
Gpt3D_Clone68_1.java 1 11
Gpt3D_Clone68_1.java 12 29
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        //int i=0; 
        while (dims>0) { 
            int s = 1 + r.nextInt(3); 
            sizes[dims-1] = s; 
            dims--; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
2
Gpt3D_Clone68_2.java 1 11
Gpt3D_Clone68_2.java 12 27
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        int j = 0; 
        while(j<dims) { 
            sizes[j] = 1 + r.nextInt(3); 
            j++; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
3
Gpt3D_Clone68_3.java 1 11
Gpt3D_Clone68_3.java 12 26
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        for (int o = 0; o < sizes.length; o++) { 
            int s = r.nextInt((3)+1); 
            sizes[o] = s; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
4
Gpt3D_Clone68_4.java 1 11
Gpt3D_Clone68_4.java 12 26
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        for (int l = 0; l < sizes.length; l++) { 
            int s = r.nextInt(3); 
            sizes[l] = 1 + s; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
5
Gpt3D_Clone68_5.java 1 11
Gpt3D_Clone68_5.java 12 26
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = 1 + r.nextInt(3); 
        int[] sizes = new int[dims]; 
        for (int i = 0; i < sizes.length; i++) { 
            int s = 1 + r.nextInt(3); 
            sizes[i] = s; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
68
6
Gpt3D_Clone68_6.java 1 11
Gpt3D_Clone68_6.java 12 26
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int dims = 1 + r.nextInt (3);
    int [] sizes = new int [dims];
    for (int i = 0;
    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);
    System.out.println ("Creating array with dimensions / sizes: " + Arrays.toString (sizes).replaceAll (", ", "]["));
    Object multiDimArray = Array.newInstance (String.class, sizes);
    fillWithSomeValues (multiDimArray, "pos ", sizes);
    System.out.println (Arrays.deepToString ((Object []) multiDimArray));
}
----------------------------------------

  public static void main(String [] args) { 
        Random r = new Random (); 
        int dims = r.nextInt(3) + 1; 
        int[] sizes = new int[dims]; 
        for (int p = 0; p < sizes.length; p++) { 
            int s = r.nextInt(3)+1; 
            sizes[p] = s; 
        } 
        System.out.println("Creating array with dimensions/sizes: " + Arrays.toString(sizes).replaceAll(", ", "][")); 
        Object multiDimArray = Array.newInstance(String.class, sizes); 
        fillWithSomeValues(multiDimArray, "pos ", sizes); 
        System.out.println(Arrays.deepToString((Object[]) multiDimArray)); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
690
7
Gpt3D_Clone690_7.java 1 12
Gpt3D_Clone690_7.java 13 24
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;
    for (int i = 0;
    i < days; i ++) {
        if (isWeekEnd (result)) {
            i --;
        }
        result = result.plusDays (1);
    }
    return result.toDate ();
}
----------------------------------------

 public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    for (int i = 0; i < days; i++) {
        result = result.plusDays (1);
        if (isWeekEnd (result)) {
            result = getPreviousBusinessDate (result);
        }
    }
    return result.toDate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
0
Gpt3D_Clone691_0.java 1 19
Gpt3D_Clone691_0.java 20 45
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

	public void registerModule (HttpServletRequest req, ModuleType moduleType) {
	 LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. Nothing to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) != null) {
                    processRegistryDal.updateModule (moduleEntityDao);
                } else {
                    processRegistryDal.addNewModule (moduleEntityDao);
                }
            }
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
1
Gpt3D_Clone691_1.java 1 19
Gpt3D_Clone691_1.java 20 45
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty. No information to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. Data insufficient to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {
                    processRegistryDal.updateModule (moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error ("IO Error\n" + ioe.getMessage ());
    } catch (ServletException se) {
        LOGGER.error ("Servlet Error\n" + se.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
2
Gpt3D_Clone691_2.java 1 19
Gpt3D_Clone691_2.java 20 44
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule(HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug("Registering New Module - " + moduleType.name());
    try {
        if (req.getParts().isEmpty() || req.getParameterMap().isEmpty()) {
            LOGGER.error("The rest request is empty. Nothing to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator().get(req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error("The BA object is null. No data to register");
            } else {
                if (processRegistryDal.getModule(moduleType, moduleEntityDao.getId()) == null) {
                    processRegistryDal.addNewModule(moduleEntityDao);
                } else {
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error("IO Exception \n" + ioe.getMessage());
    } catch (ServletException se) {
        LOGGER.error("Servlet Error\n" + se.getMessage());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
3
Gpt3D_Clone691_3.java 1 19
Gpt3D_Clone691_3.java 20 45
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty. Information missing to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. There is nothing to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {
                    processRegistryDal.updateModule (moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error ("IO Exception \n" + ioe.getMessage ());
    } catch (ServletException se) {
        LOGGER.error ("Servlet Error\n" + se.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
4
Gpt3D_Clone691_4.java 1 19
Gpt3D_Clone691_4.java 20 44
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule (HttpServletRequest req, ModuleType moduleType) {
	LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty. No info to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get(req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. There is nothing to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {                                                                                                                                                                        
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
5
Gpt3D_Clone691_5.java 1 19
Gpt3D_Clone691_5.java 20 45
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

	public void registerModule (HttpServletRequest req, ModuleType moduleType) {
	LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. Nothing to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error (" IO Exception \n" + ioe.getMessage ());
    } catch (ServletException se) {
        LOGGER.error ("Servlet Error\n" + se.getMessage ());
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
6
Gpt3D_Clone691_6.java 1 19
Gpt3D_Clone691_6.java 20 44
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule(HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug("Registering New Module - " + moduleType.name());
    try {
        if (req.getParts().isEmpty() || req.getParameterMap().isEmpty()) {
            LOGGER.error("The rest request is empty. Cannot register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator().get(req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error("The BA object is null. Nothing to register");
            } else {
                if (processRegistryDal.getModule(moduleType, moduleEntityDao.getId()) == null) {
                    processRegistryDal.addNewModule(moduleEntityDao);
                } else {
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error("IO Error\n" + ioe.getMessage());
    } catch (ServletException se) {
        LOGGER.error("Servlet Error\n" + se.getMessage());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
7
Gpt3D_Clone691_7.java 1 19
Gpt3D_Clone691_7.java 20 45
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty. No details to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. Data missing to register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {
                    processRegistryDal.updateModule (moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error ("IO Exception\n" + ioe.getMessage ());
    } catch (ServletException se) {
        LOGGER.error ("Servlet Error\n" + se.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
8
Gpt3D_Clone691_8.java 1 19
Gpt3D_Clone691_8.java 20 44
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule(HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts().isEmpty() || req.getParameterMap().isEmpty()) {
            LOGGER.error("The rest request is empty. No data to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator().get(req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error("The BA object is null. Cannot register");
            } else {
                if (processRegistryDal.getModule(moduleType, moduleEntityDao.getId()) == null) {
                    processRegistryDal.addNewModule(moduleEntityDao);
                } else {
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error(" IO Exception \n" + ioe.getMessage());
    } catch (ServletException se) {
        LOGGER.error("Servlet Error\n" + se.getMessage());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
9
Gpt3D_Clone691_9.java 1 19
Gpt3D_Clone691_9.java 20 44
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

 public void registerModule (HttpServletRequest req, ModuleType moduleType) {
	LOGGER.debug ("Registering New Module - " + moduleType.name ());
    try {
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty. Nothing to register");
        } else {
            ModuleEntityDao moduleEntityDao = new ModuleEntityGenerator ().get(req, moduleType);
            if (moduleEntityDao == null) {
                LOGGER.error ("The BA object is null. Cannot register");
            } else {
                if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
                    processRegistryDal.addNewModule (moduleEntityDao);
                } else {                                                                                                                                                                        
                    processRegistryDal.updateModule(moduleEntityDao);
                }
            }
        }
    } catch (IOException ioe) {
        LOGGER.error ("IO Error\n" + ioe.getMessage ());
    } catch (ServletException se) {
        LOGGER.error ("Servlet Error\n" + se.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
0
Gpt3D_Clone692_0.java 1 30
Gpt3D_Clone692_0.java 31 79
----------------------------------------

public void start (final Stage primaryStage) {
    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    ButtonType buttonTypeOne = new ButtonType ("Yes");
    alert.initModality (Modality.NONE);
    ButtonType buttonTypeCancel = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);
    Button b = new Button ("close alert");
    b.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (new Group (b), 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeOne) {
        System.out.println ("one ");
    } else if (result.get () == buttonTypeCancel) {
        System.out.println ("cancel ");
    }
}
----------------------------------------

 public void start (final Stage primaryStage) {
    Alert alert = new Alert (AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    
    ButtonType buttonTypeYes = new ButtonType ("Yes");
    ButtonType buttonTypeNo = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeYes, buttonTypeNo);
    
    HBox hbox = new HBox ();
    Button btnYes = new Button ("Yes");
    btnYes.setPrefSize (50, 20);
    Button btnNo = new Button ("No");
    btnNo.setPrefSize (50, 20);
    hbox.getChildren ().add (btnYes);
    hbox.getChildren ().add (btnNo);
    btnYes.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    btnNo.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (hbox, 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeYes) {
        System.out.println ("Yes ");
    } else if (result.get () == buttonTypeNo) {
        System.out.println ("No ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
1
Gpt3D_Clone692_1.java 1 30
Gpt3D_Clone692_1.java 31 79
----------------------------------------

public void start (final Stage primaryStage) {
    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    ButtonType buttonTypeOne = new ButtonType ("Yes");
    alert.initModality (Modality.NONE);
    ButtonType buttonTypeCancel = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);
    Button b = new Button ("close alert");
    b.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (new Group (b), 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeOne) {
        System.out.println ("one ");
    } else if (result.get () == buttonTypeCancel) {
        System.out.println ("cancel ");
    }
}
----------------------------------------

 public void start (final Stage primaryStage) {
    Alert alert = new Alert (AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    
    ButtonType buttonTypeYes = new ButtonType ("Yes");
    ButtonType buttonTypeNo = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeYes, buttonTypeNo);
    
    VBox vbox = new VBox ();
    Button btnYes = new Button ("Yes");
    btnYes.setPrefSize (50, 20);
    Button btnNo = new Button ("No");
    btnNo.setPrefSize (50, 20);
    vbox.getChildren ().add (btnYes);
    vbox.getChildren ().add (btnNo);
    btnYes.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    btnNo.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (vbox, 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeYes) {
        System.out.println ("Yes ");
    } else if (result.get () == buttonTypeNo) {
        System.out.println ("No ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
2
Gpt3D_Clone692_2.java 1 30
Gpt3D_Clone692_2.java 31 79
----------------------------------------

public void start (final Stage primaryStage) {
    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    ButtonType buttonTypeOne = new ButtonType ("Yes");
    alert.initModality (Modality.NONE);
    ButtonType buttonTypeCancel = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);
    Button b = new Button ("close alert");
    b.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (new Group (b), 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeOne) {
        System.out.println ("one ");
    } else if (result.get () == buttonTypeCancel) {
        System.out.println ("cancel ");
    }
}
----------------------------------------

 public void start (final Stage primaryStage) {
    Alert alert = new Alert (AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    
    ButtonType buttonTypeYes = new ButtonType ("Yes");
    ButtonType buttonTypeNo = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeYes, buttonTypeNo);
    
    Pane pane = new StackPane ();
    Button btnYes = new Button ("Yes");
    btnYes.setPrefSize (50, 20);
    Button btnNo = new Button ("No");
    btnNo.setPrefSize (50, 20);
    pane.getChildren ().add (btnYes);
    pane.getChildren ().add (btnNo);
    btnYes.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    btnNo.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (pane, 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeYes) {
        System.out.println ("Yes ");
    } else if (result.get () == buttonTypeNo) {
        System.out.println ("No ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
3
Gpt3D_Clone692_3.java 1 30
Gpt3D_Clone692_3.java 31 79
----------------------------------------

public void start (final Stage primaryStage) {
    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    ButtonType buttonTypeOne = new ButtonType ("Yes");
    alert.initModality (Modality.NONE);
    ButtonType buttonTypeCancel = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);
    Button b = new Button ("close alert");
    b.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (new Group (b), 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeOne) {
        System.out.println ("one ");
    } else if (result.get () == buttonTypeCancel) {
        System.out.println ("cancel ");
    }
}
----------------------------------------

 public void start (final Stage primaryStage) {
    Alert alert = new Alert (AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    
    ButtonType buttonTypeYes = new ButtonType ("Yes");
    ButtonType buttonTypeNo = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeYes, buttonTypeNo);
    
    FlowPane flowPane = new FlowPane ();
    Button btnYes = new Button ("Yes");
    btnYes.setPrefSize (50, 20);
    Button btnNo = new Button ("No");
    btnNo.setPrefSize (50, 20);
    flowPane.getChildren ().add (btnYes);
    flowPane.getChildren ().add (btnNo);
    btnYes.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    btnNo.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (flowPane, 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeYes) {
        System.out.println ("Yes ");
    } else if (result.get () == buttonTypeNo) {
        System.out.println ("No ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
4
Gpt3D_Clone692_4.java 1 30
Gpt3D_Clone692_4.java 31 78
----------------------------------------

public void start (final Stage primaryStage) {
    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    ButtonType buttonTypeOne = new ButtonType ("Yes");
    alert.initModality (Modality.NONE);
    ButtonType buttonTypeCancel = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);
    Button b = new Button ("close alert");
    b.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (new Group (b), 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeOne) {
        System.out.println ("one ");
    } else if (result.get () == buttonTypeCancel) {
        System.out.println ("cancel ");
    }
}
----------------------------------------

 public void start (final Stage primaryStage) {
    Alert alert = new Alert (AlertType.CONFIRMATION);
    alert.setTitle ("Title");
    alert.setHeaderText ("Some Text");
    alert.setContentText ("Choose your option.");
    
    ButtonType buttonTypeYes = new ButtonType ("Yes");
    ButtonType buttonTypeNo = new ButtonType ("No", ButtonBar.ButtonData.CANCEL_CLOSE);
    alert.getButtonTypes ().setAll (buttonTypeYes, buttonTypeNo);
    
    GridPane buttonsGridPane = new GridPane ();
    Button btnYes = new Button ("Yes");
    Button btnNo = new Button ("No");
    buttonsGridPane.add (btnYes, 0, 0);
    buttonsGridPane.add (btnNo, 1, 0);
    alert.getDialogPane ().setContent (buttonsGridPane);
    btnYes.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    btnNo.setOnAction ((ActionEvent event) -> {
        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {
            System.out.println ("bt = " + bt);
            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {
                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);
                cancelButton.fire ();
                break;
            }
        }
    });
    final Scene scene = new Scene (buttonsGridPane, 400, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Optional < ButtonType > result = alert.showAndWait ();
    if (result.get () == buttonTypeYes) {
        System.out.println ("Yes ");
    } else if (result.get () == buttonTypeNo) {
        System.out.println ("No ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
693
0
Gpt3D_Clone693_0.java 1 11
Gpt3D_Clone693_0.java 12 21
----------------------------------------

public ResponseEntity < ? > match (@PathVariable
String matchId,@RequestBody
String body, HttpServletRequest request, HttpServletResponse response) {
    Product p;
    try {
        p = service.getProduct (request.getProductId ());
    } catch (Exception ex) {
        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity (p, HttpStatus.OK);
}
----------------------------------------

 public ResponseEntity<?> match(@PathVariable long matchId, @RequestBody Product p, HttpServletRequest request, HttpServletResponse response) {
    try {
        service.updateProductByMatchId(matchId, p);
    } catch (Exception ex) {
        return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity(p, HttpStatus.OK);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
694
0
Gpt3D_Clone694_0.java 1 11
Gpt3D_Clone694_0.java 12 25
----------------------------------------

public ResponseEntity < ? > match (@PathVariable
String matchId,@RequestBody
String body, HttpServletRequest request, HttpServletResponse response) {
    Product p;
    try {
        p = service.getProduct (request.getProductId ());
    } catch (Exception ex) {
        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity (p, HttpStatus.OK);
}
----------------------------------------

 public ResponseEntity<?>match(@PathVariable String matchId,@RequestBody String body, HttpServletRequest request, HttpServletResponse response) {
        Product p;
        try{
            p = service.getProduct (request.getProductId ());
            if(p == null){
                return new ResponseEntity<>(HttpStatus.NOT_FOUND);
             }
            return new ResponseEntity (p, HttpStatus.OK);
        }catch (Exception ex){
            return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
694
1
Gpt3D_Clone694_1.java 1 11
Gpt3D_Clone694_1.java 12 24
----------------------------------------

public ResponseEntity < ? > match (@PathVariable
String matchId,@RequestBody
String body, HttpServletRequest request, HttpServletResponse response) {
    Product p;
    try {
        p = service.getProduct (request.getProductId ());
    } catch (Exception ex) {
        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity (p, HttpStatus.OK);
}
----------------------------------------

 public ResponseEntity<?> match (@PathVariable String matchId,@RequestBody String body, HttpServletRequest request, HttpServletResponse response) {
     try {
        Product p = service.getProduct (request.getProductId ());
        if(p == null){
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
        return new ResponseEntity(p, HttpStatus.OK);
        } catch (Exception ex) {
            return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
694
3
Gpt3D_Clone694_3.java 1 11
Gpt3D_Clone694_3.java 12 23
----------------------------------------

public ResponseEntity < ? > match (@PathVariable
String matchId,@RequestBody
String body, HttpServletRequest request, HttpServletResponse response) {
    Product p;
    try {
        p = service.getProduct (request.getProductId ());
    } catch (Exception ex) {
        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity (p, HttpStatus.OK);
}
----------------------------------------

 public ResponseEntity<?> match(@PathVariable String matchId,@RequestBody String body, HttpServletRequest request, HttpServletResponse response){
    try{
        Product p = service.getProduct (request.getProductId ());
        if(p == null)
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        return new ResponseEntity<Product>(p, HttpStatus.OK);
    } catch (Exception ex){
        return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
694
4
Gpt3D_Clone694_4.java 1 11
Gpt3D_Clone694_4.java 12 23
----------------------------------------

public ResponseEntity < ? > match (@PathVariable
String matchId,@RequestBody
String body, HttpServletRequest request, HttpServletResponse response) {
    Product p;
    try {
        p = service.getProduct (request.getProductId ());
    } catch (Exception ex) {
        return new ResponseEntity < String > (HttpStatus.BAD_REQUEST);
    }
    return new ResponseEntity (p, HttpStatus.OK);
}
----------------------------------------

 public ResponseEntity<?> match(@PathVariable String matchId,@RequestBody String body, HttpServletRequest request, HttpServletResponse response) {
        try {
            Product p = service.getProduct(request.getProductId());
            if (p != null) 
                return new ResponseEntity<Product>(p, HttpStatus.OK);
        } catch (Exception ex) {
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
        return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
695
5
Gpt3D_Clone695_5.java 1 14
Gpt3D_Clone695_5.java 15 33
----------------------------------------

static int [] sort (int arr []) {
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = i;
        j < arr.length; j ++) {
            if (arr [j] < arr [i]) {
                int temp = arr [i];
                arr [i] = arr [j];
                arr [j] = temp;
            }
        }
    }
    return arr;
}
----------------------------------------

static int [] sort (int arr []) {
    for (int i = 0;
    i < arr.length; i ++) {
        int minIdx = i;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [j] < arr [minIdx]) {
                minIdx = j;
            }
        }
        int temp = arr [i];
                arr [i] = arr [minIdx];
                arr [minIdx] = temp;
    }
    return arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
0
Gpt3D_Clone6_0.java 1 7
Gpt3D_Clone6_0.java 8 18
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.normalize().toString().substring(strAbsPathSrc.length()));
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdirs();
    Files.copy(file, dstFile.toPath());
    FileTime time = Files.getLastModifiedTime(file);
    Files.setLastModifiedTime(dstFile.toPath(), time);
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
1
Gpt3D_Clone6_1.java 1 7
Gpt3D_Clone6_1.java 8 20
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.getRoot().relativize(strAbsPathSrc));
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdirs();
    CopyOption[] options = new CopyOption[]{
        StandardCopyOption.COPY_ATTRIBUTES,
        StandardCopyOption.REPLACE_EXISTING
    };
    Files.copy(file, dstFile.toPath(), options);
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
2
Gpt3D_Clone6_2.java 1 7
Gpt3D_Clone6_2.java 8 17
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.toString().replaceFirst(strAbsPathSrc, ""));
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdirs();
    Files.copy(file, dstFile.toPath());
    dstFile.setReadOnly();
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
3
Gpt3D_Clone6_3.java 1 7
Gpt3D_Clone6_3.java 8 19
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.getFileName().toString().substring(strAbsPathSrc.length()));
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdirs();
    CopyOption[] options = new CopyOption[]{
        StandardCopyOption.ATOMIC_MOVE
    };
    Files.copy(file, dstFile.toPath(), options);
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
4
Gpt3D_Clone6_4.java 1 7
Gpt3D_Clone6_4.java 8 16
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.getFileName());
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdir();
    Files.copy(file, dstFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
6
5
Gpt3D_Clone6_5.java 1 7
Gpt3D_Clone6_5.java 8 16
----------------------------------------

            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
                File dstFile = new File (strAbsPathDest + file.toAbsolutePath ().toString ().substring (strAbsPathSrc.length ()));
                if (dstFile.exists ()) return FileVisitResult.CONTINUE;
                if (! dstFile.getParentFile ().exists ()) dstFile.getParentFile ().mkdirs ();
                Files.copy (file, dstFile.toPath ());
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
    File dstFile = new File(strAbsPathDest + file.toString().substring(strAbsPathSrc.length()));
    if(dstFile.exists()) return FileVisitResult.CONTINUE;
    if (!dstFile.getParentFile().exists()) dstFile.getParentFile().mkdirs();
    Files.move(file, dstFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
    return FileVisitResult.CONTINUE;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
702
1
Gpt3D_Clone702_1.java 1 23
Gpt3D_Clone702_1.java 24 47
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

 public static void printTable (String [] countries, int [] populations) {if (countries.length > 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        //for the length of the input array, find the longest value
        for (int i = 0; i < countries.length; i++) {
            //for the current country's name, save its length
            int currentNameLength = countries[i].length();
            //for the current population, save its length
            int currentPopLength = String.valueOf(populations[i]).length();
            //if the current name is longer than the longest recorded one, reassign the longest name length variable
            longestNameInput = (longestNameInput < currentNameLength) ? currentNameLength : longestNameInput;
            //if the current population is larger than the longest recorded one, reassign the longest population length variable
            longestPopInput = (longestPopInput < currentPopLength) ? currentPopLength : longestPopInput;
        }
        //for the length of the input array, print the values
        for (int i = 0; i < countries.length; i++) {
            System.out.print(String.format("%-" + longestNameInput + "s", countries[i]));
            System.out.print(" | ");
            System.out.println(String.format("%" + longestPopInput + "s", populations[i]));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
702
2
Gpt3D_Clone702_2.java 1 23
Gpt3D_Clone702_2.java 24 43
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

 public static void printTable (String [] countries, int [] populations) {if (countries.length > 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 1; 
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
         }
        for (int i = 0; 
        i < countries.length; i ++) {
            System.out.printf ("%-" + longestNameInput + "s", countries [i]);     
            System.out.print (" | ");
            System.out.println (String.format ("%" + longestPopInput + "s", populations[i])); 
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
702
3
Gpt3D_Clone702_3.java 1 23
Gpt3D_Clone702_3.java 24 43
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

 public static void printTable (String [] countries, int [] populations) {if (countries.length > 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
           int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength >= longestNameInput) longestNameInput = countLength;
            if (popLength >= longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (String.format ("%-"+ longestNameInput +"s", countries [i]));
            System.out.print (" | ");            
            System.out.println (String.format ("%"+ longestPopInput +"s", populations [i]));            
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
702
4
Gpt3D_Clone702_4.java 1 23
Gpt3D_Clone702_4.java 24 45
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

 public static void printTable (String [] countries, int [] populations) {if (countries.length > 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        //finding the longest length of the elements presents in the given input
        for (int i = 0;
        i < countries.length; i++) {
            int countLength = countries[i].length();
            int popLength = String.valueOf(populations[i]).length();
            longestNameInput = (longestNameInput < countLength) ? countLength : longestNameInput;
            longestPopInput = (longestPopInput < popLength) ? popLength : longestPopInput;
        }
        //printing the elements in the tabular format
        for (int i = 0;
        i < countries.length; i++) {
            System.out.print(String.format("%-" + longestNameInput + "s", countries[i]));
            System.out.print(" | ");
            System.out.println(String.format("%" + longestPopInput + "s", populations[i]));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
703
7
Gpt3D_Clone703_7.java 1 9
Gpt3D_Clone703_7.java 10 22
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0; i < countries.length; i++) {
        String countryName = String.format("%-"+maxCountryLength+"s", countries[i]);
        String populationValue = String.format("%"+maxPopulationLength+"d", populations[i]); 
     
        System.out.println(countryName + " | "+populationValue);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
0
Gpt3D_Clone704_0.java 1 23
Gpt3D_Clone704_0.java 24 43
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

  public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
    int maxNameLength = 0;
    int maxPopLength = 0;
    for (int i = 0; i < countries.length; i++) {
        int nameLength = countries[i].length();
        int populationLength = String.valueOf(populations[i]).length();
        if (nameLength > maxNameLength) maxNameLength = nameLength;
        if (populationLength > maxPopLength) maxPopLength = populationLength;
    }
    for (int i = 0; i < countries.length; i++) {
        String tempPreString = String.format("%-" + (maxNameLength+3) + "s | ", countries[i]);
        String tempPostString = String.format("%" + (maxPopLength + 1) + "d \n", populations[i]);
        System.out.print(tempPreString);
        System.out.print(tempPostString);
    }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
1
Gpt3D_Clone704_1.java 1 23
Gpt3D_Clone704_1.java 24 43
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

  public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
      int longestNameInput = 0;
      int longestPopInput = 0;
      for (int i = 0; i < countries.length; i++) {
        int countLength = countries[i].length();
        int popLength = String.valueOf(populations[i]).length();
        if (countLength > longestNameInput) longestNameInput = countLength;
        if (popLength > longestPopInput) longestPopInput = popLength;
      }
      for (int i = 0; i < countries.length; i++) {
        String tempPreString = String.format("%-" + longestNameInput + "s | ", countries[i]);
        String tempPostString = String.format("%" + (longestPopInput + 1) + "d ", populations[i]);
        System.out.print(tempPreString);
        System.out.println(tempPostString);
      }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
4
Gpt3D_Clone704_4.java 1 23
Gpt3D_Clone704_4.java 24 41
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

  public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = 0;
        int longestPopInput = 0;
        for (int i = 0; i < countries.length; i++) {
            int countLength = countries[i].length();
            int popLength = Integer.toString(populations[i]).length();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0; i < countries.length; i++) {
            String output = String.format("%-" + longestNameInput + "s | %" + longestPopInput + "d", countries[i], populations[i]);
            System.out.println(output);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
6
Gpt3D_Clone704_6.java 1 23
Gpt3D_Clone704_6.java 24 42
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

  public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = 0;
        int longestPopInput = 0;
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.printf("%-" + (longestNameInput+3) + "s | %" + (longestPopInput+1) + "d\n", countries[i], populations[i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
7
Gpt3D_Clone704_7.java 1 23
Gpt3D_Clone704_7.java 24 42
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

  public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            longestNameInput = Math.max (longestNameInput, countLength);
            longestPopInput = Math.max (longestPopInput, popLength);
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.printf("%-" + (longestNameInput+3) + "s | %" + (longestPopInput+1)+ "d\n", countries[i], populations[i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
8
Gpt3D_Clone704_8.java 1 23
Gpt3D_Clone704_8.java 24 40
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

 public static void printTable(String[] countries, int[] populations) {
    if (countries.length != 0) {
        int maxNameInput = 0;
        int maxPopInput = 0;
        for (int i = 0; i < countries.length; i++) {
            int countLength = countries[i].length();
            int popLength = String.valueOf(populations[i]).length();
            if (countLength > maxNameInput) maxNameInput = countLength;
            if (popLength > maxPopInput) maxPopInput = popLength;
        }
        for (int i = 0; i < countries.length; i++) {
            System.out.printf("%-" + (maxNameInput + 3) + "s | %" + (maxPopInput + 1) + "d\n", countries[i], populations[i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
2
Gpt3D_Clone705_2.java 1 9
Gpt3D_Clone705_2.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 
public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Arrays.stream(countries).map(String::length).max().orElseGet(() -> defaultLength);
    int maxPopulationLength = Arrays.stream(populations).mapToObj(Integer::toString).map(String::length).max().orElseGet(() -> defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
3
Gpt3D_Clone705_3.java 1 9
Gpt3D_Clone705_3.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 
public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Arrays.stream(countries).max(Comparator.comparingInt(String::length)).map(String::length).orElse(defaultLength);
    int maxPopulationLength = Arrays.stream(populations).mapToObj(Integer::toString).max(Comparator.comparingInt(String::length)).map(String::length).orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
4
Gpt3D_Clone705_4.java 1 9
Gpt3D_Clone705_4.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Stream.of(countries).mapToInt(String::length).max().orElse(defaultLength);
    int maxPopulationLength = Stream.of(populations).mapToObj(Integer::toString).mapToInt(String::length).max().orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.printf("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
6
Gpt3D_Clone705_6.java 1 9
Gpt3D_Clone705_6.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 
public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Stream.of(countries).mapToInt(String::length).max().orElse(defaultLength);
    int maxPopulationLength = Stream.of(populations).map(Integer::toString).mapToInt(String::length).max().orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
7
Gpt3D_Clone705_7.java 1 9
Gpt3D_Clone705_7.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 
public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Stream.of(countries).map(String::length).max(Integer::compareTo).orElse(defaultLength);
    int maxPopulationLength = Stream.of(populations).mapToObj(Integer::toString).map(String::length).max(Integer::compareTo).orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
8
Gpt3D_Clone705_8.java 1 9
Gpt3D_Clone705_8.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

 
public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Arrays.stream(countries).map(String::length).max().orElse(defaultLength);
    int maxPopulationLength = Arrays.stream(populations).mapToObj(Integer::toString).map(String::length).max().orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
9
Gpt3D_Clone705_9.java 1 9
Gpt3D_Clone705_9.java 10 19
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable(String[] countries, int[] populations) {
    int defaultLength = 10;
    int maxCountryLength = Arrays.stream(countries).mapToInt(String::length).max().orElse(defaultLength);
    int maxPopulationLength = Arrays.stream(populations).mapToObj(Integer::toString).mapToInt(String::length).max().orElse(defaultLength);
    for (int i = 0; i < countries.length; i++) {
        System.out.printf("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
0
Gpt3D_Clone706_0.java 1 16
Gpt3D_Clone706_0.java 17 35
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

 public boolean equals (Object obj) {
    if (obj == null || !(obj instanceof Person)) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (!this.name.equals(other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
1
Gpt3D_Clone706_1.java 1 16
Gpt3D_Clone706_1.java 17 35
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

 public boolean equals (Object obj) {
    if (obj == null || obj.getClass() != Person.class) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (!this.name.equals(other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
2
Gpt3D_Clone706_2.java 1 16
Gpt3D_Clone706_2.java 17 35
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

 public boolean equals (Object obj) {
    if (obj == null || obj.getClass() != getClass()) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (!this.name.equals(other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
3
Gpt3D_Clone706_3.java 1 16
Gpt3D_Clone706_3.java 17 35
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

 public boolean equals (Object obj) {
    if (obj == null || obj.getClass() != getClass()) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (!Objects.equals(this.name, other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
6
Gpt3D_Clone706_6.java 1 16
Gpt3D_Clone706_6.java 17 31
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

 public boolean equals (Object obj) {
    if (obj == null || getClass() != obj.getClass()) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : !this.name.equals(other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
707
0
Gpt3D_Clone707_0.java 1 10
Gpt3D_Clone707_0.java 11 25
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

 public boolean equals (Object other) {boolean result; 
   if(other == null || getClass() != other.getClass()) { 
      result = false; 
   } else { 
      People otherPeople = (People) other; 
      if(name.equals(otherPeople.name) && age == otherPeople.age) { 
         result = true; 
      } else { 
         result = false; 
      } 
   } 
   return result; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
0
Gpt3D_Clone709_0.java 1 25
Gpt3D_Clone709_0.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [] [] frequecyTable = new int[10] [2]; 
    int [] sortedArray = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers [y]/digit) % 10; 
        frequecyTable [x] [0] ++; 
        frequecyTable [x] [1] = addToBucket(frequecyTable [x] [1], numbers [y]); 
    }
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[frequecyTable [x] [0]]; 
        for (int k = 0; 
        k < frequecyTable [x] [0]; k++) bucket [k] = frequecyTable [x] [1];
        frequecyTable [x] [0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < frequecyTable [x] [0]; y++) {
            sortedArray [k] = frequecyTable [x] [1];
            k++;
        } 
    }
    return sortedArray;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
1
Gpt3D_Clone709_1.java 1 25
Gpt3D_Clone709_1.java 26 53
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] quantity = new int[10][2]; 
    int [] sortedElements = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        quantity[x][0] ++; 
        quantity[x][1] = addToBucket(quantity[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[quantity[x][0]]; 
        for (int k = 0; 
        k < quantity[x][0]; k++) bucket[k] = quantity[x][1]; 
        quantity[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < quantity[x][0]; y++) {
            sortedElements[k] = quantity[x][1];
            k++; 
        } 
    }
    return sortedElements;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
2
Gpt3D_Clone709_2.java 1 25
Gpt3D_Clone709_2.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] numCount = new int[10] [2]; 
    int [] sortedValues = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        numCount[x][0] ++; 
        numCount[x][1] = addToBucket(numCount[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[numCount[x][0]]; 
        for (int k = 0; 
        k <numCount[x][0]; k++) bucket[k] = numCount[x][1]; 
        numCount[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < numCount[x][0]; y++) {
            sortedValues[k] = numCount[x][1];
            k++; 
        } 
    }
    return sortedValues;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
3
Gpt3D_Clone709_3.java 1 25
Gpt3D_Clone709_3.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] frequencies = new int[10][3]; 
    int [] sortedNum = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        frequencies[x][2] ++; 
        frequencies[x][1] = addToBucket(frequencies[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[frequencies[x][2]]; 
        for (int k = 0; 
        k < frequencies[x][2]; k++) bucket[k] = frequencies[x][1]; 
        frequencies[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < frequencies[x][2]; y++) {
            sortedNum[k] = frequencies[x][1];
            k++; 
        } 
    }
    return sortedNum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
4
Gpt3D_Clone709_4.java 1 25
Gpt3D_Clone709_4.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [] [] frequencyTable = new int[10][3]; 
    int [] sortedArray = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        frequencyTable[x][2] ++; 
        frequencyTable[x][1] = addToBucket(frequencyTable[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int [frequencyTable[x][2]]; 
        for (int k = 0; 
        k <frequencyTable [x][2]; k++) bucket[k] = frequencyTable[x][1]; 
        frequencyTable[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < frequencyTable[x][2]; y++) {
            sortedArray[k] = frequencyTable[x][1];
            k++; 
        } 
    }
    return sortedArray;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
5
Gpt3D_Clone709_5.java 1 25
Gpt3D_Clone709_5.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] elementCount = new int[10][2]; 
    int [] sortedList = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        elementCount[x][0] ++; 
        elementCount[x][1] = addToBucket(elementCount[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[elementCount[x][0]]; 
        for (int k = 0; 
        k <elementCount[x][0]; k++) bucket[k] = elementCount[x][1]; 
        elementCount[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < elementCount[x][0]; y++) {
            sortedList[k] = elementCount[x][1];
            k++; 
        } 
    }
    return sortedList;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
6
Gpt3D_Clone709_6.java 1 25
Gpt3D_Clone709_6.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] numFrequencies = new int[10][1]; 
    int [] sortedNumArray = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        numFrequencies[x][0] ++; 
        numFrequencies[x][1] = addToBucket(numFrequencies[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[numFrequencies[x][0]]; 
        for (int k = 0; 
        k <numFrequencies[x][0]; k++) bucket[k] = numFrequencies[x][1]; 
        numFrequencies[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < numFrequencies[x][0]; y++) {
            sortedNumArray[k] = numFrequencies[x][1];
            k++; 
        } 
    }
    return sortedNumArray;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
7
Gpt3D_Clone709_7.java 1 25
Gpt3D_Clone709_7.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [] [] nums = new int[10] [2]; 
    int [] sortedArray = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers [y]/digit) % 10; 
        nums [x] [0] ++; 
        nums [x] [1] = addToBucket(nums [x] [1], numbers [y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[nums [x] [0]]; 
        for (int k = 0; 
        k < nums [x] [0]; k++) bucket [k] = nums [x] [1];
        nums [x] [0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < nums [x] [0]; y++) {
            sortedArray [k] = nums [x] [1];
            k++; 
        } 
    }
    return sortedArray;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
8
Gpt3D_Clone709_8.java 1 25
Gpt3D_Clone709_8.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [][] count = new int[10][2]; 
    int [] sortedNums = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        count[x][0] ++; 
        count[x][1] = addToBucket(count[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[count[x][0]]; 
        for (int k = 0; 
        k <count[x][0]; k++) bucket[k] = count[x][1]; 
        count[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < count[x][0]; y++) {
            sortedNums[k] = count[x][1];
            k++; 
        } 
    }
    return sortedNums;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
9
Gpt3D_Clone709_9.java 1 25
Gpt3D_Clone709_9.java 26 52
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

 public static int [] sort (int [] numbers, int digit) { 
    if (numbers == null || digit <= 0) return numbers; 
    int [] [] digitFrequency = new int[10] [2]; 
    int [] sortedIntArray = new int[numbers.length]; 
    int x, y = 0; 
    for (y = 0; y < numbers.length; y++) {
        x = (numbers[y]/digit) % 10; 
        digitFrequency[x][0] ++; 
        digitFrequency[x][1] = addToBucket(digitFrequency[x][1], numbers[y]); 
    } 
    for (x = 0; x < 10; x++) {
        int [] bucket = new int[digitFrequency[x][0]]; 
        for (int k = 0; 
        k < digitFrequency[x][0]; k++) bucket[k] = digitFrequency[x][1]; 
        digitFrequency[x][0] = sort(bucket, digit/10); 
    } 
    int k = 0; 
    for (x = 0; x < 10; x++) {
        for (y = 0; y < digitFrequency[x][0]; y++) {
            sortedIntArray[k] = digitFrequency[x][1];
            k++; 
        } 
    }
    return sortedIntArray;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
0
Gpt3D_Clone70_0.java 1 27
Gpt3D_Clone70_0.java 28 69
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean foundDot = false;
    int cCount = 0;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            foundDot = true;
            break;
        } else {
            if(Character.isLetter(dest.charAt (i))){
                cCount++;
            }
        }
    }
    if(foundDot) {
        if(dlen - (cCount + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits)
                    return "";
                else
                    break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
1
Gpt3D_Clone70_1.java 1 27
Gpt3D_Clone70_1.java 28 68
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean isDot = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.') {
            isDot = true;
            break;
        }
    }
    if (isDot) {
		int letterCount = 0;
        for (int i = 0; i < dstart; i++) {
            if (Character.isLetter (dest.charAt (i))) {
                letterCount++;
            }
        }
        if (dlen - (letterCount + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits) return "";
                else break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
2
Gpt3D_Clone70_2.java 1 27
Gpt3D_Clone70_2.java 28 70
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

  public CharSequence filter (CharSequence source,
int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    int cCount = 0;
    boolean isDotAhead = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            isDotAhead = true;
            break;
        } else {
            if (Character.isLetter (dest.charAt (i))) {
                cCount++;
            }
        }
    }
    if (isDotAhead) {
        if (dlen - (cCount + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits)
                    return "";
                else
                    break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
3
Gpt3D_Clone70_3.java 1 27
Gpt3D_Clone70_3.java 28 72
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source,
int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean foundDot = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            foundDot = true;
            break;
        } 
    }
    if(foundDot) {
		int cCount = 0;
        for (int i = 0; i < dstart; i++) {
            if (Character.isLetter(dest.charAt (i))){
                cCount++;
            }
        }
        if(dlen - (cCount + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits)
                    return "";
                else
                    break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
4
Gpt3D_Clone70_4.java 1 27
Gpt3D_Clone70_4.java 28 67
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean isDot = false;
    boolean isWord = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.') {
            isDot = true;
            break;
        }
        if (Character.isLetter (dest.charAt (i))){
            isWord = true;
        }
    }
    if (isDot) {
        if (dlen - (isWord ? 1 : 0) + len > digits){
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits) return "";
                else break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
5
Gpt3D_Clone70_5.java 1 27
Gpt3D_Clone70_5.java 28 67
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean foundDot = false;
    int letterCount = 0;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.') {
            foundDot = true;
            break;
        }
        if (Character.isLetter (dest.charAt (i))) {
            letterCount++;
        }
    }
    if (foundDot) {
        if (dlen - (letterCount + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits) return "";
                else break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
6
Gpt3D_Clone70_6.java 1 27
Gpt3D_Clone70_6.java 28 67
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source,
int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    int indexOfDot = -1;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            indexOfDot = i;
            break;
        } 
    }
    if(indexOfDot != -1) {
        if(dlen - (indexOfDot + 1) + len > digits) {
            return "";
        }
    } else {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits)
                    return "";
                else
                    break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
7
Gpt3D_Clone70_7.java 1 27
Gpt3D_Clone70_7.java 28 64
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

  public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence res = super.filter (source, start, end, dest, dstart, dend);
    if (res != null) {
        source = res;
        start = 0;
        end = res.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean foundDot = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            if(dlen - (i + 1) + len > digits) {
               return ""; 
            } else {
                foundDot = true;
                break;
            }
        }
    }
    if(!foundDot) {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits)
                    return "";
                else
                    break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
8
Gpt3D_Clone70_8.java 1 27
Gpt3D_Clone70_8.java 28 62
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    boolean isDot = false;
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt (i) == '.'){
            if (dlen - (i + 1) + len > digits){
                return "";
            } else {
                isDot = true;
                break;
            }
        }
    }
    if (!isDot) {
        for (int i = start; i < end; ++i) {
            if (source.charAt (i) == '.') {
                if ((dlen - dend) + (end - (i + 1)) > digits) return "";
                else break;
            }
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
713
7
Gpt3D_Clone713_7.java 1 26
Gpt3D_Clone713_7.java 27 48
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

 public static void main (String [] args) {
    for (int row = 1; row <= 7; row +=2){
        for (int i = 0; i < 7-row; i++) {
            System.out.print ("*");
        }
        for (int i = 0; i < row; i++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5; row >= 1; row -= 2) {
        for (int i = 0; i < 7 - row; i++) {
            System.out.print ("*");
        }
        for (int i = 0; i < row; i++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
715
1
Gpt3D_Clone715_1.java 1 16
Gpt3D_Clone715_1.java 17 40
----------------------------------------

private static void decimalToHex (int decimal) {
    if (decimal >= 256) {
        returnHex (decimal / 256);
        decimal %= 256;
    } else {
        System.out.print ("0");
    }
    if (decimal >= 16) {
        returnHex (decimal / 16);
        decimal %= 16;
    } else {
        System.out.print ("0");
    }
    returnHex (decimal);
    decimal /= 16;
}
----------------------------------------

  private static void decimalToHex (int decimal) {
	  if (decimal >= 4096) {
	    returnHex (decimal / 4096);
	    decimal %= 4096;
	  } else {
	    System.out.print ("00");
	  }
	  if (decimal >= 256) {
	    returnHex (decimal / 256);
	    decimal %= 256;
	  } else {
	    System.out.print ("00");
	  }
	  if (decimal >= 16) {
	    returnHex (decimal / 16);
	    decimal %= 16;
	  } else {
	    System.out.print ("00");
	  }
	  returnHex (decimal);
	  decimal /= 16;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
0
Gpt3D_Clone716_0.java 1 15
Gpt3D_Clone716_0.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

 public int [] zeroFront (int [] data) {
    if (data == null) {
        return null;
    }
    
    int zeroPos = 0;
    for (int i = 0; i < data.length; i++) {
        if (data[i] == 0) {
            int tmp = data[zeroPos];
            data[zeroPos] = data[i];
            data[i] = tmp;
            zeroPos++;
        }
    }
    return data;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
1
Gpt3D_Clone716_1.java 1 15
Gpt3D_Clone716_1.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

 public int [] zeroFront (int [] array) {
    if (array == null) {
        return null;
    }
    
    int zeroLoc = 0;
    for (int i = 0; i < array.length; i++) {
        if (array[i] == 0) {
            int tempVal = array[zeroLoc];
            array[zeroLoc] = array[i];
            array[i] = tempVal;
            zeroLoc++;
        }
    }
    return array;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
2
Gpt3D_Clone716_2.java 1 15
Gpt3D_Clone716_2.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

 public int [] zeroFront (int [] values) {
    if (values == null) {
        return null;
    }
    
    int posZero = 0;
    for (int i = 0; i < values.length; i++) {
        if (values[i] == 0) {
            int temp = values[i];
            values[i] = values[posZero];
            values[posZero] = temp;
            posZero++;
        }
    }
    return values;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
3
Gpt3D_Clone716_3.java 1 15
Gpt3D_Clone716_3.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

 public int [] zeroFront (int [] arrVal) {
    if (arrVal == null) {
        return null;
    }
    
    int position = 0;
    for (int i = 0; i < arrVal.length; i++) {
        if (arrVal[i] == 0) {
            int temp = arrVal [position];
            arrVal [position] = arrVal [i];
            arrVal [i] = temp;
            position++;
        }
    }
    return arrVal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
4
Gpt3D_Clone716_4.java 1 15
Gpt3D_Clone716_4.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

 public int [] zeroFront (int [] arr) {
    if (arr == null) {
        return null;
    }
    
    int pos = 0;
    for (int i = 0; i < arr.length; i++) {
        if (arr[i] == 0) {
            int temp = arr [pos];
            arr [pos] = arr [i];
            arr [i] = temp;
            pos++;
        }
    }
    return arr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
1
Gpt3D_Clone717_1.java 1 19
Gpt3D_Clone717_1.java 20 43
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    for (int i = 0; i < nums.length; i++){
        if (nums[i] == 0) {
            result[zeroesPos] = 0;
            zeroesPos += 1;
        }
    }
    int zeroCount = zeroesPos; 
    for (int i = 0; i < nums.length; i++){
        if (nums[i] != 0){
            result[zeroCount] = nums[i];
            zeroCount += 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
2
Gpt3D_Clone717_2.java 1 19
Gpt3D_Clone717_2.java 20 44
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0, othersPos = result.length - 1;
    while (zeroesPos < othersPos) {
        if (nums[zeroesPos] == 0) {
            result[zeroesPos] = 0;
            ++zeroesPos;
        } else {
            result[othersPos] = nums[othersPos];
            --othersPos;
        }
    }
    for (int i = zeroesPos; i <= othersPos; ++i) {
        result[i] = nums[i];
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
3
Gpt3D_Clone717_3.java 1 19
Gpt3D_Clone717_3.java 20 42
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

  public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int countOfZeros = 0;
    for (int i = 0; i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [countOfZeros] = 0;
            countOfZeros++;
        }
    }
    for (int i = 0; i < nums.length; ++ i) {
        if (nums [i] != 0) {
            result [countOfZeros] = nums [i];
            countOfZeros++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
4
Gpt3D_Clone717_4.java 1 19
Gpt3D_Clone717_4.java 20 41
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroIndex = 0;
    for (int i = 0; i < nums.length; ++ i) {
        if (nums[i] == 0) {
            result[zeroIndex] = 0;
            zeroIndex++;
        }
    }
    for (int j = 0; j < nums.length; j++) {
        if (nums[j] != 0) {
            result[zeroIndex] = nums[j];
            zeroIndex++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
5
Gpt3D_Clone717_5.java 1 19
Gpt3D_Clone717_5.java 20 44
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int newPos = 0;
    for (int i = 0; i < nums.length; ++i) {
        if (nums [i] == 0) {
            result [newPos] = 0;
            newPos++;
        }
    }
    for (int i = 0; i < nums.length; ++i) {
        if (nums [i] != 0) {
            result [newPos] = nums [i];
            newPos++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
6
Gpt3D_Clone717_6.java 1 19
Gpt3D_Clone717_6.java 20 41
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroIndex = 0;
    for (int i = 0; i < nums.length; ++i) {
        if (nums[i] == 0) {
            result[zeroIndex] = 0;
            zeroIndex++;
        }
    }
    for (int i = 0; i < nums.length; ++i) {
        if (nums[i] != 0) {
            result[nums.length - 1 + zeroIndex - i] = nums[i];
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
7
Gpt3D_Clone717_7.java 1 19
Gpt3D_Clone717_7.java 20 42
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int numZeroes = 0;
    for (int i = 0; i < nums.length; ++i) {
        if (nums [i] == 0) {
            result [i - numZeroes] = 0;
            numZeroes++;
        }
    }
    for (int i = 0; i < nums.length; ++i) {
        if (nums [i] != 0) {
            result [(nums.length - i - 1) + numZeroes] = nums [i];
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
717
8
Gpt3D_Clone717_8.java 1 19
Gpt3D_Clone717_8.java 20 38
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront(int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    for (int i = 0; i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            zeroesPos++;
        } else {
            result [nums.length - 1 + zeroesPos - i] = nums [i];
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
0
Gpt3D_Clone718_0.java 1 19
Gpt3D_Clone718_0.java 20 42
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

  public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int begin = 0;
    int end = nums.length - 1;
    int i = 0;
    while (begin <= end) {
        if (nums[i] == 0) {
            result[begin] = 0;
            begin++;
            i++;
        } else {
            result[end] = nums[i];
            end--;
            i++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
1
Gpt3D_Clone718_1.java 1 19
Gpt3D_Clone718_1.java 20 42
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront (int [] nums) {
     if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zerosIndex = 0;
    int othersIndex = result.length - 1;
    int counter = 0;
    while (counter < nums.length) {
        if (nums[counter] == 0) {
            result[zerosIndex] = 0;
            zerosIndex++;
            counter++;
        } else {
            result[othersIndex] = nums[counter];
            othersIndex--;
            counter++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
3
Gpt3D_Clone718_3.java 1 19
Gpt3D_Clone718_3.java 20 43
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront (int [] nums) {
    if (nums == null || nums.length == 0) {
        return null;
    }
    int[] result = new int[nums.length];
    int zerosIndex = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 0) {
            result[zerosIndex] = 0;
            zerosIndex++;
        } 
    }
    int j = zerosIndex;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 0) {
            result[j] = nums[i];
            j++;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
4
Gpt3D_Clone718_4.java 1 19
Gpt3D_Clone718_4.java 20 41
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

 public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null; 
    }
    int [] result = new int [nums.length]; 
    int zerosPosition = 0; 
    for (int i = 0; i < nums.length; i++) { 
       if (nums[i] == 0) {
           result[zerosPosition] = 0;
           zerosPosition++; 
       } 
    }
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 0) {
            result[zerosPosition] = nums[i];
            zerosPosition++;
        }
    }
    return result; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
6
Gpt3D_Clone718_6.java 1 19
Gpt3D_Clone718_6.java 20 41
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

  public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null; 
    }
    int [] result = new int [nums.length];
    int frontIndex = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 0) {
            result[frontIndex++] = 0;
        }
    }
    int j = frontIndex;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != 0) {
            result[j] = nums[i];
            j++;
        }
    }
    return result; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
719
0
Gpt3D_Clone719_0.java 1 18
Gpt3D_Clone719_0.java 19 38
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

 public static void main(String[] args) throws IOException {
	  BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
	  int totalGrades = 0;
	  double gradeAverage = 0;
	  System.out.print("How many grades will you enter?");
	  int numGrades = Integer.parseInt (dataIn.readLine ());
	  double[] scores = new double[numGrades];
	  int count = 0;
	  while (numGrades > 0) {
	   System.out.print(" Enter grade #" + (count + 1) + ": ");
	   scores[count] = Double.parseDouble (dataIn.readLine ());
	   totalGrades += scores[count];
	   numGrades--;
	   count++;
	  }
	  gradeAverage = (double) totalGrades / count;
	  System.out.println("Your grades average is " + gradeAverage);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
719
1
Gpt3D_Clone719_1.java 1 18
Gpt3D_Clone719_1.java 19 38
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

 public static void main(String[] args) throws IOException {
	 BufferedReader dataIn = new BufferedReader(new InputStreamReader(System.in));
	 int totalGrades = 0;
	 double gradeAverage = 0;
	 System.out.print("How many grades will you enter?");
	 int num = Integer.parseInt(dataIn.readLine());
	 double[] marks = new double[num];
	 int count = 0;
	 while (num > 0) {
	 System.out.print("Please enter grade #" + (count + 1) + ": ");
	 marks[count] = Double.parseDouble(dataIn.readLine());
	 totalGrades += marks[count];
	 num--;
	 count++;
	 }
	 gradeAverage = (double) totalGrades / count;
	 System.out.println("Your grades average is " + gradeAverage);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
719
2
Gpt3D_Clone719_2.java 1 18
Gpt3D_Clone719_2.java 19 38
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

  public static void main (String [] args) throws IOException {
	 BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
	 int totalGrades = 0;
	 double gradeAverage = 0;
	 System.out.print ("Number of grades?");
	 int numGrades = Integer.parseInt (dataIn.readLine ());
	 double [] grades = new double [numGrades];
	 int count = 0;
	 while (numGrades > 0) {
	 System.out.print ("Enter grade # " + (count + 1) + ": ");
	 grades [count] = Double.parseDouble (dataIn.readLine ());
	 totalGrades += grades [count];
	 numGrades --;
	 count ++;
	 }
	 gradeAverage = (double) totalGrades / count;
	 System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
719
3
Gpt3D_Clone719_3.java 1 18
Gpt3D_Clone719_3.java 19 38
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

 public static void main (String[] args) throws IOException {
	 BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
	 int totalGrades = 0;
	 double gradeAverage = 0;
	 System.out.print ("How many grades will you enter?");
	 int numGrades = Integer.parseInt (dataIn.readLine ());
	 double [] marks = new double[numGrades];
	 int count = 0;
	 while (numGrades > 0) {
	 System.out.print ("Enter grade #" + (count + 1) + ": ");
	 marks [count] = Double.parseDouble (dataIn.readLine ());
	 totalGrades += marks[count];
	 numGrades--;
	 count++;
	 }
	 gradeAverage = (double) totalGrades / count;
	 System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
719
4
Gpt3D_Clone719_4.java 1 18
Gpt3D_Clone719_4.java 19 39
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

 public static void main (String[] args) throws IOException {
	 BufferedReader input = new BufferedReader (new InputStreamReader (System.in));
	 int totalGrades = 0;
	 double gradeAverage = 0;
	 System.out.print ("How many grades will you enter?");
	 int num = Integer.parseInt (input.readLine ());
	 double [] gradesArr = new double [num];
	 int x = 0;
	 while (num > 0)
	 {
	 System.out.print ("Enter grade # " + (x + 1) + ": ");
	 gradesArr [x] = Double.parseDouble (input.readLine ());
	 totalGrades += gradesArr [x];
	 num--;
	 x++;
	 }
	 gradeAverage = (double) totalGrades / x;
	 System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
0
Gpt3D_Clone724_0.java 1 17
Gpt3D_Clone724_0.java 18 46
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

 public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.post(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (itemCount - 2, false);
                    }
                });
            } else if (index == itemCount - 1) {
                viewPager.post(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (1, false);
                    }
                });
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
2
Gpt3D_Clone724_2.java 1 17
Gpt3D_Clone724_2.java 18 46
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

	public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (itemCount - 2, false);
                    }
                }, 1500);
            } else if (index == itemCount - 1) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (1, false);
                    }
                }, 1500);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
3
Gpt3D_Clone724_3.java 1 17
Gpt3D_Clone724_3.java 18 46
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

	public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (itemCount - 2, false);
                    }
                }, 500);
            } else if (index == itemCount - 1) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (1, false);
                    }
                }, 500);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
4
Gpt3D_Clone724_4.java 1 17
Gpt3D_Clone724_4.java 18 46
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

 public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (itemCount - 2, false);
                    }
                }, 1000);
            } else if (index == itemCount - 1) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (1, false);
                    }
                }, 1000);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
5
Gpt3D_Clone724_5.java 1 17
Gpt3D_Clone724_5.java 18 43
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

	public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount == 0) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0 || index == itemCount - 1) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        if (index == 0) {
                            viewPager.setCurrentItem (itemCount - 2, false);
                        } else {
                            viewPager.setCurrentItem (1, false);
                        }
                    }
                }, 1000);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
6
Gpt3D_Clone724_6.java 1 17
Gpt3D_Clone724_6.java 18 41
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

 public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        viewPager.setCurrentItem (1, false);
                    }
                }, 500);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
728
0
Gpt3D_Clone728_0.java 1 16
Gpt3D_Clone728_0.java 17 34
----------------------------------------

public static void main (String [] args) {
    Scanner scn = new Scanner (System.in);
    ArrayList < Integer > integers = new ArrayList < > ();
    System.out.println ("Enter number 1");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 2");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 3");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 4");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 5");
    integers.add (scn.nextInt ());
    Collections.sort (integers, Comparator.comparingInt (Math :: abs));
    System.out.println ("The number near zero 0 is" + integers.get (0));
}
----------------------------------------

  public static void main (String [] args) {
        Scanner scn = new Scanner (System.in);
        int[] array = new int[5];
        System.out.println ("Enter number 1");
        array[0] = scn.nextInt ();
        System.out.println ("Enter number 2");
        array[1] = scn.nextInt ();
        System.out.println ("Enter number 3");
        array[2] = scn.nextInt ();
        System.out.println ("Enter number 4");
        array[3] = scn.nextInt ();
        System.out.println ("Enter number 5");
        array[4] = scn.nextInt ();
        Arrays.sort(array, Comparator.comparingInt(Math::abs));
        System.out.println("The number near zero 0 is" + array[0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
732
1
Gpt3D_Clone732_1.java 1 10
Gpt3D_Clone732_1.java 11 26
----------------------------------------

public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    HttpServletRequest request = (HttpServletRequest) arg0;
    String clientId = request.getHeader ("clientId");
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (request, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

 public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    Cookie[] cookies = arg0.getCookies();
    for (Cookie c: cookies) {
        if (c.getName().equals("clientId")) {
            String clientId = c.getValue();
        }
    }
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (arg0, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
732
2
Gpt3D_Clone732_2.java 1 10
Gpt3D_Clone732_2.java 11 22
----------------------------------------

public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    HttpServletRequest request = (HttpServletRequest) arg0;
    String clientId = request.getHeader ("clientId");
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (request, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

 public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    HttpSession session = ((HttpServletRequest) arg0).getSession();
    String clientId = (String) session.getAttribute("clientId");
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (arg0, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
732
3
Gpt3D_Clone732_3.java 1 10
Gpt3D_Clone732_3.java 11 22
----------------------------------------

public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    HttpServletRequest request = (HttpServletRequest) arg0;
    String clientId = request.getHeader ("clientId");
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (request, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

 public void doFilter (ServletRequest arg0, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    logger.info ("checking client id in filter");
    Map<String,String[]> parameterMap = arg0.getParameterMap();
    String clientId = parameterMap.get("clientId")[0];
    if (StringUtils.isNotEmpty (clientId)) {
        chain.doFilter (arg0, response);
    } else {
        logger.error ("client id missing.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
733
0
Gpt3D_Clone733_0.java 1 15
Gpt3D_Clone733_0.java 16 36
----------------------------------------

public String getInput (String filename) {
    BufferedReader infile = null;
    try {
        infile = new BufferedReader (new FileReader (filename));
        String response = infile.readLine ();
        return response;
    } catch (IOException e) {
    } finally {
        try {
            infile.close ();
        } catch (IOException e) {
        }
    }
    return null;
}
----------------------------------------

	public String getInput (String filename) {
    FileInputStream fis = null;
    InputStreamReader isr= null;
    BufferedReader buf = null;
    try {
        fis = new FileInputStream(filename);
        isr = new InputStreamReader(fis);
        buf = new BufferedReader(isr);
        String response = buf.readLine ();
        return response;
    } catch (IOException e) {
    } finally {
        try {
            buf.close ();
        } catch (IOException e) {
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
733
1
Gpt3D_Clone733_1.java 1 15
Gpt3D_Clone733_1.java 16 31
----------------------------------------

public String getInput (String filename) {
    BufferedReader infile = null;
    try {
        infile = new BufferedReader (new FileReader (filename));
        String response = infile.readLine ();
        return response;
    } catch (IOException e) {
    } finally {
        try {
            infile.close ();
        } catch (IOException e) {
        }
    }
    return null;
}
----------------------------------------

	public String getInput (String filename) {
    try {
        BufferedReader infile = new BufferedReader (new FileReader (filename));
        String response = infile.readLine ();
        return response;
    } catch (IOException e) {
    } finally {
        try (BufferedReader infile = new BufferedReader(new FileReader(filename))) {
            infile.close ();
        } catch (IOException e) {
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
0
Gpt3D_Clone734_0.java 1 9
Gpt3D_Clone734_0.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () { int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = obj == null ? 0 : obj.hashCode ();
        hashCode = (hashCode * 31) ^ m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
1
Gpt3D_Clone734_1.java 1 9
Gpt3D_Clone734_1.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () {int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = obj == null ? 0 : obj.hashCode ();
        hashCode = (hashCode * 33) + m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
2
Gpt3D_Clone734_2.java 1 9
Gpt3D_Clone734_2.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () { int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = (obj == null ? 0 : obj.hashCode ()) ^ hashCode;
        hashCode = (hashCode * 31) ^ m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
3
Gpt3D_Clone734_3.java 1 9
Gpt3D_Clone734_3.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () { int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = obj == null ? 0 : obj.hashCode ();
        hashCode += (hashCode << 5) + m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
4
Gpt3D_Clone734_4.java 1 9
Gpt3D_Clone734_4.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () {int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = obj == null ? 0 : obj.hashCode ();
        hashCode += (hashCode << 7) ^ m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
5
Gpt3D_Clone734_5.java 1 9
Gpt3D_Clone734_5.java 10 20
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

 public int hashCode () {int hashCode = 0;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        int m = obj == null ? 0 : obj.hashCode ();
        hashCode += (hashCode << 9) + m;
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
738
0
Gpt3D_Clone738_0.java 1 15
Gpt3D_Clone738_0.java 16 34
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

 public int read() throws IOException {
	if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
		return -1;
	}
	if (lineBuffered == false) {
		fillLineBuffer();
	}
	if (lineBuffered == true) {
		if (currentLineReadPos == 0) {
			lineBuffered = false;
		}
		int character = (int) currentLine[currentLineReadPos];
		currentLineReadPos--;
		return character;
	}
	return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
738
1
Gpt3D_Clone738_1.java 1 15
Gpt3D_Clone738_1.java 16 34
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

 public int read () throws IOException { 
   if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) { 
      return -1; 
   } 
   if (! lineBuffered) { 
      fillLineBuffer (); 
   } 
   if (lineBuffered) { 
      if (currentLineReadPos == 0) { 
         lineBuffered = false; 
      } 
      int character = currentLine [currentLineReadPos]; 
      currentLineReadPos --; 
      return character; 
   } 
   return 0; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
739
5
Gpt3D_Clone739_5.java 1 15
Gpt3D_Clone739_5.java 16 33
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

	public int read() throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) 
        return -1;
    if (!lineBuffered) {
        fillLineBuffer();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) { 
            lineBuffered = false; 
        }
        if (currentLineReadPos > 0) 
            return currentLine[currentLineReadPos--];
        else 
            return 0;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
739
6
Gpt3D_Clone739_6.java 1 15
Gpt3D_Clone739_6.java 16 31
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

 public int read() throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) 
        return -1;
    if (!lineBuffered) 
        fillLineBuffer();
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
            return 0;
        }
        return currentLine[currentLineReadPos--];
    }
    return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
742
6
Gpt3D_Clone742_6.java 1 4
Gpt3D_Clone742_6.java 5 11
----------------------------------------

            public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {
                Files.delete (directory);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {if (Directory.exists(directory.toString())) {
        Files.delete(directory);
        return FileVisitResult.CONTINUE;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
742
7
Gpt3D_Clone742_7.java 1 4
Gpt3D_Clone742_7.java 5 11
----------------------------------------

            public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {
                Files.delete (directory);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

 public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {if (Files.isDirectory(directory, LinkOption.NOFOLLOW_LINKS)) {
        Files.delete(directory);
        return FileVisitResult.CONTINUE;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
742
8
Gpt3D_Clone742_8.java 1 4
Gpt3D_Clone742_8.java 5 12
----------------------------------------

            public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {
                Files.delete (directory);
                return FileVisitResult.CONTINUE;
}
----------------------------------------

  public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {if (ioException == null) { 
        Files.delete(directory); 
        return FileVisitResult.CONTINUE; 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
2
Gpt3D_Clone743_2.java 1 13
Gpt3D_Clone743_2.java 14 35
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    System.out.print (spaces);
    System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
    return n * fac;
}
----------------------------------------

 private static long factorial(int n, int depth) {
    String spaces = repeat(' ', depth);
    System.out.print(spaces);
    System.out.println("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println(spaces + " return 1");
        return 1;
    }
    int multiplier = n;
    int iteratedFactorial = factorial(n - 1, depth + 1);
    
    while(multiplier > 1) {
        
        iteratedFactorial *= multiplier--;
        System.out.print(spaces);
        System.out.printf("return %d * %d = %d%n", n, iteratedFactorial, iteratedFactorial); 
    }
    
    return iteratedFactorial;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
3
Gpt3D_Clone743_3.java 1 13
Gpt3D_Clone743_3.java 14 32
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    System.out.print (spaces);
    System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
    return n * fac;
}
----------------------------------------

 private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = 1;
    for (int i = n; i > 0; i--) {
        System.out.print(spaces);
        long result = i * fac;
        System.out.printf ("return %d * %d = %d%n", i, fac, i * fac);
        fac = result;
    }
    return fac;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
744
0
Gpt3D_Clone744_0.java 1 9
Gpt3D_Clone744_0.java 10 23
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------

 public static void main (String [] args) {
    Runnable task = new Runnable () {
        @Override 
        public void run () {
            MediaTypes mt = new MediaTypes ();
            JPanel panel = new JPanel ();
            mt.createGui (panel);
            JOptionPane.showMessageDialog (null, panel);
        }
    };
    SwingUtilities.invokeLater (task);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
744
1
Gpt3D_Clone744_1.java 1 9
Gpt3D_Clone744_1.java 10 22
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------

 public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        MediaTypes mt = new MediaTypes ();
        JPanel panel = new JPanel (); 
        @Override
        public void run () {
            mt.creategui (panel);
            JOptionPane.showMessageDialog (null, panel);
        }
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
744
2
Gpt3D_Clone744_2.java 1 9
Gpt3D_Clone744_2.java 10 19
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------

  public static void main (String [] args) {
    SwingUtilities.invokeLater (() -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel panel = new JPanel ();
        mediaTypes.createGui (panel);
        JOptionPane.showMessageDialog (null, panel);
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
744
3
Gpt3D_Clone744_3.java 1 9
Gpt3D_Clone744_3.java 10 19
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------

 public static void main (String [] args) {
    SwingUtilities.invokeLater (() -> {
        MediaTypes types = new MediaTypes ();
        JPanel pan = new JPanel ();
        types.createGui (pan);
        JOptionPane.showMessageDialog (null, pan);
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
744
4
Gpt3D_Clone744_4.java 1 9
Gpt3D_Clone744_4.java 10 20
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------

 public static void main (String [] args) {
    MediaTypes mt = new MediaTypes ();
    JPanel p = new JPanel (); 
    mt.createGui (p);
    SwingUtilities.invokeLater (() -> {
        JOptionPane.showMessageDialog (null, p);
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
746
0
Gpt3D_Clone746_0.java 1 9
Gpt3D_Clone746_0.java 10 22
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null) {
        pressLocation = null;
    } else if (dragLocation != null) {
    } else {
    }
    pressLocation = null;
    dragLocation = null;
}
----------------------------------------

 public void mouseReleased (int mod, Point loc) {
    if (pressLocation == null && dragLocation == null) {
        
    } else if (pressLocation != null && dragLocation != null) {
        pressLocation=null;
        dragLocation=null;
    } else {
        pressLocation=null;
        dragLocation=null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
0
Gpt3D_Clone747_0.java 1 22
Gpt3D_Clone747_0.java 23 46
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

  static int countClamps(int[] arr) {
    int count = 0;
    int prev = arr[0];
    boolean isSame = false;
    for (int i = 0; i < arr.length; i++) {
        if (i == 0)
            prev = arr[i];
        else {
            if (arr[i] == prev) {
                if (!isSame)
                    count++;
                    isSame = true;
            }
            else {
                prev = arr[i];
                isSame = false;
            }
        }
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
1
Gpt3D_Clone747_1.java 1 22
Gpt3D_Clone747_1.java 23 42
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

  static int countClamps(int[] array) {
    int clamps = 0;
    int prev = array[0];
    boolean isSame = false;
    for (int i = 0; i < array.length; i++) {
        if (array[i] == prev) {
            if (!isSame) {
                clamps++;
                isSame = true;
            }
        } else {
            prev = array[i];
            isSame = false;
        }
    }
    return clamps;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
2
Gpt3D_Clone747_2.java 1 22
Gpt3D_Clone747_2.java 23 42
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

  static int countClamps(int[] arr) {
    int count = 0;
    int prev = arr[0];
    boolean match = false;
    for(int i = 1; i < arr.length; i++) {
        if(arr[i] == prev) {
            if(!match) {
                count++;
                match = true;
            }
        }
        else {
            prev = arr[i];
            match = false;
        }
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
3
Gpt3D_Clone747_3.java 1 22
Gpt3D_Clone747_3.java 23 44
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

 static int countClamps(int[] arr) {
    int result = 0;
    int last = arr[0];
    
    boolean repeated = false;
    
    for(int i = 1; i < arr.length; i++) {
        if(arr[i] == last) {
            if(!repeated) {
                result++;
                repeated = true;
            }
        } else {
            last = arr[i];
            repeated = false;
        }
    }
    
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
4
Gpt3D_Clone747_4.java 1 22
Gpt3D_Clone747_4.java 23 41
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

  static int countClamps(int[] array) {
    int result = 0;
    int store = array[0];
    boolean match = false;
    for(int i=1; i<array.length; i++) {
        if(array[i] == store) {
            if(!match) {
                result++;
                match = true;
            }
        } else {
            store = array[i];
            match = false;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
0
Gpt3D_Clone749_0.java 1 12
Gpt3D_Clone749_0.java 13 29
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (new Dimension (newWidth, newHeight));
    scale (newWidth, newHeight);
    frame.revalidate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
1
Gpt3D_Clone749_1.java 1 12
Gpt3D_Clone749_1.java 13 29
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    frame.addComponentListener (this);
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
2
Gpt3D_Clone749_2.java 1 12
Gpt3D_Clone749_2.java 13 29
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
    frame.pack ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
3
Gpt3D_Clone749_3.java 1 12
Gpt3D_Clone749_3.java 13 45
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setPreferredSize (new Dimension (newWidth, newHeight));
    scale (newWidth, newHeight);
    frame.pack ();
}  
 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setBounds (frame.getX(), frame.getY(), newWidth, newHeight);
    frame.validate();
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
4
Gpt3D_Clone749_4.java 1 12
Gpt3D_Clone749_4.java 13 45
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setPreferredSize (new Dimension (newWidth, newHeight));
    scale (newWidth, newHeight);
    frame.pack ();
}  
 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setBounds (frame.getX(), frame.getY(), newWidth, newHeight);
    frame.validate();
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
5
Gpt3D_Clone749_5.java 1 12
Gpt3D_Clone749_5.java 13 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.resize (newWidth, newHeight);
    updateSize (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
6
Gpt3D_Clone749_6.java 1 12
Gpt3D_Clone749_6.java 13 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String widthPrompt = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, widthPrompt, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String heightPrompt = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, heightPrompt, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.resize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
7
Gpt3D_Clone749_7.java 1 12
Gpt3D_Clone749_7.java 13 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setBounds (frame.getX(), frame.getY(), newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
8
Gpt3D_Clone749_8.java 1 12
Gpt3D_Clone749_8.java 13 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
   ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
   String promptWidth = "What should the new width be?";
   String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
   ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
   String promptHeight = "What should the new height be?";
   String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "",JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
   double x = Double.parseDouble (scaleWidth);
   double y = Double.parseDouble (scaleHeight);
   int newWidth = (int) x;
   int newHeight = (int) y;
   frame.resize (newWidth, newHeight);
   scale (newWidth, newHeight);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
9
Gpt3D_Clone749_9.java 1 12
Gpt3D_Clone749_9.java 13 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

 public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String promptWidth = "What should the new width be?";
    String scaleWidth = (String) JOptionPane.showInputDialog (null, promptWidth, "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String promptHeight = "What should the new height be?";
    String scaleHeight = (String) JOptionPane.showInputDialog (null, promptHeight, "", JOptionPane.QUESTION_MESSAGE, heightIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setBounds (0, 0, newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
74
0
Gpt3D_Clone74_0.java 1 27
Gpt3D_Clone74_0.java 28 50
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {String lsStart = ""; String lsInsert = ""; String lsEnd = ""; String lsText = "";
   Log.d("debug", moPattern.toString());
   Log.d("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
   if (dest.length() > 0) {
       lsStart = dest.subSequence(0, dstart).toString();
       Log.d("debug", "lsStart : " + lsStart);
       if (end - start > 0) {
           lsInsert = source.subSequence(start, end).toString();
           Log.d("debug", "lsInsert: " + lsInsert);
       }
       lsEnd = dest.subSequence(dend, dest.length()).toString();
       Log.d("debug", "lsEnd   : " + lsEnd);
       lsText = lsStart + lsInsert + lsEnd;
       Log.d("debug", "lsText  : " + lsText);
   }
   Matcher loMatcher = moPattern.matcher(lsText);
   Log.d("debug", "loMatcher.matches(): " + loMatcher.matches() + ", lsText: " + lsText);
   if (! loMatcher.matches())
       return "";
   return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
74
1
Gpt3D_Clone74_1.java 1 27
Gpt3D_Clone74_1.java 28 50
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {String lsStart, lsInsert, lsEnd, lsText;
   Log.d("debug", moPattern.toString());
   Log.d("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
   if (dest.length() > 0) {
       lsStart = dest.substring(0, dstart);
       Log.d("debug", "lsStart : " + lsStart);
       if (source != "") {
           lsInsert = source.substring(start, end);
           Log.d("debug", "lsInsert: " + lsInsert);
       }
       lsEnd = dest.substring(dend, dest.length());
       Log.d("debug", "lsEnd   : " + lsEnd);
       lsText = lsStart + lsInsert + lsEnd;
       Log.d("debug", "lsText  : " + lsText);
   }
   Matcher loMatcher = moPattern.matcher(lsText);
   Log.d("debug", "loMatcher.matches(): " + loMatcher.matches() + ", lsText: " + lsText);
   if (! loMatcher.matches())
       return "";
   return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
74
2
Gpt3D_Clone74_2.java 1 27
Gpt3D_Clone74_2.java 28 50
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {String lsStart = null, lsInsert = null, lsEnd = null, lsText = null;
    Log.d("debug", moPattern.toString());
    Log.d("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    if (dest.length() > 0) {
        lsStart = dest.substring(0, dstart);
        Log.d("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.substring(start, end);
            Log.d("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = dest.substring(dend, dest.length());
        Log.d("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher(lsText);
    Log.d("debug", "loMatcher.matches(): " + loMatcher.matches() + ", lsText: " + lsText);
    if (! loMatcher.matches())
        return "";
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
753
0
Gpt3D_Clone753_0.java 1 17
Gpt3D_Clone753_0.java 18 37
----------------------------------------

private String getContactName (Context context, String number) {
    String name = null;
    String [] projection = new String [] {ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup._ID};
    Uri contactUri = Uri.withAppendedPath (ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode (number));
    Cursor cursor = context.getContentResolver ().query (contactUri, projection, null, null, null);
    if (cursor != null) {
        if (cursor.moveToFirst ()) {
            name = cursor.getString (cursor.getColumnIndex (ContactsContract.PhoneLookup.DISPLAY_NAME));
            Log.v (TAG, "Started uploadcontactphoto: Contact Found @ " + number);
            Log.v (TAG, "Started uploadcontactphoto: Contact name  = " + name);
        } else {
            Log.v (TAG, "Contact Not Found @ " + number);
        }
        cursor.close ();
    }
    return name;
}
----------------------------------------

 private String getContactByName (Context context, String number) {
    String name = null;
    String[] selectionArgs = new String[]{number};
    String[] projection = new String [] { ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME, ContactsContract.CommonDataKinds.Phone.CONTACT_ID };
    Uri contactUri = Uri.withAppendedPath(ContactsContract.CommonDataKinds.Phone.CONTENT_FILTER_URI, Uri.encode(number));
    Cursor cursor = context.getContentResolver().query(contactUri, projection, null, selectionArgs, null);
    if (cursor != null) {
        if (cursor.moveToFirst()) {
            name = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));
            Log.v(TAG, "Started uploadcontactphoto: Contact Found @ " + number);
            Log.v(TAG, "Started uploadcontactphoto: Contact name  = " + name);
        } else {
            Log.v(TAG, "Contact Not Found @ " + number);
        }
        cursor.close();
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
754
0
Gpt3D_Clone754_0.java 1 10
Gpt3D_Clone754_0.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    values [0] = 2;
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        values [i] = values [i - 1] + 2;
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

 public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    values [0] = 2;
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        if (i % 2 == 0) {
            values [i] = values [i - 1] + 4;
        } else {
            values [i] = values [i - 1] + 3;
        } 
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
755
3
Gpt3D_Clone755_3.java 1 11
Gpt3D_Clone755_3.java 12 24
----------------------------------------

public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Queue < Integer > q = new Queue < Integer > ();
    while (! StdIn.isEmpty ()) {
        q.enqueue (StdIn.readInt ());
    }
    while (q.size () > n) {
        q.dequeue ();
    }
    StdOut.println (q.peek ().toString ());
}
----------------------------------------

 public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
    while (System.in.available () > 0) {
        pq.offer(System.in.readInt());
    }
    while(pq.size() > n) {
        pq.poll();
    }
    System.out.println(pq.peek().toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
755
5
Gpt3D_Clone755_5.java 1 11
Gpt3D_Clone755_5.java 12 24
----------------------------------------

public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Queue < Integer > q = new Queue < Integer > ();
    while (! StdIn.isEmpty ()) {
        q.enqueue (StdIn.readInt ());
    }
    while (q.size () > n) {
        q.dequeue ();
    }
    StdOut.println (q.peek ().toString ());
}
----------------------------------------

  public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Deque < Integer > dq = new LinkedList < Integer > ();
    while (System.in.available () > 0) {
        dq.addFirst (System.in.read ());
    }
    while (dq.size () > n) {
        dq.removeLast ();
    }
    System.out.println (dq.peekFirst ().toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
756
1
Gpt3D_Clone756_1.java 1 7
Gpt3D_Clone756_1.java 8 19
----------------------------------------

        public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {
            if (oldHeight != newValue.getHeight ()) {
                System.out.println ("newValue = " + newValue.getHeight ());
                oldHeight = newValue.getHeight ();
                textArea.setPrefHeight (textHolder.getLayoutBounds ().getHeight () + 20);
            }
}
----------------------------------------

  public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {if (oldHeight != newValue.getHeight()) {
      System.out.println("newValue = " + newValue.getHeight());
      oldHeight = newValue.getHeight();
      if (oldHeight < newValue.getHeight()) {
          textArea.setPrefHeight(textHolder.getLayoutBounds().getHeight() + 20);
      } else {
          textArea.setPrefHeight(textHolder.getLayoutBounds().getHeight() - 20);
      }
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
756
2
Gpt3D_Clone756_2.java 1 7
Gpt3D_Clone756_2.java 8 17
----------------------------------------

        public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {
            if (oldHeight != newValue.getHeight ()) {
                System.out.println ("newValue = " + newValue.getHeight ());
                oldHeight = newValue.getHeight ();
                textArea.setPrefHeight (textHolder.getLayoutBounds ().getHeight () + 20);
            }
}
----------------------------------------

  public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {if (oldHeight != newValue.getHeight()) {
      System.out.println("newValue = " + newValue.getHeight());
      oldHeight = newValue.getHeight();
      double difference = Math.abs(oldHeight - newValue.getHeight());
      double newHeight = textArea.getPrefHeight() + difference;
      textArea.setPrefHeight(Math.max(newHeight, textHolder.getLayoutBounds().getHeight() + 20));
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
756
3
Gpt3D_Clone756_3.java 1 7
Gpt3D_Clone756_3.java 8 17
----------------------------------------

        public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {
            if (oldHeight != newValue.getHeight ()) {
                System.out.println ("newValue = " + newValue.getHeight ());
                oldHeight = newValue.getHeight ();
                textArea.setPrefHeight (textHolder.getLayoutBounds ().getHeight () + 20);
            }
}
----------------------------------------

  public void changed (ObservableValue < ? extends Bounds > observable, Bounds oldValue, Bounds newValue) {if (oldHeight != newValue.getHeight()) {
	     System.out.println("newValue = " + newValue.getHeight());
	     oldHeight = newValue.getHeight();
	     double difference = Math.abs(oldHeight - newValue.getHeight());
	     double newHeight = textArea.getPrefHeight() + difference;
	     textArea.setPrefHeight(Math.max(newHeight, textHolder.getLayoutBounds().getHeight() + 20));
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
75
0
Gpt3D_Clone75_0.java 1 24
Gpt3D_Clone75_0.java 25 48
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    int dotPos = - 1;
    int len = dest.length ();
    for (int i = 0;
    i < len; i ++) {
        char c = dest.charAt (i);
        if (c == '.' || c == ',') {
            dotPos = i;
            break;
        }
    }
    if (dotPos >= 0) {
        if (source.equals (".") || source.equals (",")) {
            return "";
        }
        if (dend <= dotPos) {
            return null;
        }
        if (len - dotPos > decimalDigits) {
            return "";
        }
    }
    return null;
}
----------------------------------------

 public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        int dotPos = -1;
        for(int i=0;i<dest.length();i++){
            if(dest.charAt(i) == '.' || dest.charAt(i) == ','){
                dotPos = i;
                break;
            }
        }
        if(dotPos >= 0){
            if(source.equals(".") || source.equals(",")){
                return "";
            }
            if(dend <= dotPos){
                return null;
            }
            if(dest.length()-dotPos > decimalDigits){
                return "";
            }
        }
        return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
760
0
Gpt3D_Clone760_0.java 1 34
Gpt3D_Clone760_0.java 35 81
----------------------------------------

static void investigate (ParameterizedType p, Type...typeArgs) {
    final Class < ? > c = (Class < ? >) p.getRawType ();
    final StringBuilder b = new StringBuilder (c.getName ());
    b.append ('<');
    Type [] localArgs = p.getActualTypeArguments ();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<');
                b.append (typeArgs [nextTypeArg ++]);
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs [nextTypeArg] = typeArgs [nextTypeArg];
                b.append (localArgs [nextTypeArg]);
                nextTypeArg ++;
            } else {
                b.append (local.toString ());
            }
            b.append (", ");
            i ++;
        }
        if (typeArgs.length > 0) {
            b.delete (b.length () - 2, b.length ());
        }
        b.append ('>');
    } else {
        String args = Arrays.toString (localArgs);
        b.append (args.substring (1, args.length () - 1)).append ('>');
    }
    System.out.println (b);
    investigate (c, localArgs);
}
----------------------------------------

 static void investigate(ParameterizedType p, Type... typeArgs) {
    Class<?> c = (Class<?>) p.getRawType();
    StringBuilder b = new StringBuilder(c.getName());
    
    b.append('<');
    Type[] localArgs = p.getActualTypeArguments();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType)local;
                b.append(localP.getRawType()).append('<');
                if (nextTypeArg < typeArgs.length) {
                    b.append(typeArgs[nextTypeArg++]);
                } else {
                    b.append(local.toString());
                }
                b.append('>');
            } 
            else if (local instanceof TypeVariable) {
                localArgs[nextTypeArg] = typeArgs[nextTypeArg];
                b.append(localArgs[nextTypeArg++]);
            } else {
                b.append(local.toString());
            }
            b.append(',');
            i += 1;
        }
        if (typeArgs.length > 0) {
            b.deleteCharAt(b.length() - 1);
            b.append('>');
        }
    } else {
        String args = Arrays.toString(localArgs);
        int startIndex = 1;
        int endIndex = args.length() - 1;
        b.append(args.substring(startIndex, endIndex)).append('>');
    }
    System.out.println(b);
    investigate(c, localArgs);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
760
1
Gpt3D_Clone760_1.java 1 34
Gpt3D_Clone760_1.java 35 78
----------------------------------------

static void investigate (ParameterizedType p, Type...typeArgs) {
    final Class < ? > c = (Class < ? >) p.getRawType ();
    final StringBuilder b = new StringBuilder (c.getName ());
    b.append ('<');
    Type [] localArgs = p.getActualTypeArguments ();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<');
                b.append (typeArgs [nextTypeArg ++]);
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs [nextTypeArg] = typeArgs [nextTypeArg];
                b.append (localArgs [nextTypeArg]);
                nextTypeArg ++;
            } else {
                b.append (local.toString ());
            }
            b.append (", ");
            i ++;
        }
        if (typeArgs.length > 0) {
            b.delete (b.length () - 2, b.length ());
        }
        b.append ('>');
    } else {
        String args = Arrays.toString (localArgs);
        b.append (args.substring (1, args.length () - 1)).append ('>');
    }
    System.out.println (b);
    investigate (c, localArgs);
}
----------------------------------------

 static void investigate(ParameterizedType p, Type...typeArgs) {
    Class<?> c = (Class<?>) p.getRawType();
    StringBuilder b = new StringBuilder(c.getName());
    b.append('<');
    Type[] localArgs = p.getActualTypeArguments();
    
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<'); 
                if (nextTypeArg < typeArgs.length) {
                   b.append (typeArgs [nextTypeArg ++]); 
                } else {
                   b.append (local.toString ()); 
                } 
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs[nextTypeArg] = typeArgs[nextTypeArg];
                b.append(localArgs[nextTypeArg++]);
            } else {
                b.append(local.toString());
            }
            
            b.append(',');
            i += 1;
        }
        
        if (typeArgs.length > 0) {
            b.deleteCharAt(b.length() - 1);
            b.append('>');
        }
    } else {
        String args = Arrays.toString(localArgs);
        int startIndex = 1;
        int endIndex = args.length() - 1;
        b.append(args.substring(startIndex, endIndex)).append('>');
    }
    System.out.println(b);
    investigate(c, localArgs);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
760
2
Gpt3D_Clone760_2.java 1 34
Gpt3D_Clone760_2.java 35 80
----------------------------------------

static void investigate (ParameterizedType p, Type...typeArgs) {
    final Class < ? > c = (Class < ? >) p.getRawType ();
    final StringBuilder b = new StringBuilder (c.getName ());
    b.append ('<');
    Type [] localArgs = p.getActualTypeArguments ();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<');
                b.append (typeArgs [nextTypeArg ++]);
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs [nextTypeArg] = typeArgs [nextTypeArg];
                b.append (localArgs [nextTypeArg]);
                nextTypeArg ++;
            } else {
                b.append (local.toString ());
            }
            b.append (", ");
            i ++;
        }
        if (typeArgs.length > 0) {
            b.delete (b.length () - 2, b.length ());
        }
        b.append ('>');
    } else {
        String args = Arrays.toString (localArgs);
        b.append (args.substring (1, args.length () - 1)).append ('>');
    }
    System.out.println (b);
    investigate (c, localArgs);
}
----------------------------------------

 static void investigate(ParameterizedType p, Type...typeArgs) {
    Class<?> c = (Class<?>) p.getRawType();
    StringBuilder b = new StringBuilder(c.getName());
    b.append('<');
    Type[] localArgs = p.getActualTypeArguments();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType)local;
                b.append(localP.getRawType()).append('<');
                if (nextTypeArg < typeArgs.length) {
                    b.append(typeArgs[nextTypeArg++]);
                } else {
                    b.append(local.toString());
                }
                b.append('>');
            } else if (local instanceof TypeVariable) {
                localArgs[nextTypeArg] = typeArgs[nextTypeArg];
                b.append(localArgs[nextTypeArg++]);
            } else {
                b.append(local.toString());
            }
            b.append(',');
            i = i + 1;
        }
        if (typeArgs.length > 0) {
            b.deleteCharAt(b.length() - 1);
            b.append('>');
        }
    } else {
        String args = Arrays.toString(localArgs);
        int startIndex = 1;
        int endIndex = args.length() - 1;
        b.append(args.substring(startIndex, endIndex)).append('>');
    }
    System.out.println(b);
    investigate(c, localArgs);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
760
3
Gpt3D_Clone760_3.java 1 34
Gpt3D_Clone760_3.java 35 74
----------------------------------------

static void investigate (ParameterizedType p, Type...typeArgs) {
    final Class < ? > c = (Class < ? >) p.getRawType ();
    final StringBuilder b = new StringBuilder (c.getName ());
    b.append ('<');
    Type [] localArgs = p.getActualTypeArguments ();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<');
                b.append (typeArgs [nextTypeArg ++]);
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs [nextTypeArg] = typeArgs [nextTypeArg];
                b.append (localArgs [nextTypeArg]);
                nextTypeArg ++;
            } else {
                b.append (local.toString ());
            }
            b.append (", ");
            i ++;
        }
        if (typeArgs.length > 0) {
            b.delete (b.length () - 2, b.length ());
        }
        b.append ('>');
    } else {
        String args = Arrays.toString (localArgs);
        b.append (args.substring (1, args.length () - 1)).append ('>');
    }
    System.out.println (b);
    investigate (c, localArgs);
}
----------------------------------------

 static void investigate(ParameterizedType p, Type...typeArgs) {
    final Class<?> c = (Class <?>) p.getRawType();
    final StringBuilder b = new StringBuilder(c.getName());
    b.append('<');
    Type[] localArgs = p.getActualTypeArguments();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType)local;
                b.append((localP.getRawType()));
                b.append('<');
                b.append(typeArgs[nextTypeArg++]);
                b.append('>');
            } else if (local instanceof TypeVariable) {
                localArgs[nextTypeArg] = typeArgs[nextTypeArg];
                b.append((localArgs[nextTypeArg]));
                nextTypeArg = nextTypeArg + 1;
            } else {
                b.append(local.toString());
            }
            b.append(',');
            i = i + 1;
        }
        if (typeArgs.length > 0) {
            int len = b.length();
            b.deleteCharAt(len - 1);
            b.append('>');
        }
    } else {
        String argument = Arrays.toString(localArgs);
        int startIndex = 1;
        int endIndex = argument.length() - 1;
        b.append(argument.substring(startIndex, endIndex)).append('>');
    }
    System.out.println(b);
    investigate(c, localArgs);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
760
4
Gpt3D_Clone760_4.java 1 34
Gpt3D_Clone760_4.java 35 70
----------------------------------------

static void investigate (ParameterizedType p, Type...typeArgs) {
    final Class < ? > c = (Class < ? >) p.getRawType ();
    final StringBuilder b = new StringBuilder (c.getName ());
    b.append ('<');
    Type [] localArgs = p.getActualTypeArguments ();
    if (typeArgs != null && typeArgs.length > 0) {
        int i = 0, nextTypeArg = 0;
        for (Type local : localArgs) {
            if (local instanceof ParameterizedType) {
                ParameterizedType localP = (ParameterizedType) local;
                b.append (localP.getRawType ()).append ('<');
                b.append (typeArgs [nextTypeArg ++]);
                b.append ('>');
            } else if (local instanceof TypeVariable) {
                localArgs [nextTypeArg] = typeArgs [nextTypeArg];
                b.append (localArgs [nextTypeArg]);
                nextTypeArg ++;
            } else {
                b.append (local.toString ());
            }
            b.append (", ");
            i ++;
        }
        if (typeArgs.length > 0) {
            b.delete (b.length () - 2, b.length ());
        }
        b.append ('>');
    } else {
        String args = Arrays.toString (localArgs);
        b.append (args.substring (1, args.length () - 1)).append ('>');
    }
    System.out.println (b);
    investigate (c, localArgs);
}
----------------------------------------

 static void investigate (ParameterizedType p, Type...typeArgs) { 
    Class < ? > c = (Class < ? >) p.getRawType (); 
    StringBuilder b = new StringBuilder (c.getName ()); 
    b.append ('<'); 
    Type [] localArgs = p.getActualTypeArguments (); 
    int i = 0, nextTypeArg = 0; 
    for (Type local : localArgs) { 
        if (local instanceof ParameterizedType) { 
            ParameterizedType localP = (ParameterizedType) local; 
            b.append (localP.getRawType ()).append ('<'); 
            if (typeArgs != null && typeArgs.length > 0 && nextTypeArg < typeArgs.length ) { 
                b.append (typeArgs [nextTypeArg ++]); 
            } else { 
                b.append (local.toString ()); 
            }
            b.append ('>'); 
        } else if (local instanceof TypeVariable) { 
            localArgs [nextTypeArg] = typeArgs [nextTypeArg]; 
            b.append (localArgs [nextTypeArg]); 
            nextTypeArg ++; 
        } else { 
            b.append (local.toString ()); 
        }
        b.append (", "); 
        i ++; 
    } 
    if (typeArgs != null && typeArgs.length > 0) { 
        b.delete (b.length () - 2, b.length ()); 
    } 
    b.append ('>'); 
    System.out.println (b); 
    investigate (c, localArgs); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
764
0
Gpt3D_Clone764_0.java 1 20
Gpt3D_Clone764_0.java 21 42
----------------------------------------

public static void main (String [] args) {
    String s1 = "Cat";
    String s2 = "Cat";
    String s3 = new String ("Cat");
    if (s1 == s2) {
        System.out.println ("true");
    } else {
        System.out.println ("false");
    }
    if (s1 == s3) {
        System.out.println ("true");
    } else {
        System.out.println ("false");
    }
    if (s1.equals (s3)) {
        System.out.println ("true");
    } else {
        System.out.println ("False");
    }
}
----------------------------------------

 public static void main(String[] args) { 
    String s1 = "Cat"; 
    String s2 = new String(s1);
    String s3 = new String ("Cat"); 
    if (s1.equals(s2)) { 
        System.out.println("true"); 
    } else { 
        System.out.println("false"); 
    } 
    if (s1.equalsIgnoreCase(s3)) { 
        System.out.println("true"); 
    } else { 
        System.out.println("false"); 
    } 
    if (s1 == s3) { 
        System.out.println("true"); 
    } else { 
        System.out.println("False"); 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
764
1
Gpt3D_Clone764_1.java 1 20
Gpt3D_Clone764_1.java 21 42
----------------------------------------

public static void main (String [] args) {
    String s1 = "Cat";
    String s2 = "Cat";
    String s3 = new String ("Cat");
    if (s1 == s2) {
        System.out.println ("true");
    } else {
        System.out.println ("false");
    }
    if (s1 == s3) {
        System.out.println ("true");
    } else {
        System.out.println ("false");
    }
    if (s1.equals (s3)) {
        System.out.println ("true");
    } else {
        System.out.println ("False");
    }
}
----------------------------------------

 public static void main(String[] args) { 
    String s1 = "Cat"; 
    String s2 = new String("Cat"); 
    String s3 = new String ("Cat"); 
    if (s1.equalsIgnoreCase(s2)) { 
        System.out.println("true"); 
    } else { 
        System.out.println("false"); 
    } 
    if (s1.equals(s3)) { 
        System.out.println("true"); 
    } else { 
        System.out.println("false"); 
    } 
    if (s1 == s3) { 
        System.out.println("true"); 
    } else { 
        System.out.println("False"); 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
0
Gpt3D_Clone765_0.java 1 11
Gpt3D_Clone765_0.java 12 26
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	SortedSet<Double> set = new TreeSet<>();
	for (int i = 0;
	i < trys; i ++) {
	    set.add(processTry(scanner));
	    System.out.println (set.first());
	    set.remove(set.first());
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
1
Gpt3D_Clone765_1.java 1 11
Gpt3D_Clone765_1.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	int[] arr = new int[trys];
	for (int i = 0;
	i < trys; i ++) {
	    arr[i] = processTry(scanner);
	    System.out.println (arr[i]);
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
2
Gpt3D_Clone765_2.java 1 11
Gpt3D_Clone765_2.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	Stack<Double> stack = new Stack<>();
	for (int i = 0;
	i < trys; i ++) {
	    stack.push(processTry(scanner));
	    System.out.println (stack.pop());
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
3
Gpt3D_Clone765_3.java 1 11
Gpt3D_Clone765_3.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	PriorityQueue<Double> pq = new PriorityQueue<>();
	for (int i = 0;
	i < trys; i ++) {
	    pq.add(processTry(scanner));
	    System.out.println (pq.poll());
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
4
Gpt3D_Clone765_4.java 1 11
Gpt3D_Clone765_4.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	Double[] arr = new Double[trys];
	for (int i = 0;
	i < trys; i ++) {
	    arr[i] = (double) processTry(scanner);
	    System.out.println (arr[i]);
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
5
Gpt3D_Clone765_5.java 1 11
Gpt3D_Clone765_5.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	ArrayList<Integer> arr = new ArrayList<Integer>();
	for (int i = 0;
	i < trys; i ++) {
	    arr.add(processTry(scanner));
	    System.out.println (arr.get(i));
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
6
Gpt3D_Clone765_6.java 1 11
Gpt3D_Clone765_6.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	Queue<Double> queue = new LinkedList<>();
	for (int i = 0;
	i < trys; i ++) {
	    queue.add(processTry(scanner));
	    System.out.println (queue.poll());
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
7
Gpt3D_Clone765_7.java 1 11
Gpt3D_Clone765_7.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	Vector<Double> vec = new Vector<>();
	for (int i = 0;
	i < trys; i ++) {
	    vec.add(processTry(scanner));
	    System.out.println (vec.get(i));
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
8
Gpt3D_Clone765_8.java 1 11
Gpt3D_Clone765_8.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	LinkedList<Double> arr = new LinkedList<>();
	for (int i = 0;
	i < trys; i ++) {
	    arr.add(processTry(scanner));
	    System.out.println (arr.get(i));
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
765
9
Gpt3D_Clone765_9.java 1 11
Gpt3D_Clone765_9.java 12 25
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

 public static void main (String [] args) {
	Scanner scanner = new Scanner (System.in);
	String line = scanner.nextLine ();
	int trys = Integer.parseInt (line.trim());
	HashMap<Integer, Double> hmap = new HashMap<>();
	for (int i = 0;
	i < trys; i ++) {
	    hmap.put(i, processTry(scanner));
	    System.out.println (hmap.get(i));
	}
	scanner.close ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
767
0
Gpt3D_Clone767_0.java 1 18
Gpt3D_Clone767_0.java 19 38
----------------------------------------

public int solution (int [] A) {
    int [] mark = new int [A.length + 1];
    int counter = 0;
    for (int i = 0;
    i < A.length; ++ i) {
        int value = A [i];
        if (value >= mark.length) {
            return NOT_PERMUTATION;
        }
        if (mark [value] == 0) {
            mark [value] = 1;
            ++ counter;
        } else {
            return NOT_PERMUTATION;
        }
    }
    return counter == A.length ? PERMUTATION : NOT_PERMUTATION;
}
----------------------------------------

  public int solution (int [] A) {
    HashSet<Integer> set = new HashSet<>();
    int counter = 0;
    for (int i = 0;
    i < A.length; ++ i) {
        int value = A [i];
        if (value >= A.length + 1) {
            return NOT_PERMUTATION;
        }
        if (set.contains(value)) {
            return NOT_PERMUTATION;
        } else {
            set.add(value);
            ++ counter;
        }
    }
    return counter == A.length ? PERMUTATION : NOT_PERMUTATION;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
1
Gpt3D_Clone768_1.java 1 10
Gpt3D_Clone768_1.java 11 23
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i=0; i < (n/2); i++) {
        if (s.charAt (i) != s.charAt (n-i-1)) {
            return false;
        } else if (i == n/2 - 1) {
            return true;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
2
Gpt3D_Clone768_2.java 1 10
Gpt3D_Clone768_2.java 11 23
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPalindrome (String s) {
    int n = s.length ();
    int i = 0;
    while (i < n/2) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
        i++;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
3
Gpt3D_Clone768_3.java 1 10
Gpt3D_Clone768_3.java 11 23
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPalindrome (String s) {
    int n = s.length ();
    int i = 0;
    while (i < (n/2)) {
        if (s.charAt (i) != s.charAt(n-i-1)) {
            return false;
        } 
        i++;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
5
Gpt3D_Clone768_5.java 1 10
Gpt3D_Clone768_5.java 11 21
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPalindrome (String s) {
    int n = s.length ();
    while (n-- > 0) {
        if (s.charAt (n/2) != s.charAt (n-n/2-1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
6
Gpt3D_Clone768_6.java 1 10
Gpt3D_Clone768_6.java 11 21
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i=0; i < (n/2); i++) {
        if (!s.substring (i, i+1).equals (s.substring (n-i-1, n-i))) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
2
Gpt3D_Clone76_2.java 1 8
Gpt3D_Clone76_2.java 9 22
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String replacement = source.subSequence(start, end).toString();
        String newVal = dest.subSequence(0, dstart).toString() + replacement + dest.subSequence(dend, dest.length()).toString();
        Matcher matcher = mPattern.matcher(newVal);
        if (matcher.matches()) {
            if (TextUtils.isEmpty(source))
                return dest.subSequence(dstart, dend);
            else 
                return "";
        } else 
            return source.subSequence(start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
4
Gpt3D_Clone76_4.java 1 8
Gpt3D_Clone76_4.java 9 23
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String replacement = source.subSequence(start, end).toString();
        String newVal = dest.subSequence(0, dstart).toString() + replacement + dest.subSequence(dend, dest.length()).toString();
        Matcher matcher = mPattern.matcher(newVal);
        if (matcher.matches())
            return "";
        else {
            if (TextUtils.isEmpty(source))
                return dest.subSequence(dstart, dend);
            else 
                return source.subSequence(start, end);
        } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
7
Gpt3D_Clone76_7.java 1 8
Gpt3D_Clone76_7.java 9 21
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String replacement = source.subSequence(start, end).toString();
        String newVal = dest.subSequence(0, dstart).toString() + replacement + dest.subSequence(dend, dest.length()).toString();
        Matcher matcher = mPattern.matcher(newVal);
        if (matcher.matches())
            return source.subSequence(start, end);
        else if (TextUtils.isEmpty(source))
            return dest.subSequence(dstart, dend);
        else 
            return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
8
Gpt3D_Clone76_8.java 1 8
Gpt3D_Clone76_8.java 9 22
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String newVal = dest.subSequence(0, dstart).toString() + dest.subSequence(dend, dest.length()).toString();
        Matcher matcher = mPattern.matcher(newVal);
        if (matcher.matches())
            return null;
        else {
            if (TextUtils.isEmpty(source))
                return dest.subSequence(dstart, dend);
            else 
                return "";
        }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
9
Gpt3D_Clone76_9.java 1 8
Gpt3D_Clone76_9.java 9 20
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String replacement = source.subSequence(start, end).toString();
        String newVal = dest.subSequence(0, dstart).toString() + replacement + dest.subSequence(dend, dest.length()).toString();
        Matcher matcher = mPattern.matcher(newVal);
        if (matcher.matches())
            return source.subSequence(start, end);
        else
            return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
774
2
Gpt3D_Clone774_2.java 1 10
Gpt3D_Clone774_2.java 11 23
----------------------------------------

public static void main (String arg []) {
    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    double p_int = ArrayMath.ScalarProduct (v1, v2);
    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);
    System.out.println ("p_int:" + p_int);
    System.out.println ("p_double:" + p_double);
}
----------------------------------------

 
public static void main (String[] args) {
    Integer[] v1 = new Integer[]{1, - 10, 3, 9, 7, 99, - 25};
    Integer[] v2 = new Integer[] {1, - 10, 3, 9, 7, 99, - 25};
    int p_int = ArrayMath.ScalarProductIntegers(v1, v2);
    Double[] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double[] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    double p_double = ArrayMath.ScalarProductDoubles(v1_d, v2_d);
    System.out.println("p_int:" + p_int);
    System.out.println("p_double:" + p_double);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
774
3
Gpt3D_Clone774_3.java 1 10
Gpt3D_Clone774_3.java 11 23
----------------------------------------

public static void main (String arg []) {
    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    double p_int = ArrayMath.ScalarProduct (v1, v2);
    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);
    System.out.println ("p_int:" + p_int);
    System.out.println ("p_double:" + p_double);
}
----------------------------------------

 
public static void main (String [] arg) {
      int[] v1 = {1, -10, 3, 9, 7, 99, -25};
      int[] v2 = {1, -10, 3, 9, 7, 99, -25};
      double p_int = ArrayMath.calculateScalarProduct(v1, v2);
      Double[] v1_d = {1.1, -10.5, 3.7, 9.98, 7.4, 9.9, -2.5};
      Double[] v2_d = {1.1, -10.5, 3.7, 9.98, 7.4, 9.9, -2.5};
      Double p_double = ArrayMath.calculateScalarProduct(v1_d, v2_d);
      System.out.println("p_int:" + p_int);
      System.out.println("p_double:" + p_double);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
774
5
Gpt3D_Clone774_5.java 1 10
Gpt3D_Clone774_5.java 11 23
----------------------------------------

public static void main (String arg []) {
    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    double p_int = ArrayMath.ScalarProduct (v1, v2);
    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);
    System.out.println ("p_int:" + p_int);
    System.out.println ("p_double:" + p_double);
}
----------------------------------------

 
public static void main (String[] args) {
    Integer[] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer[] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    int p_int = ArrayMath.scalarProduct(v1, v2);
    Double[] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double[] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    double p_double = ArrayMath.scalarProduct(v1_d, v2_d);
    System.out.println("p_int:" + p_int);
    System.out.println("p_double:" + p_double);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
1
Gpt3D_Clone775_1.java 1 10
Gpt3D_Clone775_1.java 11 24
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

 public boolean check(double x1, double y1, double x2, double y2, double x, double y) {
    if(x1 == x2) {
	    return (y1 < y2) ? (y >= y1 && y <= y2) : (y2 <= y && y <= y1);
	}
	double m = (y2 - y1) / (x2 - x1);
	double r1 = x1 + m * y1;
	double r2 = x2 + m * y2;
	double r = x + m * y;
	if(r1 < r2)
	    return (r >= r1 && r <= r2);
	return (r >= r2 && r <= r1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
2
Gpt3D_Clone775_2.java 1 10
Gpt3D_Clone775_2.java 11 24
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

 public boolean check(double x1, double y1, double x2, double y2, double x, double y) {
    if(x1 == x2) {
		return (y1 < y2) ? (y >= y1 && y <= y2) : (y >= y2 && y <=y1);
	}
	double m = (y2 - y1) / (x2 - x1);
	double r1 = x1 + m * y1;
	double r2 = x2 + m * y2;
	double r = x + m * y;
	if(r1 < r2)
	    return (r >= r1 && r <= r2);
	return (r >= r2 && r <= r1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
3
Gpt3D_Clone775_3.java 1 10
Gpt3D_Clone775_3.java 11 24
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

 public boolean check(double x1, double y1, double x2, double y2, double x, double y) {
    if(x1 == x2) {
	    return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
	}
	double m = (y2 - y1) / (x2 - x1);
	double r1 = x1 + m * y1;
	double r2 = x2 + m * y2;
	double r = x + m * y;
	if(r1 < r2)
	    return (r >= r1 && r <= r2);
	return (r2 <= r && r <= r1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
2
Gpt3D_Clone778_2.java 1 14
Gpt3D_Clone778_2.java 15 30
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

 public static boolean twoDuplicates(int[] values) {
    for (int i = 0; i < values.length; i++) {
        int count = 0;
        for (int j = i + 1; j < values.length; j++) {
            if (values[i] == values[j]) {
                count++;
                if (count == 2) {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
3
Gpt3D_Clone778_3.java 1 14
Gpt3D_Clone778_3.java 15 30
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

 public static boolean twoDuplicates(int[] values) {
    for (int i = 0; i < values.length; i++) {
        int cnt = 0;
        for (int j = i + 1; j < values.length; j++) {
            if (values[i] == values[j]) {
                cnt++;
                if (cnt > 1) {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
4
Gpt3D_Clone778_4.java 1 14
Gpt3D_Clone778_4.java 15 30
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

 public static boolean twoDuplicates(int[] values) {
    for (int i = 0; i < values.length; i++) {
        int count = 0;
        for (int j = 0; j < i; j++) {
            if (values[i] == values[j]) {
                count++;
                if (count == 2) {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
5
Gpt3D_Clone778_5.java 1 14
Gpt3D_Clone778_5.java 15 30
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

 public static boolean twoDuplicates(int[] values) {
    for (int i = 0; i < values.length; i++) {
        int count = 0;
        for (int j = i; j < values.length; j++) {
            if (values[i] == values[j]) {
                count++;
                if (count == 2) {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
0
Gpt3D_Clone779_0.java 1 11
Gpt3D_Clone779_0.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args) 
{ 
    Map<String, Integer> map = new HashMap<String, Integer>(); 
    for(String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) { 
        if(map.containsKey(s)) 
            map.put(s, map.get(s) + 1); 
        else
            map.put(s, 1); 
    } 
    List<String> uniqueStrings = new ArrayList<String>(map.keySet()); 
    List<Integer> values = new ArrayList<Integer>(map.values()); 
    System.out.println("Output = " + String.join(", ", uniqueStrings)); 
    System.out.println("Values = " + values); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
1
Gpt3D_Clone779_1.java 1 11
Gpt3D_Clone779_1.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args) 
{ 
    Map <String, Integer> result = new TreeMap<String, Integer>(); 
    for (String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) {
        if (result.containsKey(s)) 
            result.put(s, result.get(s) + 1);
        else
            result.put(s, 1);
    } 
    String uniqueString = String.join(", ", result.keySet()); 
    List<Integer> value = new ArrayList<Integer>(result.values()); 
    System.out.println("Output = " + uniqueString); 
    System.out.println("Values = " + value); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
2
Gpt3D_Clone779_2.java 1 11
Gpt3D_Clone779_2.java 12 26
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main(String[] args){
    Map<String, Integer> score = new HashMap<String, Integer>();
    for(String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")){
        if (score.containsKey(s))
            score.put(s, score.get(s) + 1);
        else
            score.put(s, 1);
    }
    String outputString = String.join(", ", score.keySet());
    List<Integer> values = new ArrayList<Integer>(score.values());
    System.out.println("Output = " + outputString);
    System.out.println("Values = " + values);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
3
Gpt3D_Clone779_3.java 1 11
Gpt3D_Clone779_3.java 12 26
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main(String[] args) {
    Map<String, Integer> quantity = new HashMap<String, Integer>();
    for (String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) {
        if (quantity.containsKey(s))
            quantity.put(s, quantity.get(s) + 1);
        else
            quantity.put(s, 1);
    }
    String outputSentence = String.join(", ", quantity.keySet());
    List <Integer> numericals = new ArrayList<Integer>(quantity.values());
    System.out.println("Output = " + outputSentence);
    System.out.println("Values = " + numericals);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
4
Gpt3D_Clone779_4.java 1 11
Gpt3D_Clone779_4.java 12 26
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main(String[] args){
    Map<String, Integer> tables = new LinkedHashMap<String, Integer>();
    for(String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")){
        if(tables.containsKey(s))
            tables.put(s, tables.get(s) + 1);
        else
            tables.put(s, 1);
    }
    String outputString = String.join(", ", tables.keySet());
    List<Integer> counts = new ArrayList<Integer>(tables.values());
    System.out.println("Output = " + outputString);
    System.out.println("Values = " + counts);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
5
Gpt3D_Clone779_5.java 1 11
Gpt3D_Clone779_5.java 12 26
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args){ 
    HashMap<String,Integer> map = new LinkedHashMap <String, Integer> (); 
    for(String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")){
        if(map.containsKey(s)) 
            map.put(s,  map.get(s) + 1); 
        else
            map.put(s,1);
    }
    Object[] arr=map.keySet().toArray();
    List<Integer> values=new ArrayList<Integer>(map.values());
    System.out.println("Output = "+arr[0]+", "+arr[1]);
    System.out.println("Values = "+values);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
6
Gpt3D_Clone779_6.java 1 11
Gpt3D_Clone779_6.java 12 26
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args){ 
    Map<String, Integer> counter = new HashMap<String, Integer>(); 
    for (String word : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) {
        if (counter.containsKey(word))
            counter.put(word, counter.get(word) + 1);
        else
            counter.put(word, 1);
    } 
    String outputString = String.join(", ", counter.keySet()); 
    List<Integer> count = new ArrayList<Integer>(counter.values()); 
    System.out.println("Output = " + outputString); 
    System.out.println("Values = " + count); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
7
Gpt3D_Clone779_7.java 1 11
Gpt3D_Clone779_7.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args) 
{ 
    Map<String, Integer> counter = new TreeMap<String, Integer>(); 
    for(String word : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) {
        if(counter.containsKey(word))
            counter.put(word, counter.get(word) + 1);
        else
            counter.put(word, 1);
    } 
    String outputString = String.join(", ", counter.keySet()); 
    List<Integer> count = new ArrayList<Integer>(counter.values()); 
    System.out.println("Output = " + outputString); 
    System.out.println("Values = " + count); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
8
Gpt3D_Clone779_8.java 1 11
Gpt3D_Clone779_8.java 12 28
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args) 
{ 
    Map<String, Integer> list = new TreeMap<String, Integer>(); 
    for(String string : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) 
    {
        if(list.containsKey(string))
            list.put(string, list.get(string) + 1); 
        else
            list.put(string, 1); 
    }
    String outputString = String.join(", ", list.keySet()); 
    List<Integer> num = new ArrayList<Integer>(list.values()); 
    System.out.println("Output = " + outputString); 
    System.out.println("Values = " + num);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
9
Gpt3D_Clone779_9.java 1 11
Gpt3D_Clone779_9.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

 public static void main (String [] args) 
{ 
    Map<String, Integer> store = new LinkedHashMap<String, Integer>(); 
    for(String s : "House, House, House, Dog, Dog, Dog, Dog".split(", ")) {
        if(store.containsKey(s))
            store.put(s, store.get(s) + 1);
        else
            store.put(s, 1);
    }
    String outputString = String.join(", ", store.keySet());
    List<Integer> summations = new ArrayList<Integer>(store.values());
    System.out.println("Output = " + outputString);
    System.out.println("Values = " + summations);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
780
0
Gpt3D_Clone780_0.java 1 16
Gpt3D_Clone780_0.java 17 34
----------------------------------------

public static int binarySearch (int anArray [], int first, int last, int value) {
    do {
        if (first > last) {
            return - 1;
        } else {
            int mid = (first + last) / 2;
            if (value == anArray [mid]) {
                return mid;
            } else if (value < anArray [mid]) {
                last = mid - 1;
            } else {
                first = mid + 1;
            }
        }
    } while (true);
}
----------------------------------------

 public static int binarySearch(int anArray[], int first, int last, int value) {
    int mid = first + (last - first) / 2;
    while (first <= last) {
        if (value == anArray[mid]) {
            return mid;
        }
        else if (value < anArray[mid]) {
            last = mid - 1;
        }
        else {
            first = mid + 1;
        }
        mid = first + (last - first) / 2;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
781
0
Gpt3D_Clone781_0.java 1 18
Gpt3D_Clone781_0.java 19 36
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    out : for (int i = 0;
    i < 3; ++ i) {
        System.out.println ("I am here");
        for (int j = 0;
        j < 20; ++ j) {
            if (temp == 0) {
                System.out.println ("j: " + j);
                if (j == 1) {
                    temp = j;
                    continue out;
                }
            }
        }
    }
    System.out.println ("temp = " + temp);
}
----------------------------------------

 public static void main(String [] args) { 
    int temp = 0;
    out: for (int i = 0; i < 3; i++) {
        System.out.println("I am here");
        for (int j = 0; j < 20; j++) {
            if(temp == 0) {
                System.out.println("j: " + j);
                if(j == 1) {
                    temp = j + 1;
                    continue out; 
                }
            }
        }
    }
    System.out.println("temp = " + temp);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
781
1
Gpt3D_Clone781_1.java 1 18
Gpt3D_Clone781_1.java 19 36
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    out : for (int i = 0;
    i < 3; ++ i) {
        System.out.println ("I am here");
        for (int j = 0;
        j < 20; ++ j) {
            if (temp == 0) {
                System.out.println ("j: " + j);
                if (j == 1) {
                    temp = j;
                    continue out;
                }
            }
        }
    }
    System.out.println ("temp = " + temp);
}
----------------------------------------

 public static void main(String [] args) { 
    int temp = 0;
    out: for (int i = 0; i < 3; i++) {
        System.out.println("I am here");
        for (int j = 0; j < 20; j++) {
            if(temp == 0) {
                System.out.println("j: " + j);
                if(j == 1) {
                    temp = j + 3;
                    continue out;
                }
            }
        }
    }
    System.out.println("temp = " + temp);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
781
2
Gpt3D_Clone781_2.java 1 18
Gpt3D_Clone781_2.java 19 36
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    out : for (int i = 0;
    i < 3; ++ i) {
        System.out.println ("I am here");
        for (int j = 0;
        j < 20; ++ j) {
            if (temp == 0) {
                System.out.println ("j: " + j);
                if (j == 1) {
                    temp = j;
                    continue out;
                }
            }
        }
    }
    System.out.println ("temp = " + temp);
}
----------------------------------------

 public static void main(String [] args) {
    int temp = 0;
    out: for (int i = 0; i < 3; i++) {
        System.out.println("I am here");
        for (int j = 0; j < 20; j++) {
            if(temp == 0) {
                System.out.println("j: " + j);
                if(j == 1) {
                    temp = j + 7;
                    continue out;
                }
            }
        }
    }
    System.out.println("temp = " + temp);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
781
3
Gpt3D_Clone781_3.java 1 18
Gpt3D_Clone781_3.java 19 36
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    out : for (int i = 0;
    i < 3; ++ i) {
        System.out.println ("I am here");
        for (int j = 0;
        j < 20; ++ j) {
            if (temp == 0) {
                System.out.println ("j: " + j);
                if (j == 1) {
                    temp = j;
                    continue out;
                }
            }
        }
    }
    System.out.println ("temp = " + temp);
}
----------------------------------------

 public static void main(String [] args) {
    int temp = 0;
    out: for (int i = 0; i < 3; i++) {
        System.out.println("I am here");
        for (int j = 0; j < 20; j++) {
            if(temp == 0) {
                System.out.println("j: " + j);
                if(j == 1) {
                    temp = j + 9;
                    continue out;
                }
            }
        }
    }
    System.out.println("temp = " + temp);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
781
4
Gpt3D_Clone781_4.java 1 18
Gpt3D_Clone781_4.java 19 36
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    out : for (int i = 0;
    i < 3; ++ i) {
        System.out.println ("I am here");
        for (int j = 0;
        j < 20; ++ j) {
            if (temp == 0) {
                System.out.println ("j: " + j);
                if (j == 1) {
                    temp = j;
                    continue out;
                }
            }
        }
    }
    System.out.println ("temp = " + temp);
}
----------------------------------------

 public static void main(String [] args) {
    int temp = 0;
    out: for (int i = 0; i < 3; i++) {
        System.out.println("I am here");
        for (int j = 0; j < 20; j++) {
            if(temp == 0) {
                System.out.println("j: " + j);
                if(j == 1) {
                    temp = j + 5;
                    continue out;
                }
            }
        }
    }
    System.out.println("temp = " + temp);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
782
0
Gpt3D_Clone782_0.java 1 22
Gpt3D_Clone782_0.java 23 46
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 20, maxItems = 0;
    String arrayOfNames [] = new String [numOfItems];
    String Temp = "";
    for (int i = 0;
    i < arrayOfNames.length; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        Temp = scan.nextLine ();
        if (Temp.equals (arrayOfNames [0])) {
            maxItems = i;
            break;
        } else {
            arrayOfNames [i] = Temp;
        }
    }
    for (int i = 0;
    i < maxItems; i ++) {
        System.out.print ("Item # " + (i + 1) + " : ");
        System.out.print (arrayOfNames [i] + "\n");
    }
}
----------------------------------------

 public static void main(String[] args) {
	    Scanner scan = new Scanner (System.in);
	    int numOfItems = 20;
	    String[] arrayOfNames = new String[numOfItems];
	    String temp;
	    int maxItems;
	    while (maxItems < arrayOfNames.length) {
	      System.out.print("Enter Item " + (maxItems + 1) + " : ");
	      temp = scan.nextLine();
	      if (arrOfNames[0].equals(temp)) {
		maxItems = maxItems;
		break;
	      } else {
		arrayOfNames[maxItems] = temp;
		maxItems++;
	      }
	    }
	    for (int i = 0; i < maxItems; i++) {
	      System.out.print("Item # " + (i + 1) + " : ");
	      System.out.println(arrayOfNames[i] + "\n");
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
786
4
Gpt3D_Clone786_4.java 1 11
Gpt3D_Clone786_4.java 12 21
----------------------------------------

public void makeGrid (int size) {
    this.lines = size;
    grid = new Cell [size] [size];
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            grid [i] [j] = new Cell ();
        }
    }
}
----------------------------------------

 public void makeGrid (int size) {
    this.lines = size;
    grid = new Cell[size][size];
    for (int x = 0; x < size; x++) {
        for (int y = 0; y < size; y++) 
            grid[x][y] = new Cell();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
0
Gpt3D_Clone787_0.java 1 28
Gpt3D_Clone787_0.java 29 65
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    for (EventPriority priority : EventPriority.values()) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, true);
        if (internalMapping != null) {
            internalMapping.entrySet().stream()
                    .sorted(Comparator.comparing(Entry::getKey))
                    .forEach(entry -> {
                        invokeEntry(entry, event);
                        if (cancellable && cancellableEvent.isCancelled()) {
                            return;
                        }
                    });
        }
    }
    for (EventPriority priority : EventPriority.values()) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if (internalMapping != null) {
            internalMapping.entrySet().stream()
                    .sorted(Comparator.comparing(Entry::getKey))
                    .forEach(entry -> {
                        invokeEntry(entry, event);
                        if (cancellable && cancellableEvent.isCancelled()) {
                            return;
                        }
                    });
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
1
Gpt3D_Clone787_1.java 1 28
Gpt3D_Clone787_1.java 29 59
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    ArrayList<EventPriority> priorities = new ArrayList<>(Arrays.asList(EventPriority.values()));
    Collections.reverse(priorities);
    for (EventPriority priority : priorities) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if (internalMapping != null) {
            List<Entry<Method, EventListener>> entries = internalMapping.entrySet();
            Collections.sort(entries, new Comparator<Entry<Method, EventListener>>() {
                @Override
                public int compare(Entry<Method, EventListener> o1, Entry<Method, EventListener> o2) {
                    return o2.getValue().getName().compareTo(o1.getValue().getName());
                }
            });
            for (Entry<Method, EventListener> entry : entries) {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
2
Gpt3D_Clone787_2.java 1 28
Gpt3D_Clone787_2.java 29 52
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    EventPriority[] priorities = EventPriority.values();
    for (int i = priorities.length - 1; i >= 0; i--) {
        EventPriority priority = priorities[i];
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if (internalMapping != null) {
            internalMapping.entrySet().forEach(entry -> {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            });
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
3
Gpt3D_Clone787_3.java 1 28
Gpt3D_Clone787_3.java 29 53
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    EventPriority[] priorities = EventPriority.values();
    for (EventPriority priority : priorities) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, true);
        if (internalMapping != null) {
            internalMapping.entrySet().stream()
                    .sorted(Comparator.comparing(entry -> entry.getValue().getName()))
                    .forEach(entry -> {
                        invokeEntry(entry, event);
                        if (cancellable && cancellableEvent.isCancelled()) {
                            return;
                        }
                    });
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
4
Gpt3D_Clone787_4.java 1 28
Gpt3D_Clone787_4.java 29 54
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    Iterator<EventPriority> priorityIterator = Arrays.stream(EventPriority.values())
            .iterator();
    while (priorityIterator.hasNext())
    {
        EventPriority priority = priorityIterator.next();
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, true);
        if (internalMapping != null) {
            for (Entry<Method, EventListener> entry : internalMapping.entrySet()) {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
5
Gpt3D_Clone787_5.java 1 28
Gpt3D_Clone787_5.java 29 52
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    List<EventPriority> priorities = Arrays.asList(EventPriority.values());
    for (int i = priorities.size() - 1; i >= 0; i--) {
        EventPriority priority = priorities.get(i);
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if (internalMapping != null) {
            for (Entry<Method, EventListener> entry : internalMapping.descendingMap().values()) {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
6
Gpt3D_Clone787_6.java 1 28
Gpt3D_Clone787_6.java 29 51
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    EventPriority[] priorities = EventPriority.values();
    for (EventPriority priority : priorities) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if (internalMapping != null) {
            internalMapping.entrySet().forEach(entry -> {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            });
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
7
Gpt3D_Clone787_7.java 1 28
Gpt3D_Clone787_7.java 29 50
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

 public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if(cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    for(EventPriority priority : EventPriority.asSortedSet()) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, false);
        if(internalMapping != null) {
            for(Entry<Method, EventListener> entry : internalMapping.entrySet()) {
                invokeEntry(entry,event);
                if(cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
8
Gpt3D_Clone787_8.java 1 28
Gpt3D_Clone787_8.java 29 50
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

public void dispatchEvent(Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if(cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    for(EventPriority priority : EventPriority.values()) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(event.getClass(), priority, true);
        if (internalMapping != null) {
            for(Entry<Method, EventListener> entry : internalMapping.entrySet()) {
                invokeEntry(entry, event);
                if(cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
787
9
Gpt3D_Clone787_9.java 1 28
Gpt3D_Clone787_9.java 29 50
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

  public void dispatchEvent (Event event) {
    checkNotNull(event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument(cancellableEvent.isCancelled());
    }
    for (EventPriority priority : EventPriority.descendingSet()) {
        Map<Method, EventListener> internalMapping = getRegistry().getMethodMap(even.getClass(), priority, false);
        if (internalMapping != null) {
            for (Entry<Method, EventListener> entry : internalMapping.descendingKeySet()) {
                invokeEntry(entry, event);
                if (cancellable && cancellableEvent.isCancelled()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
788
7
Gpt3D_Clone788_7.java 1 11
Gpt3D_Clone788_7.java 12 39
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

 public void dispatchEvent (Event event) {
        Preconditions.checkNotNull (event);
        boolean cancellable = false;
        CancellableEvent cancellableEvent = null;
        if (event instanceof CancellableEvent) {
            cancellableEvent = (CancellableEvent) event;
            Preconditions.checkArgument (cancellableEvent.isCancelled (),
                    "Cancellable event must be cancelled");
            cancellable = true;
        }
        fireEvents (true, event, cancellableEvent, cancellable);
        fireEvents (false, event, cancellableEvent, cancellable);
    }
 public void dispatchEvent (Event event) {
    requireNonNull (event);
    boolean cancellable = false;
    CancellableEvent cancellableEvent = null;
    if (event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        requireArgument (cancellableEvent.isCancelled ());
        cancellable = true;
    }
    fireEvents (true, event, cancellableEvent, cancellable);
    fireEvents (false, event, cancellableEvent, cancellable);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
788
9
Gpt3D_Clone788_9.java 1 11
Gpt3D_Clone788_9.java 12 25
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

 public void dispatchEvent (Event event) {
    checkNotNull (event);
    boolean cancellable = false;
    CancellableEvent cancellableEvent = null;
    if (event instanceof CancellableEvent) {
        checkArgument (cancellableEvent.isCancelled ());
        cancellableEvent = (CancellableEvent) event;
        cancellable = true;
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
78
0
Gpt3D_Clone78_0.java 1 24
Gpt3D_Clone78_0.java 25 44
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    int dotPos = - 1;
    int len = dest.length ();
    for (int i = 0;
    i < len; i ++) {
        char c = dest.charAt (i);
        if (c == '.' || c == ',') {
            dotPos = i;
            break;
        }
    }
    if (dotPos >= 0) {
        if (source.equals (".") || source.equals (",")) {
            return "";
        }
        if (dend <= dotPos) {
            return null;
        }
        if (len - dotPos > decimalDigits) {
            return "";
        }
    }
    return null;
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {if(source.equals(".") || source.equals(","))
        return "";
    int dotPos = -1;
    for(int i = 0; i < len; i++){
        char c = dest.charAt(i); 
        if(c == '.' || c == ','){
            dotPos = i;
            break;
        }
    }
    if (dotPos >= 0){
        if (len - dotPos > decimalDigits)
            return "";
        if (dend<=dotPos) 
            return null;
    } 
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
0
Gpt3D_Clone790_0.java 1 9
Gpt3D_Clone790_0.java 10 22
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || checkFromIndex == coins.length) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex + 1);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
2
Gpt3D_Clone790_2.java 1 9
Gpt3D_Clone790_2.java 10 22
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount < 0 || coins.length == checkFromIndex) return 0;
    else if (amount == 0) return 1;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
3
Gpt3D_Clone790_3.java 1 9
Gpt3D_Clone790_3.java 10 22
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || checkFromIndex == coins.length) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
5
Gpt3D_Clone790_5.java 1 9
Gpt3D_Clone790_5.java 10 22
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (checkFromIndex == coins.length && amount != 0) return 0;
    else if (amount == 0) return 1;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
6
Gpt3D_Clone790_6.java 1 9
Gpt3D_Clone790_6.java 10 22
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || checkFromIndex == coins.length) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex + 1);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
794
1
Gpt3D_Clone794_1.java 1 20
Gpt3D_Clone794_1.java 21 50
----------------------------------------

public String [] [] allUniqueCombinations () {
    int n = dataStructure.keySet ().size ();
    int solutions = 1;
    for (Vector < String > vector : dataStructure.values ()) {
        solutions *= vector.size ();
    }
    String [] [] allCombinations = new String [solutions + 1] [];
    allCombinations [0] = dataStructure.keySet ().toArray (new String [n]);
    for (int i = 0;
    i < solutions; i ++) {
        Vector < String > combination = new Vector < String > (n);
        int j = 1;
        for (Vector < String > vec : dataStructure.values ()) {
            combination.add (vec.get ((i / j) % vec.size ()));
            j *= vec.size ();
        }
        allCombinations [i + 1] = combination.toArray (new String [n]);
    }
    return allCombinations;
}
----------------------------------------

 public String[][] allUniqueCombinations() {
    int n = dataStructure.keySet().size();
    int solutions = 1;
    for (Vector<String> vector : dataStructure.values()) {
        solutions *= vector.size();
    }
    String[][] allCombinations = new String[solutions + 1][];
    allCombinations[0] = dataStructure.keySet().toArray(new String[n]);
    Vector<Integer> indices = new Vector<>();
    for (Vector<String> vector : dataStructure.values()) {
        indices.add(0);
    }
    int index = 0;
    while (index != solutions) {
        Vector<String> combination = new Vector<String>(n);
        int j = 0;
        for (Vector<String> vec : dataStructure.values()) {
            combination.add(vec.get(indices.get(j)));
            if (++indices.get(j).intValue() == vec.size()) {
                indices.set(j, 0);
            }
            j++;
        }
        allCombinations[index + 1] = combination.toArray(new String[n]);
        index++;
    }
    return allCombinations;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
794
5
Gpt3D_Clone794_5.java 1 20
Gpt3D_Clone794_5.java 21 45
----------------------------------------

public String [] [] allUniqueCombinations () {
    int n = dataStructure.keySet ().size ();
    int solutions = 1;
    for (Vector < String > vector : dataStructure.values ()) {
        solutions *= vector.size ();
    }
    String [] [] allCombinations = new String [solutions + 1] [];
    allCombinations [0] = dataStructure.keySet ().toArray (new String [n]);
    for (int i = 0;
    i < solutions; i ++) {
        Vector < String > combination = new Vector < String > (n);
        int j = 1;
        for (Vector < String > vec : dataStructure.values ()) {
            combination.add (vec.get ((i / j) % vec.size ()));
            j *= vec.size ();
        }
        allCombinations [i + 1] = combination.toArray (new String [n]);
    }
    return allCombinations;
}
----------------------------------------

 public String[][] allUniqueCombinations() {
    int n = dataStructure.keySet().size();
    int solutions = 1;
    for (Vector<String> vector : dataStructure.values()) {
        solutions *= vector.size();
    }
    String[][] allCombinations = new String[solutions + 1][];
    allCombinations[0] = dataStructure.keySet().toArray(new String[n]);
    int[] indices = new int[dataStructure.values().size()];
    for (int i = 0; i < solutions; i++) {
        Vector<String> combination = new Vector<String>(n);
        int j = 0;
        for (Vector<String> vec : dataStructure.values()) {
            combination.add(vec.get(indices[j]));
            if (++indices[j] == vec.size()) {
                indices[j] = 0;
            }
            j++;
        }
        allCombinations[i + 1] = combination.toArray(new String[n]);
    }
    return allCombinations;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
794
6
Gpt3D_Clone794_6.java 1 20
Gpt3D_Clone794_6.java 21 46
----------------------------------------

public String [] [] allUniqueCombinations () {
    int n = dataStructure.keySet ().size ();
    int solutions = 1;
    for (Vector < String > vector : dataStructure.values ()) {
        solutions *= vector.size ();
    }
    String [] [] allCombinations = new String [solutions + 1] [];
    allCombinations [0] = dataStructure.keySet ().toArray (new String [n]);
    for (int i = 0;
    i < solutions; i ++) {
        Vector < String > combination = new Vector < String > (n);
        int j = 1;
        for (Vector < String > vec : dataStructure.values ()) {
            combination.add (vec.get ((i / j) % vec.size ()));
            j *= vec.size ();
        }
        allCombinations [i + 1] = combination.toArray (new String [n]);
    }
    return allCombinations;
}
----------------------------------------

 public String[][] allUniqueCombinations() {
    int n = dataStructure.keySet().size();
    int solutions = 1;
    for (Vector<String> vector : dataStructure.values()) {
        solutions *= vector.size();
    }
    String[][] allCombinations = new String[solutions + 1][];
    allCombinations[0] = dataStructure.keySet().toArray(new String[n]);
    int[] indices = new int[dataStructure.values().size()];
    for (int i = 0; i < solutions; i++) {
        Vector<String> combination = new Vector<String>(n);
        int j = 0;
        for (Vector<String> vec : dataStructure.values()) {
            combination.add(vec.get(indices[j]));
            if (++indices[j] == vec.size()) {
                indices[j] = 0;
            }
            j++;
        }
        allCombinations[i + 1] = combination.toArray(new String[n]);
    }
    return allCombinations;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
794
7
Gpt3D_Clone794_7.java 1 20
Gpt3D_Clone794_7.java 21 45
----------------------------------------

public String [] [] allUniqueCombinations () {
    int n = dataStructure.keySet ().size ();
    int solutions = 1;
    for (Vector < String > vector : dataStructure.values ()) {
        solutions *= vector.size ();
    }
    String [] [] allCombinations = new String [solutions + 1] [];
    allCombinations [0] = dataStructure.keySet ().toArray (new String [n]);
    for (int i = 0;
    i < solutions; i ++) {
        Vector < String > combination = new Vector < String > (n);
        int j = 1;
        for (Vector < String > vec : dataStructure.values ()) {
            combination.add (vec.get ((i / j) % vec.size ()));
            j *= vec.size ();
        }
        allCombinations [i + 1] = combination.toArray (new String [n]);
    }
    return allCombinations;
}
----------------------------------------

 public String[][] allUniqueCombinations() {
    int n = dataStructure.keySet().size();
    int solutions = 1;
    for (Vector<String> vector : dataStructure.values()) {
        solutions *= vector.size();
    }
    String[][] allCombinations = new String[solutions + 1][];
    allCombinations[0] = dataStructure.keySet().toArray(new String[n]);
    int[] indices = new int[dataStructure.values().size()];
    for (int i = 0; i < solutions; i++) {
        Vector<String> combination = new Vector<String>(n);
        int j = 0;
        for (Vector<String> vec : dataStructure.values()) {
            combination.add(vec.get(indices[j]));
            if (++indices[j] == vec.size()) {
                indices[j] = 0;
            }
            j++;
        }
        allCombinations[i + 1] = combination.toArray(new String[n]);
    }
    return allCombinations;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
5
Gpt3D_Clone797_5.java 1 8
Gpt3D_Clone797_5.java 9 25
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

 public static String merge (String...strings) { 
    int maxLength = 0;
    StringBuilder output = new StringBuilder();
    for (String s : strings) 
        if (s.length() > maxLength) 
            maxLength = s.length();
    for (int k = 0; k < maxLength; k++) { 
        for (int i = 0; i < strings.length; i++) {
            if (strings[i].length() > k) { 
                output.append(strings[i].charAt(k));
            }
        } 
    } 
    return output.toString(); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
6
Gpt3D_Clone797_6.java 1 8
Gpt3D_Clone797_6.java 9 22
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

 public static String merge(String... strings) {
    StringBuilder output = new StringBuilder();
    int maxLength = 0; 
    for (String s : strings) 
        if (s.length() > maxLength) 
            maxLength = s.length();
    for (int i = 0; i < maxLength; i++) 
        for (int k = 0; k < strings.length; k++) 
            if (strings[k].length() > i) 
                output.append(strings[k].charAt(i));
    return output.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
8
Gpt3D_Clone797_8.java 1 8
Gpt3D_Clone797_8.java 9 22
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

 public static String merge (String...strings) { 
    StringBuilder result = new StringBuilder(); 
    int maxLength = 0; 
    for (String s : strings) 
        if (s.length() > maxLength) 
            maxLength = s.length();
    for (int i = 0; i < maxLength; i++) 
        for (int k = 0; k < strings.length; k++) 
            if (strings[k].length() > i) 
                result.append(strings[k].charAt(i));
    return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
9
Gpt3D_Clone797_9.java 1 8
Gpt3D_Clone797_9.java 9 19
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

 public static String merge (String...strings) { 
    StringBuilder output = new StringBuilder();
    int maxLength = 0;
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int k = 0; k < maxLength; k++) 
        for (int i = 0; i < strings.length; i++)
          if (strings[i].length() > k) output.append(strings[i].charAt(k));
    return output.toString(); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
1
Gpt3D_Clone798_1.java 1 8
Gpt3D_Clone798_1.java 9 23
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

  public static String merge(String... strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    // find the max length string 
    for(String s : strings)
        maxLength = Math.max(maxLength, s.length());
    //iterate through each string character and append onto string builder
    for (int i = 0; i < maxLength; i++)
        for (String s : strings)
            if (i < s.length())
                sb.append(s.charAt(i));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
2
Gpt3D_Clone798_2.java 1 8
Gpt3D_Clone798_2.java 9 23
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

  public static String merge(String... strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    // find the max length string
    for (String s : strings)
        maxLength = Math.max(maxLength, s.length());
    // iterate through each string and append the characters to the string builder
    for (int i = 0; i < maxLength; i++)
        for (String s : strings)
            if (i < s.length())
                sb.append(s.charAt(i));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
3
Gpt3D_Clone798_3.java 1 8
Gpt3D_Clone798_3.java 9 24
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

  public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    //find the length of the longest string
    for(String s: strings) 
        maxLength = Math.max(s.length(), maxLength);
    //Loop through each character in each string and add to the string builder
    for (int i = 0;
    i < maxLength; i++) 
        for(String s: strings) 
            if(i < s.length()) 
                sb.append(s.charAt(i));
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
4
Gpt3D_Clone798_4.java 1 8
Gpt3D_Clone798_4.java 9 24
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

  public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    //find the max length string
    for (String s : strings) 
        maxLength = Math.max(s.length(), maxLength);
    //loop through each character in each string and append to the stringBuilder
    for (int i = 0;
    i < maxLength; i++) 
            for (String s : strings) 
                if (i < s.length()) 
                    sb.append(s.charAt(i));
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
799
0
Gpt3D_Clone799_0.java 1 26
Gpt3D_Clone799_0.java 27 56
----------------------------------------

public static void main (String [] args) {
    char [] values = {'a', 'b', 'c', 'd'};
    int n = values.length;
    int r = 2;
    int i [] = new int [r];
    int rc = 0;
    for (int j = 0;
    j < Math.pow (n, r); j ++) {
        rc = 0;
        while (rc < r) {
            System.out.print (values [i [rc]] + " ");
            rc ++;
        }
        System.out.println ();
        rc = 0;
        while (rc < r) {
            if (i [rc] < n - 1) {
                i [rc] ++;
                break;
            } else {
                i [rc] = 0;
            }
            rc ++;
        }
    }
}
----------------------------------------

 public static void main (String [] args) { 
    char [] values = {'a', 'b', 'c', 'd'}; 
    int n = values.length; 
    int r = 2; 
    int i [] = new int [r]; 
    for (int j = 0; j < Math.pow (n, r); j ++) { 
        int rc = 0; 
        while (rc < r) { 
            System.out.print (values [i [rc]] + " "); 
            rc ++; 
        } 
        System.out.println (); 
        int k = r - 1; 
        while(k >= 0){ 
            if(i[k] == n-1){
                i[k] = 0; 
                k--;
            }
            else { 
                i[k]++;
                for(int m = k+1; m < r; m++){
                    i[m] = 0;
                }
                break;
            }
        }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
799
1
Gpt3D_Clone799_1.java 1 26
Gpt3D_Clone799_1.java 27 54
----------------------------------------

public static void main (String [] args) {
    char [] values = {'a', 'b', 'c', 'd'};
    int n = values.length;
    int r = 2;
    int i [] = new int [r];
    int rc = 0;
    for (int j = 0;
    j < Math.pow (n, r); j ++) {
        rc = 0;
        while (rc < r) {
            System.out.print (values [i [rc]] + " ");
            rc ++;
        }
        System.out.println ();
        rc = 0;
        while (rc < r) {
            if (i [rc] < n - 1) {
                i [rc] ++;
                break;
            } else {
                i [rc] = 0;
            }
            rc ++;
        }
    }
}
----------------------------------------

 public static void main (String [] args) { 
     char [] values = {'a', 'b', 'c', 'd'}; 
     int n = values.length; 
     int r = 2; 
     int i [] = new int [r]; 
     for (int j = 0; j < Math.pow (n, r); j ++) { 
         int rc = 0; 
         while (rc < r) { 
             System.out.print (values [i [rc]] + " "); 
             rc ++; 
         } 
         System.out.println (); 
         int k = r - 1; 
         while(k >= 0){ 
             if(i[k] >= n-1){
                 i[k] = 0; 
                 k--;
             }
             else { 
                 i[k]++;
                 break;
             }
         }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
799
2
Gpt3D_Clone799_2.java 1 26
Gpt3D_Clone799_2.java 27 50
----------------------------------------

public static void main (String [] args) {
    char [] values = {'a', 'b', 'c', 'd'};
    int n = values.length;
    int r = 2;
    int i [] = new int [r];
    int rc = 0;
    for (int j = 0;
    j < Math.pow (n, r); j ++) {
        rc = 0;
        while (rc < r) {
            System.out.print (values [i [rc]] + " ");
            rc ++;
        }
        System.out.println ();
        rc = 0;
        while (rc < r) {
            if (i [rc] < n - 1) {
                i [rc] ++;
                break;
            } else {
                i [rc] = 0;
            }
            rc ++;
        }
    }
}
----------------------------------------

 public static void main (String [] args) { 
    char [] values = {'a', 'b', 'c', 'd'}; 
    int n = values.length; 
    int r = 2;
    int i [] = new int [r]; 
    for (int j = 0; j < Math.pow (n, r); j ++) { 
        int rc = 0; 
        while (rc < r) { 
            System.out.print (values [i [rc]] + " "); 
            rc ++; 
        } 
        System.out.println (); 
        int k = r - 1;
        while (k >= 0 && i[k] == n-1){
            i[k] = 0;
            k--;
        }
        if(k >= 0)
            i[k] += 1;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
799
3
Gpt3D_Clone799_3.java 1 26
Gpt3D_Clone799_3.java 27 50
----------------------------------------

public static void main (String [] args) {
    char [] values = {'a', 'b', 'c', 'd'};
    int n = values.length;
    int r = 2;
    int i [] = new int [r];
    int rc = 0;
    for (int j = 0;
    j < Math.pow (n, r); j ++) {
        rc = 0;
        while (rc < r) {
            System.out.print (values [i [rc]] + " ");
            rc ++;
        }
        System.out.println ();
        rc = 0;
        while (rc < r) {
            if (i [rc] < n - 1) {
                i [rc] ++;
                break;
            } else {
                i [rc] = 0;
            }
            rc ++;
        }
    }
}
----------------------------------------

 public static void main (String [] args) { 
    char [] values = {'a', 'b', 'c', 'd'}; 
    int n = values.length; 
    int r = 2; 
    int i [] = new int [r]; 
    for (int j = 0; j < Math.pow (n, r); j ++) { 
        int rc = 0; 
        while (rc < r) { 
            System.out.print (values [i [rc]] + " "); 
            rc ++; 
        } 
        System.out.println (); 
        int k = 0;
        while (k < r && i[k] == n-1) {
            i[k] = 0;
            k++;
        }
        if (k < r) 
            i[k]++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
0
Gpt3D_Clone79_0.java 1 15
Gpt3D_Clone79_0.java 16 37
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

 public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
            double precision = Double.parseDouble(numberBeforeDecimal + "." + numberAfterDecimal);
            NumberFormat format = NumberFormat.getInstance ();
            format.setRoundingMode(RoundingMode.FLOOR);
            format.setMaximumFractionDigits(2);
            String formattedNumber= format.format(precision);
            cost = formattedNumber;
        }
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
3
Gpt3D_Clone79_3.java 1 15
Gpt3D_Clone79_3.java 16 37
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

 public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        /*Enforce maximum decimal place length of two*/
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
            double doubleDecimal = Double.parseDouble(numberBeforeDecimal + "." + numberAfterDecimal);
            doubleDecimal = Math.round(doubleDecimal * 100.0) / 100.0;
            String doubleDecimalString = String.format("%.2f", doubleDecimal);
            numberAfterDecimal = doubleDecimalString.split("\\.")[1];
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
4
Gpt3D_Clone79_4.java 1 15
Gpt3D_Clone79_4.java 16 42
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

 public synchronized void afterTextChanged (final Editable text){
    String cost = text.toString().trim();
    if(!cost.endsWith(".") && cost.contains(".")){
        // split current number into two parts at the decimal point
        String[] costArray = cost.split("\\.");
        // get number before the decimal
        String numberBeforeDecimal = costArray[0];
        // get number after the decimal
        String numberAfterDecimal = costArray[1];
        // limit how long number after the decimal can be
        if(numberAfterDecimal.length() > 2){
            numberAfterDecimal = numberAfterDecimal.substring(0,2);
            // round number to two decimal point
            BigDecimal bd = new BigDecimal(Double.parseDouble(numberBeforeDecimal + "." + numberAfterDecimal));
            bd = bd.setScale(2, BigDecimal.ROUND_HALF_UP);
            // combine the two parts with decimal point
            cost = bd.toString();
        }
    }
    // update the costEditText
    costEditText.removeTextChangedListener(this);
    costEditText.setText(cost);
    costEditText.setSelection(costEditText.getText().toString().trim().length());
    costEditText.addTextChangedListener(this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
6
Gpt3D_Clone79_6.java 1 15
Gpt3D_Clone79_6.java 16 33
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

 public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString().trim();
    int numDecimalSpaces = 0;
    if(cost.contains(".")) {
        numDecimalSpaces = cost.split("\\.")[1].length();
    }
    if (!cost.endsWith(".") && numDecimalSpaces > 2) {
        String numberBeforeDecimal = cost.split("\\.")[0];
        String numberAfterDecimal = cost.split("\\.")[1].substring(0, 2);
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener(this);
    costEditText.setText(cost);
    costEditText.setSelection(costEditText.getText().toString().trim().length());
    costEditText.addTextChangedListener(this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
800
0
Gpt3D_Clone800_0.java 1 12
Gpt3D_Clone800_0.java 13 26
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------

  public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () > 0) {
        int randPicker = (int) (Math.random () * (characters.size ()));
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.reverse ().toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
800
1
Gpt3D_Clone800_1.java 1 12
Gpt3D_Clone800_1.java 13 26
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------

  public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () > 0) {
        int randPicker = (int) (Math.random () * (characters.size () - 1));
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.reverse ().toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
0
Gpt3D_Clone801_0.java 1 8
Gpt3D_Clone801_0.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

 
static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String left = shuffle (text.substring (0, split));
    String right = shuffle (text.substring (split));
    if (Math.random () > 0.5) return left + "" + right; 
    else return right + "" + left; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
1
Gpt3D_Clone801_1.java 1 8
Gpt3D_Clone801_1.java 9 29
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String leftSide = shuffle (text.substring (0, split));
    String rightSide = shuffle (text.substring (split));
    if (Math.random () > 0.5) return leftSide + rightSide;
    else return rightSide + leftSide;
}    
static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String subTxt1 = shuffle (text.substring (0, split));
    String subTxt2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return subTxt1.concat(subTxt2);
    else return subTxt2.concat(subTxt1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
2
Gpt3D_Clone801_2.java 1 8
Gpt3D_Clone801_2.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

 
static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String newTxt1 = shuffle(text.substring (0, split));
    String newTxt2 = shuffle(text.substring (split));
    if (Math.random () > 0.5) return newTxt1.concat(newTxt2);
    else return newTxt2.concat(newTxt1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
3
Gpt3D_Clone801_3.java 1 8
Gpt3D_Clone801_3.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String left = shuffle (text.substring (0, split));
    String right = shuffle (text.substring (split));
    if (Math.random () > 0.5) return String.join("", left, right);
    else return String.join("", right, left);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
4
Gpt3D_Clone801_4.java 1 8
Gpt3D_Clone801_4.java 9 21
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

 
static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length() / 2;
    String firstHalf = shuffle (text.substring(0, split));
    String secondHalf = shuffle (text.substring(split));
    if (Math.random() > 0.5)
        return firstHalf.concat(secondHalf);
    else
        return secondHalf.concat(firstHalf);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
5
Gpt3D_Clone801_5.java 1 8
Gpt3D_Clone801_5.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String split1 = shuffle (text.substring (0, split));
    String split2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return split1.concat(' ').concat(split2);
    else return split2.concat(' ').concat(split1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
6
Gpt3D_Clone801_6.java 1 8
Gpt3D_Clone801_6.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

 
static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String lStr = shuffle (text.substring (0, split));
    String rStr = shuffle (text.substring (split));
    if (Math.random () > 0.5) return lStr.concat(rStr);
    else return rStr.concat(lStr);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
802
1
Gpt3D_Clone802_1.java 1 11
Gpt3D_Clone802_1.java 12 24
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle(String text){
    char[] characters = text.toCharArray();
    int len = text.length();
    for(int i=0; i<len; i++){
        int r = (int)(Math.random()*len);
        char temp = characters[i];
        characters[i] = characters[r];
        characters[r] = temp;
    }
    return new String(characters); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
802
2
Gpt3D_Clone802_2.java 1 11
Gpt3D_Clone802_2.java 12 24
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle(String text){
    char[] characters = text.toCharArray();
    int len = characters.length;
    for(int i=0; i<len; i++){
        int randIndex = (int)(Math.random() * len);
        char temp = characters[i];
        characters[i] = characters[randIndex];
        characters[randIndex] = temp;
    }
    return new String(characters);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
802
3
Gpt3D_Clone802_3.java 1 11
Gpt3D_Clone802_3.java 12 23
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle(String text){
    char[] characters = text.toCharArray();
    for (int i = characters.length - 1; i > 0; i--) {
        int randomIndex = (int)(Math.random() * (i+1));
        char temp = characters[i];
        characters[i] = characters[randomIndex];
        characters[randomIndex] = temp;
    }
    return new String(characters);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
802
4
Gpt3D_Clone802_4.java 1 11
Gpt3D_Clone802_4.java 12 23
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle(String text){
    char[] characters = text.toCharArray();
    for (int i = characters.length - 1; i > 0; i--){
        int randIndex = (int)(Math.random() * i);
        char temp = characters[i];
        characters[i] = characters[randIndex];
        characters[randIndex] = temp;
    }
    return new String(characters);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
802
5
Gpt3D_Clone802_5.java 1 11
Gpt3D_Clone802_5.java 12 23
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle(String text){
    char[] characters = text.toCharArray();
    for(int i=0; i<characters.length-1; i++){
        int r = (int)(Math.random() * (characters.length-i)) + i;
        char temp = characters[i];
        characters[i] = characters[r];
        characters[r] = temp;
    }
    return new String(characters);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
805
4
Gpt3D_Clone805_4.java 1 11
Gpt3D_Clone805_4.java 12 26
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

 public static String shuffle (String text) 
{ 
    char [] characters = text.toCharArray(); 
    Random r = new Random(); 
    for (int i = characters.length-1; i > 0; i--) 
    { 
        int j = r.nextInt(i+1); 
        char temp = characters[i]; 
        characters[i] = characters[j]; 
        characters[j] = temp; 
    } 
    return new String(characters); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
0
Gpt3D_Clone806_0.java 1 22
Gpt3D_Clone806_0.java 23 50
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new BorderLayout ());
        p.add (l, BorderLayout.WEST);
        p.add (f, BorderLayout.CENTER);
        list.add (p);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new GridBagLayout ());
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    GridBagConstraints constraints = new GridBagConstraints();
    constraints.fill = GridBagConstraints.NONE;
    constraints.weightx = 0.0;
    constraints.weighty = 0.0;
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new FlowLayout ());
        p.add (l);
        p.add (f);
        list.add (p, constraints);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
1
Gpt3D_Clone806_1.java 1 22
Gpt3D_Clone806_1.java 23 49
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new BorderLayout ());
        p.add (l, BorderLayout.WEST);
        p.add (f, BorderLayout.CENTER);
        list.add (p);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel options = new JPanel ();
    options.setLayout (new GridBagLayout());
    frame.add (options, BorderLayout.NORTH);
    String [] labels = {"To: ","Cc: ","Bcc: ","Subject: "};
    GridBagConstraints constraints = new GridBagConstraints();
    constraints.fill = GridBagConstraints.NONE;
    constraints.weightx = 0.0;
    constraints.weighty = 0.0;
    for (int i = 0; i < labels.length; i++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new FlowLayout ());
        p.add (l);
        p.add (f);
        options.add (p, constraints);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
2
Gpt3D_Clone806_2.java 1 22
Gpt3D_Clone806_2.java 23 48
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new BorderLayout ());
        p.add (l, BorderLayout.WEST);
        p.add (f, BorderLayout.CENTER);
        list.add (p);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

  public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    Container contentPane = frame.getContentPane();
    contentPane.setLayout (new BorderLayout ());
    JTextArea textArea = new JTextArea ();
    contentPane.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new FlowLayout ());
    contentPane.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new GridLayout (0, 2));
        p.add (l);
        p.add (f);
        list.add (p);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
3
Gpt3D_Clone806_3.java 1 22
Gpt3D_Clone806_3.java 23 44
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        JPanel p = new JPanel (new BorderLayout ());
        p.add (l, BorderLayout.WEST);
        p.add (f, BorderLayout.CENTER);
        list.add (p);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
    JFrame frame = new JFrame ("New Message");
    frame.setSize (100, 100);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea textArea = new JTextArea ();
    frame.add (textArea, BorderLayout.CENTER);
    JPanel list = new JPanel ();
    list.setLayout (new GridLayout (4,2));
    frame.add (list, BorderLayout.NORTH);
    String [] labels = {"To: ", "Cc: ", "Bcc: ", "Subject: "};
    for (int i = 0;
    i < labels.length; i ++) {
        JLabel l = new JLabel (labels [i]);
        JTextField f = new JTextField ();
        list.add (l, i);
        list.add (f, i+1);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
2
Gpt3D_Clone808_2.java 1 9
Gpt3D_Clone808_2.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

  public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + ";");
    sb.append (b + ";");
    for (int i=0; i < aList.length; i++) {
        sb.append (aList[i] + ";");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
4
Gpt3D_Clone808_4.java 1 9
Gpt3D_Clone808_4.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

  public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("a=" + a + "\n");
    sb.append ("b=" + b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
7
Gpt3D_Clone808_7.java 1 9
Gpt3D_Clone808_7.java 10 19
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

  public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Object contains a = " + a + " and b = " + b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
8
Gpt3D_Clone808_8.java 1 9
Gpt3D_Clone808_8.java 10 19
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

  public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Object holds a = " + a + " and b = " + b + "\n");
    for (A elem : aList) {
        sb.append (elem.toString() + "\n");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
3
Gpt3D_Clone809_3.java 1 9
Gpt3D_Clone809_3.java 10 19
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

 public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(String.format("--------%s%n--------%s%n", v, w));
    for (B elem : bList) {
        sb.append(elem + "\n");
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
8
Gpt3D_Clone809_8.java 1 9
Gpt3D_Clone809_8.java 10 18
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

 public String toString() {
    StringBuilder sb = new StringBuilder("--------" + v + "\n" + "--------" + w + "\n");
    for (B elem : bList) {
        sb.append(elem + "\n");
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
80
0
Gpt3D_Clone80_0.java 1 27
Gpt3D_Clone80_0.java 28 55
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

 public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = ""; 
    String lsInsert = ""; 
    String lsEnd = ""; 
    String lsText = ""; 
    Log.d ("debug", moPattern.toString ()); 
    lsText = dest.toString (); 
    if (lsText.length () > 0) { 
        lsStart = lsText.substring (0, dstart); 
        if (source != "") { 
            lsInsert = source.toString (); 
        } 
        lsEnd = lsText.substring (dend); 
        lsText = lsStart + lsInsert + lsEnd; 
        Log.d ("debug", "lsText  : " + lsText);
    } 
    Matcher loMatcher = moPattern.matcher (lsText); 
    if (loMatcher.matches () == true) {
        return null;
    } 
    else {
        Log.d("debug", "The text does not match the regex!");
        return "";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
80
1
Gpt3D_Clone80_1.java 1 27
Gpt3D_Clone80_1.java 28 52
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

  public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = ""; 
    String lsInsert = ""; 
    String lsEnd = ""; 
    String lsText = ""; 
    Log.d ("debug", moPattern.toString ()); 
    lsText = dest.toString (); 
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart); 
        if (source != "") {
             lsInsert = source.toString (); 
        } 
        lsEnd = lsText.substring (dend); 
        lsText = lsStart + lsInsert + lsEnd; 
        Log.d ("debug", "lsText  : " + lsText);
    } 
    Matcher loMatcher = moPattern.matcher (lsText); 
    if (loMatcher.matches () == false) {
        return "";
    } 
    return null; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
80
2
Gpt3D_Clone80_2.java 1 27
Gpt3D_Clone80_2.java 28 52
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String lsStart = "";
    String lsInsert = "";
    String lsEnd = "";
    String lsText = "";
    Log.d ("debug", moPattern.toString ());
    Log.d ("debug", "source: " + source + ", start: " + start + ", end:" + end + ", dest: " + dest + ", dstart: " + dstart + ", dend: " + dend);
    lsText = dest.toString ();
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart);
        Log.d ("debug", "lsStart : " + lsStart);
        if (source != "") {
            lsInsert = source.toString ();
            Log.d ("debug", "lsInsert: " + lsInsert);
        }
        lsEnd = lsText.substring (dend);
        Log.d ("debug", "lsEnd   : " + lsEnd);
        lsText = lsStart + lsInsert + lsEnd;
        Log.d ("debug", "lsText  : " + lsText);
    }
    Matcher loMatcher = moPattern.matcher (lsText);
    Log.d ("debug", "loMatcher.matches(): " + loMatcher.matches () + ", lsText: " + lsText);
    if (! loMatcher.matches ()) {
        return "";
    }
    return null;
}
----------------------------------------

  public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) { 
    String lsStart = ""; 
    String lsInsert = ""; 
    String lsEnd = ""; 
    String lsText = ""; 
    Log.d ("debug", moPattern.toString ()); 
    lsText = dest.toString (); 
    if (lsText.length () > 0) {
        lsStart = lsText.substring (0, dstart); 
        if (source != "") {
             lsInsert = source.toString (); 
        } 
        lsEnd = lsText.substring (dend); 
        lsText = lsStart + lsInsert + lsEnd; 
        Log.d ("debug", "lsText  : " + lsText);
    } 
    Matcher loMatcher = moPattern.matcher (lsText); 
    if (loMatcher.matches () == true) {
        return null;
    } 
    return ""; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
0
Gpt3D_Clone810_0.java 1 9
Gpt3D_Clone810_0.java 10 23
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

            
      public void actionPerformed (ActionEvent e) {
            frame.remove (panel);
            frame.setVisible (false);
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.setVisible (true);
            long start = System.currentTimeMillis ();
            frame.validate ();
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
1
Gpt3D_Clone810_1.java 1 9
Gpt3D_Clone810_1.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            frame.validate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
2
Gpt3D_Clone810_2.java 1 9
Gpt3D_Clone810_2.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            JPanel newPanel = new JPanel ();
            frame.add (newPanel);
            newPanel.setBackground (Color.BLUE); 
            long end = System.currentTimeMillis ();
            frame.validate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
3
Gpt3D_Clone810_3.java 1 9
Gpt3D_Clone810_3.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            frame.validate ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
4
Gpt3D_Clone810_4.java 1 9
Gpt3D_Clone810_4.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

      public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.remove (panel);
            frame.add (newPanel);
            frame.validate (); 
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
5
Gpt3D_Clone810_5.java 1 9
Gpt3D_Clone810_5.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            JPanel newPanel = new JPanel ();
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            frame.validate ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            long end = System.currentTimeMillis ();       
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
6
Gpt3D_Clone810_6.java 1 9
Gpt3D_Clone810_6.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            frame.remove (panel);
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate (); 
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
7
Gpt3D_Clone810_7.java 1 9
Gpt3D_Clone810_7.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            frame.validate ();
            JPanel newPanel = new JPanel ();
            frame.add (newPanel);
            newPanel.setBackground (Color.BLUE);
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
8
Gpt3D_Clone810_8.java 1 9
Gpt3D_Clone810_8.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

     public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            frame.remove (panel);
            frame.validate ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
810
9
Gpt3D_Clone810_9.java 1 9
Gpt3D_Clone810_9.java 10 20
----------------------------------------

        public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            long end = System.currentTimeMillis ();
            JPanel newPanel = new JPanel ();
            newPanel.setBackground (Color.BLUE);
            frame.add (newPanel);
            frame.validate ();
}
----------------------------------------

    public void actionPerformed (ActionEvent e) {
            long start = System.currentTimeMillis ();
            frame.remove (panel);
            frame.validate ();
            JPanel newPanel = new JPanel ();
            frame.add (newPanel);
            newPanel.setBackground (Color.BLUE); 
            long end = System.currentTimeMillis ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
814
0
Gpt3D_Clone814_0.java 1 22
Gpt3D_Clone814_0.java 23 49
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

 
public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray (); 
        Arrays.sort(ch);
        int i = 0;
        int start = 0;
        int counter = 0;
        while (i < length) { 
            if (i < length - 1 && ch[i] == ch[i + 1]) 
            { 
                counter++; 
            } 
            else { 
                System.out.println("Number of Occurrence of '" + ch[i] + "' is: " + (counter+1)); 
  
                start = i + 1; 
                counter = 0; 
            } 
            i++;
        }
  
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
820
1
Gpt3D_Clone820_1.java 1 16
Gpt3D_Clone820_1.java 17 33
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

 public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0; i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    StringBuilder ans = new StringBuilder("");
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans.append(String.valueOf(count [i])).append((char) (i + 'a'));
        }
    }
    return ans.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
820
2
Gpt3D_Clone820_2.java 1 16
Gpt3D_Clone820_2.java 17 32
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

 public static String numLetters(String s) {
    int [] count = new int[26];
    for(int i = 0; i < s.length(); i++) {
        count[s.charAt(i) - 'a']++;
    }
    String ans = "";
    for (int i = 0; i < 26; i++) {
        if(count[i] != 0) {
            ans += Integer.toString(count[i]);
            ans += (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
820
7
Gpt3D_Clone820_7.java 1 16
Gpt3D_Clone820_7.java 17 33
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

 public static String numLetters (String s) {
    int [] count = new int [26];
    for (char ch : s.toCharArray()) {
        count[ch - 'a'] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += count [i] + Character.toString((char) (i + 'a'));
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
0
Gpt3D_Clone821_0.java 1 14
Gpt3D_Clone821_0.java 15 36
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    int primeCount = 0;
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            primeCount++;
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    int[] primeNumbers = new int[primeCount]; 
    for (int i = 0; i < primeCount; i++)
        primeNumbers[i] = factors.get(i);
        
    for (int element : primeNumbers) {
        System.out.println (element);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
1
Gpt3D_Clone821_1.java 1 14
Gpt3D_Clone821_1.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

  public void primeFactor () {
    input = sc.nextInt ();
    Stack<Integer> primeStack = new Stack<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeStack.push(num);
            }
        }
    }
    int size = primeStack.size();
    for (int i = 0; i < size; i++) {
        System.out.println(primeStack.pop());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
2
Gpt3D_Clone821_2.java 1 14
Gpt3D_Clone821_2.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    ArrayList<Integer> primeList = new ArrayList<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeList.add(num);
            }
        }
    }
    Collections.sort(primeList);
    for (int element : primeList) {
        System.out.println (element);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
3
Gpt3D_Clone821_3.java 1 14
Gpt3D_Clone821_3.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    LinkedList<Integer> primeLL = new LinkedList<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeLL.add(num);
            }
        }
    }
    int size = primeLL.size();
    for (int i = 0; i < size; i++) {
        System.out.println(primeLL.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
4
Gpt3D_Clone821_4.java 1 14
Gpt3D_Clone821_4.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    TreeSet<Integer> primeSet = new TreeSet<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeSet.add(num);
            }
        }
    }
    Iterator<Integer> iter = primeSet.iterator();
    while(iter.hasNext()) {
        System.out.println(iter.next());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
5
Gpt3D_Clone821_5.java 1 14
Gpt3D_Clone821_5.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    Vector<Integer> primeVec = new Vector<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeVec.add(num);
            }
        }
    }
    int size = primeVec.size();
    for (int i = 0; i < size; i++) {
        System.out.println(primeVec.get(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
6
Gpt3D_Clone821_6.java 1 14
Gpt3D_Clone821_6.java 15 33
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    PriorityQueue<Integer> primeQ = new PriorityQueue<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeQ.add(num);
            }
        }
    }
    int size = primeQ.size();
    for (int i = 0; i < size; i++) {
        System.out.println(primeQ.poll());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
7
Gpt3D_Clone821_7.java 1 14
Gpt3D_Clone821_7.java 15 32
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    HashMap<Integer, Boolean> primeMap = new HashMap<Integer, Boolean>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeMap.put(num, true);
            }
        }
    }
    for (Integer key : primeMap.keySet()) {
        System.out.println(key);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
8
Gpt3D_Clone821_8.java 1 14
Gpt3D_Clone821_8.java 15 32
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

 public void primeFactor () {
    input = sc.nextInt ();
    LinkedHashSet<Integer> primeSet = new LinkedHashSet<Integer>();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
                primeSet.add(num);
            }
        }
    }
    for(Integer i : primeSet) {
        System.out.println(i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
1
Gpt3D_Clone822_1.java 1 9
Gpt3D_Clone822_1.java 10 23
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

  public void filter (String [] words, String text) {
    Boolean found = false;
    for (int i = 0; 
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            found = true;
        }
    }
    if (found == true) {
        System.out.println (text);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
2
Gpt3D_Clone822_2.java 1 9
Gpt3D_Clone822_2.java 10 24
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

 public void filter (String [] words, String text) {
    String [] textParts = text.split(" ");
    for (int i = 0;
    i < words.length; i ++) {
        for (int j = 0;
        j < textParts.length; j ++) {
            if (textParts [j].toLowerCase ().contains (words [i].toLowerCase ())) {
                System.out.println (text);
                break;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
3
Gpt3D_Clone822_3.java 1 9
Gpt3D_Clone822_3.java 10 19
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

 public void filter (String [] words, String text) {
    for (String word : words) {
        if (text.toLowerCase ().contains (word.toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
4
Gpt3D_Clone822_4.java 1 9
Gpt3D_Clone822_4.java 10 19
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

 public void filter (String [] words, String text) {
    for (String word : words) {
        if (text.toLowerCase ().matches("(.*)"+word.toLowerCase()+"(.*)")) {
           System.out.println (text);
           break;
        }
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
824
0
Gpt3D_Clone824_0.java 1 29
Gpt3D_Clone824_0.java 30 53
----------------------------------------

public static int [] solution (String S, int [] P, int [] Q) {
    int [] arr = new int [S.length ()];
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                arr [i] = 1;
                break;
            case 'C' :
                arr [i] = 2;
                break;
            case 'G' :
                arr [i] = 3;
                break;
            case 'T' :
                arr [i] = 4;
                break;
            default :
                break;
        }
    }
    segmentNode root = buildTree (arr, 0, S.length () - 1);
    int [] result = new int [P.length];
    for (int i = 0;
    i < P.length; i ++) {
        result [i] = getMin (root, P [i], Q [i]);
    }
    return result;
}
----------------------------------------

 public static int[] solution(String S, int[] P, int[] Q) {
    int[] temp = new int[S.length()];
    for (int i = 0; i < S.length(); i++) {
        if (S.charAt(i) == 'A') {
            temp[i] = 1;
        } else if (S.charAt(i) == 'C') {
            temp[i] = 2;
        } else if (S.charAt(i) == 'G') {
            temp[i] = 3;
        } else if (S.charAt(i) == 'T') {
            temp[i] = 4;
        } else {
            temp[i] = 0;
        }
    }
    segmentNode root = buildTree(temp, 0, S.length() - 1);
    int[] result = new int[P.length];
    for (int i = 0; i < P.length; i++) {
        result[i] = getMin(root, P[i], Q[i]);
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
826
0
Gpt3D_Clone826_0.java 1 39
Gpt3D_Clone826_0.java 40 72
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

 
public int[] solution (String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    char[] chars = S.toCharArray();
    int[][] cumulativeAnswers = new int[4][chars.length + 1];
    for (int iii = 0; iii < chars.length; iii++) {
        switch (chars[iii]) {
            case 'A':
                cumulativeAnswers[0][iii + 1] = cumulativeAnswers[0][iii] + 1;
                break;
            case 'C':
                cumulativeAnswers[1][iii + 1] = cumulativeAnswers[1][iii] + 1;
                break;
            case 'G':
                cumulativeAnswers[2][iii + 1] = cumulativeAnswers[2][iii] + 1;
                break;
            case 'T':
                cumulativeAnswers[3][iii + 1] = cumulativeAnswers[3][iii] + 1;
                break;
        }
    }
    for (int iii = 0; iii < P.length; iii++) {
        for (int zzz = 0; zzz < 4; zzz++) {
            if (cumulativeAnswers[zzz][Q[iii]+1] - cumulativeAnswers[zzz][P[iii]] > 0) {
                answer[iii] = zzz +1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
826
2
Gpt3D_Clone826_2.java 1 39
Gpt3D_Clone826_2.java 40 72
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

 
public int [] solution(String S, int [] P, int[] Q) {
    int[] answer = new int[P.length];
    char[] chars = S.toCharArray();
    int[][] cumulativeAnswers = new int[4][chars.length + 1];
    for (int i = 0; i < chars.length; i++) {
        switch (chars[i]) {
            case 'A':
                cumulativeAnswers[0][i + 1] = cumulativeAnswers[0][i] + 1;
                break;
            case 'C':
                cumulativeAnswers[1][i + 1] = cumulativeAnswers[1][i] + 1;
                break;
            case 'G':
                cumulativeAnswers[2][i + 1] = cumulativeAnswers[2][i] + 1;
                break;
            case 'T':
                cumulativeAnswers[3][i + 1] = cumulativeAnswers[3][i] + 1;
                break;
        }
    }
    for (int i = 0; i < P.length; i++) {
        for (int j = 0; j < 4; j++) {
            if (cumulativeAnswers[j][Q[i]+1] - cumulativeAnswers[j][P[i]] > 0) {
                answer[i] = j + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
827
0
Gpt3D_Clone827_0.java 1 39
Gpt3D_Clone827_0.java 40 89
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 
public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length();
    int M = P.length;
    int [] result = new int[M];
    int[][] lastOccurrencesMap = new int[3][N];
    // Initialize all occurrences to -1
    for (int n = 0; n < 3; n++) {
        Arrays.fill(lastOccurrencesMap[n], -1);
    }
    // Track last occurrence for each nucleotide
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastOccurrencesMap[0][i] = i;
        } else if (c == 'C') {
            lastOccurrencesMap[1][i] = i;
        } else if (c == 'G') {
            lastOccurrencesMap[2][i] = i;
        }
        // Update the next index with the latest occurrence of each nucleotide
        if (i < N - 1) {
            lastOccurrencesMap[0][i+1] = Math.max(lastOccurrencesMap[0][i+1], lastOccurrencesMap[0][i]);
            lastOccurrencesMap[1][i+1] = Math.max(lastOccurrencesMap[1][i+1], lastOccurrencesMap[1][i]);
            lastOccurrencesMap[2][i+1] = Math.max(lastOccurrencesMap[2][i+1], lastOccurrencesMap[2][i]);
        }
    }
    // Iterate through all intervals
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        // Find the last occurrence in the interval
        int minimum = 4;
        for (int n = 0; n < 3; n++) {
            if (lastOccurrencesMap[n][endIndex] >= startIndex) {
                minimum = 1 + n;
                break;
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
829
0
Gpt3D_Clone829_0.java 1 39
Gpt3D_Clone829_0.java 40 75
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

	public int[] solution(String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    int[] answers = new int[S.length() + 1];
    for (int i = 0; i < S.length(); i++) {
        if (i > 0) {
            for (int c = 0; c < 4; c++) {
                answers[i + 1] = answers[i];
            }
        }
        switch (S.charAt(i)) {
            case 'A':
                answers[i + 1] = 1;
                break;
            case 'C':
                answers[i + 1] = 2;
                break;
            case 'G':
                answers[i + 1] = 3;
                break;
            case 'T':
                answers[i + 1] = 4;
                break;
        }
    }
    for (int i = 0; i < P.length; i++) {
        int minValue = Integer.MAX_VALUE;
        for (int j = P[i]; j <= Q[i]; j++) {
            minValue = Math.min(minValue, answers[j]);
        }
        answer[i] = minValue;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
829
1
Gpt3D_Clone829_1.java 1 39
Gpt3D_Clone829_1.java 40 76
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

	public int[] solution(String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    int[] ans = new int[S.length() + 1];
    for (int i = 0; i < S.length(); i++) {
        if (i > 0) {
            for (int k = 0; k < 4; k++) {
                ans[i + 1] = ans[i];
            }
        }
        switch (S.charAt(i)) {
            case 'A':
                ans[i + 1] = 1;
                break;
            case 'C':
                ans[i + 1] = 2;
                break;
            case 'G':
                ans[i + 1] = 3;
                break;
            case 'T':
                ans[i + 1] = 4;
                break;
        }
    }
    for (int i = 0; i < P.length; i++) {
        int minValue = Integer.MAX_VALUE;
        for (int j = P[i]; j <= Q[i]; j++) {
            minValue = Math.min(minValue, ans[j]);
        }
        answer[i] = minValue;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
829
2
Gpt3D_Clone829_2.java 1 39
Gpt3D_Clone829_2.java 40 76
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

	 public int[] solution(String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    int[] ans = new int[S.length() + 1];
    for (int i = 0; i < S.length(); i++) {
        if (i > 0) {
            for (int n = 0; n < 4; n++) {
                ans[i + 1] = ans[i];
            }
        }
        switch (S.charAt(i)) {
            case 'A':
                ans[i + 1] = 1;
                break;
            case 'C':
                ans[i + 1] = 2;
                break;
            case 'G':
                ans[i + 1] = 3;
                break;
            case 'T':
                ans[i + 1] = 4;
                break;
        }
    }
    for (int i = 0; i < P.length; i++) {
        int minValue = Integer.MAX_VALUE;
        for (int j = P[i]; j <= Q[i]; j++) {
            minValue = Math.min(minValue, ans[j]);
        }
        answer[i] = minValue;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
829
3
Gpt3D_Clone829_3.java 1 39
Gpt3D_Clone829_3.java 40 76
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

	public int[] solution(String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    int[] ans = new int[S.length() + 1];
    for (int i = 0; i < S.length(); i++) {
        if (i > 0) {
            for (int m = 0; m < 4; m++) {
                ans[i + 1] = ans[i];
            }
        }
        switch (S.charAt(i)) {
            case 'A':
                ans[i + 1] = 1;
                break;
            case 'C':
                ans[i + 1] = 2;
                break;
            case 'G':
                ans[i + 1] = 3;
                break;
            case 'T':
                ans[i + 1] = 4;
                break;
        }
    }
    for (int i = 0; i < P.length; i++) {
        int minValue = Integer.MAX_VALUE;
        for (int j = P[i]; j <= Q[i]; j++) {
            minValue = Math.min(minValue, ans[j]);
        }
        answer[i] = minValue;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
829
4
Gpt3D_Clone829_4.java 1 39
Gpt3D_Clone829_4.java 40 76
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

	public int[] solution(String S, int[] P, int[] Q) {
	  int[] answer = new int[P.length];
	  int[] answers = new int[S.length() + 1];
	  for (int i = 0; i < S.length(); i++) {
	      if (i > 0) {
		  for (int d = 0; d < 4; d++) {
		      answers[i + 1] = answers[i];
		  }
	      }
	      switch (S.charAt(i)) {
		  case 'A':
		      answers[i + 1] = 1;
		      break;
		  case 'C':
		      answers[i + 1] = 2;
		      break;
		  case 'G':
		      answers[i + 1] = 3;
		      break;
		  case 'T':
		      answers[i + 1] = 4;
		      break;
	      }
	  }
	  for (int i = 0; i < P.length; i++) {
	      int minValue = Integer.MAX_VALUE;
	      for (int j = P[i]; j <= Q[i]; j++) {
		  minValue = Math.min(minValue, answers[j]);
	      }
	      answer[i] = minValue;
	  }
	  return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
830
0
Gpt3D_Clone830_0.java 1 39
Gpt3D_Clone830_0.java 40 78
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

  public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length();
    int M = P.length;
    int [] result = new int [M];
    LinkedHashMap<Integer, Integer> lastOccurrencesMap = new LinkedHashMap<>();
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap.put(0, lastA);
        lastOccurrencesMap.put(1, lastC);
        lastOccurrencesMap.put(2, lastG);
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        for (Map.Entry<Integer, Integer> entry : lastOccurrencesMap.entrySet()) {
            int n = entry.getKey();
            int lastOccurence = getLastNucleotideOccurrence(startIndex, endIndex, n, lastOccurrencesMap);
            if (lastOccurence > 0) {
                minimum = n + 1;
                break;
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
831
0
Gpt3D_Clone831_0.java 1 39
Gpt3D_Clone831_0.java 40 87
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

public int[] solution(String S, int[] P, int[] Q) {
    int[] answer = new int[P.length];
    char[] chars = S.toCharArray();
    int[][] cumulativeAnswers = new int[4][chars.length + 1];
    // Iterating over each letter of S
    for (int iii = 0; iii < chars.length; iii++) {
        // Slicing the cumulative answers array
        if (iii > 0) {
            for (int zzz = 0; zzz < 4; zzz++) {
                cumulativeAnswers[zzz][iii + 1] = cumulativeAnswers[zzz][iii];
            }
        }
        // Extracting the numerical representation for every letter in S
        char letter = chars[iii];
        int index = 0;
        switch (letter) {
            case 'A':
                index = 0;
                break;
            case 'C':
                index = 1;
                break;
            case 'G':
                index = 2;
                break;
            case 'T':
                index = 3;
                break;
        }
        // Increasing the number in the desired index
        cumulativeAnswers[index][iii + 1] += 1;
    }
    // Searching for answers in the computed cumulative array
    for (int iii = 0; iii < P.length; iii++) {
        for (int zzz = 0; zzz < 4; zzz++) {
            int difference = cumulativeAnswers[zzz][Q[iii] + 1] - cumulativeAnswers[zzz][P[iii]];
            // If difference exists, that means the range contains one of four values
            if (difference > 0) {
                answer[iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
832
0
Gpt3D_Clone832_0.java 1 61
Gpt3D_Clone832_0.java 62 118
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] result = new int [P.length];
    int [] factor1 = new int [S.length ()];
    int [] factor2 = new int [S.length ()];
    int [] factor3 = new int [S.length ()];
    int [] factor4 = new int [S.length ()];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                factor1Sum ++;
                break;
            case 'C' :
                factor2Sum ++;
                break;
            case 'G' :
                factor3Sum ++;
                break;
            case 'T' :
                factor4Sum ++;
                break;
            default :
                break;
        }
        factor1 [i] = factor1Sum;
        factor2 [i] = factor2Sum;
        factor3 [i] = factor3Sum;
        factor4 [i] = factor4Sum;
    }
    for (int i = 0;
    i < P.length; i ++) {
        int start = P [i];
        int end = Q [i];
        if (start == 0) {
            if (factor1 [end] > 0) {
                result [i] = 1;
            } else if (factor2 [end] > 0) {
                result [i] = 2;
            } else if (factor3 [end] > 0) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        } else {
            if (factor1 [end] > factor1 [start - 1]) {
                result [i] = 1;
            } else if (factor2 [end] > factor2 [start - 1]) {
                result [i] = 2;
            } else if (factor3 [end] > factor3 [start - 1]) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        }
    }
    return result;
}
----------------------------------------

public int[] solution(String S, int[] P, int[] Q) {
    int[] result = new int[P.length];
    int[] factor1 = new int[S.length()];
    int[] factor2 = new int[S.length()];
    int[] factor3 = new int[S.length()];
    int[] factor4 = new int[S.length()];
    for (int i = 0; i < S.length(); i ++) {
        switch (S.charAt(i)) {
            case 'A' :
                factor1[i] = 1;
                factor2[i] = 0;
                factor3[i] = 0;
                factor4[i] = 0;
                break;
            case 'C' :
                factor1[i] = 0;
                factor2[i] = 1;
                factor3[i] = 0;
                factor4[i] = 0;
                break;
            case 'G' :
                factor1[i] = 0;
                factor2[i] = 0;
                factor3[i] = 1;
                factor4[i] = 0;
                break;
            case 'T' :
                factor1[i] = 0;
                factor2[i] = 0;
                factor3[i] = 0;
                factor4[i] = 1;
                break;
            default :
                break;
        }
    }
    for (int i = 0; i < P.length; i ++) {
        int start = P[i];
        int end = Q[i];
        if(Arrays.stream(factor1, start, end + 1).sum() > 0) {
            result[i] = 1;
        }
        else if(Arrays.stream(factor2, start, end + 1).sum() > 0) {
            result[i] = 2;
        }
        else if(Arrays.stream(factor3, start, end + 1).sum() > 0) {
            result[i] = 3;
        }
        else {
            result[i] = 4;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
832
1
Gpt3D_Clone832_1.java 1 61
Gpt3D_Clone832_1.java 62 105
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] result = new int [P.length];
    int [] factor1 = new int [S.length ()];
    int [] factor2 = new int [S.length ()];
    int [] factor3 = new int [S.length ()];
    int [] factor4 = new int [S.length ()];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                factor1Sum ++;
                break;
            case 'C' :
                factor2Sum ++;
                break;
            case 'G' :
                factor3Sum ++;
                break;
            case 'T' :
                factor4Sum ++;
                break;
            default :
                break;
        }
        factor1 [i] = factor1Sum;
        factor2 [i] = factor2Sum;
        factor3 [i] = factor3Sum;
        factor4 [i] = factor4Sum;
    }
    for (int i = 0;
    i < P.length; i ++) {
        int start = P [i];
        int end = Q [i];
        if (start == 0) {
            if (factor1 [end] > 0) {
                result [i] = 1;
            } else if (factor2 [end] > 0) {
                result [i] = 2;
            } else if (factor3 [end] > 0) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        } else {
            if (factor1 [end] > factor1 [start - 1]) {
                result [i] = 1;
            } else if (factor2 [end] > factor2 [start - 1]) {
                result [i] = 2;
            } else if (factor3 [end] > factor3 [start - 1]) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        }
    }
    return result;
}
----------------------------------------

public int[] solution(String S, int[] P, int[] Q) {
    int[] result = new int[P.length];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0; i < S.length(); i++) {
        switch (S.charAt(i)) {
            case 'A':
                factor1Sum++;
                break;
            case 'C':
                factor2Sum++;
                break;
            case 'G':
                factor3Sum++;
                break;
            case 'T':
                factor4Sum++;
                break;
            default:
                break;
        }
        for (int j = 0; j < P.length; j++) {
            int start = P[j];
            int end = Q[j];
            if(i >= start && i <= end){
                if (factor1Sum > 0) {
                    result[j] = 1;
                } else if (factor2Sum > 0) {
                    result[j] = 2;
                } else if (factor3Sum > 0) {
                    result[j] = 3;
                } else {
                    result[j] = 4;
                }
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
832
4
Gpt3D_Clone832_4.java 1 61
Gpt3D_Clone832_4.java 62 104
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] result = new int [P.length];
    int [] factor1 = new int [S.length ()];
    int [] factor2 = new int [S.length ()];
    int [] factor3 = new int [S.length ()];
    int [] factor4 = new int [S.length ()];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                factor1Sum ++;
                break;
            case 'C' :
                factor2Sum ++;
                break;
            case 'G' :
                factor3Sum ++;
                break;
            case 'T' :
                factor4Sum ++;
                break;
            default :
                break;
        }
        factor1 [i] = factor1Sum;
        factor2 [i] = factor2Sum;
        factor3 [i] = factor3Sum;
        factor4 [i] = factor4Sum;
    }
    for (int i = 0;
    i < P.length; i ++) {
        int start = P [i];
        int end = Q [i];
        if (start == 0) {
            if (factor1 [end] > 0) {
                result [i] = 1;
            } else if (factor2 [end] > 0) {
                result [i] = 2;
            } else if (factor3 [end] > 0) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        } else {
            if (factor1 [end] > factor1 [start - 1]) {
                result [i] = 1;
            } else if (factor2 [end] > factor2 [start - 1]) {
                result [i] = 2;
            } else if (factor3 [end] > factor3 [start - 1]) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        }
    }
    return result;
}
----------------------------------------

public int[] solution(String S, int[] P, int[] Q) {
    int[] result = new int[P.length];
    int countA = 0;
    int countC = 0;
    int countG = 0;
    int countT = 0;
    
    for(int i = 0; i < S.length(); i++){
        switch (S.charAt(i)) {
            case 'A':
                countA++;
                break;
            case 'C':
                countC++;
                break;
            case 'G':
                countG++;
                break;
            case 'T':
                countT++;
                break;
        }
        for (int j = 0; j < P.length; j++) {
            int start = P[j];
            int end = Q[j];
            if (i >= start && i <= end) {
                if (countA > 0) {
                    result[j] = 1;
                } else if (countC > 0) {
                    result[j] = 2;
                } else if (countG > 0) {
                    result[j] = 3;
                } else {
                    result[j] = 4;
                }
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
833
1
Gpt3D_Clone833_1.java 1 39
Gpt3D_Clone833_1.java 40 87
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

  public int[] solution(String S, int[] P, int[] Q) {
    int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    List<Character> nucleotides = new ArrayList<Character>();
    nucleotides.add('A');
    nucleotides.add('C');
    nucleotides.add('G');
    
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap[0][i] = lastA;
        lastOccurrencesMap[1][i] = lastC;
        lastOccurrencesMap[2][i] = lastG;
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        for (int n = 0; n < 3; n++) {
            int index = startIndex;
            while(index <= endIndex) {
                char c = S.charAt(index);
                
                if (c == nucleotides.get(n)){
                    minimum = n + 1;
                    break;
                }
                index++;
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
833
2
Gpt3D_Clone833_2.java 1 39
Gpt3D_Clone833_2.java 40 85
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 public int[] solution(String S, int[] P, int[] Q) {
    int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap[0][i] = lastA;
        lastOccurrencesMap[1][i] = lastC;
        lastOccurrencesMap[2][i] = lastG;
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        if (endIndex >= 0 && startIndex <= N-1) { 
            for (int k = startIndex; k <= endIndex; k++) { 
                char c = S.charAt(k);
                if (c == 'A') {
                    minimum = 1;
                    break;
                } else if (c == 'C') {
                    minimum = 2;
                    break;
                } else if (c == 'G') {
                    minimum = 3; 
                    break;
                }
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
833
3
Gpt3D_Clone833_3.java 1 39
Gpt3D_Clone833_3.java 40 82
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

  public int[] solution(String S, int[] P, int[] Q) {
    int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap[0][i] = lastA;
        lastOccurrencesMap[1][i] = lastC;
        lastOccurrencesMap[2][i] = lastG;
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        if (endIndex >= 0 && startIndex <= N-1) { 
            int a = lastOccurrencesMap[0][endIndex];
            int c = lastOccurrencesMap[1][endIndex];
            int g = lastOccurrencesMap[2][endIndex]; 
            if (a >= startIndex) {
                minimum = 1;
            } else if (c >= startIndex) {
                minimum = 2;     
            } else if (g >= startIndex) {
                minimum = 3; 
            } 
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
833
4
Gpt3D_Clone833_4.java 1 39
Gpt3D_Clone833_4.java 40 80
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 public int[] solution(String S, int[] P, int[] Q) {
    int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap[0][i] = lastA;
        lastOccurrencesMap[1][i] = lastC;
        lastOccurrencesMap[2][i] = lastG;
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        if (endIndex >= 0 && startIndex <= N-1) { 
            char c = S.charAt(startIndex);
            if (c == 'A') {
                minimum = 1;
            } else if (c == 'C') {
                minimum = 2;
            } else if (c == 'G') {
                minimum = 3; 
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
833
5
Gpt3D_Clone833_5.java 1 39
Gpt3D_Clone833_5.java 40 78
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

  public int[] solution(String S, int[] P, int[] Q) {
    int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int[] posA = new int[N];
    int[] posC = new int[N];
    int[] posG = new int[N];
    
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            posA[i] = i;
        } else if (c == 'C') {
            posC[i] = i;
        } else if (c == 'G') {
            posG[i] = i;
        }
        lastOccurrencesMap[0][i] = posA[i];
        lastOccurrencesMap[1][i] = posC[i];
        lastOccurrencesMap[2][i] = posG[i];
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        for (int n = 0; n < 3; n++) {
            int lastOccurence = getLastNucleotideOccurrence(startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
835
1
Gpt3D_Clone835_1.java 1 39
Gpt3D_Clone835_1.java 40 79
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 public int[] solution(String S, int[] P, int[] Q) { 
int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    lastOccurrencesMap = new int[3][N];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    int min = 4;
    for (int i = 0; i < N; i++) { 
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap[0][i] = lastA;
        lastOccurrencesMap[1][i] = lastC;
        lastOccurrencesMap[2][i] = lastG;
    }
    for (int i = 0; i < M; i++) { 
        int startIndex = P[i];
        int endIndex = Q[i];
        min = 4;
        int lastO = Math.min(Math.min(lastOccurrencesMap[0][endIndex], lastOccurrencesMap[1][endIndex]), lastOccurrencesMap[2][endIndex]);        
        if (lastO >= startIndex && lastO <= endIndex) { 
            int numOccurrences = 0;
            numOccurrences += (lastO == lastOccurrencesMap[0][endIndex] ? 1 : 0);
            numOccurrences += (lastO == lastOccurrencesMap[1][endIndex] ? 2 : 0);
            numOccurrences += (lastO == lastOccurrencesMap[2][endIndex] ? 3 : 0);
            min = numOccurrences;
        }
        result[i] = min;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
835
6
Gpt3D_Clone835_6.java 1 39
Gpt3D_Clone835_6.java 40 71
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 public int[] solution(String S, int[] P, int[] Q) { 
int N = S.length();
    int M = P.length;
    int[] result = new int[M];
    int lastA = -1, lastC = -1, lastG = -1;
    for (int i = 0; i < N; i++) { 
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        
        for (int j = 0; j < M; j++) { 
            int startIndex = P[j];
            int endIndex = Q[j];
            int minimum = 4;
            if (startIndex <= lastA && lastA <= endIndex) 
                minimum = 1;
            else if (startIndex <= lastC && lastC <= endIndex) 
                minimum = 2;
            else if (startIndex <= lastG && lastG <= endIndex) 
                minimum = 3;
            result[j] = minimum;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
836
2
Gpt3D_Clone836_2.java 1 39
Gpt3D_Clone836_2.java 40 77
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

 public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    int lastA = -1;
    int lastC = -1;
    int lastG = -1;
    for (int i = 0; i < N; i++) {
        char c = S.charAt(i);
        if (c == 'A') {
            lastA = i;
        } 
        else if (c == 'C') {
            lastC = i;
        } 
        else if (c == 'G') {
            lastG = i;
        }
    }
    for (int i = 0; i < M; i++) {
        int startIndex = P[i];
        int endIndex = Q[i];
        int minimum = 4;
        if (lastA >= startIndex && lastA <= endIndex) {
            minimum = 1;
        }
        else if (lastC >= startIndex && lastC <= endIndex && minimum > 1) {
            minimum = 2;
        }
        else if (lastG >= startIndex && lastG <= endIndex && minimum > 2) {
            minimum = 3;
        }
        result[i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
837
1
Gpt3D_Clone837_1.java 1 10
Gpt3D_Clone837_1.java 11 23
----------------------------------------

bool isPrime (int number) {
    if (number < 2) return false;
    if (number == 2) return true;
    if (number % 2 == 0) return false;
    for (int i = 3;
    (i * i) <= number; i += 2) {
        if (number % i == 0) return false;
    }
    return true;
}
----------------------------------------

  bool isPrime (int num){
    int i;
    if (num <= 1) return false;
    if (num == 2) return true;
    if (num % 2 == 0) return false;
    for (i = 3; i*i <= num; i += 2){
        if (num % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
837
2
Gpt3D_Clone837_2.java 1 10
Gpt3D_Clone837_2.java 11 24
----------------------------------------

bool isPrime (int number) {
    if (number < 2) return false;
    if (number == 2) return true;
    if (number % 2 == 0) return false;
    for (int i = 3;
    (i * i) <= number; i += 2) {
        if (number % i == 0) return false;
    }
    return true;
}
----------------------------------------

 bool isPrime(int x) 
{ 
    int i; 
    if (x == 0 || x == 1) return false; 
    if (x == 2) return true; 
    if (x % 2 == 0) return false; 
    for (i = 3; i * i <= x; i += 2) 
    { 
        if (x % i == 0) return false; 
    } 
    return true; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
837
3
Gpt3D_Clone837_3.java 1 10
Gpt3D_Clone837_3.java 11 27
----------------------------------------

bool isPrime (int number) {
    if (number < 2) return false;
    if (number == 2) return true;
    if (number % 2 == 0) return false;
    for (int i = 3;
    (i * i) <= number; i += 2) {
        if (number % i == 0) return false;
    }
    return true;
}
----------------------------------------

 bool isPrime(int num) 
{  
    if (num == 1) return false;
    if (num == 2) return true; 
  
    if (num % 2 == 0) return false; 
  
    for (int i = 3; i * i <= num; i += 2) 
    { 
        if (num % i == 0) 
            return false; 
    } 
  
    return true; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
837
4
Gpt3D_Clone837_4.java 1 10
Gpt3D_Clone837_4.java 11 21
----------------------------------------

bool isPrime (int number) {
    if (number < 2) return false;
    if (number == 2) return true;
    if (number % 2 == 0) return false;
    for (int i = 3;
    (i * i) <= number; i += 2) {
        if (number % i == 0) return false;
    }
    return true;
}
----------------------------------------

 bool isPrime(int x){
    if(x < 2) return false;
    else if(x == 2) return true;
    else if(x % 2 == 0) return false;
    for(int i = 3; i * i <= x; i+=2){
        if(x % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
0
Gpt3D_Clone838_0.java 1 14
Gpt3D_Clone838_0.java 15 30
----------------------------------------

public void tick (float delta) {
    Entity removeEntity = null;
    for (Entity e : entities) {
        e.tick (delta);
        if (e.checkStrength ()) {
            removeEntity = e;
            break;
        }
    }
    if (removeEntity != null) {
        entities.remove (removeEntity);
    }
    player.tick (delta);
}
----------------------------------------

 public void tick (float delta) {
    ArrayList<Entity> removeEntities = new ArrayList<>(); 
    for (Entity e : entities) {
        e.tick (delta);
        if (e.checkStrength()) {
            removeEntities.add(e);
            break;
        }
    }	
    for (Entity removeEntity : removeEntities) {	
        entities.remove(removeEntity);	
    }
    player.tick (delta);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
1
Gpt3D_Clone838_1.java 1 14
Gpt3D_Clone838_1.java 15 29
----------------------------------------

public void tick (float delta) {
    Entity removeEntity = null;
    for (Entity e : entities) {
        e.tick (delta);
        if (e.checkStrength ()) {
            removeEntity = e;
            break;
        }
    }
    if (removeEntity != null) {
        entities.remove (removeEntity);
    }
    player.tick (delta);
}
----------------------------------------

 public void tick (float delta){
    List<Entity> removeEntities = new ArrayList<>();
	for (Entity e : entities) {
		e.tick (delta);	
		if (e.checkStrength()) {
			removeEntities.add(e);
		}
	}	
	for (Entity removeEntity : removeEntities) {	
		entities.remove(removeEntity);	
	}
	player.tick (delta);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
841
2
Gpt3D_Clone841_2.java 1 21
Gpt3D_Clone841_2.java 22 51
----------------------------------------

public static String join (String separator, String...values) {
    if (values.length == 0) return "";
    char [] sep = separator.toCharArray ();
    int totalSize = (values.length - 1) * sep.length;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == null) values [i] = "";
        else totalSize += values [i].length ();
    }
    char [] joined = new char [totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1;
    i < end; i ++) {
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        System.arraycopy (sep, 0, joined, pos, sep.length);
        pos += sep.length;
    }
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

 public static String joinElements (String separator, String...values) {
    if (values.length == 0) return ""; 
    char[] seperatorArr = separator.toCharArray();
    
    int totalSize = (values.length - 1) * seperatorArr.length;
    for (int i = 0; i < values.length; i++) {
        if (values[i] == null) values[i] = "";
        else totalSize += values[i].length();
    }
    char[] joined = new char[totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1; i < end; i++) {
        for (int j = 0; j < values[i].length(); j++) {
            joined[pos] = values[i].charAt(j);
            pos++;
        }
        for (int k = 0; k < seperatorArr.length; k++) {
            joined[pos] = seperatorArr[k];
            pos++;
        }
    }
    for (int l = 0; l < values[values.length - 1].length(); l++) {
        joined[pos] = values[values.length - 1].charAt(l);
        pos++;
    }
    return new String(joined);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
1
Gpt3D_Clone843_1.java 1 12
Gpt3D_Clone843_1.java 13 32
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

  public static String sequenceNums (int [] nums) {
   StringBuilder sb = new StringBuilder ();
   if (nums.length == 0) return sb.toString ();
   int begin = nums [0], end = nums [0];
   int cur;
   int index = 1;
   while(index < nums.length) {
       cur = nums[index];
       if (cur - end <= 1) end = cur;
       else {
           appendRange (sb, begin, end);
           begin = end = cur;
       }
       index++;
   }
   appendRange (sb, begin, end);
   return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
2
Gpt3D_Clone843_2.java 1 12
Gpt3D_Clone843_2.java 13 32
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    int index = 1;
    while (index < nums.length) {
        int cur = nums[index];
        if (cur - end <= 1)
            end = cur;
        else {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
        index++;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
3
Gpt3D_Clone843_3.java 1 12
Gpt3D_Clone843_3.java 13 31
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i = 0; i < nums.length; i++) {
        int cur = nums[i];
        if (cur - end > 1) {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
        else {
            end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
4
Gpt3D_Clone843_4.java 1 12
Gpt3D_Clone843_4.java 13 31
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    int cur;
    for (int i = 0; i < nums.length; i++) {
        cur = nums[i];
        if (cur - end <= 1)
            end = cur;
        else {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
5
Gpt3D_Clone843_5.java 1 12
Gpt3D_Clone843_5.java 13 31
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums[0], end = nums[0];
    for (int i = 0; i < nums.length; i++) {
        int cur = nums[i];
        if (cur - end > 1) {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
        else if (cur - end == 1){
            end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
6
Gpt3D_Clone843_6.java 1 12
Gpt3D_Clone843_6.java 13 30
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums[0], end = nums[0];
    for (int i = 0; i < nums.length; i++) {
        int cur = nums[i];
        if (cur - end == 1)
            end = cur;
        else {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
7
Gpt3D_Clone843_7.java 1 12
Gpt3D_Clone843_7.java 13 28
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

  public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] - end <= 1) end = nums[i];
        else {
            appendRange (sb, begin, end);
            begin = end = nums[i];
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
8
Gpt3D_Clone843_8.java 1 12
Gpt3D_Clone843_8.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] - end == 1)
            end = nums[i];
        else {
            appendRange (sb, begin, end);
            begin = end = nums[i];
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
844
9
Gpt3D_Clone844_9.java 1 12
Gpt3D_Clone844_9.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

 public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums == null || nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) {
        if (cur - end <= 1) {
            end = cur;
        } else {
            appendRangeUsingSwitch(sb, begin, end);
            begin = end = cur;
        }
    }
    appendRangeUsingSwitch (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
845
2
Gpt3D_Clone845_2.java 1 19
Gpt3D_Clone845_2.java 20 53
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

 public int tortoiseMoves()
{
    int moveDistance;
    
    switch (tGen())
    {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            moveDistance = 3;
            break;
            
        case 6:
        case 7:
        case 8:
            moveDistance = 1;
            break;
            
        case 9:
        case 10:
            moveDistance = -6;
            break;
            
        default:
            moveDistance = 0;
            break;
    }
    
    return moveDistance;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
846
2
Gpt3D_Clone846_2.java 1 19
Gpt3D_Clone846_2.java 20 47
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

 public int tortoiseMoves () {
    int currentPosition = tGen();
     
    switch (currentPosition) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            currentPosition += 3;
            break;
        case 6:
        case 7:
        case 8:
            currentPosition += 1;
            break;
        case 9:
        case 10:
            currentPosition -= 6;
            break;
        default:
            currentPosition = 0;
            break;
    }
    return currentPosition;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
846
3
Gpt3D_Clone846_3.java 1 19
Gpt3D_Clone846_3.java 20 45
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

 public int tortoiseMoves () {
    int currentPosition = tGen();
    switch(currentPosition) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            currentPosition += 3;
            break;
        case 6:
        case 7:
        case 8:
            currentPosition += 1;
            break;
        case 9:
        case 10:
            currentPosition -= 6;
            break;
        default:
            currentPosition = 0;
    }
    return currentPosition;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
846
4
Gpt3D_Clone846_4.java 1 19
Gpt3D_Clone846_4.java 20 43
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

 public int tortoiseMoves() {
    int currentPosition = tGen();
    switch (currentPosition) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            currentPosition += 3;
            break;
        case 6:
        case 7:
        case 8:
            currentPosition += 1;
            break;
        case 9:
        case 10:
            currentPosition -= 6;
            break;
    }
    return currentPosition;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
1
Gpt3D_Clone848_1.java 1 22
Gpt3D_Clone848_1.java 23 49
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    final int valid = 6;
    System.out.println("Enter your username: ");
    Scanner input = new Scanner(System.in);
    String s = input.nextLine();
    boolean accepted = false;
    while (!accepted) {
        if (s.length() < valid) {
            System.out.println("Enter a valid username must contain " + valid + " characters");
            System.out.println("Enter again: ");
            s = input.nextLine();
        } else {
            accepted = true;
            System.out.println("Username accepted: " + s);
        }
    }
    System.out.println("Enter your age: ");
    int a = input.nextInt();
    System.out.println("Age accepted: " + a);
    System.out.println("Enter your sex: ");
    String sex = input.nextLine();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
2
Gpt3D_Clone848_2.java 1 22
Gpt3D_Clone848_2.java 23 46
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    int valid = 6;
    Scanner scanner = new Scanner(System.in);
    System.out.println("Enter your username: ");
    String s = scanner.nextLine();
    while (s.length() < valid) {
        System.out.println("Enter a valid username must contain " + valid + " characters");
        System.out.println("Enter again: ");
        s = scanner.nextLine();
    }
    System.out.println("Username accepted: " + s);
    System.out.println("Enter your age: ");
    int a = scanner.nextInt();
    System.out.println("Age accepted: " + a);
    String sex;
    do {
        System.out.println("Enter your sex: ");
        sex = scanner.nextLine();
    } while (sex.isEmpty());
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
3
Gpt3D_Clone848_3.java 1 22
Gpt3D_Clone848_3.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int valid = 6;
    boolean accepted = false;
    while (!accepted) {
        System.out.println("Enter your username: ");
        String s = scanner.nextLine();
        if (s.length() >= valid) {
            accepted = true;
            System.out.println("Username accepted: " + s);
        } else {
            System.out.println("Username must contain " + valid + " characters");
        }
    }
    System.out.println("Enter your age: ");
    int a = scanner.nextInt();
    System.out.println("Age accepted: " + a);
    System.out.println("Enter your sex: ");
    String sex = scanner.nextLine();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
4
Gpt3D_Clone848_4.java 1 22
Gpt3D_Clone848_4.java 23 44
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    final int valid = 6;
    System.out.println("Enter your username: ");
    Scanner input = new Scanner(System.in);
    String s = input.nextLine();
    do {
        System.out.println("Enter a valid username must contain " + valid + " characters");
        System.out.println("Enter again: ");
        s = input.nextLine();
    } while (s.length() < valid);
    System.out.println("Username accepted: " + s);
    System.out.println("Enter your age: ");
    int a = input.nextInt();
    System.out.println("Age accepted: " + a);
    System.out.println("Enter your sex: ");
    String sex = input.nextLine();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
5
Gpt3D_Clone848_5.java 1 22
Gpt3D_Clone848_5.java 23 42
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

public static void main (String [] args) {
    int valid = 6;
    System.out.println ("Enter your username: ");
    Scanner sc = new Scanner (System.in);
    String  s=sc.nextLine();
    if (s.length()<valid) {
        System.out.println ("Enter a valid username must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s=sc.nextLine();
    }
    System.out.println ("Username accepted: " + s);
    System.out.println ("Enter your age: ");
    int a = sc.nextInt();
    System.out.println ("Age accepted: " + a);
    System.out.println ("Enter your sex: ");
    String sex = sc.nextLine();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
6
Gpt3D_Clone848_6.java 1 22
Gpt3D_Clone848_6.java 23 42
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    int valid = 6;
    Scanner scanner = new Scanner(System.in);
    System.out.println("Enter your username: ");
    String s = scanner.nextLine();
    while(s.length() < valid) {
        System.out.println("Username must contain " + valid + " characters");
        System.out.println("Enter again: ");
        s = scanner.nextLine();
    }
    System.out.println("Username accepted: " + s);
    System.out.println("Enter your age: ");
    int a = scanner.nextInt();
    System.out.println("Age accepted: " + a);
    System.out.println("Enter your sex: ");
    String sex = scanner.nextLine();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
848
7
Gpt3D_Clone848_7.java 1 22
Gpt3D_Clone848_7.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main(String[] args) {
    final int valid = 6;
    Scanner input = new Scanner(System.in);
    System.out.println("Enter your username: ");
    String s = input.nextLine();
    while (s.length() < valid) {
        System.out.println("Enter a valid username must contain " + valid + " characters");
        System.out.println("Enter again: ");
        s = input.nextLine();
    }
    System.out.println("Username accepted: " + s);
    System.out.println("Enter your age: ");
    int a = input.nextInt();
    System.out.println("Age accepted: " + a);
    System.out.println("Enter your sex: ");
    String sex = input.nextLine();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
0
Gpt3D_Clone849_0.java 1 22
Gpt3D_Clone849_0.java 23 47
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner io = new Scanner (System.in);
    final int acceptableLength = 6;
    boolean validInput = false;
    String username = "";
    do {
        System.out.print ("Please enter a username - must be at least " + acceptableLength + " characters long: ");
        username = io.nextLine ();
        if (username.length () < acceptableLength) {
            validInput = false;
            System.out.println ("The username must be at least " + acceptableLength + " characters long!");
        } else {
            validInput = true;
        }
    } while (!validInput);
    System.out.println ("Username accepted: " + username);
    System.out.print ("Please enter your age: ");
    int age = io.nextInt ();
    System.out.println ("Age accepted: " + age);
    System.out.print ("Please enter your sex: ");
    String gender = io.nextLine ();
    System.out.println ("Sex accepted: " + gender);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
1
Gpt3D_Clone849_1.java 1 22
Gpt3D_Clone849_1.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    final int acceptedLength = 6;
    int usernameLength;
    String username;
    do {
        System.out.print("Please enter a username - must be at least " + acceptedLength + " characters long: ");
        username = scan.nextLine ();
        usernameLength = username.length ();
        if (usernameLength < acceptedLength) {
            System.out.println("The username must be at least " + acceptedLength + " characters long!");
        }
    } while (usernameLength < acceptedLength);
    System.out.println("Username accepted: " + username);
    System.out.print("Please enter your age: ");
    int age = scan.nextInt ();
    System.out.println("Age accepted: " + age);
    System.out.print("Please enter your sex: ");
    String sex = scan.nextLine ();
    System.out.println("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
2
Gpt3D_Clone849_2.java 1 22
Gpt3D_Clone849_2.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    final int valid = 6;
    Scanner input = new Scanner (System.in);
    String s;
    do {
        System.out.println ("Enter your username: ");
        s = input.nextLine ();
        if (s.length () < valid) {
            System.out.println ("Enter a valid username");
            System.out.println ("User name must contain " + valid + " characters");
            System.out.println ("Enter again: ");
        }
    } while (s.length () < valid);
    System.out.println ("Username accepted: " + s);
    System.out.println ("Enter your age: ");
    int a = input.nextInt ();
    System.out.println ("Age accepted: " + a);
    System.out.println ("Enter your sex: ");
    String sex = input.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
3
Gpt3D_Clone849_3.java 1 22
Gpt3D_Clone849_3.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    String s = "";
    do  {
        System.out.println ("Enter your username: ");
        s = input.nextLine ();
        if (s.length () < valid) {
            System.out.println ("Enter a valid username");
            System.out.println ("User name must contain " + valid + " characters");
            System.out.println ("Enter again: ");
        }
    } while (s.length () < valid);
    System.out.println ("Username accepted: " + s);
    System.out.println ("Enter your age: ");
    int a = input.nextInt ();
    System.out.println ("Age accepted: " + a);
    System.out.println ("Enter your sex: ");
    String sex = input.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
4
Gpt3D_Clone849_4.java 1 22
Gpt3D_Clone849_4.java 23 45
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    String s = "";
    while (s.length () < valid) {
        System.out.println ("Enter your username: ");
        s = input.nextLine ();
        if (s.length () < valid) {
            System.out.println ("Enter a valid username");
            System.out.println ("User name must contain " + valid + " characters");
            System.out.println ("Enter again: ");
        }
    }
    System.out.println ("Username accepted: " + s);
    System.out.println ("Enter your age: ");
    int a = input.nextInt ();
    System.out.println ("Age accepted: " + a);
    System.out.println ("Enter your sex: ");
    String sex = input.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
849
5
Gpt3D_Clone849_5.java 1 22
Gpt3D_Clone849_5.java 23 42
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final int valid = 6;
    Scanner one = new Scanner (System.in);
    System.out.println ("Enter your username: ");
    String s = one.nextLine ();
    if (s.length () < valid) {
        System.out.println ("Enter a valid username");
        System.out.println ("User name must contain " + valid + " characters");
        System.out.println ("Enter again: ");
        s = one.nextLine ();
    }
    System.out.println ("Username accepted: " + s);
    Scanner two = new Scanner (System.in);
    System.out.println ("Enter your age: ");
    int a = two.nextInt ();
    System.out.println ("Age accepted: " + a);
    Scanner three = new Scanner (System.in);
    System.out.println ("Enter your sex: ");
    String sex = three.nextLine ();
    System.out.println ("Sex accepted: " + sex);
}
----------------------------------------

 public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    final int valid = 6;
    String userName;
    do {
        System.out.print ("Please enter a user name. Must be at least " + valid + " characters in length: ");
        userName = scnr.nextLine ();
        if (userName.length () < valid)
            System.out.println ("\nUser name must contain at least " + valid + " characters - please re-enter.\n");
    } while (userName.length () < valid);
    System.out.println ("\nUser name accepted: " + userName);
    System.out.print ("\nPlease enter your age: ");
    int age = scnr.nextInt ();
    System.out.println ("\nAge accepted: " + age);
    System.out.print ("\nPlease enter your sex: ");
    String gender = scnr.nextLine ();
    System.out.println ("\nSex accepted: " + gender);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
84
8
Gpt3D_Clone84_8.java 1 24
Gpt3D_Clone84_8.java 25 47
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= factorsOfTwoInA;
    b>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            a = (a - b);
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

 public static final int gcd(int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return (1 << Integer.numberOfTrailingZeros (Math.abs (b)));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int commonFactorsOfTwo = Math.min (Integer.numberOfTrailingZeros (a), Integer.numberOfTrailingZeros (b)); 
    a >>= Integer.numberOfTrailingZeros (a);
    b >>= Integer.numberOfTrailingZeros (b);
    for (int t; a!=0; t=a, a=b%a, b=t);
    return b << commonFactorsOfTwo;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
851
8
Gpt3D_Clone851_8.java 1 8
Gpt3D_Clone851_8.java 9 31
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    double [] [] b = new double [x] [x];
    x = Math.min (x, a.length);
    for (int i = 0;
    i < x; i ++) for (int j = 0;
    j < x; j ++) b [i] [j] = a [i] [j];
    return b;
}
----------------------------------------

 public static double[][] amountOTP (double[][] a, int x)
{
    // Create a new double array
    double[][] b = new double[x][x];
    // Use Math.min to set x correctly
    x = Math.min (x, a.length);
    // Create a for loop to go through each element in array a
    for (int i = 0; i < x; i++)
    {
        for (int j = 0; j < x; j++) 
        {
            // Assign values from a to b
            b[i][j] = a[i][j];
        }
    }
    // Return filled double array
    return b;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
851
9
Gpt3D_Clone851_9.java 1 8
Gpt3D_Clone851_9.java 9 31
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    double [] [] b = new double [x] [x];
    x = Math.min (x, a.length);
    for (int i = 0;
    i < x; i ++) for (int j = 0;
    j < x; j ++) b [i] [j] = a [i] [j];
    return b;
}
----------------------------------------

 public static double[][] amountOTP (double[][] a, int x) 
{
   // Declare a new double array 
   double[][] b = new double[x][x];
   // Use Math.min to set x correctly
   x = Math.min (x, a.length);
   // Create a for loop to go through each element in array a
   for (int i = 0; i < x; i++) 
   {
      for (int j = 0; j < x; j++) 
      {
         // Assign values from a to b
         b[i][j] = a[i][j];
      }
   }
   // Return the filled double array
   return b;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
855
0
Gpt3D_Clone855_0.java 1 15
Gpt3D_Clone855_0.java 16 33
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] [] matrix = new int [3] [];
    matrix [0] = new int [] {1, 2, 2};
    matrix [1] = new int [] {2, 2, 3};
    matrix [2] = new int [] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        resultL2R *= matrix [i] [i];
        resultR2L *= matrix [i] [matrix.length - 1 - i];
    }
    System.out.println ("left-to-right: " + resultL2R);
    System.out.println ("right-to-left: " + resultR2L);
}
----------------------------------------

 public static void main (String args []) throws Exception {
    int[][] matrix = new int[3][];
    matrix[0] = new int[] {1,2,2}; 
    matrix[1] = new int[] {2,2,3}; 
    matrix[2] = new int[] {0,1,2}; 
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0; i < matrix.length; i++) {
        resultL2R *= matrix[i][i];
        resultR2L *= matrix[matrix.length - 1 - i][matrix.length - 1 - i];
    }
    System.out.print("Left-to-right: ");
    System.out.println(resultL2R);
    System.out.print("Right-to-left: ");
    System.out.println(resultR2L);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
855
1
Gpt3D_Clone855_1.java 1 15
Gpt3D_Clone855_1.java 16 30
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] [] matrix = new int [3] [];
    matrix [0] = new int [] {1, 2, 2};
    matrix [1] = new int [] {2, 2, 3};
    matrix [2] = new int [] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        resultL2R *= matrix [i] [i];
        resultR2L *= matrix [i] [matrix.length - 1 - i];
    }
    System.out.println ("left-to-right: " + resultL2R);
    System.out.println ("right-to-left: " + resultR2L);
}
----------------------------------------

 public static void main (String args[])  throws Exception {
    int[][] matrix = new int[3][3]; 
    matrix[0] = new int[] {1,2,2};
    matrix[1] = new int[] {2,2,3};
    matrix[2] = new int[] {0,1,2}; 
    int resultL2R = 1, resultR2L = 1; 
    for (int i = 0; i < matrix.length; i++) {
        resultL2R *= matrix[i][i];
        resultR2L *= matrix[matrix.length-i-1][matrix.length-i-1];
    }
    System.out.println("left-to-right: "+ resultL2R); 
    System.out.println("right-to-left: "+ resultR2L);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
0
Gpt3D_Clone856_0.java 1 9
Gpt3D_Clone856_0.java 10 20
----------------------------------------

public static void main (String [] args) {
    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};
    int result = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        result = result * matrix [i] [i];
    }
    System.out.println ("Result: " + result);
}
----------------------------------------

 public static void main (String [] args) {
    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};
    double result = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        result = result * Math.sqrt(matrix[i][i]);
    }
    System.out.println ("Result: " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
1
Gpt3D_Clone856_1.java 1 9
Gpt3D_Clone856_1.java 10 20
----------------------------------------

public static void main (String [] args) {
    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};
    int result = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        result = result * matrix [i] [i];
    }
    System.out.println ("Result: " + result);
}
----------------------------------------

 public static void main (String [] args) {
    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};
    double result = 0;
    for (int i = 0;
    i < matrix.length; i ++) {
        result = result + Math.log(matrix[i][i]);
    }
    System.out.println ("Result: " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
0
Gpt3D_Clone85_0.java 1 9
Gpt3D_Clone85_0.java 10 23
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    if(htmlEditor.lookup (".tool-bar") != null) {
      Node toolBar = htmlEditor.lookup (".tool-bar");
      while (toolBar != null) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
        toolBar = htmlEditor.lookup (".tool-bar");
      }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
1
Gpt3D_Clone85_1.java 1 9
Gpt3D_Clone85_1.java 10 22
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    do {
      Node toolBar = htmlEditor.lookup (".tool-bar");
      if(toolBar != null) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
      }
    } while (htmlEditor.lookup (".tool-bar") != null);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
3
Gpt3D_Clone85_3.java 1 9
Gpt3D_Clone85_3.java 10 22
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        Parent parent = (Parent) toolBar.getParent ();
        int index = parent.getChildren ().indexOf (toolBar);
        parent.getChildren ().remove (index);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
4
Gpt3D_Clone85_4.java 1 9
Gpt3D_Clone85_4.java 10 21
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    Node toolBar = htmlEditor.lookup (".tool-bar");
    while (toolBar != null) {
      ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
      toolBar = htmlEditor.lookup (".tool-bar")
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
5
Gpt3D_Clone85_5.java 1 9
Gpt3D_Clone85_5.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    while(htmlEditor.lookup (".tool-bar") != null) {
      Node toolBar = htmlEditor.lookup (".tool-bar");
      ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
6
Gpt3D_Clone85_6.java 1 9
Gpt3D_Clone85_6.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    Node toolBar;
    while((toolBar = htmlEditor.lookup (".tool-bar")) != null) {
        (toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
7
Gpt3D_Clone85_7.java 1 9
Gpt3D_Clone85_7.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    Node toolBar = htmlEditor.lookup (".tool-bar");
    if (toolBar != null) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
8
Gpt3D_Clone85_8.java 1 9
Gpt3D_Clone85_8.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    Node toolBar;
    while((toolBar = htmlEditor.lookup (".tool-bar")) != null) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
9
Gpt3D_Clone85_9.java 1 9
Gpt3D_Clone85_9.java 10 21
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        Parent parent = (Parent) toolBar.getParent ();
        parent.getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
1
Gpt3D_Clone860_1.java 1 15
Gpt3D_Clone860_1.java 16 39
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            value = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            int x, y, highest;
            x = score(a, b, idxA + 1, idxB);
            y = score(a, b, idxA, idxB + 1);
            if(x > y){
                highest = x;
            }else{
                highest = y;
            }
            value = highest;
        }
    }
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
2
Gpt3D_Clone860_2.java 1 15
Gpt3D_Clone860_2.java 16 39
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    int highestScore = 0;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a [idxA] == b [idxB]) {
            highestScore = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            for(int i = idxA; i < a.length;  i++){
                for(int j = idxB; j < b.length; j++){
                    int x,y;
                    x = score(a,b,i+1,j);
                    y = score(a,b,i,j+1);
                    highestScore = Math.max(highestScore, Math.max(x,y));
                }
            }
        }
    }
    value = highestScore;
    return (value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
3
Gpt3D_Clone860_3.java 1 15
Gpt3D_Clone860_3.java 16 36
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    int currentScore = 0;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            currentScore = 1 + score(a, b, idxA + 1, idxB + 1);
        } else {
            int x, y;
            x = score(a, b, idxA + 1, idxB);
            y = score(a, b, idxA, idxB + 1);
            currentScore = Math.max(x, y);
        }
    }
    value = currentScore;
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
5
Gpt3D_Clone860_5.java 1 15
Gpt3D_Clone860_5.java 16 34
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            value = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            int x, y;
            x = searchForLongestSub(a, b, idxA + 1, idxB);
            y = searchForLongestSub(a, b, idxA, idxB + 1);
            value = Math.max(x, y);
        }
    }
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
6
Gpt3D_Clone860_6.java 1 15
Gpt3D_Clone860_6.java 16 34
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            value = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            int x, y;
            x = compareCharacters(a, b, idxA + 1, idxB);
            y = compareCharacters(a, b, idxA, idxB + 1);
            value = Math.max(x, y);
        }
    }
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
7
Gpt3D_Clone860_7.java 1 15
Gpt3D_Clone860_7.java 16 34
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            value = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            int x, y;
            x = score(a, b, idxA + 1, idxB);
            y = score(a, b, idxA, idxB + 1);
            value = Math.max(x, y);
        }
    }
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
860
8
Gpt3D_Clone860_8.java 1 15
Gpt3D_Clone860_8.java 16 34
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }
    return (value);
}
----------------------------------------

 private static int score (final char [] a, final char [] b, final int idxA, final int idxB) { 
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else {
        if (a[idxA] == b[idxB]) {
            value = 1 + score (a, b, idxA + 1, idxB + 1);
        } else {
            int x, y;
            x = findSubstring(a, b, idxA + 1, idxB);
            y = findSubstring(a, b, idxA, idxB + 1);
            value = Math.max(x, y);
        }
    }
    return(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
0
Gpt3D_Clone861_0.java 1 22
Gpt3D_Clone861_0.java 23 45
----------------------------------------

public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i != 0) {
                if (i % 2 == 0) System.out.println (i + " is even");
                else {
                    System.out.println (i + " is odd");
                }
            } else {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            }
        }
    }
}
----------------------------------------

 public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i == 0) {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            } else if (i % 2 != 0) {
                System.out.println (i + " is odd");
            } else {
                System.out.println (i + " is even");
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
1
Gpt3D_Clone861_1.java 1 22
Gpt3D_Clone861_1.java 23 45
----------------------------------------

public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i != 0) {
                if (i % 2 == 0) System.out.println (i + " is even");
                else {
                    System.out.println (i + " is odd");
                }
            } else {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            }
        }
    }
}
----------------------------------------

 public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i == 0) {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            } else if (i % 2 == 0) {
                System.out.println (i + " is even");
            } else {
                System.out.println (i + " is odd");
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
2
Gpt3D_Clone861_2.java 1 22
Gpt3D_Clone861_2.java 23 43
----------------------------------------

public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i != 0) {
                if (i % 2 == 0) System.out.println (i + " is even");
                else {
                    System.out.println (i + " is odd");
                }
            } else {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            }
        }
    }
}
----------------------------------------

 public static void main (String [] arguments) {
    int i = 0;
    Scanner inputChar = new Scanner (System.in);
    while (true) {
        System.out.println ("Type in an integer:");
        if (!inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i =  inputChar.nextInt ();
            if (i % 2 != 1) System.out.println(i + " is even");
            else if (i != 0) System.out.println(i + " is odd");
            else {
                System.out.println("Zeros are not allowed, bye!");
                break;
            } 
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
865
5
Gpt3D_Clone865_5.java 1 14
Gpt3D_Clone865_5.java 15 35
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1;
            j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;
            }
            index = i;
        }
    }
    return index;
}
----------------------------------------

 public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0; i < array.length; i++) {
        if (array[i] == subArray[0]) {
            boolean found = true;
            for (int j = 1; j < subArray.length; j++) {
                if (i + j > array.length - 1 || array[i + j] != subArray[j]) {
                    found = false;
                    continue arrayLoop;
                }
            } 
            if (found) {
                index = i; 
                break;
            }
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
865
6
Gpt3D_Clone865_6.java 1 14
Gpt3D_Clone865_6.java 15 34
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1;
            j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;
            }
            index = i;
        }
    }
    return index;
}
----------------------------------------

 public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    boolean check = false;
    arrayLoop : for (int i = 0; 
        i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1; j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) {
                    continue arrayLoop;
                }
                else check = true;
            }
            if (check)
                index = i;
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
865
7
Gpt3D_Clone865_7.java 1 14
Gpt3D_Clone865_7.java 15 31
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1;
            j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;
            }
            index = i;
        }
    }
    return index;
}
----------------------------------------

 public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    for (int i = 0; i < array.length; i++) {
        if (array[i] == subArray[0]) {
            for (int j = 1; j < subArray.length; j++)
            if (i + j > array.length - 1 || array[i + j] != subArray[j]) {
                break;
            }
            else {
                index = i; 
            } 
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
0
Gpt3D_Clone866_0.java 1 13
Gpt3D_Clone866_0.java 14 31
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put (K key, V val) {
    if (currentSize < maxSize) {
        if (map.containsKey (key)) {
            get (key);
            return;
        }
        ListNode < K > ln = queue.add (key);
        ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
        map.put (key, rv);
        currentSize++;
    }
    else {
        freeSpace();
        put(key, val);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
1
Gpt3D_Clone866_1.java 1 13
Gpt3D_Clone866_1.java 14 31
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put (K key, V val) {
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    if (currentSize < maxSize) {
        ListNode < K > ln = queue.add (key);
        ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
        map.put (key, rv);
        currentSize++;
    }
    else {
        freeSpace();
        put(key, val);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
2
Gpt3D_Clone866_2.java 1 13
Gpt3D_Clone866_2.java 14 28
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put (K key, V val) {
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    while (currentSize > maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
0
Gpt3D_Clone869_0.java 1 12
Gpt3D_Clone869_0.java 13 33
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val;
    }
 
    Node temp = head;
    temp.next = null;
    head = head.next;
    head.prev = null;
    temp = null; // deallocating memory
 
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
1
Gpt3D_Clone869_1.java 1 12
Gpt3D_Clone869_1.java 13 33
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val;
    }
 
    head = head.next;
    head.prev = null;
    Node temp = head.prev; // delete head's previous node
    temp.next = null;
    temp.prev = null;
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
2
Gpt3D_Clone869_2.java 1 12
Gpt3D_Clone869_2.java 13 33
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val;
    }
 
    Node temp = head;
    head = head.next;
    head.prev = null;
    temp.prev = null; // deallocating memory
    temp.next = null;
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
3
Gpt3D_Clone869_3.java 1 12
Gpt3D_Clone869_3.java 13 32
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val;
    }
 
    Node secondNode = head.next;
    head = null;
    secondNode.prev = null;
    head = secondNode;
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
4
Gpt3D_Clone869_4.java 1 12
Gpt3D_Clone869_4.java 13 33
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val; // return before deallocating memory
    }
 
    Node prev = head;
    head = head.next;
    prev.next = null;
    head.prev = null;
 
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
5
Gpt3D_Clone869_5.java 1 12
Gpt3D_Clone869_5.java 13 31
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        Node prev = head;
        head = head.next;
        prev.next = null;
        head.prev = null;
    }
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
6
Gpt3D_Clone869_6.java 1 12
Gpt3D_Clone869_6.java 13 31
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        Node temp = head.next;
        head.next = null;
        head = temp;
        head.prev = null;
    }
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
7
Gpt3D_Clone869_7.java 1 12
Gpt3D_Clone869_7.java 13 32
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head == null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val;
    }
 
    Node next = head.next;
    head.next = null;
    head = next;
    head.prev = null;
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
8
Gpt3D_Clone869_8.java 1 12
Gpt3D_Clone869_8.java 13 32
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head==null) {
        return null;
    }
 
    K val = head.value;
 
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        Node second = head.next;
        second.prev=null;
        head.next=null;
        head=second;
    }
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
869
9
Gpt3D_Clone869_9.java 1 12
Gpt3D_Clone869_9.java 13 30
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove() {
    if (head==null) {
        return null;
    }
 
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
        return val; // return before deallocating memory
    }
 
    head = head.next;
    head.prev = null;
    return val;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
1
Gpt3D_Clone86_1.java 1 9
Gpt3D_Clone86_1.java 10 22
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) { final HTMLEditor htmlEditor = new HTMLEditor();
    Pane htmlEditorPane = new Pane();
    htmlEditorPane.getChildren().add(htmlEditor);
    primaryStage.setScene(new Scene(htmlEditorPane));
    primaryStage.show();
    Node toolBar = htmlEditor.lookup(".tool-bar");
    if (toolBar != null) {
        ((Pane) toolBar.getParent()).getChildren().remove(toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
2
Gpt3D_Clone86_2.java 1 9
Gpt3D_Clone86_2.java 10 21
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) { final HTMLEditor htmlEditor = new HTMLEditor();
    Pane htmlEditorPane = new Pane();
    htmlEditorPane.getChildren().add(htmlEditor);
    primaryStage.setScene(new Scene(htmlEditorPane));
    primaryStage.show();
    for (Node toolBar = htmlEditor.lookup(".tool-bar"); 
    toolBar != null; toolBar = htmlEditor.lookup(".tool-bar")) {
        toolBar.getParent().getChildren().remove(toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
4
Gpt3D_Clone86_4.java 1 9
Gpt3D_Clone86_4.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {final HTMLEditor htmlEditor = new HTMLEditor();
    Scene scene = new Scene(htmlEditor);
    primaryStage.setScene(scene);
    primaryStage.show();
    for (Node toolBar = htmlEditor.lookup(".tool-bar"); 
    toolBar != null; toolBar = htmlEditor.lookup(".tool-bar")) {
        scene.getRoot().getChildrenUnmodifiable().remove(toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
6
Gpt3D_Clone86_6.java 1 9
Gpt3D_Clone86_6.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {final HTMLEditor htmlEditor = new HTMLEditor();
    Scene scene = new Scene(htmlEditor);
    primaryStage.setScene(scene);
    primaryStage.show();
    for (Node toolBar = htmlEditor.lookup(".tool-bar"); toolBar != null; 
    toolBar = htmlEditor.lookup(".tool-bar")) {
        scene.getRoot().getChildren().remove(toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
7
Gpt3D_Clone86_7.java 1 9
Gpt3D_Clone86_7.java 10 19
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

 public void start (Stage primaryStage) {final HTMLEditor htmlEditor = new HTMLEditor();
    Scene scene = new Scene(htmlEditor);
    primaryStage.setScene(scene);
    primaryStage.show();
    for (Node toolBar = htmlEditor.lookup(".tool-bar");toolBar != null;toolBar = htmlEditor.lookup(".tool-bar")) {
        scene.getRoot().getChildren().removeIf(node -> node != null && node.equals(toolBar));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
8
Gpt3D_Clone86_8.java 1 9
Gpt3D_Clone86_8.java 10 19
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

  public void start (Stage primaryStage) {final HTMLEditor htmlEditor = new HTMLEditor();
    primaryStage.addNode(htmlEditor);
    primaryStage.show();
    for (Node toolBar = htmlEditor.lookup(".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup(".tool-bar")) {
        toolBar.getParent().getChildren().removeIf(node -> node != null && node.getId().equals(".tool-bar"));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
0
Gpt3D_Clone870_0.java 1 12
Gpt3D_Clone870_0.java 13 35
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K valueToRemove;
   if (head == null) 
   { 
      valueToRemove = null; 
   } 
   else 
   { 
      valueToRemove = head.value; 
      if (head.next == null) 
      { 
         head = null; 
         tail = null; 
      } 
      else 
      { 
         head = head.next; 
         head.prev = null; 
      } 
   } 
   return valueToRemove;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
1
Gpt3D_Clone870_1.java 1 12
Gpt3D_Clone870_1.java 13 35
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K valueReturn;
   if(head == null) 
   {
       valueReturn = null;
   }
   else 
   {
       valueReturn = head.value;
       if (head == tail) 
       {
           head = null;
           tail = null;
       }
       else 
       {
           head = head.next;
           head.prev = null;
       }
   }
   return valueReturn;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
2
Gpt3D_Clone870_2.java 1 12
Gpt3D_Clone870_2.java 13 35
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K deletedValue;
   if(head == null)  
   {
       deletedValue = null;
   } 
   else 
   { 
      deletedValue = head.value; 
      if (head == tail) 
      { 
          head = null; 
          tail = null; 
      } 
      else 
      {  
          head = head.next; 
          head.prev = null; 
      } 
   }
   return deletedValue;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
3
Gpt3D_Clone870_3.java 1 12
Gpt3D_Clone870_3.java 13 32
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K val;
   if (head == null) return null; 
   else
   {
       val = head.value; 
       if (head.next == null)  
       {
           head = null;
           tail = null;
       }
       else 
       {
           head = head.next;
           head.prev = null;
       }
       return val;
   }  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
4
Gpt3D_Clone870_4.java 1 12
Gpt3D_Clone870_4.java 13 34
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {if (head == null) 
   {
      return null; 
   }
   else 
   {
      K val = head.value;
      if (head == tail) 
      {
          head = null;
          tail = null;
      }
      else 
      {
        head = head.next;
        head.prev = null;
      }
      return val;
   } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
5
Gpt3D_Clone870_5.java 1 12
Gpt3D_Clone870_5.java 13 31
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K result = null;
   if (head != null) 
   {
       result = head.value;
       if (head == tail) 
       {
           head = null;
           tail = null; 
       } 
       else  
       { 
           head = head.next;
           head.prev = null;
       }
   } 
   return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
6
Gpt3D_Clone870_6.java 1 12
Gpt3D_Clone870_6.java 13 31
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () { if (head != null) 
    {
        K value = head.value;
        if (head == tail) 
        {
            head = null;
            tail = null;
        }
        else 
        {
            head = head.next;
            head.prev = null;
        }
        return value;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
7
Gpt3D_Clone870_7.java 1 12
Gpt3D_Clone870_7.java 13 29
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K removedVal = null;
   if (head != null)
   {
       removedVal = head.value;
       if (head == tail) {
           head = null;
           tail = null;
       }
       else {
           head = head.next;
           head.prev = null;
       }
   }
   return removedVal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
8
Gpt3D_Clone870_8.java 1 12
Gpt3D_Clone870_8.java 13 31
----------------------------------------

public K remove () {
    if (head == null) return null;
    K val = head.value;
    if (head.next == null) {
        head = null;
        tail = null;
    } else {
        head = head.next;
        head.prev = null;
    }
    return val;
}
----------------------------------------

 public K remove () {K element = null; 
   if (head != null) 
   { 
       element = head.value; 
       if (head == tail) 
       { 
           head = null; 
           tail = null; 
       }
       else 
       { 
           head = head.next; 
           head.prev = null; 
       } 
   } 
   return element; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
2
Gpt3D_Clone871_2.java 1 14
Gpt3D_Clone871_2.java 15 38
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

 public void put (Key key, Value val) {
    if (map.containsKey(key)) {
        if (Objects.equals(val, map.get(key))) {
            return;
        }
        else {
            freeSpace();
        }
    }
    if (map.size() < maxSize) {
        synchronized (this) {
            queue.add (key);
            map.put (key, val);
            currentSize ++;
            return;
        }
    }
    else {
        freeSpace ();
        put (key, val);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
3
Gpt3D_Clone871_3.java 1 14
Gpt3D_Clone871_3.java 15 36
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

 public void put (Key key, Value val) {
    if (map.containsKey(key)) {
        freeSpace();
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.size() < maxSize) {
        synchronized (this) {
            queue.add (key);
            map.put (key, val);
            currentSize ++;
            return;
        }
    }
    else {
        freeSpace ();
        put (key, val);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
4
Gpt3D_Clone871_4.java 1 14
Gpt3D_Clone871_4.java 15 34
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

 public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        replaceValue (key, val);
        return;
    }
    if (currentSize < maxSize) {
        synchronized (this) {
            queue.add (key);
            map.put (key, val);
            currentSize ++;
            return;
        }
    }
    else {
        freeSpace ();
        put (key, val);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
5
Gpt3D_Clone871_5.java 1 14
Gpt3D_Clone871_5.java 15 34
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

 public void put (Key key, Value val) {
    if (map.containsKey(key)) {
        if (Objects.equals(val, map.get(key))) {
            return;
        }
        else {
            freeSpace();
        }
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
6
Gpt3D_Clone871_6.java 1 14
Gpt3D_Clone871_6.java 15 29
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

 public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        return;
    }
    while (currentSize + val.getSize() >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize += val.getSize();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
0
Gpt3D_Clone872_0.java 1 23
Gpt3D_Clone872_0.java 24 49
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    int i = 0;
    while (i < 3) {
        if (pass.equals(test)) {
            success = true;
            break;
        }else {
            System.out.println ("You have " + (maxTry - (i + 1)) + " try(es): ");
            test = input.nextLine ();
        }
        i++;
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
1
Gpt3D_Clone872_1.java 1 23
Gpt3D_Clone872_1.java 24 49
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String userPass = input.nextLine ();
    int i = 0;
    while (i < 3) {
        if (pass.equals (userPass)) {
            success = true;
            break;
        } else {
            System.out.print ("You have " + (maxTry - (i + 1)) + " try(es): ");
            userPass = input.nextLine ();
        }
        i++;
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
2
Gpt3D_Clone872_2.java 1 23
Gpt3D_Clone872_2.java 24 48
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

 public static void main(String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    String typed;
    Scanner input = new Scanner (System.in);
 
    System.out.print ("Insert the admin password: ");
    for (int i=0; i < 3; i++) {
        typed = input.nextLine ();
        if (! pass.equals (typed)) {
            System.out.println ("You still have " + (maxTry - (i+1)) + " try(es) left");
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
3
Gpt3D_Clone872_3.java 1 23
Gpt3D_Clone872_3.java 24 48
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

 public static void main(String[] args) {
    String correctPassword = "admin";
    int maxTries = 3;
    boolean success = false;
    Scanner input = new Scanner(System.in);
    System.out.print("Insert the admin password: ");
    while (maxTries > 0) {
        String password = input.nextLine();
        if (correctPassword.equals(password)) {
            success = true;
            break;
        }else {
            System.out.println("You still have " + maxTries + " try(es) left");
            maxTries--;
        }
    }
    if (success) {
        System.out.println("Access granted");
    } else {
        System.out.println("Access denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
4
Gpt3D_Clone872_4.java 1 23
Gpt3D_Clone872_4.java 24 47
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    for (int i=0; i < maxTry; i++) {
        if (pass.equals (test)) {
            success = true;
            break;
        } else {
            System.out.print ("You have " + (maxTry - (i+1)) + " try(es): ");
            test = input.nextLine ();
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
0
Gpt3D_Clone873_0.java 1 21
Gpt3D_Clone873_0.java 22 48
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    boolean access = false;
    if (pass.equals (test)) {
        System.out.println ("Access granted");
    } else {
        for (int i = 1; i < 4; i++) {
            System.out.println ("You have " + i + " try(es): ");
            if (pass.equals (test)) {
                System.out.println ("Access granted");
                access = true;
                break;
            }
            else {
                test = input.nextLine ();
            }
        }
        if (!access) {
            System.out.println ("Access denied");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
1
Gpt3D_Clone873_1.java 1 21
Gpt3D_Clone873_1.java 22 46
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    int attempts = 0;
    while (attempts < 3) {
        attempts++;
        if (attempts == 1) {
            System.out.print ("You have " + attempts + " try: ");
        } else {
            System.out.print ("You have " + attempts + " tries: ");
        }
        if (pass.equalsIgnoreCase(test)) {
            System.out.print("Access granted");
            break;
        } else if (attempts == 3) {
            System.out.print("Access denied");
        } else {
            test = input.nextLine();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
2
Gpt3D_Clone873_2.java 1 21
Gpt3D_Clone873_2.java 22 45
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        int attempts = 0;
        do {
            attempts++;
            System.out.println("You have " + attempts + " try(es): ");
            test = input.nextLine ();
            if (pass.equals(test)) {
                System.out.println("Access granted");
            } 
            if (attempts == 3) {
                System.out.println("Access denied");
            }   	
        } while (attempts < 3);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
3
Gpt3D_Clone873_3.java 1 21
Gpt3D_Clone873_3.java 22 42
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

 public static void main (String [] args) {
    String password = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    int attempts = 0;
    while (attempts < 3) {
        attempts++;
        System.out.print ("You have " + attempts + " try(es): ");
        if (password.equalsIgnoreCase(test)) {
            System.out.print("Access granted");
            break;
        } else if (attempts == 3) {
            System.out.print("Access denied");
        } else {
            test = input.nextLine();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
875
0
Gpt3D_Clone875_0.java 1 21
Gpt3D_Clone875_0.java 22 44
----------------------------------------

public static void duplication () {
    int max = 100;
    int min = 1;
    Random rand = new Random ();
    int index = 0;
    int [] all = new int [20];
    while (index < 20) {
        boolean duplicate = false;
        int randomNum = rand.nextInt ((max - min) + 1) + min;
        for (int i = 0;
        i < all.length; i ++) {
            if (all [i] == randomNum) {
                duplicate = true;
                break;
            }
        }
        if (! duplicate) {
            all [index ++] = randomNum;
        }
    }
}
----------------------------------------

 public static void duplication(){
    int max = 100;
    int min = 1;
    Random rand = new Random();
    int[] all = new int[20];
    int counter = 0;
    while (counter < 20) {
        int randomNum = rand.nextInt((max - min) + 1) + min;
        boolean isFound = false;
        for(int i = 0; i < all.length; i++){
           if(all[i] == randomNum){
               isFound = true;
               break;
           }
        }
        if (!isFound) {
            all[counter] = randomNum;
            counter++;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
3
Gpt3D_Clone876_3.java 1 7
Gpt3D_Clone876_3.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

 public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        Snackbar.make(findViewById(R.id.content), R.string.permission_denied_msg, Snackbar.LENGTH_LONG).show();
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        Snackbar.make(findViewById(R.id.content), R.string.permission_granted_msg, Snackbar.LENGTH_SHORT).show();
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        Snackbar.make(findViewById(R.id.content), R.string.permission_not_granted_msg, Snackbar.LENGTH_LONG).show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
4
Gpt3D_Clone876_4.java 1 7
Gpt3D_Clone876_4.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

 public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        launchSnackbar("Permission was not granted");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        launchSnackbar("Permission granted successfully");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        launchSnackbar("Permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
5
Gpt3D_Clone876_5.java 1 7
Gpt3D_Clone876_5.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

  public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        Log.d(TAG, "Permission was not granted");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        Log.d(TAG, "Permission granted successfully");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        Log.d(TAG, "Permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
6
Gpt3D_Clone876_6.java 1 7
Gpt3D_Clone876_6.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

  public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        Toast.makeText(this, "Permission was not granted", Toast.LENGTH_SHORT).show();
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        Toast.makeText(this, "Permission granted successfully", Toast.LENGTH_SHORT).show();
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        Toast.makeText(this, "Permission denied", Toast.LENGTH_SHORT).show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
7
Gpt3D_Clone876_7.java 1 7
Gpt3D_Clone876_7.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

 public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        showNotification("Permission was not granted");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        showNotification("Permission granted successfully");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        showNotification("Permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
8
Gpt3D_Clone876_8.java 1 7
Gpt3D_Clone876_8.java 8 30
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

  public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)
            .setSmallIcon(R.drawable.ic_notification_alert)
            .setContentTitle("Permission was not granted")
            .setContentText("Permission was not granted");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)
            .setSmallIcon(R.drawable.ic_notification_granted)
            .setContentTitle("Permission granted successfully")
            .setContentText("Permission granted successfully");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)
            .setSmallIcon(R.drawable.ic_notification_denied)
            .setContentTitle("Permission denied")
            .setContentText("Permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
9
Gpt3D_Clone876_9.java 1 7
Gpt3D_Clone876_9.java 8 21
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

 public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    if(grantResults.length == 0 || grantResults == null) {
        showDialog(this, "Permission was not granted");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        showDialog(this, "Permission granted successfully");
    } 
    else if(grantResults[0] == PackageManager.PERMISSION_DENIED) {
        showDialog(this, "Permission denied");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
0
Gpt3D_Clone877_0.java 1 17
Gpt3D_Clone877_0.java 18 36
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode){
            if (grantResults.length == 0) {
                mRequestPermissionListener.onFailed;
                return;
            } else {
                for (int grantResult : grantResults) {
                    if (grantResult != PackageManager.PERMISSION_GRANTED) {
                        mRequestPermissionListener.onFailed();
                        return;
                    }
                }
                mRequestPermissionListener.onSuccess();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
1
Gpt3D_Clone877_1.java 1 17
Gpt3D_Clone877_1.java 18 35
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode) {
            if (grantResults.length == 0) {
                mRequestPermissionListener.onFailed();
                return;
            }
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
2
Gpt3D_Clone877_2.java 1 17
Gpt3D_Clone877_2.java 18 35
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode) {
            if (grantResults.length <= 0) {
                mRequestPermissionListener.onFailed;
            } else {
                for (int grantResult : grantResults) {
                    if (grantResult != PackageManager.PERMISSION_GRANTED) {
                        mRequestPermissionListener.onFailure();
                        return;
                    }
                }
                mRequestPermissionListener.onSuccess();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
3
Gpt3D_Clone877_3.java 1 17
Gpt3D_Clone877_3.java 18 36
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode){
            if (grantResults.length == 0) {
                mRequestPermissionListener.onFailed;
            }
            else {
                for (int grantResult : grantResults) {
                    if (grantResult == PackageManager.PERMISSION_DENIED) {
                        mRequestPermissionListener.onFailure();
                        return;
                    }
                }
                mRequestPermissionListener.onSuccess();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
4
Gpt3D_Clone877_4.java 1 17
Gpt3D_Clone877_4.java 18 35
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

  public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode) {
            if (grantResults.length <= 0) {
                mRequestPermissionListener.onFailed();
            } else {
                for (int grantResult : grantResults) {
                    if (grantResult == PackageManager.PERMISSION_DENIED) {
                        mRequestPermissionListener.onFailed();
                        return;
                    }
                }
                mRequestPermissionListener.onSuccess();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
5
Gpt3D_Clone877_5.java 1 17
Gpt3D_Clone877_5.java 18 35
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {if (requestCode == mRequestCode) {
            if (grantResults.length == 0) {
                mRequestPermissionListener.onFailed();
            } else {
                for (int i = 0; i < grantResults.length; i++) {
                    if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {
                        mRequestPermissionListener.onFailed();
                        return;
                    }
                }
                mRequestPermissionListener.onSuccess();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
87
0
Gpt3D_Clone87_0.java 1 9
Gpt3D_Clone87_0.java 10 24
----------------------------------------

public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.keyPress (KeyEvent.VK_CONTROL);
    robot.keyPress (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_CONTROL);
}
----------------------------------------

 public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.mouseMove (200,225);
    robot.mousePress (InputEvent.BUTTON3_MASK);
    robot.mouseRelease (InputEvent.BUTTON3_MASK);
    robot.delay (750);
    robot.keyPress (KeyEvent.VK_CONTROL);
    robot.keyPress (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_CONTROL);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
87
1
Gpt3D_Clone87_1.java 1 9
Gpt3D_Clone87_1.java 10 19
----------------------------------------

public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.keyPress (KeyEvent.VK_CONTROL);
    robot.keyPress (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_CONTROL);
}
----------------------------------------

  public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.mousePress (InputEvent.BUTTON1_MASK);
    robot.mouseRelease(InputEvent.BUTTON1_MASK);
    robot.delay(500);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
0
Gpt3D_Clone880_0.java 1 17
Gpt3D_Clone880_0.java 18 40
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        int grantedCount = 0;
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult == PackageManager.PERMISSION_GRANTED) {
                    grantedCount++;
                }else{ 
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            if(grantedCount == grantResults.length) 
                mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
1
Gpt3D_Clone880_1.java 1 17
Gpt3D_Clone880_1.java 18 38
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

 public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            int grantedPermissions = 0;
            for (int grantResult : grantResults) {
                if (grantResult == PackageManager.PERMISSION_GRANTED)
                    grantedPermissions++;
            }
            if (grantedPermissions == grantResults.length)
                mRequestPermissionListener.onSuccess ();
            else
                mRequestPermissionListener.onFailed ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
884
0
Gpt3D_Clone884_0.java 1 20
Gpt3D_Clone884_0.java 21 51
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("input.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    scanner.close ();
    final int rounds = 400;
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final int transmitterRange = 73381;
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < rounds; i ++) {
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds..");
}
----------------------------------------

 static void test_02() throws FileNotFoundException { 
    final File file = new File("input.txt"); 
    final Scanner scanner = new Scanner(file); 
    int[] houseLocations = new int[73382]; 
    for (int counter = 0; counter < 73382; counter++) { 
    houseLocations[counter] = scanner.nextInt(); 
    } 
    scanner.close(); 
    final int rounds = 400; 
    int[] uniqueHouseLocationsSorted = new int[houseLocations.length]; 
    Set<Integer> alreadyFound = new HashSet<Integer>(); 
    int newArrayIndex = 0; 
    for(int i = 0; i < houseLocations.length; i++){ 
    int currentLocation = houseLocations[i]; 
    if(!alreadyFound.contains(currentLocation)){ 
    uniqueHouseLocationsSorted[newArrayIndex] = currentLocation; 
    newArrayIndex++; 
    alreadyFound.add(currentLocation); 
    } 
    } 
    Arrays.sort(uniqueHouseLocationsSorted); 
    final int transmitterRange = 73381; 
    final long start = System.currentTimeMillis(); 
    for (int i = 0; i < rounds; i++) { 
    final int minNumOfTransmitters = minNumOfTransmitters(uniqueHouseLocationsSorted, transmitterRange); 
    } 
    final long end = System.currentTimeMillis(); 
    System.out.println("Took: " + (end - start) + " milliseconds.."); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
884
1
Gpt3D_Clone884_1.java 1 20
Gpt3D_Clone884_1.java 21 50
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("input.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    scanner.close ();
    final int rounds = 400;
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final int transmitterRange = 73381;
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < rounds; i ++) {
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds..");
}
----------------------------------------

 static void test_02() throws FileNotFoundException { 
    final File file = new File("input.txt"); 
    final Scanner scanner = new Scanner(file); 
    int[] houseLocations = new int[73382]; 
    for (int counter = 0; counter < 73382; counter++) { 
    houseLocations[counter] = scanner.nextInt(); 
    } 
    scanner.close(); 
    final int rounds = 400; 
    Arrays.sort(houseLocations); 
    int uniqueHouseLocationsSortedIndex = 1; 
    int[] uniqueHouseLocationsSorted = new int[houseLocations.length]; 
    uniqueHouseLocationsSorted[0] = houseLocations[0]; 
    //Loop in Array
    for(int i=1;i<houseLocations.length;i++) { 
    if(uniqueHouseLocationsSorted[uniqueHouseLocationsSortedIndex-1]!=houseLocations[i]) { 
    uniqueHouseLocationsSorted[uniqueHouseLocationsSortedIndex] = houseLocations[i]; 
    uniqueHouseLocationsSortedIndex++; 
    } 
    } 
    final int transmitterRange = 73381; 
    final long start = System.currentTimeMillis(); 
    for (int i = 0; i < rounds; i++) { 
    final int minNumOfTransmitters = minNumOfTransmitters(uniqueHouseLocationsSorted, transmitterRange); 
    } 
    final long end = System.currentTimeMillis(); 
    System.out.println("Took: " + (end - start) + " milliseconds.."); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
884
2
Gpt3D_Clone884_2.java 1 20
Gpt3D_Clone884_2.java 21 49
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("input.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    scanner.close ();
    final int rounds = 400;
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final int transmitterRange = 73381;
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < rounds; i ++) {
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds..");
}
----------------------------------------

 static void test_02() throws FileNotFoundException { 
    final File file = new File("input.txt"); 
    final Scanner scanner = new Scanner(file); 
    int[] houseLocations = new int[73382]; 
    for (int counter = 0; counter < 73382; counter++) { 
    houseLocations[counter] = scanner.nextInt(); 
    } 
    scanner.close(); 
    final int rounds = 400; 
    LinkedHashSet<Integer> uniqueLocations = new LinkedHashSet<>(); 
    for (int i = 0; i < houseLocations.length; i++) { 
    uniqueLocations.add(houseLocations[i]); 
    } 
    int[] uniqueHouseLocationsSorted = new int[uniqueLocations.size()]; 
    int idx = 0; 
    for (Integer val : uniqueLocations) { 
    uniqueHouseLocationsSorted[idx++] = val; 
    } 
    Arrays.sort(uniqueHouseLocationsSorted); 
    final int transmitterRange = 73381; 
    final long start = System.currentTimeMillis(); 
    for (int i = 0; i < rounds; i++) { 
    final int minNumOfTransmitters = minNumOfTransmitters(uniqueHouseLocationsSorted, transmitterRange); 
    } 
    final long end = System.currentTimeMillis(); 
    System.out.println("Took: " + (end - start) + " milliseconds.."); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
884
3
Gpt3D_Clone884_3.java 1 20
Gpt3D_Clone884_3.java 21 45
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("input.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    scanner.close ();
    final int rounds = 400;
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final int transmitterRange = 73381;
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < rounds; i ++) {
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds..");
}
----------------------------------------

 static void test_02() throws FileNotFoundException { 
    final File file = new File("input.txt"); 
    final Scanner scanner = new Scanner(file); 
    int[] houseLocations = new int[73382]; 
    for (int counter = 0; counter < 73382; counter++) { 
    houseLocations[counter] = scanner.nextInt(); 
    } 
    scanner.close(); 
    final int rounds = 400; 
    int[] sortedArray = Arrays.stream(houseLocations).boxed().sorted().mapToInt(Integer::intValue).toArray(); 
    Set<Integer> mySet = new HashSet<>(); 
    for (int element : sortedArray) { 
    mySet.add(element); 
    } 
    int[] uniqueHouseLocationsSorted = mySet.stream().mapToInt(Integer::intValue).toArray(); 
    final int transmitterRange = 73381; 
    final long start = System.currentTimeMillis(); 
    for(int i = 0; i < rounds; i++) { 
    final int minNumOfTransmitters = minNumOfTransmitters(uniqueHouseLocationsSorted, transmitterRange); 
    } 
    final long end = System.currentTimeMillis(); 
    System.out.println("Took: " + (end - start) + " milliseconds.."); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
886
0
Gpt3D_Clone886_0.java 1 17
Gpt3D_Clone886_0.java 18 36
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the String");
    Scanner input = new Scanner (System.in);
    String userInput = input.nextLine ().trim ();
    int numOfWords = getNumberOfWords (userInput);
    char words [] [] = new char [numOfWords + 1] [];
    words = getWordsFromString (userInput);
    System.out.println ("Total number of words found in the String is " + (numOfWords));
    for (int i = 0;
    i < numOfWords; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < words [i].length; j ++) {
            System.out.print (words [i] [j]);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    Scanner reader = new Scanner(System.in);
    System.out.println("Please enter a String: ");
    String userInput = reader.nextLine().trim();
    int numOfWords = 0;
    for (String word : userInput.split("\\s+"))
        numOfWords++;
    char words[][] = new char[numOfWords + 1][];
    words = getWordsFromString(userInput);
    System.out.println("Total number of words found in the String is " + numOfWords);
    for (int i=0; i<numOfWords; i++){ 
        System.out.println("");
        for (int j=0; j<words[i].length; j++){
            System.out.print(words[i][j]); 
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
886
1
Gpt3D_Clone886_1.java 1 17
Gpt3D_Clone886_1.java 18 37
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the String");
    Scanner input = new Scanner (System.in);
    String userInput = input.nextLine ().trim ();
    int numOfWords = getNumberOfWords (userInput);
    char words [] [] = new char [numOfWords + 1] [];
    words = getWordsFromString (userInput);
    System.out.println ("Total number of words found in the String is " + (numOfWords));
    for (int i = 0;
    i < numOfWords; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < words [i].length; j ++) {
            System.out.print (words [i] [j]);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    System.out.print("Enter the String: ");
    String userInput = input.nextLine().trim();
    int numOfWords = 0;
    for (String w : userInput.split("\\s+"))
        numOfWords++;
    char words[][] = new char[numOfWords + 1][];
    words = getWordsFromString(userInput);
    System.out.println("Total number of words found in the String is " + numOfWords);
    for (int i = 0; i < numOfWords; i++) {
        System.out.println("");
        for (int j = 0; j < words[i].length; j++) {
            System.out.print(words[i][j]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
886
2
Gpt3D_Clone886_2.java 1 17
Gpt3D_Clone886_2.java 18 36
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the String");
    Scanner input = new Scanner (System.in);
    String userInput = input.nextLine ().trim ();
    int numOfWords = getNumberOfWords (userInput);
    char words [] [] = new char [numOfWords + 1] [];
    words = getWordsFromString (userInput);
    System.out.println ("Total number of words found in the String is " + (numOfWords));
    for (int i = 0;
    i < numOfWords; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < words [i].length; j ++) {
            System.out.print (words [i] [j]);
        }
    }
}
----------------------------------------

 public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    System.out.println("Input String: ");
    String userInput = scan.nextLine().trim();
    int numOfWords = 0;
    for (String w : userInput.split("\\s+")) 
        numOfWords++;
    char words[][] = new char[numOfWords+1][];
    words = getWordsFromString(userInput);
    System.out.println("Total number of words found in the String is " + numOfWords);
    for (int i=0; i<numOfWords; i++){ 
        System.out.println("");
        for (int j=0; j<words[i].length; j++){
            System.out.print(words[i][j]); 
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
886
3
Gpt3D_Clone886_3.java 1 17
Gpt3D_Clone886_3.java 18 36
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the String");
    Scanner input = new Scanner (System.in);
    String userInput = input.nextLine ().trim ();
    int numOfWords = getNumberOfWords (userInput);
    char words [] [] = new char [numOfWords + 1] [];
    words = getWordsFromString (userInput);
    System.out.println ("Total number of words found in the String is " + (numOfWords));
    for (int i = 0;
    i < numOfWords; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < words [i].length; j ++) {
            System.out.print (words [i] [j]);
        }
    }
}
----------------------------------------

 public static void main(String [] args) {
    Scanner in = new Scanner(System.in);
    System.out.println("Please enter a String: ");
    String userInput = in.nextLine().trim();
    int numOfWords = 0;
    for (String w : userInput.split("\\s+")) 
        numOfWords++;
    char words[][] = new char[numOfWords+1][];
    words = getWordsFromString(userInput);
    System.out.println("Total number of words found in the String is " + numOfWords);
    for (int i=0; i<numOfWords; i++){ 
        System.out.println("");
        for (int j=0; j<words[i].length; j++){
            System.out.print(words[i][j]); 
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
887
3
Gpt3D_Clone887_3.java 1 11
Gpt3D_Clone887_3.java 12 23
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int i = 0, spaceCount = 0;
    while (i < word.length ()) {
        if (word.charAt (i) == ' ') {
            spaceCount ++;
        }
        i ++;
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

 public static void main (String [] args) {
    String word = "a b c";
    int spaceCount = 0;
    for (int i = 0; i < word.length (); i++) {
        if (word.charAt (i) == ' ') {
           spaceCount++;
        }
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
889
4
Gpt3D_Clone889_4.java 1 20
Gpt3D_Clone889_4.java 21 34
----------------------------------------

public static void main (String args []) {
    JSch jsch = new JSch ();
    Session session = null;
    try {
        session = jsch.getSession ("username", "127.0.0.1", 22);
        session.setConfig ("StrictHostKeyChecking", "no");
        session.setPassword ("password");
        session.connect ();
        Channel channel = session.openChannel ("sftp");
        channel.connect ();
        ChannelSftp sftpChannel = (ChannelSftp) channel;
        sftpChannel.get ("remotefile.txt", "localfile.txt");
        sftpChannel.exit ();
        session.disconnect ();
    } catch (JSchException e) {
        e.printStackTrace ();
    } catch (SftpException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String args []) {JSch jsch = new JSch();
Session session = jsch.getSession("username","127.0.0.1", 22);
session.setConfig("StrictHostKeyChecking", "no");
session.setPassword("password");
session.connect(60000);
Channel channel =session.openChannel("sftp");
channel.connect();
ChannelSftp sftpChannel = (ChannelSftp) channel;
sftpChannel.get("remotefile.txt", "localfile.txt");
sftpChannel.quit();
session.disconnect();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
889
5
Gpt3D_Clone889_5.java 1 20
Gpt3D_Clone889_5.java 21 34
----------------------------------------

public static void main (String args []) {
    JSch jsch = new JSch ();
    Session session = null;
    try {
        session = jsch.getSession ("username", "127.0.0.1", 22);
        session.setConfig ("StrictHostKeyChecking", "no");
        session.setPassword ("password");
        session.connect ();
        Channel channel = session.openChannel ("sftp");
        channel.connect ();
        ChannelSftp sftpChannel = (ChannelSftp) channel;
        sftpChannel.get ("remotefile.txt", "localfile.txt");
        sftpChannel.exit ();
        session.disconnect ();
    } catch (JSchException e) {
        e.printStackTrace ();
    } catch (SftpException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String args []) {JSch jsch = new JSch();
Session session = jsch.getSession("username","127.0.0.1", 22);
session.setConfig("StrictHostKeyChecking", "no");
session.setPassword("password");
session.connect();
Channel channel = session.openChannel("sftp");	
channel.connect();
ChannelSftp sftpChannel = (ChannelSftp) channel;
sftpChannel.get("remotefile.txt", "localfile.txt");
sftpChannel.exit();
session.disconnect();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
889
6
Gpt3D_Clone889_6.java 1 20
Gpt3D_Clone889_6.java 21 34
----------------------------------------

public static void main (String args []) {
    JSch jsch = new JSch ();
    Session session = null;
    try {
        session = jsch.getSession ("username", "127.0.0.1", 22);
        session.setConfig ("StrictHostKeyChecking", "no");
        session.setPassword ("password");
        session.connect ();
        Channel channel = session.openChannel ("sftp");
        channel.connect ();
        ChannelSftp sftpChannel = (ChannelSftp) channel;
        sftpChannel.get ("remotefile.txt", "localfile.txt");
        sftpChannel.exit ();
        session.disconnect ();
    } catch (JSchException e) {
        e.printStackTrace ();
    } catch (SftpException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String args []) {JSch jsch = new JSch();
Session session = jsch.getSession("username","127.0.0.1", 22);
session.setConfig("StrictHostKeyChecking", "no");
session.setPassword("password");
session.connect();
Channel channel = session.openChannel("sftp");
channel.connect();
ChannelSftp sftpChannel = (ChannelSftp) channel;
sftpChannel.get("remotefile.txt", "localfile.txt");
sftpChannel.end();
session.disconnect();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
889
7
Gpt3D_Clone889_7.java 1 20
Gpt3D_Clone889_7.java 21 34
----------------------------------------

public static void main (String args []) {
    JSch jsch = new JSch ();
    Session session = null;
    try {
        session = jsch.getSession ("username", "127.0.0.1", 22);
        session.setConfig ("StrictHostKeyChecking", "no");
        session.setPassword ("password");
        session.connect ();
        Channel channel = session.openChannel ("sftp");
        channel.connect ();
        ChannelSftp sftpChannel = (ChannelSftp) channel;
        sftpChannel.get ("remotefile.txt", "localfile.txt");
        sftpChannel.exit ();
        session.disconnect ();
    } catch (JSchException e) {
        e.printStackTrace ();
    } catch (SftpException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

 public static void main (String args []) {JSch jsch = new JSch();
Session session = jsch.getSession("username","127.0.0.1", 22);
session.setConfig("StrictHostKeyChecking", "no");
session.setPassword("password");
session.connect();
Channel channel = session.openChannel("sftp");
channel.connect();
ChannelSftp sftpChannel = (ChannelSftp) channel;
sftpChannel.get("remotefile.txt", "localfile.txt");
sftpChannel.close();
session.disconnect();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
1
Gpt3D_Clone88_1.java 1 21
Gpt3D_Clone88_1.java 22 52
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length (); i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        boolean ctrl = keyStroke.getModifiers() == (CTRL_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        if (ctrl) {
            robot.keyPress (KeyEvent.VK_CTRL);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ctrl) {
            robot.keyRelease (KeyEvent.VK_CTRL);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
2
Gpt3D_Clone88_2.java 1 21
Gpt3D_Clone88_2.java 22 50
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        boolean ctrl = Character.isUpperCase (c) || keyStroke.getModifiers () == (CTRL_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        if (ctrl) {
            robot.keyPress (KeyEvent.VK_CTRL);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ctrl) {
            robot.keyRelease (KeyEvent.VK_CTRL);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
3
Gpt3D_Clone88_3.java 1 21
Gpt3D_Clone88_3.java 22 44
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    if (ms < 0)
        ms = 0;
    for (int i = 0; i < chars.length(); i++){
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress(KeyEvent.VK_SHIFT);
            robot.keyPress(keyCode);
            robot.delay(ms);
            robot.keyRelease(keyCode);
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
        else {
            robot.keyPress(keyCode);
            robot.delay(ms);
            robot.keyRelease(keyCode);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
4
Gpt3D_Clone88_4.java 1 21
Gpt3D_Clone88_4.java 22 43
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    int delayTime = 0;
    if (ms > 0) {
        delayTime = ms;
    } 
    for (int i = 0; i < chars.length(); i++) {
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.delay(delayTime);
        robot.keyRelease(keyCode);
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
5
Gpt3D_Clone88_5.java 1 21
Gpt3D_Clone88_5.java 22 43
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    if (ms < 0) 
        ms = 0;
    for (int i = 0; i < chars.length(); i++){
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.delay(ms);
            robot.keyRelease(KeyEvent.VK_SHIFT);
        } else {
            robot.delay(ms);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
6
Gpt3D_Clone88_6.java 1 21
Gpt3D_Clone88_6.java 22 42
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    if (ms < 0) {
        ms = 0;
    }
    for (int i = 0, len = chars.length (); i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        if (Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.delay(ms);
        robot.keyRelease (keyCode);
        if (Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1)) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
7
Gpt3D_Clone88_7.java 1 21
Gpt3D_Clone88_7.java 22 41
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {
    if (ms < 0)
        ms = 0;
    for (int i = 0; i < chars.length(); i++){
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
            robot.delay(ms);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
895
0
Gpt3D_Clone895_0.java 1 13
Gpt3D_Clone895_0.java 14 30
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t = new Thread (() -> {
        try {
            Thread.sleep (5000L);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    });
    System.out.println ("Starting Server!");
    t.start ();
    t.join ();
    System.out.println ("Server is done!");
}
----------------------------------------

  public static void main (String [] args) throws InterruptedException {
        Thread t1 = new Thread (new Runnable() {
            public void run() {
                try {
                    Thread.sleep (5000L);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        });
        System.out.println ("Starting Server!");
        t1.start ();
        t1.join ();
        System.out.println ("Server is done!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
0
Gpt3D_Clone897_0.java 1 14
Gpt3D_Clone897_0.java 15 30
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int [size];
    int x = 0;
    do {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x++;
    }
    while (x < size);
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
1
Gpt3D_Clone897_1.java 1 14
Gpt3D_Clone897_1.java 15 30
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

  public static void main (String [] args) {
    int size;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    size = input.nextInt ();
    int [] list1Array = new int [size];
    int x;
    for (x = 0; x < size; x++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt();
        }
    System.out.println (Arrays.toString(list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
2
Gpt3D_Clone897_2.java 1 14
Gpt3D_Clone897_2.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

  public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int [size];
    for (int y = 0, x = 0; y < size ; y++, x++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
3
Gpt3D_Clone897_3.java 1 14
Gpt3D_Clone897_3.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int[size];
    for (int x = 0; x < size; ++x) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
4
Gpt3D_Clone897_4.java 1 14
Gpt3D_Clone897_4.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int [size];
    for (x = 0; x < size; x ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
5
Gpt3D_Clone897_5.java 1 14
Gpt3D_Clone897_5.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int [size];
    for ( int x = 0; size > x; x++ ) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
6
Gpt3D_Clone897_6.java 1 14
Gpt3D_Clone897_6.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

 public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter element size: ");
    int size = input.nextInt ();
    int [] list1Array = new int [size];
    for (int x = 0, y = 0; x < size; x++, y++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt();
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
898
2
Gpt3D_Clone898_2.java 1 15
Gpt3D_Clone898_2.java 16 33
----------------------------------------

public static double sqrt (int n) {
    double low = 0;
    double high = n;
    double mid = (high - low) / 2;
    while (Math.abs ((mid * mid) - n) > 0.000000000001) {
        if ((mid * mid) > n) {
            high = mid;
            mid = (high - low) / 2;
        } else {
            low = mid;
            mid = mid + ((high - low) / 2);
        }
    }
    return mid;
}
----------------------------------------

 public static double sqrt(int n) {
    double start = 0; 
    double end = n;
    double mid = (start + end) / 2;
    while (Math.abs(mid * mid - n) > 0.000000000001) { 
        if (mid * mid < n) {
            start = mid;
            mid = (start + end) / 2;
        }
        else { 
            end = mid;
            mid = (start + end) / 2;
        }
    }
    return mid;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
898
3
Gpt3D_Clone898_3.java 1 15
Gpt3D_Clone898_3.java 16 36
----------------------------------------

public static double sqrt (int n) {
    double low = 0;
    double high = n;
    double mid = (high - low) / 2;
    while (Math.abs ((mid * mid) - n) > 0.000000000001) {
        if ((mid * mid) > n) {
            high = mid;
            mid = (high - low) / 2;
        } else {
            low = mid;
            mid = mid + ((high - low) / 2);
        }
    }
    return mid;
}
----------------------------------------

 public static double sqrt(int n) 
{ 
    double left = 0; 
    double right = n; 
  
    while(Math.abs(right - left) > 0.00000000001) 
    { 
        double mid = left + (right - left)/2; 
        double sq = mid * mid; 
  
        if(sq > n) { 
            right = mid; 
        } 
        else { 
            left = mid; 
        } 
    } 
    return left; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
902
6
Gpt3D_Clone902_6.java 1 11
Gpt3D_Clone902_6.java 12 25
----------------------------------------

        public void actionPerformed (ActionEvent ae) {
            if (count < charsTiming.size ()) {
                highlightNextWord ();
                ((Timer) ae.getSource ()).setInitialDelay (charsTiming.get (count));
                ((Timer) ae.getSource ()).restart ();
            } else {
                reset ();
                ((Timer) ae.getSource ()).stop ();
            }
            count ++;
}
----------------------------------------

 public void actionPerformed (ActionEvent ae) {
            if (count < charsTiming.size ()) {
                highlightNextWord ();
                Timer t = (Timer)ae.getSource ();
                t.setDelay(charsTiming.get(count));
                t.start();
            } else {
                reset ();
                t.stop ();
            }
            count ++;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
902
7
Gpt3D_Clone902_7.java 1 11
Gpt3D_Clone902_7.java 12 25
----------------------------------------

        public void actionPerformed (ActionEvent ae) {
            if (count < charsTiming.size ()) {
                highlightNextWord ();
                ((Timer) ae.getSource ()).setInitialDelay (charsTiming.get (count));
                ((Timer) ae.getSource ()).restart ();
            } else {
                reset ();
                ((Timer) ae.getSource ()).stop ();
            }
            count ++;
}
----------------------------------------

 public void actionPerformed (ActionEvent ae) {
            if (count < charsTiming.size ()) {
                highlightNextWord ();
                Timer t = (Timer)ae.getSource ();
                t.setDelay(charsTiming.get(count));
                t.restart();
            } else {
                reset ();
                t.stop ();
            }
            count ++;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
905
0
Gpt3D_Clone905_0.java 1 14
Gpt3D_Clone905_0.java 15 29
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > keys = new ArrayList < > (Arrays.asList ("1", "1", "1", "2", "2", "3"));
    ArrayList < String > values = new ArrayList < > (Arrays.asList ("2016-06-22 07:18:45", "2016-06-22 08:18:45", "2016-06-22 09:18:45", "2016-06-22 03:18:45", "2016-06-22 04:18:45", "2016-06-22 01:18:45"));
    HashMap < String, String > map = new HashMap < String, String > ();
    for (int i = 0;
    keys.size () == values.size () && i < keys.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
            map.put (key, value);
        }
    }
    System.out.println (map);
}
----------------------------------------

 public static void main (String [] args) {
    Map < String, String > map = new IdentityHashMap <> ();
    List < String > keys = Arrays.asList (args).subList (0, args.length / 2);
    List < String > values = Arrays.asList (args).subList (args.length / 2, args.length);
    for (int i = 0; i < keys.size () && i < values.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
            if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
                map.put (key, value);
            }
    }
    System.out.println (map);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
905
1
Gpt3D_Clone905_1.java 1 14
Gpt3D_Clone905_1.java 15 29
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > keys = new ArrayList < > (Arrays.asList ("1", "1", "1", "2", "2", "3"));
    ArrayList < String > values = new ArrayList < > (Arrays.asList ("2016-06-22 07:18:45", "2016-06-22 08:18:45", "2016-06-22 09:18:45", "2016-06-22 03:18:45", "2016-06-22 04:18:45", "2016-06-22 01:18:45"));
    HashMap < String, String > map = new HashMap < String, String > ();
    for (int i = 0;
    keys.size () == values.size () && i < keys.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
            map.put (key, value);
        }
    }
    System.out.println (map);
}
----------------------------------------

 public static void main (String [] args) {
    Map < String, String > map = new WeakHashMap <> ();
    List < String > keys = Arrays.asList (args).subList (0, args.length / 2);
    List < String > values = Arrays.asList (args).subList (args.length / 2, args.length);
    for (int i = 0; i < keys.size () && i < values.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
            if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
                map.put (key, value);
            }
    }
    System.out.println (map);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
905
2
Gpt3D_Clone905_2.java 1 14
Gpt3D_Clone905_2.java 15 29
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > keys = new ArrayList < > (Arrays.asList ("1", "1", "1", "2", "2", "3"));
    ArrayList < String > values = new ArrayList < > (Arrays.asList ("2016-06-22 07:18:45", "2016-06-22 08:18:45", "2016-06-22 09:18:45", "2016-06-22 03:18:45", "2016-06-22 04:18:45", "2016-06-22 01:18:45"));
    HashMap < String, String > map = new HashMap < String, String > ();
    for (int i = 0;
    keys.size () == values.size () && i < keys.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
            map.put (key, value);
        }
    }
    System.out.println (map);
}
----------------------------------------

 public static void main (String [] args) {
    Map < String, String > map = new LinkedHashMap <> ();
    List < String > keys = Arrays.asList (args).subList (0, args.length / 2);
    List < String > values = Arrays.asList (args).subList (args.length / 2, args.length);
    for (int i = 0; i < keys.size () && i < values.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
            if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
                map.put (key, value);
            }
    }
    System.out.println (map);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
905
4
Gpt3D_Clone905_4.java 1 14
Gpt3D_Clone905_4.java 15 29
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > keys = new ArrayList < > (Arrays.asList ("1", "1", "1", "2", "2", "3"));
    ArrayList < String > values = new ArrayList < > (Arrays.asList ("2016-06-22 07:18:45", "2016-06-22 08:18:45", "2016-06-22 09:18:45", "2016-06-22 03:18:45", "2016-06-22 04:18:45", "2016-06-22 01:18:45"));
    HashMap < String, String > map = new HashMap < String, String > ();
    for (int i = 0;
    keys.size () == values.size () && i < keys.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
            map.put (key, value);
        }
    }
    System.out.println (map);
}
----------------------------------------

  public static void main (String [] args) {
        List < String > keys = new ArrayList <> (Arrays.asList (args).subList (0, args.length / 2));
        List < String > values = new ArrayList <> (Arrays.asList (args).subList (args.length / 2, args.length));
        Map < String, String > map = new LinkedHashMap <> ();
        for (int i = 0; keys.size () == values.size () && i < keys.size (); i ++) {
            String key = keys.get (i);
            String value = values.get (i);
            if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
                map.put (key, value);
            }
        }
        System.out.println (map);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
907
1
Gpt3D_Clone907_1.java 1 11
Gpt3D_Clone907_1.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates (String s) {
    Set<Character> noDupes = new HashSet<>();
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < s.length (); i ++) {
        char c = s.charAt(i);
        if (!noDupes.contains(c)) {
            noDupes.add(c);
            sb.append(c);
        } 
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
907
9
Gpt3D_Clone907_9.java 1 11
Gpt3D_Clone907_9.java 12 21
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (char c : s.toCharArray())
        if (noDupes.indexOf (String.valueOf(c)) == - 1) {
            noDupes.append (c);
        }
    return noDupes.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
9
Gpt3D_Clone908_9.java 1 8
Gpt3D_Clone908_9.java 9 20
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

 public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i++) {
        if ((map & (1 << (str[i]-'a'))) ==0)
            map |= 1 << (str[i]-'a');
        else 
            str[i] = '\0';
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
2
Gpt3D_Clone909_2.java 1 11
Gpt3D_Clone909_2.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    StringBuilder noDupes = new StringBuilder();
    List<Character> list = new ArrayList<Character>();
    for (int i = 0; i < s.length(); i++) {
        char ch = s.charAt(i);
        if (!list.contains(ch)) {
            noDupes.append(ch);
            list.add(ch);
        }
    }
    return noDupes.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
4
Gpt3D_Clone909_4.java 1 11
Gpt3D_Clone909_4.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    Set<Character> set = new LinkedHashSet<>();
    StringBuilder noDupes = new StringBuilder();
    for (int i = 0; i < s.length(); i++) {
        Character c = s.charAt(i);
        if (!set.contains(c)) {
            set.add(c);
            noDupes.append(c);
        }
    }
    return noDupes.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
5
Gpt3D_Clone909_5.java 1 11
Gpt3D_Clone909_5.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    Set<Character> set = new TreeSet<>();
    StringBuilder noDupes = new StringBuilder();
    for (int i = 0; i < s.length(); i++) {
        Character c = s.charAt(i);
        if (!set.contains(c)) {
            set.add(c);
            noDupes.append(c);
        }
    }
    return noDupes.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
6
Gpt3D_Clone909_6.java 1 11
Gpt3D_Clone909_6.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    List<Character> list = new ArrayList<>();
    StringBuilder noDupes = new StringBuilder();
    for (int i = 0; i < s.length(); i++) {
        Character c = s.charAt(i);
        if (!list.contains(c)) {
            list.add(c);
            noDupes.append(c);
        }
    }
    return noDupes.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
7
Gpt3D_Clone909_7.java 1 11
Gpt3D_Clone909_7.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    Set<Character> set = new HashSet<>();
    StringBuilder noDupes = new StringBuilder();
    for (int i = 0; i < s.length(); i++) {
        Character c = s.charAt(i);
        if (!set.contains(c)) {
            set.add(c);
            noDupes.append(c);
        }
    }
    return noDupes.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
8
Gpt3D_Clone909_8.java 1 11
Gpt3D_Clone909_8.java 12 23
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

 static String removeDuplicates(String s) {
    StringBuilder noDupes = new StringBuilder();
    for (int i = 0; i < s.length(); i ++) {
        char c = s.charAt(i);
        if (!noDupes.toString().contains(""+c)) {
            noDupes.append(c);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
2
Gpt3D_Clone90_2.java 1 12
Gpt3D_Clone90_2.java 13 32
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (Character.isLetter (character)) {
        if (Character.isLowerCase (character)) {
            typeUpperCaseCharacter (Character.toUpperCase (character));
        }
        if (Character.isUpperCase (character)) {
            typeShiftCharacter (character);
        }
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
    
    if (character == '#' || character == '@' || character == '!') {
        specialCharacterHandler(character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
3
Gpt3D_Clone90_3.java 1 12
Gpt3D_Clone90_3.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (isSpecialChar (character)) {
        handleSpecialCharacter (character);    
    }
    else if (character >= 'a' && character <= 'z') {
        typeUpperCaseCharacter (Character.toUpperCase (character));
    }
    else if (character >= 'A' && character <= 'Z') {
        typeShiftCharacter (character);
    }
    else if (character >= '0' && character <= '9') {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
4
Gpt3D_Clone90_4.java 1 12
Gpt3D_Clone90_4.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (isSpecialChar (character)) {
        handleSpecialChar (character);
    } 
    else if (isAlphaChar (character)) {
        typeUpperCase (Character.toUpperCase (character));
    }
    else if (Character.isUpperCase (character)) {
        typeCapitalCharacter (character);
    }
    else if (Character.isDigit (character)) {
        typeDigitCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
5
Gpt3D_Clone90_5.java 1 12
Gpt3D_Clone90_5.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (character == '#' || character == '@' || character == '!') {
        specialCharacterHandler(character);
    } 
    else if (character >= 'a' && character <= 'z') {
        typeCharacter (Character.toUpperCase (character));
    }
    else if (character >= 'A' && character <= 'Z') {
        typeShiftCharacter (character);
    }
    else if (character >= '0' && character <= '9') {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
6
Gpt3D_Clone90_6.java 1 12
Gpt3D_Clone90_6.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (character == '#' || character == '@' || character == '!') {
        specialCharacterHandler(character);
    } 
    else if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    else if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    else if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
7
Gpt3D_Clone90_7.java 1 12
Gpt3D_Clone90_7.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (isSpecialChar (character)) {
        specialCharacterHandler (character);
    } 
    else if (isLowerCaseCharacter (character)) {
        typeUpperCase (Character.toUpperCase (character));
    }
    else if (isUppperCaseCharacter (character)) {
        typeShiftCharacter (character);
    }
    else if (isNumberCharacter (character)) {
        typeNumberCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
8
Gpt3D_Clone90_8.java 1 12
Gpt3D_Clone90_8.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (character == '#' || character == '@' || character == '!') {
        specialCharacterHandler(character);
    } 
    else if (Character.isLowerCase (character)) {
        typeUpperCaseCharacter (Character.toUpperCase (character));
    }
    else if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    else if (Character.isDigit (character)) {
        typeNumericCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
90
9
Gpt3D_Clone90_9.java 1 12
Gpt3D_Clone90_9.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    if (specialCharExists (character)) {
        specialCharacterHandler(character);
    } 
    else if (isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    else if (isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    else if (isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
910
5
Gpt3D_Clone910_5.java 1 15
Gpt3D_Clone910_5.java 16 38
----------------------------------------

public static void main (String [] args) {
    String number1 = "108";
    String number2 = "84";
    char [] n1 = number1.toCharArray ();
    char [] n2 = number2.toCharArray ();
    int result = 0;
    for (int i = 0;
    i < n1.length; i ++) {
        for (int j = 0;
        j < n2.length; j ++) {
            result += (n1 [i] - '0') * (n2 [j] - '0') * (int) Math.pow (10, n1.length + n2.length - (i + j + 2));
        }
    }
    System.out.println (result);
}
----------------------------------------

 
public static void main(String[] args) { 
	  String number1 = "108";
	  String number2 = "84";
	  int result = 0; 
	  StringBuilder sb =  new StringBuilder();
	  sb.append(number1).reverse();
	  char[] arr1 = sb.toString().toCharArray();
	  sb.setLength(0);
	  sb.append(number2).reverse();
	  char[] arr2 = sb.toString().toCharArray();
	  
	  for (int i=0; i< arr1.length; i++) {
	    for(int j=0; j< arr2.length; j++) {
	      result += (arr1 [i] - '0') * (arr2 [j] - '0') * (int)Math.pow(10, arr1.length + arr2.length - (i+j +2));
	    }
	  }
	  System.out.println(result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
911
0
Gpt3D_Clone911_0.java 1 10
Gpt3D_Clone911_0.java 11 23
----------------------------------------

public static final String deriveCurveName (PublicKey publicKey) throws GeneralSecurityException {
    if (publicKey instanceof java.security.interfaces.ECPublicKey) {
        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {
        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPublicKey (either jce or bc implementation)");
}
----------------------------------------

	public static final String deriveCurveName (PublicKey publicKey) throws GeneralSecurityException {if (publicKey instanceof java.security.interfaces.ECPublicKey) { 
    	final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publickey; 
        final ECParameterSpec params = pk.getParams(); 
        return deriveCurveName(params); 
    } 
    else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) { 
        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publickey; 
        return getCurveName(pk); 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
912
5
Gpt3D_Clone912_5.java 1 10
Gpt3D_Clone912_5.java 11 28
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

 public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException { try {
        if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
            final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
            final ECParameterSpec params = pk.getParams ();
            return deriveCurveName (EC5Util.convertSpec (params, false));
        } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
            final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
            return deriveCurveName (pk.getParameters ());
        } else {
            throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
        }
    }
    catch (GeneralSecurityException e){
        //Handle exception
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
0
Gpt3D_Clone913_0.java 1 14
Gpt3D_Clone913_0.java 15 33
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte bytes []) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            char highChar = (char) ('A' + high);
            char lowChar = (char) ('A' + low);
            sb.append (highChar);
            sb.append (lowChar);
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
1
Gpt3D_Clone913_1.java 1 14
Gpt3D_Clone913_1.java 15 33
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            char highChar = nibble2Char(high);
            char lowChar = nibble2Char(low);
           
            sb.append (highChar);
            sb.append (lowChar);
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
2
Gpt3D_Clone913_2.java 1 14
Gpt3D_Clone913_2.java 15 32
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            char highChar = (char) ((high < 10) ? ('0' + high) : ('A' + (high-10)));
            char lowChar = (char) ((low < 10) ? ('0' + low) : ('A' + (low-10)));
            sb.append (highChar);
            sb.append (lowChar);
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
3
Gpt3D_Clone913_3.java 1 14
Gpt3D_Clone913_3.java 15 33
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            String highString = String.valueOf(high);
            String lowString = String.valueOf(low);
           
            sb.append (highString);
            sb.append (lowString);
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
4
Gpt3D_Clone913_4.java 1 14
Gpt3D_Clone913_4.java 15 30
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            sb.append (Integer.toString (high, 16));
            sb.append (Integer.toString (low, 16));
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
5
Gpt3D_Clone913_5.java 1 14
Gpt3D_Clone913_5.java 15 30
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            sb.append (Integer.toHexString (high));
            sb.append (Integer.toHexString (low));
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
7
Gpt3D_Clone913_7.java 1 14
Gpt3D_Clone913_7.java 15 30
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString (byte [] bytes) {
        if (bytes == null) {
            return null;
        }
        StringBuilder sb = new StringBuilder ();
        for (int iter = 0; iter < bytes.length; iter ++) {
            byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
            byte low = (byte) (bytes [iter] & 0x0f);
           
            sb.append (String.format("%x", high));
            sb.append (String.format("%x", low));
        }
        return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
915
0
Gpt3D_Clone915_0.java 1 14
Gpt3D_Clone915_0.java 15 29
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString(byte[] bytes) {
    if (bytes == null) {
        return null;
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < bytes.length; i++) {
        int high_byte = (int) ((bytes[i] & 0xF0) >> 4);
        int low_byte = (int) (bytes[i] & 0x0F);
        sb.append(nibble2char(high_byte));
        sb.append(nibble2char(low_byte));
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
915
1
Gpt3D_Clone915_1.java 1 14
Gpt3D_Clone915_1.java 15 29
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString(byte[] bytes) {
    if (bytes == null) {
        return null;
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < bytes.length; i++) {
        int high_byte = (int) (bytes[i] >> 4);
        int low_byte = (int) (bytes[i] & 0x0F);
        sb.append(nibble2char(high_byte));
        sb.append(nibble2char(low_byte));
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
915
2
Gpt3D_Clone915_2.java 1 14
Gpt3D_Clone915_2.java 15 29
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

 public static String toHexString(byte[] bytes) {
    if (bytes == null) {
        return null;
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < bytes.length; i++) {
        int msb = (int) bytes[i] & 0xF0;
        int lsb = (int) bytes[i] & 0x0F;
        sb.append(nibble2char(msb));
        sb.append(nibble2char(lsb));
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
919
0
Gpt3D_Clone919_0.java 1 14
Gpt3D_Clone919_0.java 15 31
----------------------------------------

public String getNextMonth (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (year, monthNo, 1);
    calendar.add (Calendar.MONTH, 1);
    if (maxDate) {
        int maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);
        calendar.set (Calendar.DAY_OF_MONTH, maxD);
    } else {
        calendar.set (Calendar.DAY_OF_MONTH, day);
    }
    String date = (calendar.get (Calendar.YEAR)) + "-" + (calendar.get (Calendar.MONTH) + 1) + "-" + calendar.get (Calendar.DAY_OF_MONTH);
    calendar.clear ();
    return date;
}
----------------------------------------

 public String getNextMonth (boolean maxDate) {
	String date = "";
    Calendar cal = Calendar.getInstance();
    cal.set(year, monthNo, 1);
    cal.add(Calendar.MONTH, 1);
    if (maxDate) {
		cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
		date = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" + cal.get(Calendar.DAY_OF_MONTH);
	} else {
		cal.set(Calendar.DAY_OF_MONTH, day);
		date = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" + cal.get(Calendar.DAY_OF_MONTH);
	}
	cal = null;
	return date;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
919
2
Gpt3D_Clone919_2.java 1 14
Gpt3D_Clone919_2.java 15 28
----------------------------------------

public String getNextMonth (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (year, monthNo, 1);
    calendar.add (Calendar.MONTH, 1);
    if (maxDate) {
        int maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);
        calendar.set (Calendar.DAY_OF_MONTH, maxD);
    } else {
        calendar.set (Calendar.DAY_OF_MONTH, day);
    }
    String date = (calendar.get (Calendar.YEAR)) + "-" + (calendar.get (Calendar.MONTH) + 1) + "-" + calendar.get (Calendar.DAY_OF_MONTH);
    calendar.clear ();
    return date;
}
----------------------------------------

 public String getNextMonth (boolean maxDate) {
    Calendar cal = Calendar.getInstance();
    cal.set(year, monthNo + 1, 1);
    if (maxDate) {
        int maxD = cal.getActualMaximum (Calendar.DAY_OF_MONTH);
        cal.set (Calendar.DAY_OF_MONTH, maxD);
    } else { 
        cal.set(Calendar.DAY_OF_MONTH, day);
    }
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    return sdf.format(cal.getTime());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
922
0
Gpt3D_Clone922_0.java 1 22
Gpt3D_Clone922_0.java 23 50
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
    }
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = A.length - 3;
    i >= 0; i --) {
        s2 [i] = s2 [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < s1.length; j ++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

 public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] firstHalf = new int [A.length / 2];
    firstHalf [0] = A [0];
    for (int i = 1;
    i < A.length / 2; i ++) {
        firstHalf [i] = firstHalf [i - 1] + A [i];
    }
    int [] secondHalf = new int [A.length / 2 + (A.length % 2 == 0 ?  0: 1)];
    if (A.length % 2 == 0) {
        secondHalf [A.length / 2 - 1] = A [A.length / 2 - 1];
    } else {
        secondHalf [A.length / 2] = A [A.length / 2];
    }
    for (int i = A.length / 2 - 2;
    i >= 0; i --) {
        secondHalf [i] = secondHalf [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < firstHalf.length; j ++) {
        int sum = Math.abs (firstHalf [j] - secondHalf [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
922
3
Gpt3D_Clone922_3.java 1 22
Gpt3D_Clone922_3.java 23 43
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
    }
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = A.length - 3;
    i >= 0; i --) {
        s2 [i] = s2 [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < s1.length; j ++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

 public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] left = new int [A.length - 1];
    left [0] = A [0];
    int [] right = new int [A.length - 1];
    right [A.length - 2] = A [A.length - 1];
    int finalSum = Integer.MAX_VALUE;
    
    for (int i = 1; i < A.length - 1; i++) {
        left[i] = left[i-1]+A[i];
        for (int j = A.length - 2; j >= i; j--) {
            right[j] = right[j+1] + A[j+1];
            int sum = Math.abs(left[i]-right[j]);
            finalSum = Math.min(finalSum, sum);
        }
    }
    
    return finalSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
922
4
Gpt3D_Clone922_4.java 1 22
Gpt3D_Clone922_4.java 23 41
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
    }
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = A.length - 3;
    i >= 0; i --) {
        s2 [i] = s2 [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < s1.length; j ++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

 public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] left = new int [A.length - 1];
    left [0] = A [0];
    int [] right = new int [A.length - 1];
    right [A.length - 2] = A [A.length - 1];
    int finalSum = Integer.MAX_VALUE;
    
    for (int i = 1; i < A.length - 1; i++) {
        left[i] = left[i-1]+A[i];
        right[A.length-i-2] = right[A.length-i-1]+A[A.length-i-1];
        int sum = Math.abs(left[i]-right[A.length-i-2]);
        finalSum = Math.min(finalSum, sum);
    }
    
    return finalSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
1
Gpt3D_Clone926_1.java 1 14
Gpt3D_Clone926_1.java 15 31
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main(String[] args) {
    List<Integer> list = new ArrayList<>();
    System.out.println("Enter integers please: (EOF or non-integer to terminate):");
    
    Scanner scan = new Scanner(System.in);
    while(scan.hasNextInt()) {
        list.add(scan.nextInt());
    }
    
    Integer[] arr = new Integer[list.size()];
    list.toArray(arr);
    for(int i = 0; i < arr.length; i++) {
        System.out.println(arr[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
2
Gpt3D_Clone926_2.java 1 14
Gpt3D_Clone926_2.java 15 29
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main(String[] args) {
    List<Integer> list = new ArrayList<Integer>();
    System.out.println("Enter integers please: (EOF or non-integer to terminate):");
    Scanner scanner = new Scanner(System.in);
    while (scanner.hasNextInt()) {
        list.add(scanner.nextInt());
    }
    Integer[] array = new Integer[list.size()];
    list.toArray(array);
    for (int i = 0; i < array.length; i++) {
        System.out.println(array[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
3
Gpt3D_Clone926_3.java 1 14
Gpt3D_Clone926_3.java 15 29
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    ArrayList<Integer> enteredNums = new ArrayList<>();
    System.out.println("Enter integers please: (EOF or non-integer to terminate):");
    while (scan.hasNextInt()) {
        enteredNums.add(scan.nextInt());
    }
    Integer[] nums = new Integer[enteredNums.size()];
    enteredNums.toArray(nums);
    for (int i = 0; i < nums.length; i++) {
        System.out.println(nums[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
5
Gpt3D_Clone926_5.java 1 14
Gpt3D_Clone926_5.java 15 28
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main(String[] args) {
    List<Integer> list = new ArrayList<>();
    System.out.println("Enter integers please: (EOF or non-integer to terminate):");
    Scanner input = new Scanner(System.in);
    while (input.hasNextInt()) {
        list.add(input.nextInt());
    }
    Integer[] arr = list.toArray(new Integer[0]);
    for (int i = 0; i < arr.length; i++) {
        System.out.println(arr[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
6
Gpt3D_Clone926_6.java 1 14
Gpt3D_Clone926_6.java 15 30
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main(String[] args) {
    List<Integer> integers = new ArrayList<Integer>();
    Scanner input = new Scanner(System.in);
    System.out.println("Enter integers please: (EOF or non-integer to terminate):");
    
    while (input.hasNextInt()) {
        integers.add(input.nextInt());
    }
    
    Integer[] ints = integers.toArray(new Integer[integers.size()]);
    for (int i = 0; i < ints.length; i++) {
        System.out.println(ints[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
0
Gpt3D_Clone92_0.java 1 12
Gpt3D_Clone92_0.java 13 30
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type(String text) {
    char c;
    int length = text.length();
    int i = 0;
    while (i < length) {
        c = text.charAt(i);
        if (c <= 31 || c == 129) {
            pressControlKey(c);
        }
        else {
            typeAsciiCode(c);
        }
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
1
Gpt3D_Clone92_1.java 1 12
Gpt3D_Clone92_1.java 13 29
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type(String text){
    char c;
    int len = text.length();
    int i;
    for (i = 0; i < len; i++){
        c = text.charAt(i);
        if (c <= 31 || c == 129){
            pressControlKey(c);
        }
        else {
            typeAsciiCode(c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
2
Gpt3D_Clone92_2.java 1 12
Gpt3D_Clone92_2.java 13 30
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

 public void type(String text){
    char c;
    int len = text.length();
    int i;
    for (i = 0; i < len; i++){
        c = text.charAt(i);
        if (c <= 31 || c == 129){
            pressControlKey(c);
        }
        else {
            typeAsciiCode(c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
0
Gpt3D_Clone930_0.java 1 15
Gpt3D_Clone930_0.java 16 36
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws IOException, InterruptedException {
    List<String> command = new ArrayList<>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> environ = builder.environment();
    Process process = builder.start();
    InputStream is = process.getInputStream();
    Reader reader = new InputStreamReader(is);
    BufferedReader br = new BufferedReader(reader);
    try {
        String line;
        while ((line = br.readLine()) != null) {
            System.out.println(line);
        }
        System.out.println("Program terminated!");
    } finally {
        br.close();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
1
Gpt3D_Clone930_1.java 1 15
Gpt3D_Clone930_1.java 16 34
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws IOException, InterruptedException {
    List<String> command = new ArrayList<>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> env = builder.environment();
    Process proc = builder.start();
    Reader r = new InputStreamReader(proc.getInputStream());
    try (BufferedReader br = new BufferedReader(r)) {
        String line;
        while ((line = br.readLine()) != null) {
            System.out.println(line);
        }
    }
    System.out.println("Program terminated!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
2
Gpt3D_Clone930_2.java 1 15
Gpt3D_Clone930_2.java 16 35
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws InterruptedException, IOException {
    List<String> command = new ArrayList<>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> env = builder.environment();
    Process proc = builder.start();
    Reader r = new InputStreamReader(proc.getInputStream());
    BufferedReader br = new BufferedReader(r);
    String line;
    while ((line = br.readLine()) != null) {
        System.out.println(line);
    }
    System.out.println("Program terminated!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
3
Gpt3D_Clone930_3.java 1 15
Gpt3D_Clone930_3.java 16 32
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main (String args []) throws InterruptedException {
    List<String> command = new ArrayList<String>();
    command.add(args[0]);
    ProcessBuilder builder = ProcessBuilder.start(command);
    Process process = builder.start();
    InputStream is = process.getInputStream();
    Reader reader = new InputStreamReader(is);
    try (BufferedReader br = new BufferedReader(reader)) {
        String line;
        while ((line = br.readLine()) != null) {
            System.out.println(line);
        }
        System.out.println("Program terminated!");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
4
Gpt3D_Clone930_4.java 1 15
Gpt3D_Clone930_4.java 16 32
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws IOException, InterruptedException {
    List<String> command = new ArrayList<String>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> env = builder.environment();
    Process proc = builder.start();
    BufferedReader br = new BufferedReader(new InputStreamReader(proc.getInputStream()));
    String line;
    while ((line = br.readLine()) != null) {
        System.out.println(line);
    }
    br.close();
    System.out.println("Program terminated!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
5
Gpt3D_Clone930_5.java 1 15
Gpt3D_Clone930_5.java 16 34
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws IOException, InterruptedException {
    List<String> command = new ArrayList<>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> env = builder.environment();
    Process proc = builder.start();
    try (InputStream is = proc.getInputStream();
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr)) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
    }
    System.out.println("Program terminated!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
6
Gpt3D_Clone930_6.java 1 15
Gpt3D_Clone930_6.java 16 35
----------------------------------------

public static void main (String args []) throws InterruptedException, IOException {
    List < String > command = new ArrayList < String > ();
    command.add (args [0]);
    ProcessBuilder builder = new ProcessBuilder (command);
    Map < String, String > environ = builder.environment ();
    final Process process = builder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("Program terminated!");
}
----------------------------------------

 public static void main(String[] args) throws IOException, InterruptedException {
    List<String> command = new ArrayList<>();
    command.add(args[0]);
    ProcessBuilder builder = new ProcessBuilder(command);
    Map<String, String> env = builder.environment();
    Process proc = builder.start();
    try (InputStream is = proc.getInputStream();
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr)) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
    }
    System.out.println("Program terminated!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
0
Gpt3D_Clone933_0.java 1 15
Gpt3D_Clone933_0.java 16 38
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node prev = null;
    Node curr = head;
    Node tmp;
    while (curr != null && !curr.data.equals(element)) {
        tmp = curr;
        curr = curr.previous;
        prev = tmp;
    }
    if (curr == null) {
        System.out.println("Element " + element + " not found.");
    } else {
        if (prev == null) {
            head = curr.previous;
        } else {
            prev.previous = curr.previous;
        }
        curr.previous = null;
        System.out.println("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
1
Gpt3D_Clone933_1.java 1 15
Gpt3D_Clone933_1.java 16 38
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node n = head;
    Node prev = null;
    Node next = null;
    while (n != null && !n.data.equals (element)) {
        next = n.previous;
        prev = n;
        n = next;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        if (prev == null) {
            head = n.previous;
        } else {
            prev.previous = n.previous;
        }
        n.previous = null;
        System.out.println ("Element " + element + " removed.");
    }   
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
2
Gpt3D_Clone933_2.java 1 15
Gpt3D_Clone933_2.java 16 38
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node n = head;
    Node prev = null;
    Node next = n.previous;
    while (n != null && !n.data.equals (element)) {
        next = n.previous;
        prev = n;
        n = next;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        if (prev == null) {
            head = n.previous;
        } else {
            prev.previous = next;
        }
        n.previous = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
3
Gpt3D_Clone933_3.java 1 15
Gpt3D_Clone933_3.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node prev = null;
    Node n = head;
    while (n != null && !n.data.equals(element)) {
        prev = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println("Element " + element + " not found.");
    } else {
        if (prev == null) {
            head = n.previous;
        } else {
            prev.previous = n.previous;
        }
        n.previous = null;
        System.out.println("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
4
Gpt3D_Clone933_4.java 1 15
Gpt3D_Clone933_4.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove(E element) {
    Node prev = null;
    Node tmp = head;
    while (tmp != null && !tmp.data.equals(element)) {
        prev = tmp;
        tmp = tmp.previous;
    }
    if (tmp == null) {
        System.out.println("Element " + element + " not found.");
    } else {
        if (prev != null) {
            prev.previous = tmp.previous;
        } else {
            head = tmp.previous;
        }
        tmp.previous = null;
        System.out.println("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
5
Gpt3D_Clone933_5.java 1 15
Gpt3D_Clone933_5.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node n = head;
    Node prior = null;
    while (n != null && !n.data.equals (element)) {
        prior = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        if (prior == null) {
            head = n.previous;
        } else {
            prior.previous = n.previous;
        }
        n.previous = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
6
Gpt3D_Clone933_6.java 1 15
Gpt3D_Clone933_6.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove(E element) {
    Node prev = null;
    Node current = head;
    while (current != null && !current.data.equals (element)) {
        prev = current;
        current = current.previous;
    } 
    if (current == null) {
        System.out.println("Element " + element + " not found.");   
    } else {
        if (prev == null) {
            head = current.previous;
        } else {
            prev.previous = current.previous;
        }
        current.previous = null;
        System.out.println("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
7
Gpt3D_Clone933_7.java 1 15
Gpt3D_Clone933_7.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node n = head;
    Node previous = null;
    while (n != null && !n.data.equals (element)) {
        previous = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        if (previous == null) {
            head = n.previous;
        } else {
            previous.previous = n.previous;
        }
        n.previous = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
933
8
Gpt3D_Clone933_8.java 1 15
Gpt3D_Clone933_8.java 16 36
----------------------------------------

public void remove (E element) {
    Node n = head;
    Node tmp;
    while (n != null && ! n.data.equals (element)) {
        tmp = n;
        n = n.previous;
    }
    if (n == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        tmp.prev = n.prev;
        n.prev = null;
        System.out.println ("Element " + element + " removed.");
    }
}
----------------------------------------

 public void remove (E element) {
    Node current = head;
    Node previous = null;
        while (current != null && !current.data.equals (element)) {
           previous = current;
           current = current.previous;
        } 
    if (current == null) {
        System.out.println ("Element " + element + " not found.");
    } else {
        if (previous == null) {
            head = current.previous;
        } else {
            previous.previous = current.previous;
        }
        current.previous = null;
        System.out.println ("Element " + element + " removed.");
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
0
Gpt3D_Clone936_0.java 1 19
Gpt3D_Clone936_0.java 20 44
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

  public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    AnObject object = new AnObject ();
    long start;
    long regularCalls;
    long reflectiveCalls;
    long reflectiveLookup;
    
    start = System.nanoTime ();
    object = testMethodCall (object, loops);
    regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = AnObject.class.getDeclaredMethod ("getState");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls: " + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + reflectiveLookup / loops + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
1
Gpt3D_Clone936_1.java 1 19
Gpt3D_Clone936_1.java 20 44
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main(String args[])throws Exception{
    int loopCount = 1000000;
    AnObject object = new AnObject();
    long start;
    long regularCalls;
    long reflectiveCalls;
    long reflectiveLookup;
    start = System.nanoTime();
    testMethodCall(object, loopCount);
    regularCalls = System.nanoTime() - start;
    //get method from class
    java.lang.reflect.Method method = AnObject.class.getDeclaredMethod("getState");
    method.setAccessible(true);
    start = System.nanoTime();
    testInvoke(object, loopCount, method);
    reflectiveCalls = System.nanoTime() - start;
    start = System.nanoTime();
    testGetMethodInvoke(object, loopCount);
    reflectiveLookup = System.nanoTime() - start;
    System.out.println("Average regular method calls: " + regularCalls/loopCount +" ns.");
    System.out.println("Average reflective method calls without lookup: "+ reflectiveCalls/loopCount +" ns.");
    System.out.println("Average reflective method calls with lookup: "+ reflectiveLookup/loopCount +" ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
2
Gpt3D_Clone936_2.java 1 19
Gpt3D_Clone936_2.java 20 69
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main(String[] args) throws Exception
    {   
    int loops = 1000 *1000;
    Object object = new Object ();
    long startPoint;
    long regularAverage;
    long reflectionAverage;
    long reflectiveLookup;
    
        startPoint = System.nanoTime();
        object = invokeRegularMethod(object,loops);
        regularAverage = System.nanoTime() - startPoint;
        java.lang.reflect.Method method = Object.class.getDeclaredMethod("getClass");
        method.setAccessible(true);
        startPoint = System.nanoTime();
        invokeReflectiveMethod(object,loops,method);
        reflectionAverage = System.nanoTime() - startPoint;
        startPoint = System.nanoTime();
        invokeReflectiveMethodWithLookUp(object, loops);
        reflectiveLookup = System.nanoTime() - startPoint;
        System.out.println("Average regular method calls :" + regularAverage/loops+ " ns.");
        System.out.println("Average reflective method calls without lookup:"+ reflectionAverage/loops+" ns.");
        System.out.println("Average reflective method calls with lookup :" + reflectiveLookup/loops+" ns.");
    }
 public static void main(String[] args) throws Exception {
    int loops = 1000000;
    AnObject object = new AnObject ();
    long startTime;
    long regularCallsTime;
    long reflectiveCallsTime;
    long reflectiveLookupTime;
    
    startTime = System.nanoTime();
    object = testInvokeRegularMethod(object, loops);
    regularCallsTime = System.nanoTime() - startTime;
    java.lang.reflect.Method method = AnObject.class.getDeclaredMethod("getState");
    method.setAccessible(true);
    startTime = System.nanoTime();
    object = testInvokeReflectiveMethod(object, loops, method);
    reflectiveCallsTime = System.nanoTime() - startTime;
    startTime = System.nanoTime();
    object = testInvokeReflectiveMethodWithLookup(object, loops);
    reflectiveLookupTime = System.nanoTime() - startTime;
    System.out.println("Average regular method calls: " + regularCallsTime/loops +" ns.");
    System.out.println("Average reflective method calls without lookup: "+ reflectiveCallsTime/loops +" ns.");
    System.out.println("Average reflective method calls with lookup: "+ reflectiveLookupTime/loops +" ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
4
Gpt3D_Clone936_4.java 1 19
Gpt3D_Clone936_4.java 20 44
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main(String[] args) throws Exception {
    int loops = 1000 * 1000;
    AnObject object = new AnObject ();
    long start;
    long regularCallTime;
    long reflectiveCallTime;
    long reflectiveLookupTime;
    
    start = System.nanoTime();
    invokeRegularMethod(object, loops);
    regularCallTime = System.nanoTime () - start;
    java.lang.reflect.Method method = AnObject.class.getDeclaredMethod ("getState");
    method.setAccessible (true);
    start = System.nanoTime ();
    invokeReflectiveMethod (object, loops, method);
    reflectiveCallTime = System.nanoTime () - start;    
    start = System.nanoTime ();      
    invokeReflectiveMethodWithLookUp (object, loops); 
    reflectiveLookupTime = System.nanoTime() - start;
    System.out.println ("Average regular method calls: " + regularCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + reflectiveCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + reflectiveLookupTime / loops + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
5
Gpt3D_Clone936_5.java 1 19
Gpt3D_Clone936_5.java 20 70
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main(String[] args) throws Exception
    {	
   	int loops = 1000 *1000;
   	Object object = new Object ();
   	long start;
   	long regularCalls;
   	long reflectiveCalls;
   	long reflectiveLookup;
    
    	start = System.nanoTime();
    	object = invokeRegularMethod(object,loops);
    	regularCalls = System.nanoTime() - start;
    	java.lang.reflect.Method method = Object.class.getDeclaredMethod("getClass");
    	method.setAccessible(true);
    	start = System.nanoTime();
    	invokeReflectiveMethod(object,loops,method);
    	reflectiveCalls = System.nanoTime() - start;
    	start = System.nanoTime();
    	invokeReflectiveMethodWithLookUp(object, loops);
    	reflectiveLookup = System.nanoTime() - start;
    	System.out.println("Average regular method calls :" + regularCalls/loops+ " ns.");
    	System.out.println("Average reflective method calls without lookup:"+ reflectiveCalls/loops+" ns.");
    	System.out.println("Average reflective method calls with lookup :" + reflectiveLookup/loops+" ns.");
    }
 public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    AnObject object = new AnObject ();
    long startTime;
    long regularCallTime;
    long reflectiveCallTime;
    long reflectiveLookupTime;
    
    startTime = System.nanoTime ();
    testMethodCall (object, loops); 
    regularCallTime = System.nanoTime () - startTime;
    // get method from class
    java.lang.reflect.Method targetMethod = AnObject.class.getDeclaredMethod ("getState");
    targetMethod.setAccessible (true);
    startTime = System.nanoTime ();
    testInvoke (object, loops, targetMethod);
    reflectiveCallTime = System.nanoTime () - startTime;    
    startTime = System.nanoTime ();      
    testGetMethodInvoke (object, loops); 
    reflectiveLookupTime = System.nanoTime () - startTime;
    System.out.println ("Average regular method calls: " + regularCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + reflectiveCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + reflectiveLookupTime / loops + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
6
Gpt3D_Clone936_6.java 1 19
Gpt3D_Clone936_6.java 20 70
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main(String[] args) throws Exception
    {	
   	int loops = 1000 *1000;
   	Object object = new Object ();
   	long start;
   	long regularCalls;
   	long reflectiveCalls;
   	long reflectiveLookup;
    
    	start = System.nanoTime();
    	object = invokeRegularMethod(object,loops);
    	regularCalls = System.nanoTime() - start;
    	java.lang.reflect.Method method = Object.class.getDeclaredMethod("getClass");
    	method.setAccessible(true);
    	start = System.nanoTime();
    	invokeReflectiveMethod(object,loops,method);
    	reflectiveCalls = System.nanoTime() - start;
    	start = System.nanoTime();
    	invokeReflectiveMethodWithLookUp(object, loops);
    	reflectiveLookup = System.nanoTime() - start;
    	System.out.println("Average regular method calls :" + regularCalls/loops+ " ns.");
    	System.out.println("Average reflective method calls without lookup:"+ reflectiveCalls/loops+" ns.");
    	System.out.println("Average reflective method calls with lookup :" + reflectiveLookup/loops+" ns.");
    }
 public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    AnObject object = new AnObject ();
    long startTime;
    long regularCallTime;
    long reflectiveCallTime;
    long reflectiveLookupTime;
    
    startTime = System.nanoTime ();
    testMethodCall (object, loops); 
    regularCallTime = System.nanoTime () - startTime;
    // get method from class
    java.lang.reflect.Method targetMethod = AnObject.class.getDeclaredMethod ("getState");
    targetMethod.setAccessible (true);
    startTime = System.nanoTime ();
    testInvoke (object, loops, targetMethod);
    reflectiveCallTime = System.nanoTime () - startTime;    
    startTime = System.nanoTime ();      
    testGetMethodInvoke (object, loops); 
    reflectiveLookupTime = System.nanoTime () - startTime;
    System.out.println ("Average regular method calls: " + regularCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + reflectiveCallTime / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + reflectiveLookupTime / loops + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
7
Gpt3D_Clone936_7.java 1 19
Gpt3D_Clone936_7.java 20 45
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

  public static void main (String [] args) throws Exception {
    int loopCount = 1000 * 1000;
    AnObject object = new AnObject ();
    long startTime;
    long regularCallTime;
    long reflectiveCallTime;
    long reflectiveLookupTime;
    
    startTime = System.nanoTime ();
    testMethodCall (object, loopCount); 
    regularCallTime = System.nanoTime () - startTime;
    // get method from class
    java.lang.reflect.Method targetMethod = AnObject.class.getDeclaredMethod ("getState");
    targetMethod.setAccessible (true);
    startTime = System.nanoTime ();
    testInvoke (object, loopCount, targetMethod);
    reflectiveCallTime = System.nanoTime () - startTime;    
    startTime = System.nanoTime ();      
    testGetMethodInvoke (object, loopCount); 
    reflectiveLookupTime = System.nanoTime () - startTime;
    System.out.println ("Average regular method calls: " + regularCallTime / loopCount + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + reflectiveCallTime / loopCount + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + reflectiveLookupTime / loopCount + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
8
Gpt3D_Clone936_8.java 1 19
Gpt3D_Clone936_8.java 20 44
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

  public static void main(String[] args)throws Exception {
	int loops = 1000 * 1000;
	Object object = new Object();
	long start;
	long regularCalls;
	long reflectiveCalls;
	long reflectiveLookup;
	
	start = System.nanoTime();
	testMethodInvoke(object, loops);
	regularCalls = System.nanoTime() - start;
	java.lang.reflect.Method method = Object.class.getDeclaredMethod("getClass");
	method.setAccessible(true);
	start = System.nanoTime();
	testInvokeWithMethod(object, loops, method);
	reflectiveCalls = System.nanoTime() - start;
	start = System.nanoTime();
	testGetMethodInvoke(object, loops);
	reflectiveLookup = System.nanoTime() - start;
	System.out.println("Average regular method calls: " + regularCalls / loops + " ns.");
	System.out.println("Average reflective method calls without lookup: " + reflectiveCalls / loops + " ns.");
	System.out.println("Average reflective method calls with lookup: " + reflectiveLookup / loops + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
936
9
Gpt3D_Clone936_9.java 1 19
Gpt3D_Clone936_9.java 20 46
----------------------------------------

public static void main (String [] args) throws Exception {
    int loops = 1000 * 1000;
    Object object = new Object ();
    long start = System.nanoTime ();
    Object s;
    testMethodCall (object, loops);
    long regularCalls = System.nanoTime () - start;
    java.lang.reflect.Method method = Object.class.getMethod ("getClass");
    method.setAccessible (true);
    start = System.nanoTime ();
    testInvoke (object, loops, method);
    long reflectiveCalls = System.nanoTime () - start;
    start = System.nanoTime ();
    testGetMethodInvoke (object, loops);
    long reflectiveLookup = System.nanoTime () - start;
    System.out.println ("Average regular method calls:" + regularCalls / loops + " ns.");
    System.out.println ("Average reflective method calls without lookup:" + reflectiveCalls / loops + " ns.");
    System.out.println ("Average reflective method calls with lookup:" + reflectiveLookup / loops + " ns.");
}
----------------------------------------

 public static void main (String [] args) throws Exception {
    int loopCount = 1000 * 1000;
    AnObject object = new AnObject ();
    long startTime;
    long elapsedTimeForRegularCalls;
    long elapsedTimeForReflectiveCalls;
    long elapsedTimeForMethodLookup;
    
    startTime = System.nanoTime ();
    object = testMethodCall (object, loopCount); 
    elapsedTimeForRegularCalls = System.nanoTime () - startTime;
    // get method from class
    java.lang.reflect.Method targetMethod = AnObject.class.getDeclaredMethod ("getState");
    targetMethod.setAccessible (true);
    startTime = System.nanoTime ();
    testInvoke (object, loopCount, targetMethod);
    elapsedTimeForReflectiveCalls = System.nanoTime () - startTime;    
    startTime = System.nanoTime ();      
    testGetMethodInvoke (object, loopCount); 
    elapsedTimeForMethodLookup = System.nanoTime () - startTime;
    System.out.println ("Average regular method calls: " + elapsedTimeForRegularCalls / loopCount + " ns.");
    System.out.println ("Average reflective method calls without lookup: " + elapsedTimeForReflectiveCalls / loopCount + " ns.");
    System.out.println ("Average reflective method calls with lookup: " + elapsedTimeForMethodLookup / loopCount + " ns.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
0
Gpt3D_Clone937_0.java 1 18
Gpt3D_Clone937_0.java 19 43
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson();
    Location [] al = gson.fromJson (jsonString, Location[].class);
    List < Location > tl = Arrays.asList(al);
    Collections.sort(tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    while (!tl.isEmpty ()) {
        current = current == null ? tl.remove (0) : current;
        Iterator < Location > itr = tl.iterator ();
        while (itr.hasNext ()) {
            Location ltmp = itr.next ();
            if (ltmp.equals(current)) {
                current.desc = current.desc + "," + ltmp.desc;
                itr.remove ();
            }
        }
        fl.add (current);
        current = null;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
1
Gpt3D_Clone937_1.java 1 18
Gpt3D_Clone937_1.java 19 43
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson();
    Location [] al = gson.fromJson(jsonString,Location[].class);
    List < Location > tl = Arrays.asList(al);
    Collections.sort(tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext (); ) {
        current = current == null ? it.next () : current;
        while (it.hasNext ()) {
            Location ltmp = it.next ();
            if (ltmp.equals(current)) {
                current.desc += "," + ltmp.desc;
            } else {
                fl.add (current);
                current = ltmp;
            }
        }
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
2
Gpt3D_Clone937_2.java 1 18
Gpt3D_Clone937_2.java 19 41
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson();
    Location [] al = gson.fromJson (jsonString, Location[].class);
    List < Location > tl = Arrays.asList(al);
    Collections.sort(tl);
    List < Location > fl = new ArrayList < Location > ();
    Iterator < Location > itr = tl.iterator();
    Location current = itr.next();
    while (itr.hasNext()) {
        Location l = itr.next();
        if (l.equals(current)) {
            current.desc += "," + l.desc;
            itr.remove();
        } else {
            fl.add(current);
            current = l;
        }
    }
    System.out.println (gson.toJson(fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
3
Gpt3D_Clone937_3.java 1 18
Gpt3D_Clone937_3.java 19 39
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (jsonString, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Location l : tl) {
        current = current == null ? l : current;
        if (current.equals (l)) {
            current.desc += "," + l.desc;
        } else {
            fl.add (current);
            current = l;
        }
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
4
Gpt3D_Clone937_4.java 1 18
Gpt3D_Clone937_4.java 19 39
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (jsonString, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (int i = 0; i < tl.size (); i++) {
        current = current == null ? tl.get (i) : current;
        if (current.equals (tl.get (i))) {
            current.desc = current.desc + "," + tl.get (i).desc;
        } else {
            fl.add (current);
            current = tl.get (i);
        }
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
5
Gpt3D_Clone937_5.java 1 18
Gpt3D_Clone937_5.java 19 39
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson();
    Location [] al = gson.fromJson (jsonString, Location[].class);
    List < Location > tl = Arrays.asList(al);
    Collections.sort(tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (int i = 0; i < tl.size(); i++) {
        current = current == null ? tl.get(i) : current;
        if (current.equals(tl.get (i))) {
            current.desc += "," + tl.get (i).desc;
        } else {
            fl.add(current);
            current = tl.get (i);
        }
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
6
Gpt3D_Clone937_6.java 1 18
Gpt3D_Clone937_6.java 19 38
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
	String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (jsonString, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    fl.add (tl.get (0));
    int i = 1;
    while (i < tl.size ()) {
        fl.get (fl.size () - 1).desc = fl.get (fl.size () - 1).desc + "," + tl.get (i).desc;
        if (!tl.get (i).equals (tl.get (i - 1))) {
            fl.add (tl.get (i));
        }
        i++;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
937
7
Gpt3D_Clone937_7.java 1 18
Gpt3D_Clone937_7.java 19 36
----------------------------------------

public static void main (String [] args) {
    String s = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (s, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    Location current = null;
    for (Iterator < Location > it = tl.iterator ();
    it.hasNext ();) {
        current = current == null ? it.next () : current;
        Location ltmp = null;
        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + "," + ltmp.desc;
        fl.add (current);
        current = ltmp;
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

 public static void main (String [] args) {
    String jsonString = "[" + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test3\"}," + " {\"lon\": 0.002, \"lat\": 0.005, \"desc\": \"test4\"}," + " {\"lon\": 0.002, \"lat\": 0.001, \"desc\": \"test5\"}," + " {\"lon\": 0.001, \"lat\": 0.001, \"desc\": \"test2\"}]";
    Gson gson = new Gson ();
    Location [] al = gson.fromJson (jsonString, Location [].class);
    List < Location > tl = Arrays.asList (al);
    Collections.sort (tl);
    List < Location > fl = new ArrayList < Location > ();
    fl.add (tl.get (0));
    for (int i = 1; i < tl.size (); i++) {
        fl.get (fl.size () - 1).desc += "," + tl.get (i).desc;
        if (!tl.get (i).equals (tl.get (i - 1))) {
            fl.add (tl.get (i));
        }
    }
    System.out.println (gson.toJson (fl));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
938
5
Gpt3D_Clone938_5.java 1 12
Gpt3D_Clone938_5.java 13 23
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

  private static String join (String delimiter, String...parts) {
    StringJoiner joiner = new StringJoiner(delimiter);
    for (String part : parts) {
        if (! isEmpty (part)) {
            joiner.add (part);
        }
    }
    return joiner.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
7
Gpt3D_Clone939_7.java 1 9
Gpt3D_Clone939_7.java 10 27
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

 public static void main (String [] args) throws ParseException {
    //Parse the String
	String st1 = "2015-07-24T09:39:14.000Z";
	String st2 = "2015-07-24T09:45:44.000Z";
    //Create substrings for each of the datetimes
	String time1 = st1.substring(st1.indexOf("T") + 1, st1.indexOf(".0"));
	String time2 = st2.substring(st2.indexOf("T") + 1, st2.indexOf(".0"));
    //Create ZonedDateTime objects for each of the datetimes
	ZonedDateTime dateTime1 = ZonedDateTime.parse(time1);
	ZonedDateTime dateTime2 = ZonedDateTime.parse(time2);
    //Compare two ZonedDateTime objects
	System.out.println (dateTime1.isAfter(dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
8
Gpt3D_Clone939_8.java 1 9
Gpt3D_Clone939_8.java 10 27
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

 public static void main (String [] args) throws ParseException {
    //Parse the String
	String st1 = "2015-07-24T09:39:14.000Z";
	String st2 = "2015-07-24T09:45:44.000Z";
    //Create substrings for each of the datetimes
	String time1 = st1.substring(st1.indexOf("T") + 1, st1.indexOf(".0"));
	String time2 = st2.substring(st2.indexOf("T") + 1, st2.indexOf(".0"));
    //Create LocalDateTime objects for each of the datetimes
	LocalDateTime dateTime1 = LocalDateTime.parse(time1);
	LocalDateTime dateTime2 = LocalDateTime.parse(time2);
    //Compare two LocalDateTime objects
	System.out.println (dateTime1.isAfter(dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
93
0
Gpt3D_Clone93_0.java 1 21
Gpt3D_Clone93_0.java 22 44
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {if (ms > 0) {
        ms = Math.max(ms, 0);
    } else {
        ms = 0;
    }
    for (int i = 0; i < chars.length(); i++) {
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        boolean shift = Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (shift) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
        robot.delay(ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
93
1
Gpt3D_Clone93_1.java 1 21
Gpt3D_Clone93_1.java 22 41
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {ms = Math.max(0, ms);
    for (int i = 0; i < chars.length(); i++) {
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        boolean isCapital = Character.isUpperCase(c);
        boolean shift = isCapital || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (shift) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
        robot.delay(ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
93
2
Gpt3D_Clone93_2.java 1 21
Gpt3D_Clone93_2.java 22 39
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {ms = ms > 0 ? ms : 0;
    for (int i = 0; i < chars.length(); i++) {
        char c = chars.charAt(i);
        int keyCode = KeyEvent.getExtendedKeyCodeForChar(c);
        boolean shift = Character.isUpperCase(c);
        if (shift) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (shift) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
        robot.delay(ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
93
3
Gpt3D_Clone93_3.java 1 21
Gpt3D_Clone93_3.java 22 39
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

 public void type (CharSequence chars, int ms) {ms = Math.max(ms, 0);
    for (int i = 0; i < chars.length(); i++) {
        char c = chars.charAt(i);
        AWTKeyStroke keyStroke = getKeyStroke(c);
        int keyCode = keyStroke.getKeyCode();
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyPress(KeyEvent.VK_SHIFT);
        }
        robot.keyPress(keyCode);
        robot.keyRelease(keyCode);
        if (Character.isUpperCase(c) || keyStroke.getModifiers() == (SHIFT_DOWN_MASK + 1)) {
            robot.keyRelease(KeyEvent.VK_SHIFT);
        }
        robot.delay(ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
0
Gpt3D_Clone942_0.java 1 23
Gpt3D_Clone942_0.java 24 50
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

  public void run () {
    synchronized (list) {
        int i = 0;
        while (i < 10) {
            if (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            } else {
                int k = list.remove (0);
                System.out.println ("consume=" + k);
                list.notifyAll ();
                i++;
            }
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
1
Gpt3D_Clone942_1.java 1 23
Gpt3D_Clone942_1.java 24 43
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

  public void run(){
    synchronized (list) {
        for (int i = 0; i < 10; i++) {
            if (list.isEmpty()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait (500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            } else {
                int k = list.remove (0);
                System.out.println ("consume=" + k);
                list.notifyAll ();
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
2
Gpt3D_Clone942_2.java 1 23
Gpt3D_Clone942_2.java 24 42
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

  public void run(){
    synchronized (list) {
        for (int i = 0; i < 10; i++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait (1000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
        }
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
3
Gpt3D_Clone942_3.java 1 23
Gpt3D_Clone942_3.java 24 43
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

  public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait (1000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
4
Gpt3D_Clone942_4.java 1 23
Gpt3D_Clone942_4.java 24 43
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

  public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait (500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notify ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
942
5
Gpt3D_Clone942_5.java 1 23
Gpt3D_Clone942_5.java 24 42
----------------------------------------

public void run () {
    synchronized (list) {
        for (int i = 0;
        i < 10; i ++) {
            while (list.isEmpty ()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
                ex.printStackTrace ();
            }
        }
    }
}
----------------------------------------

 public void run(){
    synchronized (list) {
        for (int i = 0; i < 10; i++) {
            while (list.isEmpty()) {
                System.out.println ("Consumer is waiting");
                try {
                    list.wait (500);
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
            int k = list.remove (0);
            System.out.println ("consume=" + k);
            list.notifyAll ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
0
Gpt3D_Clone945_0.java 1 14
Gpt3D_Clone945_0.java 15 32
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    Scanner sc = new Scanner(System.in);
    String exitCommand;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = sc.nextLine();
        System.out.println (input);
        exitCommand = input.toLowerCase();
        if (exitCommand.equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
1
Gpt3D_Clone945_1.java 1 14
Gpt3D_Clone945_1.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String userInput;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        userInput = br.readLine().toLowerCase();
        System.out.println (userInput);
        if (userInput.equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
2
Gpt3D_Clone945_2.java 1 14
Gpt3D_Clone945_2.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String userInput;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        userInput = br.readLine();
        System.out.println (userInput);
        if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
3
Gpt3D_Clone945_3.java 1 14
Gpt3D_Clone945_3.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String commandInput;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        commandInput = br.readLine();
        System.out.println (commandInput);
        if (commandInput.equalsIgnoreCase(EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
4
Gpt3D_Clone945_4.java 1 14
Gpt3D_Clone945_4.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    Scanner sc = new Scanner(System.in);
    String userInput;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        userInput = sc.nextLine();
        System.out.println (userInput);
        if (userInput.equals (EXIT_COMMAND.toLowerCase())) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
5
Gpt3D_Clone945_5.java 1 14
Gpt3D_Clone945_5.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    Scanner sc = new Scanner(System.in);
    String userResponse;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        userResponse = sc.nextLine();
        System.out.println (userResponse);
        if (userResponse.toLowerCase().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
6
Gpt3D_Clone945_6.java 1 14
Gpt3D_Clone945_6.java 15 31
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main (final String [] args) throws IOException {
    Scanner sc = new Scanner(System.in);
    String userInput;
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        userInput = sc.nextLine().toLowerCase();
        System.out.println (userInput);
        if (userInput.equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
946
0
Gpt3D_Clone946_0.java 1 11
Gpt3D_Clone946_0.java 12 28
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter String");
    String s = br.readLine ();
    System.out.print ("Enter Integer:");
    try {
        int i = Integer.parseInt (br.readLine ());
    } catch (NumberFormatException nfe) {
        System.err.println ("Invalid Format!");
    }
}
----------------------------------------

 public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    System.out.println("Please enter a string:");
    String s = br.readLine();
    boolean isNumber = false;
    System.out.println("Please enter an integer:");
    do {
        try {
            int i = Integer.parseInt(br.readLine());
            isNumber = true;
        } catch (NumberFormatException nfe) {
            System.err.println("Error! Invalid Format! Please enter an integer:");
        }
    } while (!isNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
947
0
Gpt3D_Clone947_0.java 1 14
Gpt3D_Clone947_0.java 15 30
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

 public static void main(final String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    System.out.println("Type \"exit\" to quit");
    while (true) {
        System.out.print("><![CDATA[ ");
        String input = br.readLine();
        System.out.println(input);
        if (input.toLowerCase().equals("exit")) {
            System.out.println("Exit program.");
            break;
        }
        System.out.println("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
950
2
Gpt3D_Clone950_2.java 1 10
Gpt3D_Clone950_2.java 11 23
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () != null && ! getEdges ().isEmpty ()) {
        for (Edge e : getEdges ()) {
            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
                return e.getNode1 ();
            }
        }
    }
    return null;
}
----------------------------------------

 protected Node getTrueParent() {
    if (!getEdges().isEmpty()) {
        for (int i = 0; i < getEdges().size(); i++){
            Edge e = getEdges().get(i);
            if (e != null && e.getNode2() == this && !e.isPseudo()) {
                return e.getNode1();
            }
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
950
4
Gpt3D_Clone950_4.java 1 10
Gpt3D_Clone950_4.java 11 22
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () != null && ! getEdges ().isEmpty ()) {
        for (Edge e : getEdges ()) {
            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
                return e.getNode1 ();
            }
        }
    }
    return null;
}
----------------------------------------

 protected Node getTrueParent() {
   Iterator<Edge> edgeIterator = getEdges().iterator();
   while(edgeIterator.hasNext()) {
      Edge e = edgeIterator.next();
      if(e != null && e.getNode2() == this && !e.isPseudo()) {
        return e.getNode1();
      }
   }
   return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
950
6
Gpt3D_Clone950_6.java 1 10
Gpt3D_Clone950_6.java 11 20
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () != null && ! getEdges ().isEmpty ()) {
        for (Edge e : getEdges ()) {
            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
                return e.getNode1 ();
            }
        }
    }
    return null;
}
----------------------------------------

 protected Node getTrueParent() { 
   for (Edge e : getEdges()) { 
     if (e != null && e instanceof Edge && ((Edge)e).getNode2() == this && !e.isPseudo()) { 
       return e.getNode1(); 
     } 
   } 
   return null; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
3
Gpt3D_Clone954_3.java 1 8
Gpt3D_Clone954_3.java 9 19
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

 public boolean isPrime() {
    double root = Math.sqrt((double) value);
    int sqrt = (int) root;
    if (root != sqrt) sqrt++;
    for (int i = 2; i <= sqrt; i++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
6
Gpt3D_Clone954_6.java 1 8
Gpt3D_Clone954_6.java 9 20
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

 public boolean isPrime() {
    int sqrt = (int) Math.sqrt((double)value);
    for(int i = 2; i <= sqrt; i++) {
        if(value % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
9
Gpt3D_Clone954_9.java 1 8
Gpt3D_Clone954_9.java 9 16
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

 public boolean isPrime() {
    for(int i = 2; i <= Math.sqrt(value); i++) {
        if(value % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
955
0
Gpt3D_Clone955_0.java 1 11
Gpt3D_Clone955_0.java 12 24
----------------------------------------

public TerminalGui [] getTerminalGuis () {
    Components comps [] = getComponents ();
    List < TerminalGui > list = new ArrayList < TerminalGui > ();
    if (comps == null) return null;
    for (Component c : comps) {
        if (c instanceof TerminalGui) {
            list.add (c);
        }
    }
    return list.toArray (new TerminalGui [list.size ()]);
}
----------------------------------------

 public TerminalGui[] getTerminalGuis() {
    List<TerminalGui> terminalList = new ArrayList<TerminalGui>();
    if (getComponents() == null) return null;
    Component[] comps = getComponents();
    for (Component c : comps) {
        if (c instanceof TerminalGui) {
            terminalList.add((TerminalGui) c);
        }
    }
    return terminalList.toArray(new TerminalGui[terminalList.size()]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
955
1
Gpt3D_Clone955_1.java 1 11
Gpt3D_Clone955_1.java 12 24
----------------------------------------

public TerminalGui [] getTerminalGuis () {
    Components comps [] = getComponents ();
    List < TerminalGui > list = new ArrayList < TerminalGui > ();
    if (comps == null) return null;
    for (Component c : comps) {
        if (c instanceof TerminalGui) {
            list.add (c);
        }
    }
    return list.toArray (new TerminalGui [list.size ()]);
}
----------------------------------------

 public TerminalGui[] getTerminalGuis() {
    List<TerminalGui> terminalGuiList = new ArrayList<TerminalGui>(); 
    Components comps = getComponents(); 
    if(comps == null) return null; 
    for (Component c : comps.getComponents()) { 
        if (c instanceof TerminalGui) { 
            terminalGuiList.add((TerminalGui) c); 
        } 
    } 
    return terminalGuiList.toArray(new TerminalGui[terminalGuiList.size()]); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
955
4
Gpt3D_Clone955_4.java 1 11
Gpt3D_Clone955_4.java 12 22
----------------------------------------

public TerminalGui [] getTerminalGuis () {
    Components comps [] = getComponents ();
    List < TerminalGui > list = new ArrayList < TerminalGui > ();
    if (comps == null) return null;
    for (Component c : comps) {
        if (c instanceof TerminalGui) {
            list.add (c);
        }
    }
    return list.toArray (new TerminalGui [list.size ()]);
}
----------------------------------------

public TerminalGui[] getTerminalGuis() { 
    List<TerminalGui> terminalGuiList = new ArrayList<TerminalGui>(); 
    Component[] components = getComponents(); 
    if (components == null) return null; 
    for (Component c : components) { 
        if (c instanceof TerminalGui) terminalGuiList.add((TerminalGui) c); 
    } 
    return terminalGuiList.toArray(new TerminalGui[terminalGuiList.size()]); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
956
0
Gpt3D_Clone956_0.java 1 25
Gpt3D_Clone956_0.java 26 53
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (values [0]);
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (values [1]);
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (values [2]);
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

	public static String getDurationBreakdown(long millis) {
    String[] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long[] values = new Long[units.length];
    String stringMillis = Long.toString(millis);
    if (stringMillis.charAt(0) == '-') {
        throw new IllegalArgumentException("Duration must be greater than zero!");
    }
    values[0] = TimeUnit.MILLISECONDS.toDays(millis);
    millis -= TimeUnit.DAYS.toMillis(values[1]);
    values[1] = TimeUnit.MILLISECONDS.toHours(millis);
    millis -= TimeUnit.HOURS.toMillis(values[1]);
    values[2] = TimeUnit.MILLISECONDS.toMinutes(millis);
    millis -= TimeUnit.MINUTES.toMillis(values[2]);
    values[3] = TimeUnit.MILLISECONDS.toSeconds(millis);
    StringBuilder sb = new StringBuilder(64);
    int i = 0;
    while (i < units.length) {
        if (values[i] > 0 && i < units.length - 1) {
            sb.append(values[i] + units[i] + ",");
        } else if (values[i] > 0 && i == units.length - 1) {
            sb.append(values[i] + units[i]);
        }
        i++;
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
956
2
Gpt3D_Clone956_2.java 1 25
Gpt3D_Clone956_2.java 26 51
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (values [0]);
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (values [1]);
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (values [2]);
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

	public static String getDurationBreakdown(long millis){
    String[] units= {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long[units.length];
    String stringMillis = Long.toString(millis);
    if(stringMillis.charAt(0) == '-'){
        throw new IllegalArgumentException("Duration must be greater than zero!");
    }
    values[0] = TimeUnit.MILLISECONDS.toDays(millis);
    millis-= TimeUnit.DAYS.toMillis(values[1]);
    values[1] = TimeUnit.MILLISECONDS.toHours(millis);
    millis -= TimeUnit.HOURS.toMillis(values[1]);
    values[2] = TimeUnit.MILLISECONDS.toMinutes(millis);
    millis -= TimeUnit.MINUTES.toMillis(values[2]);
    values[3] = TimeUnit.MILLISECONDS.toSeconds(millis);
    StringBuilder sb = new StringBuilder(64);
    int i =0;
    while(i<units.length){
        if(values[i]> 0){
            sb.append(values[i] + units[i]);
        }
        i++;
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
1
Gpt3D_Clone963_1.java 1 14
Gpt3D_Clone963_1.java 15 33
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    byte[] binaryBytes = new byte[32];
    int index = 0;
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryBytes[index] = (byte) (decimal % 2);
            decimal = decimal / 2;
            index++;
        }
        String binary = new String(binaryBytes);
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
2
Gpt3D_Clone963_2.java 1 14
Gpt3D_Clone963_2.java 15 33
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    char[] binaryArr = new char[100];
    int i = 0;
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryArr[i] = (char) ((decimal % 2) + '0');
            decimal = decimal / 2;
            i++;
        }
        String binary = String.copyValueOf(binaryArr, 0, i);
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
3
Gpt3D_Clone963_3.java 1 14
Gpt3D_Clone963_3.java 15 35
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    int[] binaryArr = new int[1000];
    int ind = 0;
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryArr[ind] = decimal % 2;
            decimal = decimal / 2;
            ind++;
        }        
        String binary = Arrays.stream(binaryArr)
                              .mapToObj(String::valueOf)
                              .collect(Collectors.joining());
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
4
Gpt3D_Clone963_4.java 1 14
Gpt3D_Clone963_4.java 15 32
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    List<Integer> binaryList = new ArrayList<>();
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryList.add(decimal % 2);
            decimal = decimal / 2;
        }
        Collections.reverse(binaryList);
        String binary = binaryList.toString();
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
5
Gpt3D_Clone963_5.java 1 14
Gpt3D_Clone963_5.java 15 31
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    StringBuffer binaryBuffer = new StringBuffer ();
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryBuffer.insert(0, decimal % 2);
            decimal = decimal / 2;
        }
        String binary = binaryBuffer.toString();
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
6
Gpt3D_Clone963_6.java 1 14
Gpt3D_Clone963_6.java 15 31
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    StringBuilder binaryBuilder = new StringBuilder ();
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryBuilder.append (decimal % 2);
            decimal = decimal / 2;
        }
        String binary = binaryBuilder.reverse().toString();
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
7
Gpt3D_Clone963_7.java 1 14
Gpt3D_Clone963_7.java 15 31
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

 public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    Stack<Integer> binaryStack = new Stack<>();
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binaryStack.push(decimal % 2);
            decimal = decimal / 2;
        }
        String binary = binaryStack.stream().map(Object::toString).collect(Collectors.joining(""));
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
964
0
Gpt3D_Clone964_0.java 1 12
Gpt3D_Clone964_0.java 13 26
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (int i = 0;
    i <= s1.length - 1; i ++) {
        if (s1 [i].equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

 public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    int n = s1.length;
    for (int i = 0; i < n; i ++) {
        if (s1 [i].toLowerCase().equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
964
1
Gpt3D_Clone964_1.java 1 12
Gpt3D_Clone964_1.java 13 25
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (int i = 0;
    i <= s1.length - 1; i ++) {
        if (s1 [i].equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

 public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (String s : s1) {
        if (s.equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
964
2
Gpt3D_Clone964_2.java 1 12
Gpt3D_Clone964_2.java 13 24
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (int i = 0;
    i <= s1.length - 1; i ++) {
        if (s1 [i].equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

 public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    int idx = str.indexOf("is");
    while (idx != -1) {
        count++;
        idx = str.indexOf("is", idx + 1);
    } 
    System.out.println (count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
964
3
Gpt3D_Clone964_3.java 1 12
Gpt3D_Clone964_3.java 13 25
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (int i = 0;
    i <= s1.length - 1; i ++) {
        if (s1 [i].equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

 public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] words = str.split (" ");
    for (String w : words) {
		if ("is".equalsIgnoreCase(w)) {
			count++;
		}
	}
    System.out.println (count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
964
4
Gpt3D_Clone964_4.java 1 12
Gpt3D_Clone964_4.java 13 24
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    String [] s1 = str.split (" ");
    for (int i = 0;
    i <= s1.length - 1; i ++) {
        if (s1 [i].equals ("is")) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

 public static void main (String [] args) {
    int count = 0;
    String str = "hi this is is is line";
    for (int i = 0; i < str.length(); i++) {
        if(str.substring(i, i+2).equalsIgnoreCase("is")) {
            count++;
        }
    }
    System.out.println (count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
965
0
Gpt3D_Clone965_0.java 1 9
Gpt3D_Clone965_0.java 10 22
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFRow rowOld, HSSFRow rowNew) {
    HSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFRow rowOld, HSSFRow rowNew) {HSSFCell cellNew = null; 
    int maxCol = 0; 
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ()); 
        if (cellNew != null) 
            this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew); 
        maxCol = Math.max (maxCol, cell.getColumnIndex ());
    }
    this.lastColumn = Math.max (this.lastColumn, maxCol);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
965
6
Gpt3D_Clone965_6.java 1 9
Gpt3D_Clone965_6.java 10 19
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFRow rowOld, HSSFRow rowNew) {
    HSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFRow rowOld, HSSFRow rowNew) {rowNew.setHeight (rowOld.getHeight ()); 
    for (Cell cell : rowOld) {
        HSSFCell cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null)
            this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew); 
        this.lastColumn = Math.max (this.lastColumn, cell.getColumnIndex ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
967
0
Gpt3D_Clone967_0.java 1 18
Gpt3D_Clone967_0.java 19 33
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

 private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorder (styleOld.getBorder ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
967
1
Gpt3D_Clone967_1.java 1 18
Gpt3D_Clone967_1.java 19 33
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

 private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, Integer hash, XSSFCellStyle styleOld, HSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorder (styleOld.getBorder ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, (XSSFFont) styleOld.getFont ()));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
1
Gpt3D_Clone970_1.java 1 14
Gpt3D_Clone970_1.java 15 34
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

    private void transform (HSSFRow rowOld, XSSFRow rowNew) {
        XSSFCell cellNew;
        int colIndex = 0;
        rowNew.setHeight (rowOld.getHeight ());
        if (rowOld.getRowStyle () != null) {
            Integer hash = rowOld.getRowStyle ().hashCode ();
            if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
            rowNew.setRowStyle (this.styleMap.get (hash));
        }
        do {
            HSSFCell cell = rowOld.getCell(colIndex);
            cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
            if (cellNew != null) this.transform (cell, cellNew);
            colIndex++;
        } while (colIndex <= rowOld.getLastCellNum()); 
        this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
2
Gpt3D_Clone970_2.java 1 14
Gpt3D_Clone970_2.java 15 34
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

    private void transform (HSSFRow rowOld, XSSFRow rowNew) {
        XSSFCell cellNew;
        int colIndex = 0;
        rowNew.setHeight (rowOld.getHeight ());
        if (rowOld.getRowStyle () != null) {
            Integer hash = rowOld.getRowStyle ().hashCode ();
            if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
            rowNew.setRowStyle (this.styleMap.get (hash));
        }
        while (colIndex <= rowOld.getLastCellNum()){
            HSSFCell cell = rowOld.getCell(colIndex);
            cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
            if (cellNew != null) this.transform (cell, cellNew);
            colIndex++;
        }
        this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
3
Gpt3D_Clone970_3.java 1 14
Gpt3D_Clone970_3.java 15 33
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

    private void transform (HSSFRow rowOld, XSSFRow rowNew) {
        int colIndex;
        XSSFCell cellNew;
        rowNew.setHeight (rowOld.getHeight ());
        if (rowOld.getRowStyle () != null) {
            Integer hash = rowOld.getRowStyle ().hashCode ();
            if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
            rowNew.setRowStyle (this.styleMap.get (hash));
        }
        for (colIndex = 0; colIndex <= rowOld.getLastCellNum(); colIndex++) {
            HSSFCell cell = rowOld.getCell(colIndex);
            cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
            if (cellNew != null) this.transform (cell, cellNew);
        }
        this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
4
Gpt3D_Clone970_4.java 1 14
Gpt3D_Clone970_4.java 15 29
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

    private void transform (HSSFRow rowOld, XSSFRow rowNew) {
        XSSFCell cellNew;
        rowNew.setHeight (rowOld.getHeight ());
        rowOld.getRowStyle () != null ? 
            this.transform (rowOld.getRowStyle ().hashCode (), rowOld.getRowStyle (), this.workbookNew.createCellStyle ()) : null;
        rowNew.setRowStyle (this.styleMap.get (rowOld.getRowStyle ().hashCode ()));
        for (Cell cell : rowOld) {
            cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
            if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
        }
        this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
973
2
Gpt3D_Clone973_2.java 1 13
Gpt3D_Clone973_2.java 14 28
----------------------------------------

private XSSFFont transform (HSSFFont fontOld) {
    XSSFFont fontNew = this.workbookNew.createFont ();
    fontNew.setBoldweight (fontOld.getBoldweight ());
    fontNew.setCharSet (fontOld.getCharSet ());
    fontNew.setColor (fontOld.getColor ());
    fontNew.setFontName (fontOld.getFontName ());
    fontNew.setFontHeight (fontOld.getFontHeight ());
    fontNew.setItalic (fontOld.getItalic ());
    fontNew.setStrikeout (fontOld.getStrikeout ());
    fontNew.setTypeOffset (fontOld.getTypeOffset ());
    fontNew.setUnderline (fontOld.getUnderline ());
    return fontNew;
}
----------------------------------------

 private XSSFFont transform (HSSFFont fontOld) {XSSFFont fontNew = transformFont(fontOld);
XSSFFont fontNew = new XSSFFont();
fontNew.setBoldweight(XSSFBoldWeight.fromInt(fontOld.getBoldWeight()));
fontNew.setCharSet(FontCharSet.fromByte(fontOld.getCharSet()));
fontNew.setColor(fontOld.getColor());
fontNew.setFontName(fontOld.getFontName());
fontNew.setFontHeight(fontOld.getFontHeight());
fontNew.setItalic(fontOld.getItalic());
fontNew.setStrikeout(fontOld.getStrikeout());
fontNew.setTypeOffset(fontOld.getTypeOffset());
fontNew.setUnderline(fontOld.getUnderline());
return fontNew;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
973
3
Gpt3D_Clone973_3.java 1 13
Gpt3D_Clone973_3.java 14 28
----------------------------------------

private XSSFFont transform (HSSFFont fontOld) {
    XSSFFont fontNew = this.workbookNew.createFont ();
    fontNew.setBoldweight (fontOld.getBoldweight ());
    fontNew.setCharSet (fontOld.getCharSet ());
    fontNew.setColor (fontOld.getColor ());
    fontNew.setFontName (fontOld.getFontName ());
    fontNew.setFontHeight (fontOld.getFontHeight ());
    fontNew.setItalic (fontOld.getItalic ());
    fontNew.setStrikeout (fontOld.getStrikeout ());
    fontNew.setTypeOffset (fontOld.getTypeOffset ());
    fontNew.setUnderline (fontOld.getUnderline ());
    return fontNew;
}
----------------------------------------

 private XSSFFont transform (HSSFFont fontOld) {XSSFFont fontNew = transformFont(fontOld);
XSSFFont fontNew = this.workbookNew.createFont();
fontNew.setBoldweight(FontWeight.fromInt(fontOld.getBoldWeight()));
fontNew.setCharSet(FontCharSet.fromByte(fontOld.getCharSet()));
fontNew.setColor(fontOld.getColor());
fontNew.setFontName(fontOld.getFontName());
fontNew.setFontHeight(fontOld.getFontHeight());
fontNew.setItalic(fontOld.getItalic());
fontNew.setStrikeout(fontOld.getStrikeout());
fontNew.setTypeOffset(FontsetType.fromInt(fontOld.getTypeOffset()));
fontNew.setUnderline(FontUnderline.fromByte(fontOld.getUnderline()));
return fontNew;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
974
5
Gpt3D_Clone974_5.java 1 9
Gpt3D_Clone974_5.java 10 21
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    int rowCellNumber = rowOld.getLastCellNum(); 
    for (int i = 0; i < rowCellNumber; i++) {
        HSSFCell cell = rowOld.getCell(i);
        cellNew = rowNew.createCell(cell.getColumnIndex(), cell.getCellType());
        if (cellNew != null) this.transform(workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max(this.lastColumn, rowCellNumber);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
974
7
Gpt3D_Clone974_7.java 1 9
Gpt3D_Clone974_7.java 10 20
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    while (rowOld.getFirstCellNum() < rowOld.getLastCellNum()) {
        XSSFCell oldCell = rowOld.getCell(rowOld.getFirstCellNum());
        cellNew = rowNew.createCell(oldCell.getColumnIndex(), oldCell.getCellType());
        this.transform(workbookOld, workbookNew, (HSSFCell) oldCell, cellNew);
    }
    this.lastColumn = Math.max(this.lastColumn, rowOld.getLastCellNum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
974
8
Gpt3D_Clone974_8.java 1 9
Gpt3D_Clone974_8.java 10 20
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    for (int colNo = 0; colNo < rowOld.getLastCellNum(); colNo++) {
        XSSFCell oldCell = rowOld.getCell(colNo);
        cellNew = rowNew.createCell(oldCell.getColumnIndex(), oldCell.getCellType());
        this.transform(workbookOld, workbookNew, (HSSFCell) oldCell, cellNew);
    }
    this.lastColumn = Math.max(this.lastColumn, rowOld.getLastCellNum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
974
9
Gpt3D_Clone974_9.java 1 9
Gpt3D_Clone974_9.java 10 20
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

  private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    for (int colIdx = 0; colIdx < rowOld.getLastCellNum(); colIdx++) {
        XSSFCell cellOld = rowOld.getCell(colIdx);
        cellNew = rowNew.createCell(cellOld.getColumnIndex(), cellOld.getCellType());
        this.transform(workbookOld, workbookNew, (HSSFCell) cellOld, cellNew);
    }
    this.lastColumn = Math.max(this.lastColumn, rowOld.getLastCellNum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
0
Gpt3D_Clone975_0.java 1 29
Gpt3D_Clone975_0.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment (cellOld.getCellComment ());
    // Transform style
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    // Set cell values
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            boolean boolVal = cellOld.getBooleanCellValue ();
            cellNew.setCellValue (boolVal);
            break;
        case Cell.CELL_TYPE_ERROR :
            byte errVal = cellOld.getErrorCellValue ();
            cellNew.setCellValue (errVal);
            break;
        case Cell.CELL_TYPE_FORMULA :
            String formula = cellOld.getCellFormula ();
            cellNew.setCellValue (formula);
            break;
        case Cell.CELL_TYPE_NUMERIC :
            double numVal = cellOld.getNumericCellValue ();
            cellNew.setCellValue (numVal);
            break;
        case Cell.CELL_TYPE_STRING :
            String strVal = cellOld.getStringCellValue ();
            cellNew.setCellValue (strVal);
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
1
Gpt3D_Clone975_1.java 1 29
Gpt3D_Clone975_1.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform(HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment(cellOld.getCellComment());
    // Transform style
    Integer hash = cellOld.getCellStyle().hashCode();
    if (!this.styleMap.containsKey(hash)) {
        this.transform(workbookOld, workbookNew, hash, cellOld.getCellStyle(), (XSSFCellStyle) workbookNew.createCellStyle());
    }
    cellNew.setCellStyle(this.styleMap.get(hash));
    // Set cell values
    switch (cellOld.getCellType()) {
        case Cell.CELL_TYPE_BLANK:
            break;
        case Cell.CELL_TYPE_BOOLEAN:
            boolean cellValue = cellOld.getBooleanCellValue();
            cellNew.setCellValue(cellValue);
            break;
        case Cell.CELL_TYPE_ERROR:
            int errVal = (int) cellOld.getErrorCellValue();
            cellNew.setCellValue(errVal);
            break;
        case Cell.CELL_TYPE_FORMULA:
            String formula = cellOld.getCellFormula();
            cellNew.setCellValue(formula);
            break;
        case Cell.CELL_TYPE_NUMERIC:
            double numVal = cellOld.getNumericCellValue();
            cellNew.setCellValue(numVal);
            break;
        case Cell.CELL_TYPE_STRING:
            String strVal = cellOld.getStringCellValue();
            cellNew.setCellValue(strVal);
            break;
        default:
            System.out.println("transform: Unbekannter Zellentyp " + cellOld.getCellType());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
2
Gpt3D_Clone975_2.java 1 29
Gpt3D_Clone975_2.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform(HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment(cellOld.getCellComment());
    // Transform style
    Integer hash = cellOld.getCellStyle().hashCode();
    if (!this.styleMap.containsKey(hash)) {
        this.transform(workbookOld, workbookNew, hash, cellOld.getCellStyle(), (XSSFCellStyle) workbookNew.createCellStyle());
    }
    cellNew.setCellStyle(this.styleMap.get(hash));
    // Set cell values
    switch (cellOld.getCellType()) {
        case Cell.CELL_TYPE_BLANK:
            break;
        case Cell.CELL_TYPE_BOOLEAN:
            boolean booleanValue = cellOld.getBooleanCellValue();
            cellNew.setCellValue(booleanValue);
            break;
        case Cell.CELL_TYPE_ERROR:
            byte errVal = cellOld.getErrorCellValue();
            cellNew.setCellValue(errVal);
            break;
        case Cell.CELL_TYPE_FORMULA:
            String formula = cellOld.getCellFormula();
            cellNew.setCellValue(formula);
            break;
        case Cell.CELL_TYPE_NUMERIC:
            double numVal = cellOld.getNumericCellValue();
            cellNew.setCellValue(numVal);
            break;
        case Cell.CELL_TYPE_STRING:
            String strVal = cellOld.getStringCellValue();
            cellNew.setCellValue(strVal);
            break;
        default:
            System.out.println("transform: Unbekannter Zellentyp " + cellOld.getCellType());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
3
Gpt3D_Clone975_3.java 1 29
Gpt3D_Clone975_3.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform(HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment(cellOld.getCellComment());
    // Transform style
    Integer hash = cellOld.getCellStyle().hashCode();
    if (!this.styleMap.containsKey(hash)) {
        this.transform(workbookOld, workbookNew, hash, cellOld.getCellStyle(), (XSSFCellStyle) workbookNew.createCellStyle());
    }
    cellNew.setCellStyle(this.styleMap.get(hash));
    // Set cell values
    switch (cellOld.getCellType()) {
        case Cell.CELL_TYPE_BLANK:
            break;
        case Cell.CELL_TYPE_BOOLEAN:
            boolean boolVal = cellOld.getBooleanCellValue();
            cellNew.setCellValue(boolVal);
            break;
        case Cell.CELL_TYPE_ERROR:
            byte errVal = cellOld.getErrorCellValue();
            cellNew.setCellValue(errVal);
            break;
        case Cell.CELL_TYPE_FORMULA:
            String formula = cellOld.getCellFormula();
            cellNew.setCellValue(formula);
            break;
        case Cell.CELL_TYPE_NUMERIC:
            double numVal = cellOld.getNumericCellValue();
            cellNew.setCellValue(numVal);
            break;
        case Cell.CELL_TYPE_STRING:
            String strVal = cellOld.getStringCellValue();
            cellNew.setCellValue(strVal);
            break;
        default:
            System.out.println("transform: Unbekannter Zellentyp " + cellOld.getCellType());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
4
Gpt3D_Clone975_4.java 1 29
Gpt3D_Clone975_4.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform(HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment(cellOld.getCellComment());
    // Transform style
    Integer hash = cellOld.getCellStyle().hashCode();
    if (!this.styleMap.containsKey(hash)) {
        this.transform(workbookOld, workbookNew, hash, cellOld.getCellStyle(), (XSSFCellStyle) workbookNew.createCellStyle());
    }
    cellNew.setCellStyle(this.styleMap.get(hash));
    // Set cell values
    switch (cellOld.getCellType()) {
        case Cell.CELL_TYPE_BLANK:
            break;
        case Cell.CELL_TYPE_BOOLEAN:
            boolean cellValue = cellOld.getBooleanCellValue();
            cellNew.setCellValue(cellValue);
            break;
        case Cell.CELL_TYPE_ERROR:
            byte errVal = cellOld.getErrorCellValue();
            cellNew.setCellValue(errVal);
            break;
        case Cell.CELL_TYPE_FORMULA:
            String formula = cellOld.getCellFormula();
            cellNew.setCellValue(formula);
            break;
        case Cell.CELL_TYPE_NUMERIC:
            double numVal = cellOld.getNumericCellValue();
            cellNew.setCellValue(numVal);
            break;
        case Cell.CELL_TYPE_STRING:
            String strVal = cellOld.getStringCellValue();
            cellNew.setCellValue(strVal);
            break;
        default:
            System.out.println("transform: Unbekannter Zellentyp " + cellOld.getCellType());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
975
5
Gpt3D_Clone975_5.java 1 29
Gpt3D_Clone975_5.java 30 70
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFCell cellOld, XSSFCell cellNew) {
    // Get cell comment
    cellNew.setCellComment (cellOld.getCellComment ());
    // Transform style
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    // Set cell values
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            boolean boolVal = cellOld.getBooleanCellValue ();
            cellNew.setCellValue (boolVal);
            break;
        case Cell.CELL_TYPE_ERROR :
            int errVal = (int) cellOld.getErrorCellValue ();
            cellNew.setCellValue (errVal);
            break;
        case Cell.CELL_TYPE_FORMULA :
            String formula = cellOld.getCellFormula ();
            cellNew.setCellValue (formula);
            break;
        case Cell.CELL_TYPE_NUMERIC :
            double numVal = cellOld.getNumericCellValue ();
            cellNew.setCellValue (numVal);
            break;
        case Cell.CELL_TYPE_STRING :
            String strVal = cellOld.getStringCellValue ();
            cellNew.setCellValue (strVal);
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
983
0
Gpt3D_Clone983_0.java 1 14
Gpt3D_Clone983_0.java 15 34
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform(hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    int lastCellIndex = rowOld.getLastCellNum ();
    while (lastCellIndex > 0) {
        Cell cell = rowOld.getCell (lastCellIndex - 1);
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
        lastCellIndex --;
        rowNew.shiftRows (lastCellIndex, lastCellIndex + rowNew.getLastCellNum (), 1);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
983
1
Gpt3D_Clone983_1.java 1 14
Gpt3D_Clone983_1.java 15 33
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform(hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    int rowLength = rowOld.getLastCellNum ();
    while (rowLength > 0) {
        Cell cell = rowOld.getCell(rowLength - 1);
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
        rowLength --;
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
983
2
Gpt3D_Clone983_2.java 1 14
Gpt3D_Clone983_2.java 15 33
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

 private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform(hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    int lastCellIndex = 0;
    while (lastCellIndex = rowOld.getLastCellNum () > 0) {
        Cell cell = rowOld.getCell (lastCellIndex - 1);
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);   
        lastCellIndex --;
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
989
0
Gpt3D_Clone989_0.java 1 18
Gpt3D_Clone989_0.java 19 32
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

 private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {styleNew.setAlignment (styleOld.getAlignment ());
styleNew.setBorder (styleOld.getBorder ());
styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
styleNew.setFill (styleOld.getFill ());
styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
styleNew.setHidden (styleOld.getHidden ());
styleNew.setIndention (styleOld.getIndention ());
styleNew.setLocked (styleOld.getLocked ());
styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
styleNew.setWrapText (styleOld.getWrapText ());
this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
990
0
Gpt3D_Clone990_0.java 1 13
Gpt3D_Clone990_0.java 14 29
----------------------------------------

private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont ();
    fontNew.setBoldweight (fontOld.getBoldweight ());
    fontNew.setCharSet (fontOld.getCharSet ());
    fontNew.setColor (fontOld.getColor ());
    fontNew.setFontName (fontOld.getFontName ());
    fontNew.setFontHeight (fontOld.getFontHeight ());
    fontNew.setItalic (fontOld.getItalic ());
    fontNew.setStrikeout (fontOld.getStrikeout ());
    fontNew.setTypeOffset (fontOld.getTypeOffset ());
    fontNew.setUnderline (fontOld.getUnderline ());
    return fontNew;
}
----------------------------------------

 private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont();
    fontNew.setFontName(fontOld.getFontName());
    fontNew.setFontHeight((short) fontOld.getFontHeight());
    fontNew.setBold(fontOld.getBoldweight() == Font.BOLD);
    fontNew.setItalic(fontOld.getItalic());
    fontNew.setTypeOffset(fontOld.getTypeOffset());
    fontNew.setSubscript(fontNew.getTypeOffset()==Font.SS_SUB);
    fontNew.setUnderline(fontOld.getUnderline());
    fontNew.setCharSet(fontOld.getCharSet());
    fontNew.setColor((short) fontOld.getColor());
    fontNew.setStrikeout(fontOld.getStrikeout());
    return fontNew;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
990
1
Gpt3D_Clone990_1.java 1 13
Gpt3D_Clone990_1.java 14 29
----------------------------------------

private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont ();
    fontNew.setBoldweight (fontOld.getBoldweight ());
    fontNew.setCharSet (fontOld.getCharSet ());
    fontNew.setColor (fontOld.getColor ());
    fontNew.setFontName (fontOld.getFontName ());
    fontNew.setFontHeight (fontOld.getFontHeight ());
    fontNew.setItalic (fontOld.getItalic ());
    fontNew.setStrikeout (fontOld.getStrikeout ());
    fontNew.setTypeOffset (fontOld.getTypeOffset ());
    fontNew.setUnderline (fontOld.getUnderline ());
    return fontNew;
}
----------------------------------------

 private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont();
    fontNew.setFontName(fontOld.getFontName());
    fontNew.setFontHeightInPoints((short) fontOld.getFontHeight());
    fontNew.setBold(fontOld.getBoldweight() == Font.BOLD);
    fontNew.setItalic(fontOld.getItalic());
    fontNew.setTypeOffset(fontOld.getTypeOffset());
    fontNew.setSuperScript(fontNew.getTypeOffset()==Font.SS_SUB);
    fontNew.setUnderline(fontOld.getUnderline());
    fontNew.setCharSet(fontOld.getCharSet());
    fontNew.setColor((short) fontOld.getColor());
    fontNew.setStrikeout(fontOld.getStrikeout());
    return fontNew;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
990
2
Gpt3D_Clone990_2.java 1 13
Gpt3D_Clone990_2.java 14 29
----------------------------------------

private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont ();
    fontNew.setBoldweight (fontOld.getBoldweight ());
    fontNew.setCharSet (fontOld.getCharSet ());
    fontNew.setColor (fontOld.getColor ());
    fontNew.setFontName (fontOld.getFontName ());
    fontNew.setFontHeight (fontOld.getFontHeight ());
    fontNew.setItalic (fontOld.getItalic ());
    fontNew.setStrikeout (fontOld.getStrikeout ());
    fontNew.setTypeOffset (fontOld.getTypeOffset ());
    fontNew.setUnderline (fontOld.getUnderline ());
    return fontNew;
}
----------------------------------------

 private XSSFFont transform (XSSFWorkbook workbookNew, HSSFFont fontOld) {
    XSSFFont fontNew = workbookNew.createFont();
    fontNew.setFontName(fontOld.getFontName());
    fontNew.setFontHeightInPoints((short) fontOld.getFontHeight());
    fontNew.setBold(fontOld.getBoldweight() == Font.BOLD);
    fontNew.setItalic(fontOld.getItalic());
    fontNew.setTypeOffset(fontOld.getTypeOffset());
    fontNew.setSuperScript(fontNew.getTypeOffset()==Font.SS_SUB);
    fontNew.setUnderline(fontOld.getUnderline());
    fontNew.setCharSet(fontOld.getCharSet());
    fontNew.setColor((short) fontOld.getColor());
    fontNew.setStrikeout(fontOld.getStrikeout());
    return fontNew;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
99
3
Gpt3D_Clone99_3.java 1 12
Gpt3D_Clone99_3.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

  private void type (char character) {
    	if (Character.isLowerCase (character)) {
        	handleSpecialCharacter (character);
        	typeCharacter (Character.toUpperCase (character));
    	}    
    	if (Character.isUpperCase (character)) {
        	handleSpecialCharacter (character);
        	typeShiftCharacter (character);
   		}
    	if (Character.isDigit (character)) {
        	handleSpecialCharacter (character);
        	typeCharacter (character);
    	}  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
99
4
Gpt3D_Clone99_4.java 1 12
Gpt3D_Clone99_4.java 13 25
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

  private void type (char character) {
		handleSpecialCharacter (character);
   		
		if (Character.isLowerCase (character)) {
        	typeCharacter (Character.toUpperCase (character));
    	} else if (Character.isUpperCase (character)) {
        	typeShiftCharacter (character);
    	} else if (Character.isDigit (character)) {
        	typeCharacter (character);
    	}    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
0
Gpt3D_Clone9_0.java 1 13
Gpt3D_Clone9_0.java 14 32
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

  public static boolean longerTF (boolean [] guess) {
    int trueVar = 0;
    int falseVar = 0;
    int counter = 0;
    while (counter < guess.length) {
        if (guess [counter]) {
            trueVar++;
        } else {
            falseVar++;
        }
        if (trueVar > falseVar) {
            break;
        }
        counter++;
    }
    return trueVar >= falseVar;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
1
Gpt3D_Clone9_1.java 1 13
Gpt3D_Clone9_1.java 14 31
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

 public static boolean longerTF (boolean [] guess) {
    int trueCount = 0;
    int falseCount = 0;
    int index = 0;
    while(index<guess.length) {
        if (guess[index]) {
            trueCount++;
        }
        else {
            falseCount++;
        }
        index++;
    }
    boolean outcome = trueCount >= falseCount; 
    return outcome; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
2
Gpt3D_Clone9_2.java 1 13
Gpt3D_Clone9_2.java 14 31
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

 public static boolean longerTF (boolean [] guess) {
    boolean longerTF = false;
    int trueCount = 0;
    int falseCount = 0;
    for (int i=0; i<guess.length; i++) {
        if (guess[i]) {
            trueCount++;
        } else {
            falseCount++;
        }
        if (trueCount == falseCount){
            longerTF = true; 
        } 
    }
    return longerTF;
}
----------------------------------------

