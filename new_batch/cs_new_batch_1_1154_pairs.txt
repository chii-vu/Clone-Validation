$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
0
Gpt4D_Clone103_0.cs 1 14
Gpt4D_Clone103_0.cs 15 28
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop();
    try {
        string logMessage = string.Format("Checking emails {0}", _count);
        _count++;
        EventLog.WriteEntry(Program.EventLogName, logMessage);
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, "Exception: " + ex.Message);
    }
    _timer.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
1
Gpt4D_Clone103_1.cs 1 15
Gpt4D_Clone103_1.cs 16 28
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop();
    try {
        string message = "Checking emails " + _count.ToString();
        _count++;
        EventLog.WriteEntry(Program.EventLogName, message);
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, $"Exception: {ex.Message}");
    }
    _timer.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
2
Gpt4D_Clone103_2.cs 1 15
Gpt4D_Clone103_2.cs 16 28
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop();
    try {
        _count++;
        string msg = "Checking emails " + _count.ToString();
        EventLog.WriteEntry(Program.EventLogName, msg);
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, $"Error occurred: {ex.Message}");
    }
    _timer.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
5
Gpt4D_Clone103_5.cs 1 15
Gpt4D_Clone103_5.cs 16 27
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop();
    try {
        string logMessage = $"Checking emails {_count++}";
        EventLog.WriteEntry(Program.EventLogName, logMessage);
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, ex.Message);
    }
    _timer.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
6
Gpt4D_Clone103_6.cs 1 15
Gpt4D_Clone103_6.cs 16 26
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop();
    try {
        EventLog.WriteEntry(Program.EventLogName, $"Email Count: {_count += 1}");
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, "Error: " + ex.ToString());
    }
    _timer.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
0
Gpt4D_Clone107_0.cs 1 14
Gpt4D_Clone107_0.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Age"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Age"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
1
Gpt4D_Clone107_1.cs 1 14
Gpt4D_Clone107_1.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Gender"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Gender"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
2
Gpt4D_Clone107_2.cs 1 14
Gpt4D_Clone107_2.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Position"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Position"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
3
Gpt4D_Clone107_3.cs 1 14
Gpt4D_Clone107_3.cs 15 24
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["ID"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["ID"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
4
Gpt4D_Clone107_4.cs 1 14
Gpt4D_Clone107_4.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Salary"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Salary"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
5
Gpt4D_Clone107_5.cs 1 14
Gpt4D_Clone107_5.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Department"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Department"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
6
Gpt4D_Clone107_6.cs 1 14
Gpt4D_Clone107_6.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Address"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Address"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
7
Gpt4D_Clone107_7.cs 1 14
Gpt4D_Clone107_7.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Email"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Email"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
8
Gpt4D_Clone107_8.cs 1 14
Gpt4D_Clone107_8.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Name"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
107
9
Gpt4D_Clone107_9.cs 1 14
Gpt4D_Clone107_9.cs 15 23
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Your Column Name"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Your Column Name"].Value) {
            int colIndex = e.ColumnIndex;
            int rowIndex = e.RowIndex;
            dataGridView1.Rows [colIndex].Cells [rowIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

private void dataGridView1_CellContentClick (object sender, DataGridViewCellEventArgs e) {
    if (e.ColumnIndex == dataGridView1.Columns ["Phone Number"].Index) {
        dataGridView1.EndEdit ();
        if ((bool) dataGridView1.Rows [e.RowIndex].Cells ["Phone Number"].Value) {
            dataGridView1.Rows [e.RowIndex].Cells [e.ColumnIndex].ReadOnly = true;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
0
Gpt4D_Clone123_0.cs 1 16
Gpt4D_Clone123_0.cs 17 33
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle3(IntPtr handle, out string fileName, int wait)
{
    using (FileNameFromHandleState fileState = new FileNameFromHandleState(handle))
    {
        ThreadPool.QueueUserWorkItem(state => GetFileNameFromHandle(state), fileState);
        if (fileState.WaitOne(wait))
        {
            fileName = fileState.FileName;
            return true;
        }
        fileName = string.Empty;
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
8
Gpt4D_Clone135_8.cs 1 18
Gpt4D_Clone135_8.cs 19 36
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) 
{
    GridViewRow row = GridView1.Rows[e.RowIndex];
    var idValue = int.Parse(((HiddenField)row.FindControl("HiddenIdField")).Value);
    var tname = (TextBox) row.FindControl ("nam");
    var tques = (TextBox) row.FindControl ("que");
    var cmd = new SqlCommand("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.AddWithValue("id", idValue);
    cmd.Parameters.AddWithValue("name", tname.Text.Trim());
    cmd.Parameters.AddWithValue("ques", tques.Text.Trim());
    con.Open();
    cmd.ExecuteNonQuery();
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
0
Gpt4D_Clone152_0.cs 1 43
Gpt4D_Clone152_0.cs 44 43
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
protected override void WndProc (ref Message m) 
{
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) 
    {
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = PointToClient (screenPoint);
        Rectangle resizeArea = new Rectangle (Width - RESIZE_HANDLE_SIZE, Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (resizeArea.Contains (clientPoint)) 
        {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            return;
        }
    }
    
    base.WndProc (ref m);
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
2
Gpt4D_Clone152_2.cs 1 23
Gpt4D_Clone152_2.cs 24 42
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc (ref Message m) 
{
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) 
    {
        var pt = new Point (m.LParam.ToInt32 ());
        Rectangle resizeArea = new Rectangle (Width - 10, Height - 10, 10, 10);
        if (resizeArea.Contains (pt)) 
        {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            return;
        }
    }
    
    base.WndProc (ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
0
Gpt4D_Clone163_0.cs 1 13
Gpt4D_Clone163_0.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string w = "insert into checkmultiuser(username) values (@name)";
    c.Open();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add("@name", SqlDbType.VarChar).Value = textBox1.Text;
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
1
Gpt4D_Clone163_1.cs 1 13
Gpt4D_Clone163_1.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string w = "insert into checkmultiuser(username) values (@value)";
    c.Open();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add("@value", SqlDbType.VarChar).Value = textBox1.Text;
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
2
Gpt4D_Clone163_2.cs 1 13
Gpt4D_Clone163_2.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string sql = "insert into checkmultiuser(username) values (@uname)";
    c.Open();
    using (SqlCommand cmd = new SqlCommand (sql, c))
    {
        cmd.Parameters.Add("@uname", SqlDbType.VarChar).Value = textBox1.Text;
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
3
Gpt4D_Clone163_3.cs 1 13
Gpt4D_Clone163_3.cs 14 24
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string w = "insert into checkmultiuser (username) values (@username)";
    c.Open();
    using (var cmd = new SqlCommand(w, c))
    {
        cmd.Parameters.AddWithValue("@username", textBox1.Text);
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
4
Gpt4D_Clone163_4.cs 1 13
Gpt4D_Clone163_4.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string sql = "insert into checkmultiuser(username) values (@name)";
    c.Open();
    using (SqlCommand cmd = new SqlCommand (sql, c))
    {
        cmd.Parameters.Add("@name", SqlDbType.VarChar).Value = textBox1.Text;
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
5
Gpt4D_Clone163_5.cs 1 13
Gpt4D_Clone163_5.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string sql = "insert into checkmultiuser(username) values (@username)";
    c.Open();
    using (SqlCommand cmd = new SqlCommand (sql, c))
    {
        cmd.Parameters.Add("@username", SqlDbType.VarChar).Value = textBox1.Text;
        cmd.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
6
Gpt4D_Clone163_6.cs 1 13
Gpt4D_Clone163_6.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string insertInto = "insert into checkmultiuser(username) values (@user)";
    c.Open();
    using (SqlCommand command = new SqlCommand(insertInto, c))
    {
        command.Parameters.Add("@user", SqlDbType.VarChar).Value = textBox1.Text;
        command.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
7
Gpt4D_Clone163_7.cs 1 13
Gpt4D_Clone163_7.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string q = "insert into checkmultiuser(username) values (@username)";
    c.Open();
    using (SqlCommand command = new SqlCommand(q, c))
    {
        command.Parameters.Add(new SqlParameter("@username", SqlDbType.VarChar)).Value = textBox1.Text;
        command.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
8
Gpt4D_Clone163_8.cs 1 13
Gpt4D_Clone163_8.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string query = "insert into checkmultiuser(username) values (@username)";
    c.Open() ;
    using (SqlCommand command = new SqlCommand(query, c))
    {
        command.Parameters.Add(new SqlParameter("@username", textBox1.Text));
        command.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
9
Gpt4D_Clone163_9.cs 1 13
Gpt4D_Clone163_9.cs 14 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    string w = "insert into checkmultiuser(username) values (@username)";
    c.Open ();
    using (SqlCommand cmd = new SqlCommand (w, c))
    {
        cmd.Parameters.Add ("@username", SqlDbType.VarChar);
        cmd.Parameters ["@username"].Value = textBox1.Text;
        cmd.ExecuteNonQuery ();
    }}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    string w = "insert into checkmultiuser (username) values (@value)";
    c.Open();
    using (var command = new SqlCommand(w, c))
    {
        command.Parameters.AddWithValue("@value", textBox1.Text);
        command.ExecuteNonQuery();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
165
0
Gpt4D_Clone165_0.cs 1 15
Gpt4D_Clone165_0.cs 16 26
----------------------------------------

static void Main (string [] args) {
    try {
        using (TestClass t = new TestClass ())
        {
            Thread ts = new Thread (new ThreadStart (t.GetTest));
            ts.Start ();
        }}
    catch (Exception ex) {
        Console.WriteLine ("Error: " + ex.Message);
    }
}
----------------------------------------

static void Main (string [] args) {
    try {
        TestClass t = new TestClass ();
        Thread ts = new Thread(t.GetTest);
        ts.Start();
    }
    catch (Exception ex) {
        Console.WriteLine ("Error: " + ex.Message);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
6
Gpt4D_Clone171_6.cs 1 15
Gpt4D_Clone171_6.cs 16 26
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = txtEditCustomer1.Text;
    string piece = txtPiece.Text;
    string material = txtMaterialField.Text;
    int quantity = Convert.ToInt32 (txtNum.Text);
    float weight = Single.Parse (txtMass.Text);
    if (!String.IsNullOrEmpty(customer) && !String.IsNullOrEmpty(piece) && !String.IsNullOrEmpty(material)) {
        AllItems.Add(new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight});
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
7
Gpt4D_Clone171_7.cs 1 15
Gpt4D_Clone171_7.cs 16 26
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = custEdit.Text;
    string piece = pieceBox.Text;
    string material = materialField.Text;
    int quantity = int.Parse (qtyBox.Text);
    float weight = Convert.ToSingle (weightBox.Text);
    if (customer != null && piece != null && material != null) {
        AllItems.Add (new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight});
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
0
Gpt4D_Clone175_0.cs 1 27
Gpt4D_Clone175_0.cs 28 49
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        string programName = key != null ? Path.GetFileName (Environment.GetCommandLineArgs () [0]) : string.Empty;
        if (!string.IsNullOrEmpty(programName)) {
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
1
Gpt4D_Clone175_1.cs 1 27
Gpt4D_Clone175_1.cs 28 47
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
        }
        result = true;
    }
    catch (SecurityException) { }
    catch (UnauthorizedAccessException) { }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
2
Gpt4D_Clone175_2.cs 1 27
Gpt4D_Clone175_2.cs 28 49
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord);
                result = true;
            } else {
                key.DeleteValue(programName, false);
                result = true;
            }
        }
    } catch {
        //ignore exceptions
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
3
Gpt4D_Clone175_3.cs 1 27
Gpt4D_Clone175_3.cs 28 55
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            if(browserEmulationVersion != BrowserEmulationVersion.Default)
            {
                key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord);
            }
            else
            {
                key.DeleteValue(programName, false);
            }
            return true;
        }
    }
    catch (SecurityException)
    {
    }
    catch (UnauthorizedAccessException)
    {
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
5
Gpt4D_Clone175_5.cs 1 27
Gpt4D_Clone175_5.cs 28 48
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            return true;
        }
    }
    catch(SecurityException) {
    }
    catch(UnauthorizedAccessException) {
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
6
Gpt4D_Clone175_6.cs 1 27
Gpt4D_Clone175_6.cs 28 48
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = default;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue(programName, false);
            }
            result = true;
        }
    } catch {
        //ignore exceptions
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
0
Gpt4D_Clone177_0.cs 1 15
Gpt4D_Clone177_0.cs 16 30
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    bool status = false;
    if (!File.Exists(filePath)) 
        return false;
    try
    {
        using var img = System.Drawing.Image.FromFile(filePath);
        Set(img, style);  
        status = true;
    }
    catch {}
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
1
Gpt4D_Clone177_1.cs 1 15
Gpt4D_Clone177_1.cs 16 32
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    var IsSuccess = false;
    if (string.IsNullOrEmpty(filePath)) return false;
   
    try
    {
        using var i = new Bitmap(Path.GetFullPath(filePath));
        Set(i, style);
        IsSuccess = true;
    }
    catch
    {
    }
    return IsSuccess;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
2
Gpt4D_Clone177_2.cs 1 15
Gpt4D_Clone177_2.cs 16 30
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    bool isOK = false;
    if (string.IsNullOrEmpty(filePath)) return false;
    
    try {
        var img = System.Drawing.Image.FromFile(filePath);
        Set(img, style);
        isOK = true;
    }
    catch {
    }
    return isOK;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
4
Gpt4D_Clone177_4.cs 1 15
Gpt4D_Clone177_4.cs 16 29
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        var image = System.Drawing.Image.FromFile(Path.GetFullPath(filePath));
        Set(image, style);
        return true;
    }
    catch
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
2
Gpt4D_Clone178_2.cs 1 15
Gpt4D_Clone178_2.cs 16 32
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style) 
{
    bool styleSet = false;
    try 
    {
        Image imageSet = Bitmap.FromFile(filePath);
        Set(imageSet, style);
        styleSet = true;
    } 
    catch (Exception) {
        styleSet = false;
    }
    return styleSet;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
3
Gpt4D_Clone178_3.cs 1 15
Gpt4D_Clone178_3.cs 16 30
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool IsSuccess;
    try {
        Image image = Image.FromStream(new MemoryStream(File.ReadAllBytes(filePath)));
        Set (image, style);
        IsSuccess = true;
    }
    catch {
        IsSuccess = false;
    }
    return IsSuccess;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
0
Gpt4D_Clone185_0.cs 1 15
Gpt4D_Clone185_0.cs 16 32
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

 
static void Main (string [] args) {
    var ns = new List<int>();
    int i = 0;
    Stopwatch s1 = Stopwatch.StartNew();
    while (i < 1000){
        ns.Add(1);
        i++;
    }   
    bool result = SubsetSum(ns, 1000);
    s1.Stop ();
    Console.WriteLine(result);
    Console.WriteLine(s1.Elapsed);
    Console.Read ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
1
Gpt4D_Clone185_1.cs 1 15
Gpt4D_Clone185_1.cs 16 29
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

 
static void Main (string [] args) {
    var ns = new int[1000];
    for (int i = 0; i < 1000; i ++)
        ns[i] = 1;
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns.ToList(), 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
2
Gpt4D_Clone185_2.cs 1 15
Gpt4D_Clone185_2.cs 16 28
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

static void Main (string [] args) {
    var ns = new List<int>();
    for (int i = 1; i <= 1000; i++)
        ns.Insert(i-1, 1);
    Stopwatch s1 = Stopwatch.StartNew();
    bool result = SubsetSum (ns, 1000);
    Console.WriteLine(result);
    Console.WriteLine(s1.Elapsed);
    Console.Read();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
3
Gpt4D_Clone185_3.cs 1 15
Gpt4D_Clone185_3.cs 16 28
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

 
static void Main (string [] args) {
    int[] arrayOne = new int[1000];
    Array.Fill(arrayOne, 1);
    var ns = arrayOne.ToList();
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    Console.WriteLine(result);
    Console.WriteLine(s1.Elapsed);
    Console.Read();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
4
Gpt4D_Clone185_4.cs 1 15
Gpt4D_Clone185_4.cs 16 27
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

 
static void Main (string [] args) {
    List<int> ns = new List<int>(new int[1000].Select(x => 1).ToArray());
    Stopwatch s1 = Stopwatch.StartNew();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
185
5
Gpt4D_Clone185_5.cs 1 15
Gpt4D_Clone185_5.cs 16 25
----------------------------------------

static void Main (string [] args) {
    var ns = new List < int > ();
    for (int i = 0; i < 1000; i ++)
        ns.Add (1);
    var s1 = Stopwatch.StartNew ();
    bool result = SubsetSum (ns, 1000);
    s1.Stop ();
    Console.WriteLine (result);
    Console.WriteLine (s1.Elapsed);
    Console.Read ();
}
----------------------------------------

static void Main (string [] args) {
    var ns = Enumerable.Range(0, 1000).Select( x => 1).ToList();
    Stopwatch s1 = Stopwatch.StartNew();
    bool result = SubsetSum(ns, 1000);
    s1.Stop();
    Console.WriteLine(result);
    Console.WriteLine(s1.Elapsed);
    Console.Read();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
0
Gpt4D_Clone187_0.cs 1 14
Gpt4D_Clone187_0.cs 15 25
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = false;
    filterContext.ExceptionHandled = false;
    filterContext.HttpContext.Response.Clear();
    var controllerName = (string) filterContext.RouteData.Values ["control"];
    var actionName = (string) filterContext.RouteData.Values["activity"];
    var model = new HandleErrorInfo(filterContext.Exception, controllerName, actionName);
    filterContext.Result = new EmptyResult();
    filterContext.Exception = new Exception();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
2
Gpt4D_Clone187_2.cs 1 15
Gpt4D_Clone187_2.cs 16 25
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.RedirectLocation = "/home/error";
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["error"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Exception = new ArgumentException();
    filterContext.Result = new RedirectToRouteResult (new RouteValueDictionary(new { action = "Error", controller = "Home" }));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
8
Gpt4D_Clone187_8.cs 1 15
Gpt4D_Clone187_8.cs 16 24
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.Write(filterContext.Exception.Message);
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["default"];
    var actionName = (string) filterContext.RouteData.Values ["default"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewData = new ViewDataDictionary<HandleErrorInfo>(model)};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
1
Gpt4D_Clone18_1.cs 1 23
Gpt4D_Clone18_1.cs 24 41
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

 
public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.AppendFormat("<a href=\"{0}\"><![CDATA[", Hyperlink);
    }
    if (hasColor) {
        builder.AppendFormat("<span style='color:{0}'>", HexColor);
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
2
Gpt4D_Clone190_2.cs 1 14
Gpt4D_Clone190_2.cs 15 28
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
    if(!_disposed)
    {
        if(!disposing) return;
        id = 0;
        name = String.Empty;
        pass = String.Empty;
        _disposed = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
3
Gpt4D_Clone190_3.cs 1 14
Gpt4D_Clone190_3.cs 15 27
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

 
protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = null;
            name = null;
            pass = null;
        }
        _disposed = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
5
Gpt4D_Clone190_5.cs 1 14
Gpt4D_Clone190_5.cs 15 28
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
	  if (!_disposed)
	  {
	     if (disposing)
	     {
		 id = 0;
		 name = pass = null;
	     }
	     _disposed = true;
	  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
6
Gpt4D_Clone190_6.cs 1 14
Gpt4D_Clone190_6.cs 15 33
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
	    if (!_disposed)
	    {
		if (disposing)
		{
		    ResetValues();
		}
		_disposed = true;
	    }
	}
	private void ResetValues() 
	{
	   id = 0;
	   name = String.Empty;
	   pass = String.Empty;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
3
Gpt4D_Clone191_3.cs 1 22
Gpt4D_Clone191_3.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (!Environment.UserInteractive) {
      ServiceBase.Run(new[] { new Service() });
      return;
   }
   var lib = new MainLib();
   lib.Start();
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
4
Gpt4D_Clone191_4.cs 1 22
Gpt4D_Clone191_4.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (!Environment.UserInteractive) {
      ServiceBase.Run(new ServiceBase[] { new Service() });
      return;
   }
   MainLib libInstance = new MainLib();
   libInstance.Start();
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
0
Gpt4D_Clone192_0.cs 1 23
Gpt4D_Clone192_0.cs 24 54
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
		    SelectQuery sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
		    ManagementObjectSearcher mSearcher = null;
		    try
		    {
			mSearcher = new ManagementObjectSearcher(sQuery);
			Console.WriteLine("User Accounts\n");
			foreach (ManagementObject mObject in mSearcher.Get())
			{
			    Console.WriteLine($"Account {mObject["Name"]}");
			    foreach (PropertyData prop in mObject.Properties)
			    {
				Console.WriteLine($"Name: {prop.Name}\tValue: {prop.Value}");
			    }
			    Console.WriteLine();
			}
		    }
		    catch (Exception ex)
		    {
			Console.WriteLine(ex.ToString());
		    }
		    finally
		    {
			mSearcher?.Dispose();
		    }
		    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
1
Gpt4D_Clone192_1.cs 1 23
Gpt4D_Clone192_1.cs 24 52
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
    var sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
    using (var mSearcher = new ManagementObjectSearcher(sQuery))
    {
        try
        {
            Console.WriteLine("User Accounts");
            Console.WriteLine();
            foreach (var mObject in mSearcher.Get())
            {
                Console.WriteLine($"Account {mObject["Name"]}");
                foreach (var prop in mObject.Properties.Cast<PropertyData>())
                {
                    Console.WriteLine("Name: {0}\tValue: {1}", prop.Name, prop.Value);
                }
                Console.WriteLine();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
2
Gpt4D_Clone192_2.cs 1 23
Gpt4D_Clone192_2.cs 24 52
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
    var sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
    try
    {
        using (var mSearcher = new ManagementObjectSearcher(sQuery))
        {
            Console.WriteLine("User Accounts");
            Console.WriteLine();
            foreach (var mObject in mSearcher.Get())
            {
                Console.WriteLine($"Account {mObject["Name"]}");
                foreach (PropertyData property in mObject.Properties)
                {
                    Console.WriteLine($"Name: {property.Name}\tValue: {property.Value}");
                }
                Console.WriteLine();
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine(ex);
    }
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
4
Gpt4D_Clone192_4.cs 1 23
Gpt4D_Clone192_4.cs 24 50
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main (string [] args) {
			    var sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
			    try {
				using (var mSearcher = new ManagementObjectSearcher (sQuery)) {
				    Console.WriteLine ("User Accounts");
				    Console.WriteLine ();
				    var userAccounts = mSearcher.Get();
				    PrintUserAccounts(userAccounts);
				}
			    }
			    catch (Exception ex) {
				Console.WriteLine (ex.ToString ());
			    }
			    Console.ReadKey ();
			}
			private static void PrintUserAccounts (ManagementObjectCollection userAccounts) {
			    foreach (ManagementObject mObject in userAccounts) {
				Console.WriteLine ("Account {0}", mObject ["Name"]);
				foreach (var prop in mObject.Properties) {
				    Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
				}
				Console.WriteLine ();
			    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
1
Gpt4D_Clone196_1.cs 1 15
Gpt4D_Clone196_1.cs 16 29
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            object data = iData.GetData (DataFormats.Text);
            string text = data as string;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
3
Gpt4D_Clone196_3.cs 1 15
Gpt4D_Clone196_3.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject clipboardObject = Clipboard.GetDataObject();
        if (clipboardObject.GetDataPresent(Format.Text)) {
            var textData = (string) clipboardObject.GetData(Format.Text);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
4
Gpt4D_Clone196_4.cs 1 15
Gpt4D_Clone196_4.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject dataOnClipboard = Clipboard.GetDataObject();
        if (dataOnClipboard.GetDataPresent(DataFormats.Text)) {
            string grabbedText = (string) dataOnClipboard.GetData(DataFormats.Text);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
6
Gpt4D_Clone196_6.cs 1 15
Gpt4D_Clone196_6.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject clipboardData = Clipboard.GetDataObject();
        if (clipboardData.GetDataPresent(DataFormats.Text)) {
            string clipboardText = clipboardData.GetData(DataFormats.Text).ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
0
Gpt4D_Clone204_0.cs 1 16
Gpt4D_Clone204_0.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlServer.Server.SqlFunction(IsDeterministic = true, IsPrecise = true, DataAccess=DataAccessKind.None)]
public static SqlBytes Zip(SqlBytes input)
{
    if (input.IsNull) return SqlBytes.Null;
    using (var stream  = new MemoryStream())
    {
        using (var deflate = new DeflateStream(stream, CompressionMode.Compress, true))
        {
            deflate.Write(input.Buffer,0, input.Buffer.Length);
            deflate.Flush();
            deflate.Close();
        }
        return new SqlBytes(stream.ToArray());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
1
Gpt4D_Clone204_1.cs 1 16
Gpt4D_Clone204_1.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes CompressBytes(SqlBytes inputBytes)
{
   if (inputBytes.IsNull) return SqlBytes.Null;
   using (var memStream = new MemoryStream())
   {
       using (var deflateStream = new DeflateStream(memStream, CompressionMode.Compress))
       {
           deflateStream.Write(inputBytes.Buffer, 0, inputBytes.Buffer.Length);
           deflateStream.Flush();
           deflateStream.Close();
       }
       return new SqlBytes(memStream.ToArray());
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
2
Gpt4D_Clone204_2.cs 1 16
Gpt4D_Clone204_2.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true, DataAccess=DataAccessKind.None)]
public static SqlBytes DataCompressor(SqlBytes input)
{
   if (input.IsNull) return SqlBytes.Null;
   using (var stream = new MemoryStream())
   {
       using (var zipStream = new DeflateStream(stream, CompressionMode.Compress,true))
       {
           zipStream.Write(input.Buffer, 0, input.Buffer.Length);
           zipStream.Flush();
           zipStream.Close();
       }
       return new SqlBytes(stream.ToArray());
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
3
Gpt4D_Clone204_3.cs 1 16
Gpt4D_Clone204_3.cs 17 33
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlServer.Server.SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes Squeeze(SqlBytes input)
{
    if (input.IsNull)
        return SqlBytes.Null;
    using (var result = new MemoryStream())
    {
        using (var compressor = new DeflateStream(result, CompressionMode.Compress, true))
        {
            compressor.Write(input.Buffer, 0, input.Buffer.Length);
            compressor.Flush();
            compressor.Close();
        }
        return new SqlBytes(result.ToArray());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
4
Gpt4D_Clone204_4.cs 1 16
Gpt4D_Clone204_4.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes PackData(SqlBytes inputData)
{
   if (inputData.IsNull) return SqlBytes.Null;
   using (var memStr = new MemoryStream())
   {
       using (var defStream = new DeflateStream(memStr, CompressionMode.Compress, true))
       {
           defStream.Write(inputData.Buffer, 0, inputData.Buffer.Length);
           defStream.Flush();
           defStream.Close();
       }
       return new SqlBytes(memStr.ToArray());
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
5
Gpt4D_Clone204_5.cs 1 16
Gpt4D_Clone204_5.cs 17 31
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes CompactBinary(SqlBytes input)
{
   if (input.IsNull) return input;
   using (var memStream = new MemoryStream())
   {
       using (var deflateStr = new DeflateStream(memStream, CompressionMode.Compress, true))
       {
           deflateStr.Write(input.Buffer, 0, input.Buffer.Length);
           deflateStr.Close();
       }
       return new SqlBytes(memStream.ToArray());
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
6
Gpt4D_Clone204_6.cs 1 16
Gpt4D_Clone204_6.cs 17 33
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes CompressData(SqlBytes data)
{
    if (data.IsNull)
        return SqlBytes.Null;
    using (var stream = new MemoryStream())
    {
        using (var deflate = new DeflateStream(stream, CompressionMode.Compress))
        {
            deflate.Write(data.Buffer, 0, data.Buffer.Length);
            deflate.Close();
        }
        return new SqlBytes(stream.ToArray());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
7
Gpt4D_Clone204_7.cs 1 16
Gpt4D_Clone204_7.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlFunction(IsDeterministic = true, IsPrecise = true, DataAccess=DataAccessKind.None)]
public static SqlBytes CompressBinary(SqlBytes data)
{
   if (data.IsNull) return SqlBytes.Null;
   using (var outStream = new MemoryStream())
   {
       using (var deflate = new DeflateStream(outStream, CompressionMode.Compress))
       {
           deflate.Write(data.Buffer, 0, data.Buffer.Length);
           deflate.Close();
       }
       return new SqlBytes(outStream.ToArray());
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
8
Gpt4D_Clone204_8.cs 1 16
Gpt4D_Clone204_8.cs 17 32
----------------------------------------

[Microsoft.SqlServer.Server.SqlFunction (IsDeterministic = true, IsPrecise = true, DataAccess = DataAccessKind.None)] public static SqlBytes BinaryCompress (SqlBytes input) {
    if (input.IsNull)
        return SqlBytes.Null;
    using (MemoryStream result = new MemoryStream ())
    {
        using (DeflateStream deflateStream = new DeflateStream (result, CompressionMode.Compress, true))
        {
            deflateStream.Write (input.Buffer, 0, input.Buffer.Length);
            deflateStream.Flush ();
            deflateStream.Close ();
        } return new SqlBytes (result.ToArray ());
    }}
----------------------------------------

[SqlServer.Server.SqlFunction(IsDeterministic = true, IsPrecise = true)]
public static SqlBytes Shrink(SqlBytes input)
{
    if (input.IsNull)
        return SqlBytes.Null;
    using (var output = new MemoryStream())
    {
        using (var deflate = new DeflateStream(output, CompressionMode.Compress, true))
        {
            deflate.Write(input.Buffer, 0, input.Buffer.Length);
            deflate.Close();
        }
        return new SqlBytes(output.ToArray());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
1
Gpt4D_Clone20_1.cs 1 13
Gpt4D_Clone20_1.cs 14 29
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
	    Console.WriteLine("Enter number(s): ");
	    double[] values = new double[3];
	    int i = 0;
	    while (i < 3)
	    {
		values[i] = Convert.ToDouble(Console.ReadLine());
		i++;
	    }
	    average(values);
	    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
2
Gpt4D_Clone20_2.cs 1 13
Gpt4D_Clone20_2.cs 14 30
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
		    var values = new double[3];
		    FillArray(values);
		    Console.WriteLine("Enter number(s): ");
		    average(values);
		    Console.ReadKey();
		}
		static void FillArray(double[] nums) 
		{
		    for(int i = 0; i < nums.Length; i++)
			nums[i] = Convert.ToDouble(Console.ReadLine());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
4
Gpt4D_Clone20_4.cs 1 13
Gpt4D_Clone20_4.cs 14 23
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string[] args)
{
    Console.WriteLine("Enter number(s): ");
    var values = Console.ReadLine().Split().Select(double.Parse).Take(3).ToArray();
    average(values);
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
6
Gpt4D_Clone20_6.cs 1 13
Gpt4D_Clone20_6.cs 14 33
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string[] args)
		{
		    Console.WriteLine("Enter number(s): ");
		    double[] values = GetNumbersFromConsole(3);
		    average(values);
		    Console.ReadKey();
		}
		static double[] GetNumbersFromConsole(int length)
		{
		    double[] nums = new double[length];
		    
		    for (int i = 0; i < length; i++)
			nums[i] = Convert.ToDouble(Console.ReadLine());
		    
		    return nums;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
7
Gpt4D_Clone20_7.cs 1 13
Gpt4D_Clone20_7.cs 14 23
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
    Console.WriteLine("Enter number(s): ");
    double[] values = Array.ConvertAll(Console.ReadLine().Split(), Double.Parse);
    average(values);
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
8
Gpt4D_Clone20_8.cs 1 13
Gpt4D_Clone20_8.cs 14 23
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string[] args) 
{
    Console.WriteLine("Enter number(s): ");
    double[] values = { Convert.ToDouble(Console.ReadLine()), Convert.ToDouble(Console.ReadLine()), Convert.ToDouble(Console.ReadLine()) };
    average(values);
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
9
Gpt4D_Clone20_9.cs 1 13
Gpt4D_Clone20_9.cs 14 23
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args) 
{
    Console.WriteLine("Enter number(s): ");
    double[] values = Enumerable.Range(0,3).Select(_ => Convert.ToDouble(Console.ReadLine())).ToArray();
    average(values);
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
4
Gpt4D_Clone212_4.cs 1 13
Gpt4D_Clone212_4.cs 14 26
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double Omega = 2 * Math.PI * Frequency / SampleRate;
    double tanOmegaHalf = Math.Tan (Omega / 2);
    var norm = 1 / (1 + tanOmegaHalf / Q + tanOmegaHalf * tanOmegaHalf);
    A0 = norm;
    A1 = -2 * norm;
    A2 = norm;
    B1 = 2 * (tanOmegaHalf * tanOmegaHalf - 1) * norm;
    B2 = (1 - tanOmegaHalf / Q + tanOmegaHalf * tanOmegaHalf) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
5
Gpt4D_Clone212_5.cs 1 13
Gpt4D_Clone212_5.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Frequency / (Math.Tan (Math.PI * SampleRate));
    var norm = 1 / (1 + k / Q + k * k);
    A0 = norm;
    A1 = -2 * norm;
    A2 = norm;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (k / Q + 1 - k * k) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
213
0
Gpt4D_Clone213_0.cs 1 13
Gpt4D_Clone213_0.cs 14 23
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double m = Math.Tan (Math.PI * Frequency / SampleRate);
    double denom = 1 / (1 + m / Q + m * m);
    A0 = denom;
    A1 = -2 * denom;
    A2 = A0;
    B1 = 2 * (m * m - 1) * denom;
    B2 = (1 - m / Q + m * m) * denom;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
4
Gpt4D_Clone214_4.cs 1 13
Gpt4D_Clone214_4.cs 14 28
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

 
protected override void CalculateBiQuadCoefficients()
{
    double sinOmega = Math.Sin(Math.PI * Frequency / SampleRate);
    double cosOmega = Math.Cos(Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + sinOmega / Q + sinOmega * sinOmega);
    A0 = 1 * norm;
    A1 = -2 * cosOmega * A0;
    A2 = A0;
    B1 = 2 * (sinOmega * sinOmega - cosOmega * cosOmega) * norm;
    B2 = (1 - sinOmega / Q + sinOmega * sinOmega) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
6
Gpt4D_Clone214_6.cs 1 13
Gpt4D_Clone214_6.cs 14 28
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

 
protected override void CalculateBiQuadCoefficients()
{
    double angle = Math.PI * Frequency / SampleRate;
    double tg = Math.Tan(angle);
    var norm = 1 / (1 + tg / Q + tg * tg);
    A0 = norm;
    A1 = -2 * norm;
    A2 = norm;
    B1 = 2 * (tg * tg - 1) * norm;
    B2 = (1 - tg / Q + tg * tg) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
0
Gpt4D_Clone219_0.cs 1 13
Gpt4D_Clone219_0.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Tan(Math.PI*Frequency/SampleRate);
    double div = 1 + k/(Q) + k*k;
    double norm = 1/div;
    A0 = (1+k*k)*norm;
    A1 = 2*(k*k-1)*norm;
    A2 = (1+k*k)*norm;
    B1 = 2*(k*k-1)*norm;
    B2 = (1-k/Q+k*k)*norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
1
Gpt4D_Clone219_1.cs 1 13
Gpt4D_Clone219_1.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Tan(Math.PI / SampleRate * Frequency);
    double norm = 1 / (1 + k / Q + k*k);
    A0 = norm * (1 + k*k);
    A1 = norm * (2 * (k*k - 1));
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k*k) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
2
Gpt4D_Clone219_2.cs 1 13
Gpt4D_Clone219_2.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
   var k = Math.Tan (Math.PI * Frequency / SampleRate);
   var norm = 1 / (1 + k / Q + k * k);
   A0 = (1 + k * k) * norm;
   A1 = 2 * (k * k - 1) * norm;
   A2 = A0;
   B1 = A1;
   B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
5
Gpt4D_Clone219_5.cs 1 13
Gpt4D_Clone219_5.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = (Frequency == 0) ? 0 : Math.Tan(Math.PI*Frequency/SampleRate);
    double norm = 1.0 / (1 + k/Q + k*k);
    A0 = (1 + k*k)*norm;
    A1 = 2*(k*k - 1)*norm;
    A2 = A0;
    B1 = A1;
    B2 = ((1 - k/Q)+k*k)*norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
6
Gpt4D_Clone219_6.cs 1 13
Gpt4D_Clone219_6.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Tan(Math.PI * Frequency/SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (k * k + 1) * norm;
    A1 = (2 * k * k - 2) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (k * k + k / Q - 1) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
0
Gpt4D_Clone230_0.cs 1 12
Gpt4D_Clone230_0.cs 13 26
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    ppArray = array as PlcParameter [];
    if (array == null)
        throw new ArgumentNullException ("array");
    else {
        if (ppArray == null)
            throw new ArgumentException ();
        else 
            ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
1
Gpt4D_Clone230_1.cs 1 12
Gpt4D_Clone230_1.cs 13 24
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    ppArray = array as PlcParameter [];
    if (array == null)
        throw new ArgumentNullException ("array");
    else if (ppArray==null)
        throw new ArgumentException ();
    else 
        ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
4
Gpt4D_Clone230_4.cs 1 12
Gpt4D_Clone230_4.cs 13 23
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    if (array.GetType() == typeof(PlcParameter[]))
        ((ICollection < PlcParameter >) this).CopyTo ((PlcParameter[])array, index);
    else
        throw new ArgumentException ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
7
Gpt4D_Clone230_7.cs 1 12
Gpt4D_Clone230_7.cs 13 22
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    if (!(array is PlcParameter[] ppArray))
        throw new ArgumentException ("array");
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
8
Gpt4D_Clone230_8.cs 1 12
Gpt4D_Clone230_8.cs 13 21
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null) 
        throw new ArgumentNullException ("array");
    var ppArray = array as PlcParameter [];
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
0
Gpt4D_Clone23_0.cs 1 16
Gpt4D_Clone23_0.cs 17 32
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        using (f2 = new Form2()) {
            f2.MdiParent = this;
            f2.Show();
        }
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        Application.OpenForms[f2.Name].Activate();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
1
Gpt4D_Clone23_1.cs 1 16
Gpt4D_Clone23_1.cs 17 32
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    bool createNew = f2 == null || f2.IsDisposed;
    if (createNew) {
        f2 = new Form2 { MdiParent = this };
        f2.Show();
    }
    if (!createNew) {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
2
Gpt4D_Clone23_2.cs 1 16
Gpt4D_Clone23_2.cs 17 29
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2?.IsDisposed ?? true) {
        f2 = new Form2 { MdiParent = this };
        f2.Show();
    } else {
        if (f2.WindowState == FormWindowState.Minimized)
            f2.WindowState = FormWindowState.Normal;
        f2.Focus();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
3
Gpt4D_Clone23_3.cs 1 16
Gpt4D_Clone23_3.cs 17 30
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2() { MdiParent = this };
        f2.Show(); 
    } else {
        if (f2.WindowState == FormWindowState.Minimized)
            f2.WindowState = FormWindowState.Maximized;
        f2.BringToFront();  
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
6
Gpt4D_Clone23_6.cs 1 16
Gpt4D_Clone23_6.cs 17 28
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2() { MdiParent = this };
        f2.Show(); 
    } else {
        f2.WindowState = f2.WindowState == FormWindowState.Minimized ? FormWindowState.Normal : f2.WindowState;
        f2.BringToFront();  
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
0
Gpt4D_Clone243_0.cs 1 13
Gpt4D_Clone243_0.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    Hits.SaveLastHit(shot);
    Missed = 0;
    SetLastEndPoint(shot);
    if (NoFirstEndPoint())
        SetFirstEndPoint(shot);
    if (sunk)
        EmptyTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
2
Gpt4D_Clone243_2.cs 1 13
Gpt4D_Clone243_2.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    HitList.AddLast(shot);
    MissTally = 0;
    TerminalPoints[1] = shot;
    if (InitialPoint == null)
        InitialPoint = shot;
    if (sunk)
        ResetTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
5
Gpt4D_Clone243_5.cs 1 13
Gpt4D_Clone243_5.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    UpdateHitShotsStack(shot);
    MissesTracker = 0;
    TargetPoints[1] = shot;
    if (!HasTargetPoint())
        TargetPoints[0] = shot;
    if (sunk)
        FreeTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
6
Gpt4D_Clone243_6.cs 1 13
Gpt4D_Clone243_6.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    HitCoordinates.Add(shot);
    MissCount = 0;
    TargetEndPoint = shot;
    if (TargetStartPoint == null)
        TargetStartPoint = shot;
    if (sunk)
        DeleteTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
7
Gpt4D_Clone243_7.cs 1 13
Gpt4D_Clone243_7.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    hitShotsQueue.Enqueue(shot);
    Misses = 0;
    endPointB = shot;
    if (endPointA == null)
        endPointA = shot;
    if (sunk)
        ClearTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
2
Gpt4D_Clone244_2.cs 1 13
Gpt4D_Clone244_2.cs 14 24
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    var endPoints = new List<Point> {shot};
    HitShots.AddRange(endPoints);
    MissCount = 0;
    EndPoints[2] = shot;
    if (EndPoints[0] == null) { EndPoints[1] = shot; }
    if (sunk){ NullOutTarget(); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
3
Gpt4D_Clone244_3.cs 1 13
Gpt4D_Clone244_3.cs 14 23
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    HitShots.Add(shot);
    MissCount = sunk? 0 : MissCount;
    if(EndPoints[0] == null) EndPoints[0] = shot;
    if(sunk) NullOutTarget();
    else EndPoints[1] = shot;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
5
Gpt4D_Clone244_5.cs 1 13
Gpt4D_Clone244_5.cs 14 26
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    HitShots.AddLast(shot);
    MissCount++;
    EndPoints[1] = shot;
    if (EndPoints[0] == null) { EndPoints[0] = shot; }
    if (sunk) {
        NullOutTarget();
        MissCount = 0;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
6
Gpt4D_Clone244_6.cs 1 13
Gpt4D_Clone244_6.cs 14 23
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.Insert(0, shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null) { EndPoints [0] = shot; }
    if (sunk) { NullOutTarget (); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
7
Gpt4D_Clone244_7.cs 1 13
Gpt4D_Clone244_7.cs 14 24
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    HitShots.AddLast(shot);
    if(!sunk) return;
    missCount = 0;
    EndPoints[0] = EndPoints[0] ?? shot;
    EndPoints[1] = shot;
    NullOutTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
8
Gpt4D_Clone244_8.cs 1 13
Gpt4D_Clone244_8.cs 14 26
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    if (sunk) {
        MissCount = 0;
        NullOutTarget ();
    }
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
1
Gpt4D_Clone254_1.cs 1 16
Gpt4D_Clone254_1.cs 17 35
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    Test1("just a little test string.");
    GC.Collect();
    GC.WaitForPendingFinalizers();
    Stopwatch timer = new Stopwatch();
    timer.Start();
    int i = 0;
    while (i < 10000)
    {
        Test1("just a little test string.");
        i++;
    }
    timer.Stop();
    Console.WriteLine(timer.Elapsed.TotalSeconds + " seconds");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
6
Gpt4D_Clone254_6.cs 1 16
Gpt4D_Clone254_6.cs 17 34
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string str = "just a little test string.";
    Action<string> action = Test1;
    action.Invoke(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    Stopwatch timer = Stopwatch.StartNew();
    for (int i = 0; i < 10000; i++)
    {
        action.Invoke(str);
    }
    timer.Stop();
    Console.WriteLine(timer.Elapsed);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
8
Gpt4D_Clone254_8.cs 1 16
Gpt4D_Clone254_8.cs 17 32
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    Test1("just a little test string.");
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var timer = Stopwatch.StartNew();
    for (int i = 1; i <= 10000; i++)
    {
        Test1("just a little test string.");
    }
    timer.Stop();
    Console.WriteLine($"Elapsed time: {timer.Elapsed}");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
0
Gpt4D_Clone255_0.cs 1 13
Gpt4D_Clone255_0.cs 14 31
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as Exception;
    if (exception != null)
    {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path;
        if (exception is HttpException httpException && httpException.GetHttpCode() == 404) {
            path = "~/Error/NotFound?errorMessage=" + exception.Message;
        } else {
            path = "~/Error/Index?errorMessage=" + exception.Message;
        }
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
1
Gpt4D_Clone255_1.cs 1 13
Gpt4D_Clone255_1.cs 14 28
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as Exception;
    if (exception != null)
    {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;        
        const string errorPath = "~/Error/NotFound?errorMessage=";
        const string defaultPath = "~/Error/Index?errorMessage=";
        string path = (exception is HttpException httpException && httpException.GetHttpCode() == 404) ? errorPath : defaultPath;
        path += exception.Message;
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
2
Gpt4D_Clone255_2.cs 1 13
Gpt4D_Clone255_2.cs 14 34
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as Exception;
    if (exception != null) {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = "~/Error/Index?errorMessage=" + exception.Message;
        if(exception is HttpException httpException)
        {
            if(httpException.GetHttpCode() == 404)
            {
                path = "~/Error/NotFound?errorMessage=" + exception.Message;
            }
        }
        
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
3
Gpt4D_Clone255_3.cs 1 13
Gpt4D_Clone255_3.cs 14 30
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as HttpException;
    if (exception != null)
    {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = "~/Error/Index?errorMessage=" + exception.Message;
        if (exception.GetHttpCode() == 404)
        {
            path = "~/Error/NotFound?errorMessage=" + exception.Message;
        }
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
4
Gpt4D_Clone255_4.cs 1 13
Gpt4D_Clone255_4.cs 14 33
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    if (Server.GetLastError() is Exception exception)
    {
        if (exception != null)
        {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = "~/Error/Index?errorMessage=" + HttpUtility.UrlEncode(exception.Message);
        if (exception is HttpException httpException && httpException.GetHttpCode() == 404)
        {
            path = "~/Error/NotFound?errorMessage=" + HttpUtility.UrlEncode(exception.Message);
        }
        Context.Server.TransferRequest(path, false);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
5
Gpt4D_Clone255_5.cs 1 13
Gpt4D_Clone255_5.cs 14 31
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as Exception;
    if (exception != null) 
    {
            Context.ClearError();
            Context.Response.TrySkipIisCustomErrors = true;
            string path = "~/Error/Index?errorMessage=" + HttpUtility.UrlEncode(exception.Message);
            if(exception is HttpException httpException && httpException.GetHttpCode() == 404)
            {
                path = "~/Error/NotFound?errorMessage=" + HttpUtility.UrlEncode(exception.Message);
            }
            Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
6
Gpt4D_Clone255_6.cs 1 13
Gpt4D_Clone255_6.cs 14 27
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    var exception = Server.GetLastError() as Exception;
    if (exception is HttpException httpException)
    {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = httpException.GetHttpCode() == 404 ? "~/Error/NotFound?errorMessage=" : "~/Error/Index?errorMessage=";
        path += httpException.Message;
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
255
7
Gpt4D_Clone255_7.cs 1 13
Gpt4D_Clone255_7.cs 14 28
----------------------------------------

protected void Application_Error (object sender, EventArgs e) {
    Exception exception = Server.GetLastError () as Exception;
    if (exception != null) {
        Context.ClearError ();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException && (exception as HttpException).GetHttpCode () == 404) ? "~/Error/NotFound?errorMessage=" + exception.Message : "~/Error/Index?errorMessage=" + exception.Message;
        Context.Server.TransferRequest (path, false);
    }
}
----------------------------------------

protected void Application_Error(object sender, EventArgs e)
{
    if (Server.GetLastError() is Exception exception)
    {
        Context.ClearError();
        Context.Response.TrySkipIisCustomErrors = true;
        string path = (exception is HttpException httpException && httpException.GetHttpCode() == 404) ?
            "~/Error/NotFound?errorMessage=" + HttpUtility.UrlEncode(exception.Message) :
            "~/Error/Index?errorMessage=" + HttpUtility.UrlEncode(exception.Message);
        Context.Server.TransferRequest(path, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
0
Gpt4D_Clone263_0.cs 1 13
Gpt4D_Clone263_0.cs 14 28
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null) {
        return null;
    }
    else if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    else {
        return null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
1
Gpt4D_Clone263_1.cs 1 13
Gpt4D_Clone263_1.cs 14 25
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p != null && bindingRectangle.Contains (p.Value)) {
        if(other.bindingRectangle.Contains (p.Value)){
            return p;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
2
Gpt4D_Clone263_2.cs 1 13
Gpt4D_Clone263_2.cs 14 25
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p.HasValue) {
        if(bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)){
            return p;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
3
Gpt4D_Clone263_3.cs 1 13
Gpt4D_Clone263_3.cs 14 25
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p != null) {
        if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
            return p;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
4
Gpt4D_Clone263_4.cs 1 13
Gpt4D_Clone263_4.cs 14 25
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p.HasValue && bindingRectangle.Contains (p.Value)) {
        if(other.bindingRectangle.Contains (p.Value)){
            return p;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
5
Gpt4D_Clone263_5.cs 1 13
Gpt4D_Clone263_5.cs 14 23
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p.HasValue && bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
6
Gpt4D_Clone263_6.cs 1 13
Gpt4D_Clone263_6.cs 14 23
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null || !bindingRectangle.Contains (p.Value) || !other.bindingRectangle.Contains (p.Value)) {
        return null;
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
4
Gpt4D_Clone266_4.cs 1 19
Gpt4D_Clone266_4.cs 20 37
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    try 
    {
        if(hr.ServerVariables["X-OperaMini-Phone-UA"] is string originalBrowser && !string.IsNullOrEmpty(originalBrowser))
            return "OPERAMINI " + originalBrowser;
        if(hr.ServerVariables["X-Device-User-Agent"] is string anotherBrowser && !string.IsNullOrEmpty(anotherBrowser))
            return "NOVARRA " + anotherBrowser;
        return hr.UserAgent.ToString();
    }
    catch 
    {
        return "No UA Found";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
5
Gpt4D_Clone269_5.cs 1 17
Gpt4D_Clone269_5.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0x000F)
    {
        g = Graphics.FromHwnd(this.Handle);
        Rectangle r = GetWndRect(this.Handle);
        g.DrawRectangle(Pens.Black, r);
        Console.WriteLine("WM_PAINT: " +r.ToString());
    }
    Console.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
0
Gpt4D_Clone274_0.cs 1 35
Gpt4D_Clone274_0.cs 36 62
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
   _keyboardState = Keyboard.GetState();
   switch (keyboardState.IsKeyDown())
   {
       case Keys.A:
           _gameState = GameState.Menu;
           MediaPlayer.Stop(); 
           MediaPlayer.Play(_song1);
           break;
       case Keys.B:
           _gameState = GameState.InGame;
           MediaPlayer.Stop(); 
           MediaPlayer.Play(_song2);
           break;
       case Keys.C:
           _gameState = GameState.Undefined;
           MediaPlayer.Stop(); 
           break;
       default:
           throw new ArgumentOutOfRangeException();
   }
   base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
5
Gpt4D_Clone284_5.cs 1 18
Gpt4D_Clone284_5.cs 19 34
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName().getValue();
        string suppliedPassword = logon.getPassword().getValue();
        if (!PasswordsByUser[userName].equals(suppliedPassword)) {
            var _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField(58, "Invalid credentials");
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
6
Gpt4D_Clone284_6.cs 1 18
Gpt4D_Clone284_6.cs 19 33
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName().getValue();
        if (!PasswordsByUser[userName].equals(logon.getPassword().getValue())) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField(new Text("Invalid credentials"));
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
28
1
Gpt4D_Clone28_1.cs 1 15
Gpt4D_Clone28_1.cs 16 29
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    LinearGradientBrush brush = null;
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    double scaleFactor = (((double) Value - (double) Minimum) / ((double) Maximum - (double) Minimum));
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) ((rec.Width * scaleFactor) - 4);
    rec.Height -= 4;
    brush = new LinearGradientBrush (rec, this.ForeColor, this.BackColor, LinearGradientMode.Vertical);
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e)
{
    LinearGradientBrush brush = null;
    Rectangle rec = new Rectangle(0, 0, this.Width, this.Height);
    double scaleFactor = (((double)Value - (double)Minimum) / ((double)Maximum - (double)Minimum));
    ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
    rec.Width = (int)(rec.Width * scaleFactor);
    rec.Height = rec.Height - 4;
    brush = new LinearGradientBrush(rec, BackColor , this.ForeColor, LinearGradientMode.Vertical);
    e.Graphics.FillRectangle(brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
0
Gpt4D_Clone299_0.cs 1 14
Gpt4D_Clone299_0.cs 15 30
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths == null)
    {
        return null;
    }
    var currentPath = new System.IO.DirectoryInfo(paths[0]);
    for (int i = 1; i < paths.Length; i++)
    {
        currentPath = new System.IO.DirectoryInfo(Path.Combine(currentPath.FullName, paths[i]));
    }
    return currentPath.FullName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
3
Gpt4D_Clone314_3.cs 1 17
Gpt4D_Clone314_3.cs 18 39
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath()
    {
        string javaHome = Environment.GetEnvironmentVariable("JAVA_HOME");
        if (!string.IsNullOrEmpty(javaHome))
        {
            return javaHome;
        }
        const string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
        using (var registryKey = Registry.LocalMachine.OpenSubKey(javaKey))
        {
            var currentVersion = registryKey?.GetValue("CurrentVersion")?.ToString();
            using (var baseKey = registryKey?.OpenSubKey(currentVersion))
            {
                return baseKey?.GetValue("JavaHome")?.ToString();
            }
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
4
Gpt4D_Clone314_4.cs 1 17
Gpt4D_Clone314_4.cs 18 34
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

 
private string GetJavaInstallationPath () {
    string environmentPath = System.Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (!string.IsNullOrWhiteSpace (environmentPath)) {
        return environmentPath;
    }
    string javaKey = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
    using (RegistryKey rk = Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
5
Gpt4D_Clone314_5.cs 1 17
Gpt4D_Clone314_5.cs 18 35
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath()
    {
        string path = Environment.GetEnvironmentVariable("JAVA_HOME");
        if(!string.IsNullOrEmpty(path)) return path;
            string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
            using (RegistryKey rk = Registry.LocalMachine.OpenSubKey(javaKey))
            {
                string currentVersion = rk.GetValue("CurrentVersion").ToString();
                using (RegistryKey key = rk.OpenSubKey(currentVersion))
                {  
                        return key.GetValue("JavaHome").ToString();  
                }
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
6
Gpt4D_Clone314_6.cs 1 17
Gpt4D_Clone314_6.cs 18 33
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath () {
    string envPath = Environment.GetEnvironmentVariable("JAVA_HOME");
    if (!string.IsNullOrEmpty(envPath)) return envPath;
    const string JREkeyStr = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
    using (var rk = Registry.LocalMachine.OpenSubKey(JREkeyStr))
    {
        string curVer = rk.GetValue("CurrentVersion").ToString();
        using (var JREkey = rk.OpenSubKey(curVer))
        {
            return JREkey.GetValue("JavaHome").ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
7
Gpt4D_Clone314_7.cs 1 17
Gpt4D_Clone314_7.cs 18 33
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath () {
    string javaPath = Environment.GetEnvironmentVariable("JAVA_HOME") ?? string.Empty;
    if (!string.IsNullOrEmpty(javaPath)) return javaPath;
    const string JREkey = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
    using (var rk = Registry.LocalMachine.OpenSubKey(JREkey))
    {
        string currentVersion = rk.GetValue("CurrentVersion").ToString();
        using (var key = rk.OpenSubKey(currentVersion))
        {
            return key.GetValue("JavaHome").ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
8
Gpt4D_Clone314_8.cs 1 17
Gpt4D_Clone314_8.cs 18 33
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

 
private string GetJavaInstallationPath () {
    string javaHome = Environment.GetEnvironmentVariable("JAVA_HOME");
    if (!string.IsNullOrWhiteSpace(javaHome)) return javaHome;
    const string JREkey = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
    using (var rk = Registry.LocalMachine.OpenSubKey(JREkey))
    {
        string currentVer = rk.GetValue("CurrentVersion").ToString();
        using (var JREkey = rk.OpenSubKey(currentVer))
        {
            return JREkey.GetValue("JavaHome").ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
9
Gpt4D_Clone314_9.cs 1 17
Gpt4D_Clone314_9.cs 18 38
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaPath()
{
    string path = Environment.GetEnvironmentVariable("JAVA_HOME");
    if (!string.IsNullOrEmpty(path))
    {
        return path;
    }
    using (RegistryKey javaKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\JavaSoft\\Java Runtime Environment\\"))
    {
        string currentVersion = javaKey.GetValue("CurrentVersion").ToString();
        using (RegistryKey openKey = javaKey.OpenSubKey(currentVersion))
        {
            return openKey.GetValue("JavaHome").ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
2
Gpt4D_Clone318_2.cs 1 16
Gpt4D_Clone318_2.cs 17 33
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    if (key.Equals(_code[_index]))
    {
        _index++;
        if (_index.Equals(_code.Length)) 
        {
            _index = 0;
            return true;
        }
    }
    else _index = 0;
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
3
Gpt4D_Clone318_3.cs 1 16
Gpt4D_Clone318_3.cs 17 29
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key.Equals(_code [_index])) {
        _index++;
        if (_index.Equals(_code.Length)) {
            _index = 0;
            return true;
        }
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
4
Gpt4D_Clone318_4.cs 1 16
Gpt4D_Clone318_4.cs 17 29
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    if (key == _code [_index]) {
        if (++_index == _code.Length) {
            _index = 0;
            return true;
        }       
    } else _index = 0;
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
8
Gpt4D_Clone318_8.cs 1 16
Gpt4D_Clone318_8.cs 17 28
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    if (key == _code [_index] && (++_index == _code.Length)) {
        _index = 0;
        return true;
    }
    _index = 0;
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
3
Gpt4D_Clone31_3.cs 1 14
Gpt4D_Clone31_3.cs 15 23
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    brush = brush == null || brush.Color != this.ForeColor ? new SolidBrush(this.ForeColor) : brush;
    var rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
    rec.Width = (int) (rec.Width * Value / (double)Maximum) - 4;
    rec.Height -= 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
1
Gpt4D_Clone324_1.cs 1 14
Gpt4D_Clone324_1.cs 15 24
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    while (!ReferenceEquals(t, null)) {
        if (t == baseType) return true;
        t = t.BaseType;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
2
Gpt4D_Clone324_2.cs 1 14
Gpt4D_Clone324_2.cs 15 26
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    while (t != null) {
        if (t == baseType) {
            return true;
        }
        t = t.BaseType;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
4
Gpt4D_Clone324_4.cs 1 14
Gpt4D_Clone324_4.cs 15 25
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    while (t != null) {
        if (t == baseType)
            return true;
        t = t.BaseType;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
0
Gpt4D_Clone328_0.cs 1 12
Gpt4D_Clone328_0.cs 13 23
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int i = 0;
    do {
        discountItem = discount[i];
        i++;
        if(i >= items.Length) break;
    } while(itemsbought > items[i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
1
Gpt4D_Clone328_1.cs 1 12
Gpt4D_Clone328_1.cs 13 21
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int i = 0;
    while(itemsbought > items[i]){
        discountItem = discount[i];
        i++;
        if(i >= items.Length) break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
0
Gpt4D_Clone334_0.cs 1 15
Gpt4D_Clone334_0.cs 16 31
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (File.Exists(file_path)) {
        int counter = 0;
        using (var reader = File.OpenText(file_path)) {
            string line;
            while ((line = reader.ReadLine()) != null) {
                counter++;
                Console.WriteLine($"{counter} {line}");
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
6
Gpt4D_Clone334_6.cs 1 15
Gpt4D_Clone334_6.cs 16 26
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        var lines = File.ReadAllLines(file_path);
        int index = 1;
        lines.ToList().ForEach(line => Console.WriteLine((index++) + " " + line));
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
0
Gpt4D_Clone33_0.cs 1 19
Gpt4D_Clone33_0.cs 20 41
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var task = Task.Run<Dictionary<long, uint>>(() =>
    {
        var dico = new Dictionary<long, uint>();
        for (long i = 0; i < 7500000; i++) dico.Add(i, (uint)i);
        return dico;
    });
    task.Wait();
    var data = new Test {Data = task.Result};
    Serializer.Serialize (File.Create ("data.dat"), data);
    data.Data.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
0
Gpt4D_Clone342_0.cs 1 13
Gpt4D_Clone342_0.cs 14 26
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e) {
    if (e.Index < 0)
        return;
    if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
        e = new DrawItemEventArgs (e.Graphics, e.Font, e.Bounds, e.Index, e.State ^ DrawItemState.Selected, e.ForeColor, Color.Yellow);
    e.DrawBackground ();
    e.Graphics.DrawString (listBox1.Items [e.Index].ToString (), e.Font, Brushes.Black, e.Bounds, StringFormat.GenericDefault);
    e.DrawFocusRectangle ();
}
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e)
{
    if (e.Index < 0)
        return;
    if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
        e = new DrawItemEventArgs (e.Graphics, e.Font, e.Bounds, e.Index, e.State, e.ForeColor, Color.Yellow);
    e.DrawBackground ();
    e.Graphics.DrawString (listBox1.Items [e.Index].ToString (), e.Font, Brushes.Black, e.Bounds);
    e.DrawFocusRectangle ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
1
Gpt4D_Clone377_1.cs 1 12
Gpt4D_Clone377_1.cs 13 25
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (suppressNotification)
        return;
    else
    {
        base.OnCollectionChanged(e);
        CollectionChanged?.Invoke(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
3
Gpt4D_Clone377_3.cs 1 12
Gpt4D_Clone377_3.cs 13 22
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (suppressNotification) return;
    base.OnCollectionChanged(e);
    CollectionChanged?.Invoke(this, e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
6
Gpt4D_Clone377_6.cs 1 12
Gpt4D_Clone377_6.cs 13 23
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (suppressNotification)
        return;
    base.OnCollectionChanged(e);
    CollectionChanged?.Invoke(this, e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
0
Gpt4D_Clone380_0.cs 1 28
Gpt4D_Clone380_0.cs 29 28
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #5
public override int Read() {
    int i = _source.Read();
    if (i == - 1)
        return -1;
    if (i == '\r' || isNewLine(i)) {
        i = '\n';
        if (_source.Peek() == '\n') _source.Read();
    }
    return i;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
1
Gpt4D_Clone380_1.cs 1 27
Gpt4D_Clone380_1.cs 28 27
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #7
public override int Read() {
    int i = _source.Read();
    if (i == - 1) return -1;
    if ((i == '\r' && _source.Peek() == '\n') || isNewLine(i)) {
        _source.Read();
        return '\n';
    }
    return i;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
4
Gpt4D_Clone380_4.cs 1 26
Gpt4D_Clone380_4.cs 27 26
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #4
public override int Read() {
    int i = _source.Read();
    if (i == - 1)
        return - 1;
    if (i == '\r' || isNewLine(i))
        return '\n';
    return i;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
5
Gpt4D_Clone380_5.cs 1 26
Gpt4D_Clone380_5.cs 27 26
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #2
public override int Read() {
    int i = _source.Read();
    if (i == - 1)
        return - 1;
    if (_source.Peek() == '\n')
        _source.Read();
    return i == '\r' ? i : (isNewLine(i) ? '\n' : i);
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
3
Gpt4D_Clone393_3.cs 1 31
Gpt4D_Clone393_3.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool IsEqual (object element) {
    if (element == null) return false;
    RuntimeType runtime = (RuntimeType) this.GetType ();
    RuntimeType secondRuntime = (RuntimeType) element.GetType ();
    if (secondRuntime != runtime) return false;
    object instance = this;
    if (ShouldCompareBits (this)) return QuickEqualCheck (instance, element);
    FieldInfo [] fieldSet = runtime.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int index = 0; index < fieldSet.Length; index++) {
        object firstObj = ((RtFieldInfo) fieldSet [index]).GetUnsafeValue (instance);
        object secondObj = ((RtFieldInfo) fieldSet [index]).GetUnsafeValue (element);
        if (firstObj == null && secondObj != null || ! firstObj.Equals (secondObj)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
6
Gpt4D_Clone393_6.cs 1 31
Gpt4D_Clone393_6.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object objectToCompare) {
    if (objectToCompare == null) return false;
    RuntimeType objType1 = (RuntimeType) base.GetType ();
    RuntimeType objType2 = (RuntimeType) objectToCompare.GetType ();
    if (objType2 != objType1) return false;
    object mainObject = this;
    if (IsBitComparisonPossible (this)) return ExpressEqualityCheck (mainObject, objectToCompare);
    FieldInfo [] fieldCollection = objType1.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fieldCollection.Length; i ++) {
        object firstObject = ((RtFieldInfo) fieldCollection [i]).UnsafeGetFieldValue (mainObject);
        object secondObject = ((RtFieldInfo) fieldCollection [i]).UnsafeGetFieldValue (objectToCompare);
        if (firstObject == null ? secondObject != null : ! firstObject.Equals (secondObject)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
7
Gpt4D_Clone393_7.cs 1 31
Gpt4D_Clone393_7.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object comparisonObject) {
    if (comparisonObject == null) return false;
    RuntimeType typeSelf = (RuntimeType) GetType ();
    RuntimeType typeOther = (RuntimeType) comparisonObject.GetType ();
    if (typeOther != typeSelf) return false;
    object a = this;
    if (BitComparisonAllowed (this)) return QuickEqualityCheck (a, comparisonObject);
    FieldInfo [] FieldsInfo = typeSelf.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int index = 0; index < FieldsInfo.Length; index++) {
        object objectOne = ((RtFieldInfo) FieldsInfo [index]).UnsafeAccessValue (a);
        object objectTwo = ((RtFieldInfo) FieldsInfo [index]).UnsafeAccessValue (comparisonObject);
        if (objectOne == null && objectTwo != null || ! objectOne.Equals (objectTwo)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
8
Gpt4D_Clone393_8.cs 1 31
Gpt4D_Clone393_8.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object obj) {
    if (obj == null) return false;
    RuntimeType selfType = (RuntimeType) this.GetType ();
    RuntimeType otherType = (RuntimeType) obj.GetType ();
    if (otherType != selfType) return false;
    object selfObj = this;
    if (CouldCompareBits (this)) return FastBitEqualityCheck (selfObj, obj);
    FieldInfo [] allFields = selfType.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < allFields.Length; i++) {
        object selfField = ((RtFieldInfo) allFields [i]).UnsafeAccessValue (selfObj);
        object otherField = ((RtFieldInfo) allFields [i]).UnsafeAccessValue (obj);
        if (selfField == null ? otherField != null : ! selfField.Equals (otherField)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
398
1
Gpt4D_Clone398_1.cs 1 29
Gpt4D_Clone398_1.cs 30 56
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    List < int > lst = new List < int > (NUM_ITEMS);
    IList < int > ilst = lst;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        lst.Add (i);
    }
    int count = 0;
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    IList < int > lst = new SortedList < int, int >().Keys;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        ((SortedList<int, int>) lst).Add(i, i);
    }
    int count = 0;
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Restart ();
    ICollection < int > ilst = lst;
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
398
2
Gpt4D_Clone398_2.cs 1 29
Gpt4D_Clone398_2.cs 30 56
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    List < int > lst = new List < int > (NUM_ITEMS);
    IList < int > ilst = lst;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        lst.Add (i);
    }
    int count = 0;
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    IList < int > lst = Array.CreateInstance(typeof(int), NUM_ITEMS) as IList<int>;
    ICollection < int > ilst = lst;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        lst[i] = i;
    }
    int count = 0;
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Restart ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
398
3
Gpt4D_Clone398_3.cs 1 29
Gpt4D_Clone398_3.cs 30 55
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    List < int > lst = new List < int > (NUM_ITEMS);
    IList < int > ilst = lst;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        lst.Add (i);
    }
    int count = 0;
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    IList < int > lst = Enumerable.Range(0, NUM_ITEMS).ToList();
    
    int count = 0;
    sw.Start();
    for(int i = 0; i < NUM_LOOPS2; i++){
        count = lst.Count;
    }
    sw.Stop();
    Console.WriteLine("Took " + sw.ElapsedMilliseconds + "ms - 1.");
    sw.Reset();
    sw.Start();
    for(int i = 0; i < NUM_LOOPS2; i++){
        count = ((List<int>)lst).Count;
    }
    sw.Stop();
    Console.WriteLine("Took " + sw.ElapsedMilliseconds + "ms - 2.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
2
Gpt4D_Clone413_2.cs 1 21
Gpt4D_Clone413_2.cs 22 45
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
    string filePathstr = string.Join(" ", args);
    using(Application ap = new Application())
    {
        try
        {
            var document = ap.Documents.Open(filePathstr);
            foreach (Field field in document.Fields)
            {
                field.Update();
            }
            document.Save();
            document.Close();
        }
        catch (NullReferenceException)
        {
            MessageBox.Show("A valid file was not selected.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
4
Gpt4D_Clone413_4.cs 1 22
Gpt4D_Clone413_4.cs 23 44
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
 
----------------------------------------

static void Main(string[] args)
{
	    string filePathstr = string.Join(" ", args);
	    try
	    {
		using (var ap = new Application())
		{
		    var document = ap.Documents.Open(filePathstr);
		    foreach (Field field in document.Fields)
		    {
		        field.Update();
		    }
		    document.Save();
		    document.Close();
		}
	    }
	    catch (NullReferenceException)
	    {
		System.Windows.Forms.MessageBox.Show("A valid file was not selected.");
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
1
Gpt4D_Clone424_1.cs 1 27
Gpt4D_Clone424_1.cs 28 57
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    bool isAmp = value == '&';
    bool isSemiCol = value == ';';
    bool isNewLine = value == '\n';
    if (isAmp) {
        _bufferState = _bufferState == 0 ? _bufferState+1 : 0;
        if (_bufferState > 0) return;
    } 
    if (isSemiCol) {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } 
    if (isNewLine) {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
2
Gpt4D_Clone424_2.cs 1 27
Gpt4D_Clone424_2.cs 28 57
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write(char value)
{
    if(value=='&')
    {
        _bufferState++;
        if(_bufferState==2) _bufferState=0;
        if(_bufferState==1) return;
    }
    else if(value==';')
    {
        if(_bufferState>1) 
        {
            _bufferState++;
            if(_bufferState==3) _bufferState =0;
        }
        else
        {
            this.Write('&');
            this.Write(AmpToken);
        } 
    }
    else if(value=='\n')
    {
        base.Write("&#10;");
        return;
    }
    base.Write(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
3
Gpt4D_Clone424_3.cs 1 27
Gpt4D_Clone424_3.cs 28 53
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if(value == '&') {
        _bufferState = _bufferState == 0 ? (_bufferState + 1) : 0;
        if(_bufferState > 0) return;
    }
    
    if(value == ';') {
        if(_bufferState > 1) {
            _bufferState++;
            return;
        } else {
            this.Write('&');
            this.Write(AmpToken);
            _bufferState = 0;
        }
    } 
    
    if(value == '\n') {
        base.Write("&#10;");
        return;
    }
    
    base.Write(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
5
Gpt4D_Clone425_5.cs 1 30
Gpt4D_Clone425_5.cs 31 48
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
private void HandleAmp() { /*...*/ }
private void HandleSemiColon() { /*...*/ }
private void HandleLineBreak() { /*...*/ }
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        _bufferState ^= _bufferState; // toggles the state
        return;
    }
    else if (value == ';') {
        Write ('&');
        Write (AmpToken);
        return;
    }
    else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
0
Gpt4D_Clone435_0.cs 1 24
Gpt4D_Clone435_0.cs 25 38
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    string selection = Console.ReadLine();
    FunctionExecute functionExecute = new FunctionExecute(55000, 5500);
    switch(selection)
    {
        case "1": Test(functionExecute.ExecuteListSum); break;
        case "2": Test(functionExecute.ExecuteArraySum); break;
        default: Test(functionExecute.ExecuteBothSum); break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
1
Gpt4D_Clone435_1.cs 1 24
Gpt4D_Clone435_1.cs 25 38
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var inputOption = Console.ReadLine();
    var arrayLoopObj = new ArrayLoop(40000, 4000);
    switch(inputOption)
    {
        case "1": Execute(arrayLoopObj.CalculateListSum); break;
        case "2": Execute(arrayLoopObj.CalculateArraySum); break;
        default: Execute(arrayLoopObj.CalculateListAndArraySum); break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
2
Gpt4D_Clone435_2.cs 1 24
Gpt4D_Clone435_2.cs 25 38
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var userChoice = Console.ReadLine();
    var calculator = new Calculator(50000, 5000);
    switch(userChoice)
    {
        case "1": TestExec(calculator.ComputeListSum); break;
        case "2": TestExec(calculator.ComputeArraySum); break;
        default: TestExec(calculator.ComputeBothSum); break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
3
Gpt4D_Clone435_3.cs 1 24
Gpt4D_Clone435_3.cs 25 38
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    string input = Console.ReadLine();
    LoopExec loopExec = new LoopExec(25000, 2500);
    switch(input)
    {
        case "1": RunMethod(loopExec.RunListSum); break;
        case "2": RunMethod(loopExec.RunArraySum); break;
        default: RunMethod(loopExec.RunBothSum); break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
443
0
Gpt4D_Clone443_0.cs 1 14
Gpt4D_Clone443_0.cs 15 26
----------------------------------------

private static void Main (string [] args) {
    Thread t = new Thread (ReaderFunc);
    t.Start ();
    int index = 0;
    while (! StopWriting.WaitOne (Timeout.Infinite)) {
        ++ index;
        Console.WriteLine (index.ToString ());
    }
    t.Join ();
}
----------------------------------------

private static void Main (string [] args) {
    Thread t = new Thread (ReaderFunc);
    Thread.Sleep(1000);
    t.Start();
    int index = 1;
    while (! StopWriting.WaitOne (0)) {
        index++;
        Console.WriteLine (index.ToString ());
    }
    t.Join ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
445
0
Gpt4D_Clone445_0.cs 1 18
Gpt4D_Clone445_0.cs 19 36
----------------------------------------

private void Dispose (bool disposing) {
    if (! disposedValue) {
        if (disposing) {
        }
        if (m_freeStack != null) {
            SharpDX.Direct3D11.Texture2D texture;
            while (m_freeStack.TryPop (out texture)) {
                texture.Dispose ();
            }
            m_freeStack = null;
        }
        disposedValue = true;
    }
}
----------------------------------------

private void Dispose(bool disposing)
{
    if (!disposedValue)
    {
        if (disposing)
        {
            if (m_freeStack != null)
            {
                while (m_freeStack.Count > 0)
                    m_freeStack.Pop().Dispose();
            }
        }
        m_freeStack = null;
        disposedValue = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
45
0
Gpt4D_Clone45_0.cs 1 16
Gpt4D_Clone45_0.cs 17 25
----------------------------------------

private void textBox1_TextChanged (object sender, EventArgs e) {
    Point caretLocalLoc = textBox1.GetPositionFromCharIndex (textBox1.Text.Length - 1);
    Point caretLoc = new Point (caretLocalLoc.X + InitialTextBoxLoc.X, caretLocalLoc.Y + InitialTextBoxLoc.Y);
    Point scrollLoc = flowLayoutPanel1.AutoScrollPosition;
    if (caretLoc.X >= flowLayoutPanel1.Size.Width - 10) {
        scrollLoc.X = caretLoc.X;
    }
    if (caretLoc.Y >= flowLayoutPanel1.Size.Height - 10) {
        scrollLoc.Y = caretLoc.Y;
    }
    flowLayoutPanel1.AutoScrollPosition = scrollLoc;
}
----------------------------------------

private void textBox1_TextChanged(object sender, EventArgs e) {
    Point caretLoc = textBox1.GetPositionFromCharIndex(textBox1.Text.Length - 1);
    caretLoc.Offset(InitialTextBoxLoc);
    Point scrollLoc = flowLayoutPanel1.AutoScrollPosition;
    if (caretLoc.X >= flowLayoutPanel1.ClientSize.Width - 10) scrollLoc.X = caretLoc.X;
    if (caretLoc.Y >= flowLayoutPanel1.ClientSize.Height - 10) scrollLoc.Y = caretLoc.Y;
    flowLayoutPanel1.AutoScrollPosition = scrollLoc;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
0
Gpt4D_Clone468_0.cs 1 16
Gpt4D_Clone468_0.cs 17 36
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(GifBitmapEncoder encoder, ImageSource imageSource)
{
    byte[] bytes;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null)
    {
        encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
        using (var stream = new MemoryStream())
        {
            encoder.Save(stream);
            bytes = stream.ToArray();
        }
    }
    else
    {
        bytes = null;
    }
    return bytes;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
1
Gpt4D_Clone468_1.cs 1 16
Gpt4D_Clone468_1.cs 17 36
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(JpegBitmapEncoder encoder, ImageSource imageSource)
{
    byte[] bytes;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null)
    {
        encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
        using (var stream = new MemoryStream())
        {
            encoder.Save(stream);
            bytes = stream.ToArray();
        }
    }
    else
    {
        bytes = null;
    }
    return bytes;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
2
Gpt4D_Clone468_2.cs 1 16
Gpt4D_Clone468_2.cs 17 29
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(BitmapEncoder encoder, ImageSource imageSource)
{
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource == null) return null;
    encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
    using (var stream = new MemoryStream())
    {
        encoder.Save(stream);
        return stream.ToArray();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
3
Gpt4D_Clone468_3.cs 1 16
Gpt4D_Clone468_3.cs 17 28
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(BitmapEncoder encoder, ImageSource imageSource)
{
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource == null) return null;
    encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
    using (var stream = new MemoryStream())
    {
        encoder.Save(stream);
        return stream.ToArray();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
4
Gpt4D_Clone468_4.cs 1 16
Gpt4D_Clone468_4.cs 17 31
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(BitmapEncoder encoder, ImageSource imageSource)
{
    byte[] bytes = new byte[0];
    if (imageSource is BitmapSource bitmapSource)
    {
        encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
        using (var stream = new MemoryStream())
        {
            encoder.Save(stream);
            bytes = stream.ToArray();
        }
    }
    return bytes;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
5
Gpt4D_Clone468_5.cs 1 16
Gpt4D_Clone468_5.cs 17 30
----------------------------------------

public static byte [] ConvertBitmapSourceToByteArray (BitmapEncoder encoder, ImageSource imageSource) {
    byte [] bytes = null;
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource != null) {
        encoder.Frames.Add (BitmapFrame.Create (bitmapSource));
        using (var stream = new MemoryStream ())
        {
            encoder.Save (stream);
            bytes = stream.ToArray ();
        }}
    return bytes;
}
----------------------------------------

public static byte[] ConvertBitmapSourceToByteArray(BitmapEncoder encoder, ImageSource imageSource)
{
    var bitmapSource = imageSource as BitmapSource;
    if (bitmapSource is null) return null;
    
    encoder.Frames.Add(BitmapFrame.Create(bitmapSource));
    using (var stream = new MemoryStream())
    {
        encoder.Save(stream);
        return stream.ToArray();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
0
Gpt4D_Clone472_0.cs 1 14
Gpt4D_Clone472_0.cs 15 25
----------------------------------------

private static void updateBandwidthInterval (double [] xval, int i, int [] bandwidthInterval) {
    int left = bandwidthInterval [0];
    int right = bandwidthInterval [1];
    int nextRight = nextNonzero (weights, right);
    if (nextRight < xval.Length && xval [nextRight] - xval [i] < xval [i] - xval [left]) {
        int nextLeft = nextNonzero (weights, bandwidthInterval [0]);
        bandwidthInterval [0] = nextLeft;
        bandwidthInterval [1] = nextRight;
    }
}
----------------------------------------

private static void updateBandwidthInterval (double [] xval, int i, int [] bandwidthInterval) {
    int left = bandwidthInterval [0];
    int right = bandwidthInterval [1];
    int nextRight = nextNonzero (weights, right);
    left = xval [i] - xval [left] < xval [nextRight] - xval [i] ? nextNonzero (weights, bandwidthInterval [0]) : left;
    right = xval [i] - xval [left] < xval [nextRight] - xval [i] ? nextRight : right;
    bandwidthInterval[0] = left;
    bandwidthInterval[1] = right; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
0
Gpt4D_Clone473_0.cs 1 13
Gpt4D_Clone473_0.cs 14 25
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlWriter.Create (ms, new XmlWriterSettings {OmitXmlDeclaration = true}))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteCData (Encoding.UTF8.GetString (ms.ToArray ()));
        }}}
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlDictionaryWriter.CreateTextWriter(ms))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteNode(XmlReader.Create(ms), false); 
        }}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
1
Gpt4D_Clone473_1.cs 1 13
Gpt4D_Clone473_1.cs 14 25
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlWriter.Create (ms, new XmlWriterSettings {OmitXmlDeclaration = true}))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteCData (Encoding.UTF8.GetString (ms.ToArray ()));
        }}}
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlDictionaryWriter.CreateBinaryWriter(ms))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteNode(innerWriter, false);
        }}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
2
Gpt4D_Clone473_2.cs 1 13
Gpt4D_Clone473_2.cs 14 25
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlWriter.Create (ms, new XmlWriterSettings {OmitXmlDeclaration = true}))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteCData (Encoding.UTF8.GetString (ms.ToArray ()));
        }}}
----------------------------------------

public void WriteXml (XmlWriter writer) {
    using (MemoryStream ms = new MemoryStream ())
    {
        using (XmlWriter innerWriter = XmlDictionaryWriter.CreateTextWriter(ms))
        {
            shipmentInfoSerializer.Serialize (innerWriter, this.Shipment);
            innerWriter.Flush ();
            writer.WriteNode(innerWriter, true);
        }}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
3
Gpt4D_Clone475_3.cs 1 13
Gpt4D_Clone475_3.cs 14 27
----------------------------------------

public void Add (Type type) {
    if (! type.IsVisible) {
        return;
    }
    var members = type.GetMembers (BindingFlags.Instance | BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.Public);
    foreach (var member in members) {
        Add (type, member);
    }
}
----------------------------------------

public void Add(Type type) {
    if (!type.IsVisible) {
        return;
    }
    var members = type.GetMembers(BindingFlags.Instance | BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.Public);
    for (int i = 0; i < members.Length; i++) {
        Add(type, members[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
481
0
Gpt4D_Clone481_0.cs 1 33
Gpt4D_Clone481_0.cs 34 53
----------------------------------------

private static void note () {
    int [] i = new int [1];
    do
        {
            Console.WriteLine ("Please enter test result");
            bool result = int.TryParse (Console.ReadLine (), out i [0]);
            if (! result) {
                Console.WriteLine ("Please enter a number");
                continue;
            }
            if (i [0] == 999) {
                Console.WriteLine ("You entered 999 to stop");
                break;
            } else if (i [0] < 0 || i [0] > 100) {
                Console.WriteLine ("Enter a value between 0 and 100");
            } else if (i [0] >= 90) {
                Console.WriteLine ("note is A");
            } else if (i [0] >= 80) {
                Console.WriteLine ("note is B");
            } else if (i [0] >= 70) {
                Console.WriteLine ("note is C");
            } else if (i [0] >= 60) {
                Console.WriteLine ("note is D");
            } else if (i [0] < 60) {
                Console.WriteLine ("Failure");
            }
            Console.WriteLine ("Your result is:" + i [0]);
        } while (true);
}
----------------------------------------

private static void note()
{
    int s;
    do
    {
        Console.Write("Input test score: ");
        bool isInt = int.TryParse(Console.ReadLine(), out s);
        if (!isInt) { Console.WriteLine("Invalid input! Enter integral value."); continue; }
        if (s == 999) { Console.WriteLine("You have entered '999' to quit."); break; }
        if (s < 0 || s > 100) { Console.WriteLine("Invalid range! Input value within 0-100."); }
        else if (s >= 90) { Console.WriteLine("Grade A attained."); }
        else if (s >= 80) { Console.WriteLine("Grade B attained."); }
        else if (s >= 70) { Console.WriteLine("Grade C attained."); }
        else if (s >= 60) { Console.WriteLine("Grade D attained."); }
        else { Console.WriteLine("Unsuccessful attempt."); }
        Console.WriteLine($"Your score is: {s}");
    } while (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
481
1
Gpt4D_Clone481_1.cs 1 33
Gpt4D_Clone481_1.cs 34 84
----------------------------------------

private static void note () {
    int [] i = new int [1];
    do
        {
            Console.WriteLine ("Please enter test result");
            bool result = int.TryParse (Console.ReadLine (), out i [0]);
            if (! result) {
                Console.WriteLine ("Please enter a number");
                continue;
            }
            if (i [0] == 999) {
                Console.WriteLine ("You entered 999 to stop");
                break;
            } else if (i [0] < 0 || i [0] > 100) {
                Console.WriteLine ("Enter a value between 0 and 100");
            } else if (i [0] >= 90) {
                Console.WriteLine ("note is A");
            } else if (i [0] >= 80) {
                Console.WriteLine ("note is B");
            } else if (i [0] >= 70) {
                Console.WriteLine ("note is C");
            } else if (i [0] >= 60) {
                Console.WriteLine ("note is D");
            } else if (i [0] < 60) {
                Console.WriteLine ("Failure");
            }
            Console.WriteLine ("Your result is:" + i [0]);
        } while (true);
}
----------------------------------------

private static void note() 
{
    int m;
    do
        {
            Console.WriteLine("Enter a test score");
            bool validity = int.TryParse(Console.ReadLine(), out m);
            if (!validity)
            {
                Console.WriteLine("Enter a numeric value");
                continue;
            }
            if (m == 999)
            {
                Console.WriteLine("You have pressed 999 to exit");
                break;
            }
            else if (m < 0 || m > 100)
            {
                Console.WriteLine("Enter a number between 0 and 100");
            }
            else if (m >= 90)
            {
                Console.WriteLine("Your note is A");
            }
            else if (m >= 80)
            {
                Console.WriteLine("Your note is B");
            }
            else if (m >= 70)
            {
                Console.WriteLine("Your note is C");
            }
            else if (m >= 60)
            {
                Console.WriteLine("Your note is D");
            }
            else if (m < 60)
            {
                Console.WriteLine("Sorry, you have failed");
            }
            Console.WriteLine($"Your score is: {m}");
            
        } while (true);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
484
1
Gpt4D_Clone484_1.cs 1 18
Gpt4D_Clone484_1.cs 19 29
----------------------------------------

[WebMethod (EnableSession = true)] [ScriptMethod (ResponseFormat = ResponseFormat.Json)] public dynamic update () {
    if (Session ["user"] == null) {
        Session.Add ("user", new User ());
    }
    User user = (User) Session ["user"];
    user.responseModel = new ResponseModel ();
    if (user.updateListeners.Count > 0) {
        foreach (var updateMethod in user.updateListeners) {
            updateMethod.run ();
        }
        return JSON.Serialize (user.responseModel);
    }
    return null;
}
----------------------------------------

[WebMethod (EnableSession = true)] [ScriptMethod (ResponseFormat = ResponseFormat.Json)] public dynamic update () {
    if (!Session.Keys.Contains("user")) Session.Add("user", new User());
    var user = Session["user"] as User;
    user.responseModel = new ResponseModel();
    if(user.updateListeners.Any()) {
        user.updateListeners.ForEach(trigger => trigger.run());
        return JsonConvert.SerializeObject(user.responseModel);
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
484
6
Gpt4D_Clone484_6.cs 1 18
Gpt4D_Clone484_6.cs 19 26
----------------------------------------

[WebMethod (EnableSession = true)] [ScriptMethod (ResponseFormat = ResponseFormat.Json)] public dynamic update () {
    if (Session ["user"] == null) {
        Session.Add ("user", new User ());
    }
    User user = (User) Session ["user"];
    user.responseModel = new ResponseModel ();
    if (user.updateListeners.Count > 0) {
        foreach (var updateMethod in user.updateListeners) {
            updateMethod.run ();
        }
        return JSON.Serialize (user.responseModel);
    }
    return null;
}
----------------------------------------

[WebMethod (EnableSession = true)] [ScriptMethod (ResponseFormat = ResponseFormat.Json)] public dynamic update () {
    if (Session["user"] == null) Session.Add("user", new User());
    var user = (User)Session["user"];
    user.updateListeners.ForEach(trigger => trigger.run());
    user.responseModel = new ResponseModel();
    return JsonConvert.SerializeObject(user.responseModel);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
0
Gpt4D_Clone48_0.cs 1 17
Gpt4D_Clone48_0.cs 18 32
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        if (timecountdown <= 0.0f) {
            timecountdown = 8.0f;
            teleport = 1;
            triggerActive = false;
        }
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        if (timecountdown > 0.0f) return;
        triggerActive = false;
        teleport = 1;
        timecountdown = 8.0f;
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
1
Gpt4D_Clone48_1.cs 1 17
Gpt4D_Clone48_1.cs 18 33
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        if (timecountdown <= 0.0f) {
            timecountdown = 8.0f;
            teleport = 1;
            triggerActive = false;
        }
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown = Mathf.Max(0f, timecountdown - Time.deltaTime);
        if (timecountdown == 0f) {
            timecountdown = 8f;
            teleport = 1;
            triggerActive = false;
        }
    } else {
        timecountdown = 8f;
        teleport = 0;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
2
Gpt4D_Clone48_2.cs 1 17
Gpt4D_Clone48_2.cs 18 33
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        if (timecountdown <= 0.0f) {
            timecountdown = 8.0f;
            teleport = 1;
            triggerActive = false;
        }
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

void Update () {
    if (!triggerActive) {
            teleport = 0;
            timecountdown = 8.0f;
    } else {
        timecountdown -= Time.deltaTime;
        if (timecountdown <= 0.0f) {
            timecountdown = 8.0f;
            teleport = 1;
            triggerActive = false;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
3
Gpt4D_Clone48_3.cs 1 17
Gpt4D_Clone48_3.cs 18 31
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        if (timecountdown <= 0.0f) {
            timecountdown = 8.0f;
            teleport = 1;
            triggerActive = false;
        }
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

void Update () {
    if (triggerActive) {
        timecountdown -= Time.deltaTime;
        teleport = (timecountdown <= 0.0f) ? 1 : teleport;
        timecountdown = (timecountdown <= 0.0f) ? 8.0f : timecountdown;
        triggerActive = (timecountdown <= 0.0f) ? false : triggerActive;
    } else {
        teleport = 0;
        timecountdown = 8.0f;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
504
0
Gpt4D_Clone504_0.cs 1 18
Gpt4D_Clone504_0.cs 19 38
----------------------------------------

static void Main (string [] args) {
    object [] values = new object [Size];
    for (int i = 0; i < Size - 2; i += 3) {
        values [i] = null;
        values [i + 1] = "";
        values [i + 2] = 1;
    }
    FindSumWithIsThenCast (values);
    FindSumWithAsThenHasThenValue (values);
    FindSumWithAsThenHasThenCast (values);
    FindSumWithManualAs (values);
    FindSumWithAsThenManualHasThenValue (values);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var values = new object[Size];
    Parallel.For(0, Size / 3, i => 
    {
        values[i * 3 + 0] = null;
        values[i * 3 + 1] = "";
        values[i * 3 + 2] = 1;
    });
    FindSumWithIsThenCast(values);
    FindSumWithAsThenHasThenValue(values);
    FindSumWithAsThenHasThenCast(values);
    FindSumWithManualAs(values);
    FindSumWithAsThenManualHasThenValue(values);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
504
1
Gpt4D_Clone504_1.cs 1 18
Gpt4D_Clone504_1.cs 19 39
----------------------------------------

static void Main (string [] args) {
    object [] values = new object [Size];
    for (int i = 0; i < Size - 2; i += 3) {
        values [i] = null;
        values [i + 1] = "";
        values [i + 2] = 1;
    }
    FindSumWithIsThenCast (values);
    FindSumWithAsThenHasThenValue (values);
    FindSumWithAsThenHasThenCast (values);
    FindSumWithManualAs (values);
    FindSumWithAsThenManualHasThenValue (values);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    object[] values = new object[Size];
    int index = 0;
    foreach (var _ in Enumerable.Range(0, Size / 3))
    {
        values[index++] = null;
        values[index++] = "";
        values[index++] = 1;
    }
    FindSumWithIsThenCast(values);
    FindSumWithAsThenHasThenValue(values);
    FindSumWithAsThenHasThenCast(values);
    FindSumWithManualAs(values);
    FindSumWithAsThenManualHasThenValue(values);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
504
2
Gpt4D_Clone504_2.cs 1 18
Gpt4D_Clone504_2.cs 19 38
----------------------------------------

static void Main (string [] args) {
    object [] values = new object [Size];
    for (int i = 0; i < Size - 2; i += 3) {
        values [i] = null;
        values [i + 1] = "";
        values [i + 2] = 1;
    }
    FindSumWithIsThenCast (values);
    FindSumWithAsThenHasThenValue (values);
    FindSumWithAsThenHasThenCast (values);
    FindSumWithManualAs (values);
    FindSumWithAsThenManualHasThenValue (values);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args) 
{
    object[] values = new object[Size];
    int i = 0;
    while(i < Size - 2)
    {
        values[i++] = null;
        values[i++] = "";
        values[i++] = 1;
    }
    FindSumWithIsThenCast(values);
    FindSumWithAsThenHasThenValue(values);
    FindSumWithAsThenHasThenCast(values);
    FindSumWithManualAs(values);
    FindSumWithAsThenManualHasThenValue(values);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
504
4
Gpt4D_Clone504_4.cs 1 18
Gpt4D_Clone504_4.cs 19 37
----------------------------------------

static void Main (string [] args) {
    object [] values = new object [Size];
    for (int i = 0; i < Size - 2; i += 3) {
        values [i] = null;
        values [i + 1] = "";
        values [i + 2] = 1;
    }
    FindSumWithIsThenCast (values);
    FindSumWithAsThenHasThenValue (values);
    FindSumWithAsThenHasThenCast (values);
    FindSumWithManualAs (values);
    FindSumWithAsThenManualHasThenValue (values);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var list = new List<object>();
    for (int i = 0; i < Size - 2; i+=3) 
    {
        list.AddRange(new object[] {null, "", 1});
    }
    object[] values = list.ToArray();
    FindSumWithIsThenCast(values);
    FindSumWithAsThenHasThenValue(values);
    FindSumWithAsThenHasThenCast(values);
    FindSumWithManualAs(values);
    FindSumWithAsThenManualHasThenValue(values);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
504
5
Gpt4D_Clone504_5.cs 1 18
Gpt4D_Clone504_5.cs 19 33
----------------------------------------

static void Main (string [] args) {
    object [] values = new object [Size];
    for (int i = 0; i < Size - 2; i += 3) {
        values [i] = null;
        values [i + 1] = "";
        values [i + 2] = 1;
    }
    FindSumWithIsThenCast (values);
    FindSumWithAsThenHasThenValue (values);
    FindSumWithAsThenHasThenCast (values);
    FindSumWithManualAs (values);
    FindSumWithAsThenManualHasThenValue (values);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    object[] values = Enumerable.Range(0,Size)
        .Select(i => i % 3 == 0 ? (object)null : i % 3 == 1 ? "" : (object)1).ToArray();
    FindSumWithIsThenCast(values);
    FindSumWithAsThenHasThenValue(values);
    FindSumWithAsThenHasThenCast(values);
    FindSumWithManualAs(values);
    FindSumWithAsThenManualHasThenValue(values);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
1
Gpt4D_Clone517_1.cs 1 13
Gpt4D_Clone517_1.cs 14 26
----------------------------------------

[Route ("Login")] public HttpResponseMessage GetLogin () {
    string scope = HttpUtility.UrlEncode ("Space Seperated list of scopes");
    string redirectUri = HttpUtility.UrlEncode ("http://YourWebsiteURL/api/Account/OAuthCallback");
    string accessType = "Either online or offline";
    string requestUri = string.Format ("https://accounts.google.com/o/oauth2/auth?response_type=code&client_id={0}&redirect_uri={1}&scope={2}&access_type={3}&approval_prompt=auto&include_granted_scopes=true", _clientId, redirectUri, scope, accessType);
    HttpResponseMessage response = Request.CreateResponse (HttpStatusCode.MovedPermanently);
    response.Headers.Location = new Uri (requestUri);
    return response;
}
----------------------------------------

[HttpPost("Login")]
public HttpResponseMessage GetLogin()
{
    string scope = HttpUtility.UrlEncode("Space Seperated list of scopes");
    string redirectUri = HttpUtility.UrlEncode("http://YourWebsiteURL/api/Account/OAuthCallback");
    string requestUri = string.Format("https://accounts.google.com/o/oauth2/auth?response_type=code&client_id={0}&redirect_uri={1}&scope={2}&access_type=online&approval_prompt=auto&include_granted_scopes=true", _clientId, redirectUri, scope);
    HttpResponseMessage response = new HttpResponseMessage(HttpStatusCode.MovedPermanently);
    response.Headers.Location = new Uri(requestUri);
    return response;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
523
1
Gpt4D_Clone523_1.cs 1 22
Gpt4D_Clone523_1.cs 23 39
----------------------------------------

public bool dcpl_radar () {
    if (radar == null)
        return false;
    else {
        if (radar != null) {
            if (radar.InvokeRequired)
                radar.BeginInvoke (new MethodInvoker (delegate () {
                    radar.Visible = false;
                    radar = null;
                }));
            else {
                this.radar.Visible = false;
                radar = null;
            }
        }
        return true;
    }
}
----------------------------------------

public bool dcpl_radar() {
    if (radar == null)
        return false;
    if (radar.InvokeRequired)
        radar.Invoke((MethodInvoker)(() => {
            radar.Visible = false;
            radar = null;
        }));
    else {
        radar.Visible = false;
        radar = null;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
523
3
Gpt4D_Clone523_3.cs 1 22
Gpt4D_Clone523_3.cs 23 37
----------------------------------------

public bool dcpl_radar () {
    if (radar == null)
        return false;
    else {
        if (radar != null) {
            if (radar.InvokeRequired)
                radar.BeginInvoke (new MethodInvoker (delegate () {
                    radar.Visible = false;
                    radar = null;
                }));
            else {
                this.radar.Visible = false;
                radar = null;
            }
        }
        return true;
    }
}
----------------------------------------

public bool dcpl_radar () {
    if (radar == null)
        return false;
    if (radar.InvokeRequired) {
        radar.BeginInvoke (new Action (() => {
            radar.Visible = false;
            radar = null;
        }));
    } else {
        radar.Visible = false;
        radar = null;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
1
Gpt4D_Clone544_1.cs 1 21
Gpt4D_Clone544_1.cs 22 45
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout);
        count++;
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout);
        count++;
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
2
Gpt4D_Clone544_2.cs 1 21
Gpt4D_Clone544_2.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 1;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * count++);
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * count++);
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
3
Gpt4D_Clone544_3.cs 1 21
Gpt4D_Clone544_3.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * (count++ % 10 + 1));
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * (count++ % 10 + 1));
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
4
Gpt4D_Clone544_4.cs 1 21
Gpt4D_Clone544_4.cs 22 41
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(1 << count++);
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(1 << count++);
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
5
Gpt4D_Clone544_5.cs 1 21
Gpt4D_Clone544_5.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * (count++ % 10));
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * (count++ % 10));
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
6
Gpt4D_Clone544_6.cs 1 21
Gpt4D_Clone544_6.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * (1 << count++));
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * (1 << count++));
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
7
Gpt4D_Clone544_7.cs 1 21
Gpt4D_Clone544_7.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * count++);
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * count++);
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
8
Gpt4D_Clone544_8.cs 1 21
Gpt4D_Clone544_8.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout * ++count);
        if (count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout * ++count);
        if (count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
544
9
Gpt4D_Clone544_9.cs 1 21
Gpt4D_Clone544_9.cs 22 42
----------------------------------------

public Message WrapB (int b, int millisecondsTimeout) {
    int count = 0;
    while (Interlocked.CompareExchange (ref pendingB, b, EMPTY) != EMPTY) {
        Thread.SpinWait ((4 << count ++));
        if (count > 10) {
            return new Message (null, b);
        }
    }
    while (Interlocked.CompareExchange (ref pendingB, EMPTY, EMPTY) == b) {
        Thread.SpinWait ((4 << count ++));
        if (count > 20) {
            int payload = Interlocked.CompareExchange (ref pendingB, EMPTY, b);
            return payload == b ? new Message (null, b) : null;
        }
    }
    return null;
}
----------------------------------------

public Message WrapB(int b, int millisecondsTimeout)
{
    int count = 0;
    while (Interlocked.CompareExchange(ref pendingB, b, EMPTY) != EMPTY)
    {
        Thread.Sleep(millisecondsTimeout);
        if (++count > 10) return new Message(null, b);
    }
    while (Interlocked.CompareExchange(ref pendingB, EMPTY, EMPTY) == b)
    {
        Thread.Sleep(millisecondsTimeout);
        if (++count > 20)
        {
            int payload = Interlocked.CompareExchange(ref pendingB, EMPTY, b);
            return payload == b ? new Message(null, b) : null;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
0
Gpt4D_Clone550_0.cs 1 41
Gpt4D_Clone550_0.cs 42 41
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
 public static void Main(String[] args)
{
	    var connStr = "some connection string";
	    var query = "some query; some other query;";
	    
	    using(var conn = new SqlConnection(connStr))
	    using(var cmd = new SqlCommand(query, conn))
	    {
		conn.Open();
		
		using(var reader = cmd.ExecuteReader())
		{
		    while(reader.Read())
		    {}
		    
		    if(reader.HasRows)
		    {
		        while(reader.Read())
		        {}
		    }
		}
	    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
1
Gpt4D_Clone550_1.cs 1 26
Gpt4D_Clone550_1.cs 27 42
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
 public static void Main(string[] args)
{
	    using(SqlConnection sqlConn = new SqlConnection ("some connection string"))
	    {
		using(SqlCommand comm = new SqlCommand ("some query; some other query;", sqlConn))
		{
		    sqlConn.Open();
		    SqlDataReader sqlReader = comm.ExecuteReader();
----------------------------------------

		    while(sqlReader.Read())
		    {}
		    
		    if(sqlReader.NextResult())
		    {
		        while(sqlReader.Read())
		        {}
		    }
		    
		    sqlReader.Close();
		}
		
		sqlConn.Close();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
5
Gpt4D_Clone550_5.cs 1 18
Gpt4D_Clone550_5.cs 19 40
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
----------------------------------------

 public static void Main(String[] args)
{
	    using(SqlConnection sqlConn = new SqlConnection("some connection string"))
	    {
		sqlConn.Open();
		string query = "some query; some other query;";
		SqlCommand comm = new SqlCommand(query, conn);
		SqlDataReader sqlReader = comm.ExecuteReader();
		
		while(sqlReader.Read())
		{
		}
		
		if(sqlReader.HasRows)
		{
		    while(sqlReader.Read())
		    {
		    }
		}
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
6
Gpt4D_Clone550_6.cs 1 37
Gpt4D_Clone550_6.cs 38 37
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
 public static void Main(string[] args)
{
	    using(SqlConnection sqlConn = new SqlConnection ("some connection string"))
	    using(SqlCommand comm = new SqlCommand ("some query; some other query;", sqlConn))
	    {
		comm.Connection.Open();            
		using (SqlDataReader sqlReader = comm.ExecuteReader(CommandBehavior.CloseConnection))
		{
		    while(sqlReader.Read())
		    {}
		    
		    if (sqlReader.NextResult())
		    {
		        while (sqlReader.Read())
		        {}
		    }
		}
	    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
7
Gpt4D_Clone550_7.cs 1 36
Gpt4D_Clone550_7.cs 37 36
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
 public static void Main(string[] args)
{
	    using (var connection = new SqlConnection("some connection string"))
	    using (var command = new SqlCommand("some query; some other query;", connection))
	    {
		connection.Open();
		using (var reader = command.ExecuteReader())
		{
		    while (reader.Read())
		    {}
		    if (reader.NextResult())
		    {
		        while (reader.Read())
		        {}
		    }
		}
	    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
550
9
Gpt4D_Clone550_9.cs 1 34
Gpt4D_Clone550_9.cs 35 34
----------------------------------------

public static void Main (String [] args) {
    using (SqlConnection sqlConn = new SqlConnection ("some connection string"))
    {
        sqlConn.Open ();
        using (SqlCommand comm = new SqlCommand ("some query; some other query;", conn))
        using (var sqlReader = comm.ExecuteReader ())
        {
            while (sqlReader.Read ()) {
            }
            if (sqlReader.NextResult ()) {
                while (sqlReader.Read ()) {
                }
            }
        }}}
 public static void Main(string[] args)
{
	    using (SqlConnection sqlConn = new SqlConnection("some connection string"))
	    {
		sqlConn.Open();
		using (SqlCommand comm = new SqlCommand("some query; some other query;", sqlConn))
		{
		    SqlDataReader sqlReader = comm.ExecuteReader();
		    while(sqlReader.Read())
		    {}
		    
		    while(sqlReader.NextResult() && sqlReader.Read())
		    {}
		}
	    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
555
0
Gpt4D_Clone555_0.cs 1 18
Gpt4D_Clone555_0.cs 19 34
----------------------------------------

static void Main (string [] args) {
    string libreOfficePath = getLibreOfficePath ();
    ProcessStartInfo procStartInfo = new ProcessStartInfo (libreOfficePath, string.Format ("--convert-to pdf --nologo {0}", args [0]));
    procStartInfo.RedirectStandardOutput = true;
    procStartInfo.UseShellExecute = false;
    procStartInfo.CreateNoWindow = true;
    procStartInfo.WorkingDirectory = Environment.CurrentDirectory;
    Process process = new Process () {StartInfo = procStartInfo,};
    process.Start ();
    process.WaitForExit ();
    if (process.ExitCode != 0) {
        throw new LibreOfficeFailedException (process.ExitCode);
    }
}
----------------------------------------

static void Main(string[] args)
{
  string libreOfficePath = getLibreOfficePath();
  var psi = new ProcessStartInfo(libreOfficePath, string.Format("--convert-to pdf --nologo {0}", args[0]));
  psi.RedirectStandardOutput = true;
  psi.UseShellExecute = false;
  psi.CreateNoWindow = true;
  psi.WorkingDirectory = Environment.CurrentDirectory;
  
  var process = Process.Start(psi);
  process.WaitForExit();
  if (process.ExitCode != 0) throw new LibreOfficeFailedException(process.ExitCode);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
555
1
Gpt4D_Clone555_1.cs 1 18
Gpt4D_Clone555_1.cs 19 44
----------------------------------------

static void Main (string [] args) {
    string libreOfficePath = getLibreOfficePath ();
    ProcessStartInfo procStartInfo = new ProcessStartInfo (libreOfficePath, string.Format ("--convert-to pdf --nologo {0}", args [0]));
    procStartInfo.RedirectStandardOutput = true;
    procStartInfo.UseShellExecute = false;
    procStartInfo.CreateNoWindow = true;
    procStartInfo.WorkingDirectory = Environment.CurrentDirectory;
    Process process = new Process () {StartInfo = procStartInfo,};
    process.Start ();
    process.WaitForExit ();
    if (process.ExitCode != 0) {
        throw new LibreOfficeFailedException (process.ExitCode);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    LaunchLibreOfficeProcess(args[0]);
	}
	private void LaunchLibreOfficeProcess(string documentPath)
	{
	    string libreOfficePath = getLibreOfficePath();
	    ProcessStartInfo procStartInfo = new ProcessStartInfo (libreOfficePath, "--convert-to pdf --nologo " + documentPath);
	    LaunchAndCheckProcess(procStartInfo);
	}
	private void LaunchAndCheckProcess(ProcessStartInfo procStartInfo)
	{
	    procStartInfo.RedirectStandardOutput = true;
	    procStartInfo.UseShellExecute = false;
	    procStartInfo.CreateNoWindow = true;
	    procStartInfo.WorkingDirectory = Environment.CurrentDirectory;
	    Process process = new Process(){ StartInfo = procStartInfo,};
	    process.Start();
	    process.WaitForExit();
	    if (process.ExitCode != 0) throw new LibreOfficeFailedException(process.ExitCode);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
560
1
Gpt4D_Clone560_1.cs 1 15
Gpt4D_Clone560_1.cs 16 29
----------------------------------------

public static void DeleteEmptyDirs (this DirectoryInfo dir) {
    foreach (DirectoryInfo d in dir.GetDirectories ())
        d.DeleteEmptyDirs ();
    try {
        dir.Delete ();
    }
    catch (IOException) {
    }
    catch (UnauthorizedAccessException) {
    }
}
----------------------------------------

public static void DeleteEmptyDirs (this DirectoryInfo dir) {
    if(!dir.EnumerateFileSystemInfos().Any()) {
        try {
            dir.Delete();
        }
        catch (Exception) {}
    }
    foreach (var d in dir.EnumerateDirectories()) {
        d.DeleteEmptyDirs();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
0
Gpt4D_Clone561_0.cs 1 22
Gpt4D_Clone561_0.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void BindComboBox(string sqlCommand, ComboBox comboBox)
{
    using (SqlConnection sqlConnection = new SqlConnection(CONNECTION_STRING))
    {
        sqlConnection.Open();
        SqlCommand command = new SqlCommand(sqlCommand, sqlConnection);
        SqlDataReader reader = command.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(reader);
        comboBox.DataSource = dt;
        comboBox.ValueMember = "id";
        comboBox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
1
Gpt4D_Clone561_1.cs 1 22
Gpt4D_Clone561_1.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void FillComboBox(string sqlStatement, ComboBox comboBox)
{
    using (SqlConnection sqlConnection = new SqlConnection(CONNECTION_STRING))
    {
        sqlConnection.Open();
        SqlCommand sqlCommand = new SqlCommand(sqlStatement, sqlConnection);
        SqlDataReader sqlReader = sqlCommand.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(sqlReader);
        comboBox.DataSource = dt;
        comboBox.ValueMember = "id";
        comboBox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
2
Gpt4D_Clone561_2.cs 1 22
Gpt4D_Clone561_2.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void BindToComboBox(string sqlCmd, ComboBox cbx)
{
    using (SqlConnection sqlCon = new SqlConnection(CONNECTION_STRING))
    {
        sqlCon.Open();
        SqlCommand command = new SqlCommand(sqlCmd, sqlCon);
        SqlDataReader sqlDataRead = command.ExecuteReader();
        DataTable dataTable = new DataTable();
        dataTable.Load(sqlDataRead);
        cbx.DataSource = dataTable;
        cbx.ValueMember = "id";
        cbx.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
3
Gpt4D_Clone561_3.cs 1 22
Gpt4D_Clone561_3.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void PopulateDropDown(string sqlstring, ComboBox dropdown)
{
    using (SqlConnection con = new SqlConnection(CONNECTION_STRING))
    {
        con.Open();
        SqlCommand command = new SqlCommand(sqlstring, con);
        SqlDataReader sqlReader = command.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(sqlReader);
        dropdown.DataSource = dt;
        dropdown.ValueMember = "id";
        dropdown.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
4
Gpt4D_Clone561_4.cs 1 22
Gpt4D_Clone561_4.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void PopulateComboBox(string sqlStr, ComboBox comboBox)
{
    using (SqlConnection sqlConn = new SqlConnection(CONNECTION_STRING))
    {
        sqlConn.Open();
        SqlCommand sqlCom = new SqlCommand(sqlStr, sqlConn);
        SqlDataReader sqlDataRead = sqlCom.ExecuteReader();
        DataTable dataTable = new DataTable();
        dataTable.Load(sqlDataRead);
        comboBox.DataSource = dataTable;
        comboBox.ValueMember = "id";
        comboBox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
5
Gpt4D_Clone561_5.cs 1 22
Gpt4D_Clone561_5.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void LoadComboBox(string strSql, ComboBox myComboBox)
{
    using (SqlConnection sqlConn = new SqlConnection(CONNECTION_STRING))
    {
        sqlConn.Open();
        SqlCommand sqlComm = new SqlCommand(strSql, sqlConn);
        SqlDataReader sqlRead = sqlComm.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(sqlRead);
        myComboBox.DataSource = dt;
        myComboBox.ValueMember = "id";
        myComboBox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
6
Gpt4D_Clone561_6.cs 1 22
Gpt4D_Clone561_6.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

 
public static void BindDropDown(string query, ComboBox dropDownBox)
{
    using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
    {
        conn.Open();
        SqlCommand comm = new SqlCommand(query, conn);
        SqlDataReader reader = comm.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(reader);
        dropDownBox.DataSource = dt;
        dropDownBox.ValueMember = "id";
        dropDownBox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
7
Gpt4D_Clone561_7.cs 1 22
Gpt4D_Clone561_7.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void LoadDropDownList(string sql, ComboBox dropdownlist)
{
    using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
    {
        conn.Open();
        SqlCommand comm = new SqlCommand(sql, conn);
        SqlDataReader sqlReader = comm.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(sqlReader);
        dropdownlist.DataSource = dt;
        dropdownlist.ValueMember = "id";
        dropdownlist.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
561
8
Gpt4D_Clone561_8.cs 1 22
Gpt4D_Clone561_8.cs 23 39
----------------------------------------

public static void FillDropDownList (string Query, System.Windows.Forms.ComboBox DropDownName) {
    using (var cn = new SqlConnection (CONNECTION_STRING))
    {
        cn.Open ();
        DataTable dt = new DataTable ();
        try {
            SqlCommand cmd = new SqlCommand (Query, cn);
            SqlDataReader myReader = cmd.ExecuteReader ();
            dt.Load (myReader);
        }
        catch (SqlException e) {
            Console.WriteLine (e.ToString ());
            return;
        }
        DropDownName.DataSource = dt;
        DropDownName.ValueMember = "id";
        DropDownName.DisplayMember = "Name";
    }}
----------------------------------------

public static void FillDownList(string sqlCommand, ComboBox combobox)
{
    using (SqlConnection connection = new SqlConnection(CONNECTION_STRING))
    {
        connection.Open();
        SqlCommand command = new SqlCommand(sqlCommand, connection);
        SqlDataReader reader = command.ExecuteReader();
        DataTable dt = new DataTable();
        dt.Load(reader);
        combobox.DataSource = dt;
        combobox.ValueMember = "id";
        combobox.DisplayMember = "Name";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
0
Gpt4D_Clone56_0.cs 1 13
Gpt4D_Clone56_0.cs 14 27
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
----------------------------------------

private void button1_Click(object sender, EventArgs e) 
{
	    textBox2.Text = string.Empty;
	    float result;
	    if (float.TryParse(textBox1.Text, out result))
	    {
		textBox2.Text = Math.Sin(result).ToString(CultureInfo.InvariantCulture);
	    } 
	    else {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
1
Gpt4D_Clone56_1.cs 1 14
Gpt4D_Clone56_1.cs 15 28
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
 
----------------------------------------

private void button1_Click(object sender, EventArgs e) 
{
	    float result;
	    textBox2.Text = "";
	    if(float.TryParse(textBox1.Text, out result)) 
	    {
		textBox2.Text += Math.Sin(result).ToString();
	    } 
	    else
	    {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
2
Gpt4D_Clone56_2.cs 1 14
Gpt4D_Clone56_2.cs 15 28
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
 
----------------------------------------

private void button1_Click(object sender, EventArgs e) 
{
	    float result;
	    textBox2.Text = null;
	    if (float.TryParse(textBox1.Text, out result))
	    {
		textBox2.Text = Math.Exp(result).ToString();
	    } 
	    else
	    {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
4
Gpt4D_Clone56_4.cs 1 14
Gpt4D_Clone56_4.cs 15 27
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
 
----------------------------------------

private void button1_Click (object sender, EventArgs e) 
{
	    textBox2.ResetText();
	    if (float.TryParse(textBox1.Text, out var result)) 
	    {
		textBox2.AppendText(Math.Cos (result).ToString());
	    }
	    else 
	    {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
6
Gpt4D_Clone56_6.cs 1 26
Gpt4D_Clone56_6.cs 27 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
 
  
private void button1_Click(object sender, EventArgs e) 
{
	    textBox2.Clear();
	    if (float.TryParse(textBox1.Text, out var result)) 
	    {
		textBox2.Text = Math.Log(result).ToString();
	    }
	    else {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
7
Gpt4D_Clone56_7.cs 1 14
Gpt4D_Clone56_7.cs 15 26
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    float result;
    if (float.TryParse (textBox1.Text, out result)) {
        textBox2.AppendText (Math.Sin (result).ToString ());
    } else {
        textBox2.Text = "Invalid Input";
    }
}
 
----------------------------------------

private void button1_Click(object sender, EventArgs e) 
{
	    textBox2.Clear();
	    if (float.TryParse(textBox1.Text, out var result)) 
	    {
		textBox2.Text = Math.Asin(result).ToString();
	    }
	    else {
		textBox2.Text = "Invalid Input";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
0
Gpt4D_Clone577_0.cs 1 14
Gpt4D_Clone577_0.cs 15 38
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo = null;
    if (!string.IsNullOrEmpty(i_sCulture)) 
    {
        try 
        {
            oCultureInfo = new CultureInfo(i_sCulture);
        }
        catch 
        {
            oCultureInfo = CultureInfo.CurrentUICulture;
        }
    }
    else 
    {
        oCultureInfo = CultureInfo.CurrentUICulture;
    }
    
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
1
Gpt4D_Clone577_1.cs 1 14
Gpt4D_Clone577_1.cs 15 29
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo;
    
    try {
        oCultureInfo = new CultureInfo(i_sCulture);
    } catch(CultureNotFoundException) {
        oCultureInfo = CultureInfo.CurrentUICulture;
    }
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
2
Gpt4D_Clone577_2.cs 1 14
Gpt4D_Clone577_2.cs 15 32
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo = null;
    try
    {
        oCultureInfo = CultureInfo.GetCultureInfoByIetfLanguageTag(i_sCulture);
    }
    catch
    {
        oCultureInfo = CultureInfo.GetCultureInfo("zh-CN");
    }
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
3
Gpt4D_Clone577_3.cs 1 14
Gpt4D_Clone577_3.cs 15 31
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo = null;
    try 
    {
        oCultureInfo = CultureInfo.GetCultureInfo(i_sCulture);
    }
    catch (CultureNotFoundException e) 
    {
        oCultureInfo = CultureInfo.GetCultureInfo("en-US");
    }
    
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
4
Gpt4D_Clone577_4.cs 1 14
Gpt4D_Clone577_4.cs 15 32
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo = null;
    
    if (CultureInfo.GetCultures(CultureTypes.AllCultures).Any(c => c.Name == i_sCulture))
    {
        oCultureInfo = new CultureInfo(i_sCulture);
    }
    else
    {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
5
Gpt4D_Clone577_5.cs 1 14
Gpt4D_Clone577_5.cs 15 31
----------------------------------------

public static string GetMessage (Exception i_oException, string i_sCulture) {
    CultureInfo oCultureInfo = null;
    try {
        oCultureInfo = new CultureInfo (i_sCulture);
    }
    catch {
        oCultureInfo = CultureInfo.InvariantCulture;
    }
    return GetMessage (i_oException, oCultureInfo);
}
----------------------------------------

public static string GetMessage(Exception i_oException, string i_sCulture)
{
    CultureInfo oCultureInfo;
    try
    {
        oCultureInfo = CultureInfo.GetCultureInfo(i_sCulture);
    }
    catch (CultureNotFoundException)
    {
        oCultureInfo = CultureInfo.CurrentCulture;
    }
    return GetMessage(i_oException, oCultureInfo);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
582
1
Gpt4D_Clone582_1.cs 1 15
Gpt4D_Clone582_1.cs 16 24
----------------------------------------

public static String GetString (object value) {
    if (value is string) {
        return value as string;
    } else if (value is IDictionary) {
        return GetString (value as IDictionary);
    } else if (value is IEnumerable) {
        return GetString (value as IEnumerable);
    } else {
        return value.ToString ();
    }
}
----------------------------------------

public static String GetString (object value) {
	   if(value is string) return value as string;
	   if(value is IDictionary) return GetString(value as IDictionary);
	   if(value is IEnumerable) return GetString(value as IEnumerable);
	   
	   return value.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
587
7
Gpt4D_Clone587_7.cs 1 20
Gpt4D_Clone587_7.cs 21 35
----------------------------------------

public static IEnumerable < string > GetFilesInFtpDirectory (string url, string username, string password) {
    var request = (FtpWebRequest) WebRequest.Create (url);
    request.Method = WebRequestMethods.Ftp.ListDirectoryDetails;
    request.Credentials = new NetworkCredential (username, password);
    using (var response = (FtpWebResponse) request.GetResponse ())
    {
        using (var responseStream = response.GetResponseStream ())
        {
            var reader = new StreamReader (responseStream);
            while (! reader.EndOfStream) {
                var line = reader.ReadLine ();
                if (string.IsNullOrWhiteSpace (line) == false) {
                    yield return line.Split (new [] {' ', '\t'}).Last ();
                }
            }
        }}}
----------------------------------------

public static IEnumerable<string> GetFilesInFtpDirectory(string url, string username, string password)
{
	    var request = (FtpWebRequest)WebRequest.Create(url);
	    request.Method = WebRequestMethods.Ftp.ListDirectoryDetails;
	    request.Credentials = new NetworkCredential(username, password);
	    using (var response = (FtpWebResponse)request.GetResponse())
	    using (var responseStream = response.GetResponseStream())
	    using (var reader = new StreamReader(responseStream))
	    {
		return reader.ReadToEnd().Split('\n').Select(s => s.Trim()).Where(s => !string.IsNullOrEmpty(s)).ToList();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
588
0
Gpt4D_Clone588_0.cs 1 23
Gpt4D_Clone588_0.cs 24 46
----------------------------------------

public static IList < ReportFile > ReadFiles (int year, int month) {
    string [] fileNames = new string [] {"{0:YYYYMMDD}----1234D.dat", "{0:YYYYMMDD}----5678D.dat"};
    DateTime dateStart = new DateTime (year, month, 1);
    DateTime dateEnd = dateStart.AddMonths (1);
    var reportList = new List < ReportFile > ();
    DateTime date = dateStart;
    while (date < dateEnd) {
        foreach (var fileTemplate in fileNames) {
            var file = string.Format (fileTemplate, date);
            if (File.Exists (file)) {
                var report = new ReportFile () {Date = date, Path = file, Lines = GetReportLines (file)};
                reportList.Add (report);
            }
        }
        date = date.AddDays (1);
    }
    return reportList;
}
 
----------------------------------------

public static IList<ReportFile> ReadFiles(int year, int month)
{
    string[] fileNames = new string[] { "{0:yyyyMMdd}-9999D.dat", "{0:yyyyMMdd}-0000D.dat" };
    DateTime dateStart = new DateTime(year, month, 1);
    DateTime dateEnd = dateStart.AddMonths(1);
    var reportList = new List<ReportFile>();
    for (DateTime date = dateStart; date < dateEnd; date = date.AddDays(1))
    {
        foreach (string fileName in fileNames)
        {
            string filePath = string.Format(fileName, date);
            if (File.Exists(filePath))
            {
                var reportFile = new ReportFile { Date = date, Path = filePath, Lines = GetReportLines(filePath) };
                reportList.Add(reportFile);
            }
        }
    }
    return reportList;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
588
1
Gpt4D_Clone588_1.cs 1 23
Gpt4D_Clone588_1.cs 24 45
----------------------------------------

public static IList < ReportFile > ReadFiles (int year, int month) {
    string [] fileNames = new string [] {"{0:YYYYMMDD}----1234D.dat", "{0:YYYYMMDD}----5678D.dat"};
    DateTime dateStart = new DateTime (year, month, 1);
    DateTime dateEnd = dateStart.AddMonths (1);
    var reportList = new List < ReportFile > ();
    DateTime date = dateStart;
    while (date < dateEnd) {
        foreach (var fileTemplate in fileNames) {
            var file = string.Format (fileTemplate, date);
            if (File.Exists (file)) {
                var report = new ReportFile () {Date = date, Path = file, Lines = GetReportLines (file)};
                reportList.Add (report);
            }
        }
        date = date.AddDays (1);
    }
    return reportList;
}
 
----------------------------------------

public static IList<ReportFile> ReadFiles(int year, int month)
{
    string[] fileNames = new string[] {"{0:yyyyMMdd}----4444D.dat", "{0:yyyyMMdd}----5555D.dat"};
    DateTime dateStart = new DateTime(year, month, 1);
    DateTime dateEnd = dateStart.AddMonths(1);
    var reportList = new List<ReportFile>();
    for (DateTime date = dateStart; date < dateEnd; date = date.AddDays(1))
    {
        foreach (var fileName in fileNames)
        {
            var filePath = string.Format(fileName, date);
            if (File.Exists(filePath))
            {
                var linesInFile = GetReportLines(filePath);
                reportList.Add(new ReportFile { Date = date, Path = filePath, Lines = linesInFile });
            }
        }
    }
    return reportList;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
0
Gpt4D_Clone5_0.cs 1 16
Gpt4D_Clone5_0.cs 17 39
----------------------------------------

static void ResourceKeyChanged (DependencyObject d, DependencyPropertyChangedEventArgs e) {
    var target = d as FrameworkElement;
    var newVal = e.NewValue as Tuple < object, DependencyProperty >;
    if (target == null || newVal == null)
        return;
    var dp = newVal.Item2;
    if (newVal.Item1 == null) {
        target.SetValue (dp, dp.GetMetadata (target).DefaultValue);
        return;
    }
    target.SetResourceReference (dp, newVal.Item1);
}
----------------------------------------

static void ResourceKeyChanged3 (DependencyObject d, DependencyPropertyChangedEventArgs e) {
		    var target = d as FrameworkElement;
		    var newVal = e.NewValue as Tuple < object, DependencyProperty >;
		    if (target != null && newVal != null)
		    {
			var dp = newVal.Item2;
			if(newVal.Item1 == null) {
			    SetDefaultValue( target, dp);
			} else  {
			    target.SetResourceReference (dp, newVal.Item1);
			}
		    }
		}
		private static void SetDefaultValue(FrameworkElement target, DependencyProperty dp)
		{
		    var newValue = dp.GetMetadata(target).DefaultValue;
		    target.SetValue(dp, newValue);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
602
5
Gpt4D_Clone602_5.cs 1 14
Gpt4D_Clone602_5.cs 15 22
----------------------------------------

public static long fibo_n (long N) {
    if (N <= 0)
        return 0;
    if (N == 1)
        return 1;
    if (N <= 4)
        return N - 1;
    return fibo_n (N - 1) + fibo_n (N - 2);
}
 
----------------------------------------

public static long fibo_n (long N) {
    if (N == 0)
        return 0;
    if (N == 1)
        return 1;
    return fibo_n (N - 1) + fibo_n (N - 2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
0
Gpt4D_Clone604_0.cs 1 15
Gpt4D_Clone604_0.cs 16 35
----------------------------------------

[HttpPost] public ActionResult Create () {
    string jsonPostData;
    using (var stream = Request.InputStream)
    {
        stream.Position = 0;
        using (var reader = new System.IO.StreamReader (stream))
        {
            jsonPostData = reader.ReadToEnd ();
        }} var foo = Newtonsoft.Json.JsonConvert.DeserializeObject < IDictionary < string, object > > (jsonPostData) ["foo"];
    return Json (new {success = true});
}
----------------------------------------

 
[HttpPost]
public ActionResult Create()
{
    string jsonPostData;
    using (var stream = new MemoryStream())
    {
        Request.Body.CopyTo(stream);
        stream.Position = 0;
        using (var reader = new StreamReader(stream))
        {
            jsonPostData = reader.ReadToEnd();
        }
    }
    var foo = JsonConvert.DeserializeObject<IDictionary<string, object>>(jsonPostData)["foo"];
    return new JsonResult(new { success = true});
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
3
Gpt4D_Clone604_3.cs 1 15
Gpt4D_Clone604_3.cs 16 27
----------------------------------------

[HttpPost] public ActionResult Create () {
    string jsonPostData;
    using (var stream = Request.InputStream)
    {
        stream.Position = 0;
        using (var reader = new System.IO.StreamReader (stream))
        {
            jsonPostData = reader.ReadToEnd ();
        }} var foo = Newtonsoft.Json.JsonConvert.DeserializeObject < IDictionary < string, object > > (jsonPostData) ["foo"];
    return Json (new {success = true});
}
----------------------------------------

[HttpPost] 
public ActionResult Create() 
{
    string jsonPostData;
    using (StreamReader reader = new StreamReader(HttpContext.Request.Body))
    {
        jsonPostData = reader.ReadToEnd();
    }
    var foo = Newtonsoft.Json.JsonConvert.DeserializeObject<IDictionary<string, object>>(jsonPostData)["foo"];
    return Json(new { success = true });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
620
0
Gpt4D_Clone620_0.cs 1 14
Gpt4D_Clone620_0.cs 15 25
----------------------------------------

public static void Swap < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    while (true) {
        var objBefore = Volatile.Read (ref obj);
        var newObj = cloner (objBefore);
        op (newObj);
        if (Interlocked.CompareExchange (ref obj, newObj, objBefore) == objBefore)
            return;
    }
}
 
----------------------------------------

public static void SwapV5 < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    T obj4;
    while (true) {
        obj4 = Volatile.Read (ref obj);
        var renewedObj = cloner (obj4);
        op (renewedObj);
        if (Interlocked.CompareExchange (ref obj, renewedObj, obj4) == obj4)
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
620
2
Gpt4D_Clone620_2.cs 1 14
Gpt4D_Clone620_2.cs 15 24
----------------------------------------

public static void Swap < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    while (true) {
        var objBefore = Volatile.Read (ref obj);
        var newObj = cloner (objBefore);
        op (newObj);
        if (Interlocked.CompareExchange (ref obj, newObj, objBefore) == objBefore)
            return;
    }
}
 
----------------------------------------

public static void SwapV3 < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    T obj2;
    while (true) {
        obj2 = Volatile.Read (ref obj);
        var clonedObj = cloner (obj2);
        op (clonedObj);
        if (Interlocked.CompareExchange (ref obj, clonedObj, obj2) == obj2) break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
620
5
Gpt4D_Clone620_5.cs 1 14
Gpt4D_Clone620_5.cs 15 22
----------------------------------------

public static void Swap < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    while (true) {
        var objBefore = Volatile.Read (ref obj);
        var newObj = cloner (objBefore);
        op (newObj);
        if (Interlocked.CompareExchange (ref obj, newObj, objBefore) == objBefore)
            return;
    }
}
 
----------------------------------------

public static void SwapV4 < T > (ref T obj, Func < T, T > cloner, Action < T > op) where T : class {
    do {
        var obj3 = Volatile.Read (ref obj);
        var clonedObj = cloner (obj3);
        op (clonedObj);
    } while (!object.Equals(Interlocked.CompareExchange (ref obj, clonedObj, obj3), obj3));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
0
Gpt4D_Clone627_0.cs 1 13
Gpt4D_Clone627_0.cs 14 24
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    for (int y = 0; y < tsi.Height; y ++) {
        for (int x = 0; x < tsi.Width; x ++)
            bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = sender as ToolStripItem;
    if (tsi == null) return;
    Bitmap bm = new Bitmap(tsi.Width, tsi.Height);
    for (int x = 0; x < bm.Width; x++)
        for (int y = 0; y < bm.Height; y++)
            bm.SetPixel(x, y, Color.FromArgb(150, Color.White));
    tsi.BackgroundImage = bm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
2
Gpt4D_Clone627_2.cs 1 13
Gpt4D_Clone627_2.cs 14 24
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    for (int y = 0; y < tsi.Height; y ++) {
        for (int x = 0; x < tsi.Width; x ++)
            bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    using (Bitmap bm = new Bitmap (tsi.Width, tsi.Height)) {
        for (int y = 0; y < tsi.Height; y ++) {
            for (int x = 0; x < tsi.Width; x ++)
                bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
        }
        tsi.BackgroundImage = new Bitmap(bm);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
3
Gpt4D_Clone627_3.cs 1 13
Gpt4D_Clone627_3.cs 14 23
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    for (int y = 0; y < tsi.Height; y ++) {
        for (int x = 0; x < tsi.Width; x ++)
            bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap(tsi.Width, tsi.Height);
    Rectangle r = new Rectangle(Point.Empty, bm.Size);
    for (int i = r.Left; i < r.Right; i++)
      for (int j = r.Top; j < r.Bottom; j++)
         bm.SetPixel(i, j, Color.FromArgb(150, Color.White));
    tsi.BackgroundImage = bm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
6
Gpt4D_Clone627_6.cs 1 13
Gpt4D_Clone627_6.cs 14 22
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    for (int y = 0; y < tsi.Height; y ++) {
        for (int x = 0; x < tsi.Width; x ++)
            bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap(tsi.Width, tsi.Height);
    using (var fastBitmap = new FastBitmap(bm)) { 
        fastBitmap.Clear(Color.FromArgb(150, Color.White)); 
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
8
Gpt4D_Clone627_8.cs 1 13
Gpt4D_Clone627_8.cs 14 21
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    for (int y = 0; y < tsi.Height; y ++) {
        for (int x = 0; x < tsi.Width; x ++)
            bm.SetPixel (x, y, Color.FromArgb (150, Color.White));
    }
    tsi.BackgroundImage = bm;
}
----------------------------------------

private void tsi_MouseEnter (object sender, EventArgs e) {
    ToolStripItem tsi = (ToolStripItem) sender;
    Bitmap bm = new Bitmap (tsi.Width, tsi.Height);
    Graphics g = Graphics.FromImage(bm);
    g.FillRectangle(Brushes.White, new Rectangle(0, 0, tsi.Width, tsi.Height));
    tsi.BackgroundImage = bm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
633
0
Gpt4D_Clone633_0.cs 1 34
Gpt4D_Clone633_0.cs 35 50
----------------------------------------

public static void moveMouse (ref int currentx, ref int currenty, string whattodo, int pNombre) {
    switch (whattodo) {
        case "addX" :
            for (int i = 0; i < pNombre; i ++) {
                currentx ++;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "addY" :
            for (int i = 0; i < pNombre; i ++) {
                currenty ++;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "remX" :
            for (int i = 0; i < pNombre; i ++) {
                currentx --;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "remY" :
            for (int i = 0; i < pNombre; i ++) {
                currenty --;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        default :
            break;
    }
}
----------------------------------------

public static void moveMouse(ref int x, ref int y, string operation, int count)
{
    for (int i = 0; i < count; i++)
    {
        switch (operation)
        {
            case "addX": x++; SetCursorPos(x, y); break;
            case "addY": y++; SetCursorPos(x, y); break;
            case "remX": x--; SetCursorPos(x, y); break;
            case "remY": y--; SetCursorPos(x, y); break;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
633
1
Gpt4D_Clone633_1.cs 1 34
Gpt4D_Clone633_1.cs 35 52
----------------------------------------

public static void moveMouse (ref int currentx, ref int currenty, string whattodo, int pNombre) {
    switch (whattodo) {
        case "addX" :
            for (int i = 0; i < pNombre; i ++) {
                currentx ++;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "addY" :
            for (int i = 0; i < pNombre; i ++) {
                currenty ++;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "remX" :
            for (int i = 0; i < pNombre; i ++) {
                currentx --;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        case "remY" :
            for (int i = 0; i < pNombre; i ++) {
                currenty --;
                SetCursorPos (currentx + Form1.m_Border_x, currenty + Form1.m_Border_y);
            }
            break;
        default :
            break;
    }
}
----------------------------------------

public static void moveMouse(ref int currentx, ref int currenty, string move, int steps)
{
    for (int i = 0; i < steps; i++)
    {
        switch (move)
        {
            case "addX": currentx++; break;
            case "addY": currenty++; break;
            case "remX": currentx--; break;
            case "remY": currenty--; break;
        }
        SetCursorPos(currentx, currenty);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
636
0
Gpt4D_Clone636_0.cs 1 17
Gpt4D_Clone636_0.cs 18 34
----------------------------------------

public void Execute (Form form, Action guiCommand) {
    _timeout = _totalTimeout;
    while (! form.IsHandleCreated) {
        if (_timeout <= 0)
            return;
        Thread.Sleep (SLEEPING_STEP);
        _timeout -= SLEEPING_STEP;
    }
    if (form.InvokeRequired)
        form.Invoke (guiCommand);
    else
        guiCommand ();
}
----------------------------------------

public void ExecuteWithAwait(Form form, Action guiCommand) {
	    _timeout = _totalTimeout;
	    while (! form.IsHandleCreated) {
		if (_timeout <= 0)
		    return;
		Thread.Sleep(SLEEPING_STEP);
		_timeout -= SLEEPING_STEP;
	    }
	    Task task = new Task(guiCommand);
	    if (form.InvokeRequired)
		await Task.Run(() => form.Invoke(task));
	    else
		task.Start();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
636
1
Gpt4D_Clone636_1.cs 1 17
Gpt4D_Clone636_1.cs 18 34
----------------------------------------

public void Execute (Form form, Action guiCommand) {
    _timeout = _totalTimeout;
    while (! form.IsHandleCreated) {
        if (_timeout <= 0)
            return;
        Thread.Sleep (SLEEPING_STEP);
        _timeout -= SLEEPING_STEP;
    }
    if (form.InvokeRequired)
        form.Invoke (guiCommand);
    else
        guiCommand ();
}
----------------------------------------

public void Execute(Form form, Action guiCommand) {
	    _timeout = _totalTimeout;
	    while (form.IsHandleCreated == false) {
		if (_timeout <= 0)
		    return;
		Thread.Sleep(SLEEPING_STEP);
		_timeout -= SLEEPING_STEP;
	    }
	    if (form.InvokeRequired) {
		form.Invoke(guiCommand);
	    } else {
		guiCommand.Invoke();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
636
2
Gpt4D_Clone636_2.cs 1 17
Gpt4D_Clone636_2.cs 18 33
----------------------------------------

public void Execute (Form form, Action guiCommand) {
    _timeout = _totalTimeout;
    while (! form.IsHandleCreated) {
        if (_timeout <= 0)
            return;
        Thread.Sleep (SLEEPING_STEP);
        _timeout -= SLEEPING_STEP;
    }
    if (form.InvokeRequired)
        form.Invoke (guiCommand);
    else
        guiCommand ();
}
----------------------------------------

public void Execute(Form form, Action guiCommand) {
	    Stopwatch stopwatch = new Stopwatch();
	    stopwatch.Start();
	    while (! form.IsHandleCreated) {
		if (stopwatch.ElapsedMilliseconds > _totalTimeout)
		    return;
		Thread.Sleep(SLEEPING_STEP);
	    }
	    if (form.InvokeRequired)
		form.Invoke(guiCommand);
	    else
		guiCommand();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
636
4
Gpt4D_Clone636_4.cs 1 17
Gpt4D_Clone636_4.cs 18 30
----------------------------------------

public void Execute (Form form, Action guiCommand) {
    _timeout = _totalTimeout;
    while (! form.IsHandleCreated) {
        if (_timeout <= 0)
            return;
        Thread.Sleep (SLEEPING_STEP);
        _timeout -= SLEEPING_STEP;
    }
    if (form.InvokeRequired)
        form.Invoke (guiCommand);
    else
        guiCommand ();
}
----------------------------------------

public void Execute(Form form, Action guiCommand) {
	   _timeout = _totalTimeout;
	   for (var i = 0; i < _timeout && !form.IsHandleCreated; i += SLEEPING_STEP) {
	       Thread.Sleep(SLEEPING_STEP);
	   }
	   if (form.InvokeRequired)
	       form.Invoke(guiCommand);
	   else
	       guiCommand();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
0
Gpt4D_Clone642_0.cs 1 20
Gpt4D_Clone642_0.cs 21 37
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow (null, title);
    BringWindowToTop (hWnd);
    SetActiveWindow (hWnd);
    SetForegroundWindow (hWnd);
    Thread.Sleep (500);
    foreach (Process process in Process.GetProcessesByName ("IExplore")) {
        if (process.MainWindowTitle.ToLower ().Contains (title.ToLower ())) {
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc (EnumWindows);
    EnumChildWindows (hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow (null, title);
    FlashWindow (hWnd, true);
    foreach (Process process in Process.GetProcessesByName ("chrome")) {
        if (process.MainWindowTitle.ToLower ().Contains (title.ToLower ())) {
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc (EnumWindows);
    EnumChildWindows (hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
1
Gpt4D_Clone642_1.cs 1 20
Gpt4D_Clone642_1.cs 21 37
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow (null, title);
    BringWindowToTop (hWnd);
    SetActiveWindow (hWnd);
    SetForegroundWindow (hWnd);
    Thread.Sleep (500);
    foreach (Process process in Process.GetProcessesByName ("IExplore")) {
        if (process.MainWindowTitle.ToLower ().Contains (title.ToLower ())) {
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc (EnumWindows);
    EnumChildWindows (hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow (null, title);
    ShowWindowAsync (hWnd, 3);
    foreach (Process process in Process.GetProcessesByName ("opera")) {
        if (process.MainWindowTitle.ToLower ().Contains (title.ToLower ())) {
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc (EnumWindows);
    EnumChildWindows (hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
2
Gpt4D_Clone642_2.cs 1 20
Gpt4D_Clone642_2.cs 21 37
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow (null, title);
    BringWindowToTop (hWnd);
    SetActiveWindow (hWnd);
    SetForegroundWindow (hWnd);
    Thread.Sleep (500);
    foreach (Process process in Process.GetProcessesByName ("IExplore")) {
        if (process.MainWindowTitle.ToLower ().Contains (title.ToLower ())) {
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc (EnumWindows);
    EnumChildWindows (hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

public static IntPtr getHWnd (string title) {
    IntPtr hWnd = FindWindow(String.Empty, title);
    SetWindowLong(hWnd, -20, (int) GetWindowLong(hWnd, -20) | 0x80);
    foreach (Process process in Process.GetProcessesByName("Notepad")){
        if (process.MainWindowTitle.ToLower() == title.ToLower()){
            hWnd = process.MainWindowHandle;
            break;
        }
    }
    EnumProc proc = new EnumProc(EnumWindows);
    EnumChildWindows(hWnd, proc, ref hWnd);
    return hWnd;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
1
Gpt4D_Clone672_1.cs 1 21
Gpt4D_Clone672_1.cs 22 44
----------------------------------------

private void loadFromFile (String file) {
    foreach (String line in System.IO.File.ReadAllLines (file)) {
        if ((! String.IsNullOrEmpty (line)) && (! line.StartsWith (";")) && (! line.StartsWith ("#")) && (! line.StartsWith ("'")) && (line.Contains ('='))) {
            int index = line.IndexOf ('=');
            String key = line.Substring (0, index).Trim ();
            String value = line.Substring (index + 1).Trim ();
            if ((value.StartsWith ("\"") && value.EndsWith ("\"")) || (value.StartsWith ("'") && value.EndsWith ("'"))) {
                value = value.Substring (1, value.Length - 2);
            }
            try {
                list.Add (key, value);
            }
            catch {
            }
        }
    }
}
----------------------------------------

private void loadFromFile (String file) {
    StreamReader sr = new StreamReader(file);
    while (!sr.EndOfStream)
    {
        String line = sr.ReadLine();
        if ((! String.IsNullOrEmpty (line)) && (!line.StartsWith(";")) && (!line.StartsWith ("#")) && 
            (!line.StartsWith ("'")) && (line.Contains ("="))) {
            int index = line.IndexOf ("=");
            String key = line.Substring (0, index).Trim ();
            String value = line.Substring (index + 1).Trim ();
            if ((value.StartsWith ("\"") && value.EndsWith ("\"")) || 
                (value.StartsWith ("'") && value.EndsWith ("'"))) {
                value = value.Substring (1, value.Length - 2);
            }
            try {
                list.Add (key, value);
            } catch {}
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
2
Gpt4D_Clone672_2.cs 1 21
Gpt4D_Clone672_2.cs 22 43
----------------------------------------

private void loadFromFile (String file) {
    foreach (String line in System.IO.File.ReadAllLines (file)) {
        if ((! String.IsNullOrEmpty (line)) && (! line.StartsWith (";")) && (! line.StartsWith ("#")) && (! line.StartsWith ("'")) && (line.Contains ('='))) {
            int index = line.IndexOf ('=');
            String key = line.Substring (0, index).Trim ();
            String value = line.Substring (index + 1).Trim ();
            if ((value.StartsWith ("\"") && value.EndsWith ("\"")) || (value.StartsWith ("'") && value.EndsWith ("'"))) {
                value = value.Substring (1, value.Length - 2);
            }
            try {
                list.Add (key, value);
            }
            catch {
            }
        }
    }
}
----------------------------------------

private void loadFromFile (String file)
{
    foreach (var line in File.ReadAllLines(file).Where(l => !string.IsNullOrWhiteSpace(l) 
                                                            && !l.StartsWith("#") 
                                                            && !l.StartsWith(";") 
                                                            && !l.StartsWith("'")))
    {
        var index = line.IndexOf('=');
        if (index <= 0) continue;
        var key = line.Substring(0, index).Trim();
        var value = line.Substring(index + 1).Trim();
        if ((value.StartsWith("\"") && value.EndsWith("\"")) || 
            (value.StartsWith("'") && value.EndsWith("'")))
        {
            value = value.Substring(1, value.Length - 2);
        }   
        try { list.Add(key, value); } catch { }
    }    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
5
Gpt4D_Clone672_5.cs 1 21
Gpt4D_Clone672_5.cs 22 36
----------------------------------------

private void loadFromFile (String file) {
    foreach (String line in System.IO.File.ReadAllLines (file)) {
        if ((! String.IsNullOrEmpty (line)) && (! line.StartsWith (";")) && (! line.StartsWith ("#")) && (! line.StartsWith ("'")) && (line.Contains ('='))) {
            int index = line.IndexOf ('=');
            String key = line.Substring (0, index).Trim ();
            String value = line.Substring (index + 1).Trim ();
            if ((value.StartsWith ("\"") && value.EndsWith ("\"")) || (value.StartsWith ("'") && value.EndsWith ("'"))) {
                value = value.Substring (1, value.Length - 2);
            }
            try {
                list.Add (key, value);
            }
            catch {
            }
        }
    }
}
----------------------------------------

private void loadFromFile(String file) 
{
    foreach (var line in File.ReadLines(file).Where(l => !String.IsNullOrEmpty(l) && l.Contains("=") && !l.StartsWith("#") && !l.StartsWith(";") && !l.StartsWith("'")))
    {
        var index = line.IndexOf('=');
        var key = line.Substring(0, index).Trim();
        var value = line.Substring(index + 1).Trim();
        if (value.Length > 1 && (value.StartsWith("\"") && value.EndsWith("\"")) || (value.StartsWith("'") && value.EndsWith("'")))
            value = value.Substring(1, value.Length - 2);             
        try { list[key] = value; } catch {}
    }   
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
2
Gpt4D_Clone67_2.cs 1 14
Gpt4D_Clone67_2.cs 15 27
----------------------------------------

public static string ReadLine (this BinaryReader reader) {
    if (reader.IsEndOfStream ())
        return null;
    StringBuilder result = new StringBuilder ();
    char character;
    while (! reader.IsEndOfStream () && (character = reader.ReadChar ()) != '\n')
        if (character != '\r' && character != '\n')
            result.Append (character);
    return result.ToString ();
}
----------------------------------------

public static string ReadLine (this BinaryReader reader) {
    if(reader.BaseStream.Position == reader.BaseStream.Length)
        return null;
    StringBuilder sb = new StringBuilder();
    char c;
    while((c = reader.ReadChar()) != '\n') 
        if(c != '\r') 
            sb.Append(c);
    return sb.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
8
Gpt4D_Clone67_8.cs 1 14
Gpt4D_Clone67_8.cs 15 25
----------------------------------------

public static string ReadLine (this BinaryReader reader) {
    if (reader.IsEndOfStream ())
        return null;
    StringBuilder result = new StringBuilder ();
    char character;
    while (! reader.IsEndOfStream () && (character = reader.ReadChar ()) != '\n')
        if (character != '\r' && character != '\n')
            result.Append (character);
    return result.ToString ();
}
----------------------------------------

public static string ReadLine (this BinaryReader reader) {
    StringBuilder sb = new StringBuilder();
    char c;
    while (((c = reader.ReadChar()) != '\n') && reader.PeekChar() != -1)
        if (c != '\r') 
            sb.Append(c);
    return sb.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
683
2
Gpt4D_Clone683_2.cs 1 24
Gpt4D_Clone683_2.cs 25 50
----------------------------------------

public static void ProcessCsv () {
    var filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable ("MyTable");
    List < string > product_codes = new List < string > ();
    using (CsvReader csv = new CsvReader (new StreamReader (filename), true))
    {
        int fieldCount = csv.FieldCount;
        string [] headers = csv.GetFieldHeaders ();
        for (int i = 0; i < headers.Length; i ++) {
            dt.Columns.Add (headers [i], typeof (string));
        }
        while (csv.ReadNextRecord ()) {
            DataRow dr = dt.NewRow ();
            for (int i = 0; i < fieldCount; i ++) {
                product_codes.Add (csv [i]);
                dr [i] = csv [i];
            }
            dt.Rows.Add (dr);
        }
    }}
----------------------------------------

public static void ProcessCsv()
{
    string filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable("MyTable");
    List<string> product_codes = new List<string>();
    using (StreamReader sr = new StreamReader(filename))
    {
        CsvReader csvReader = new CsvReader(sr, false);
        string[] headers = csvReader.GetFieldHeaders();
        dt.Columns.AddRange(headers.Select(column => new DataColumn(column, typeof(string))).ToArray());
        while (csvReader.ReadNextRecord())
        {
            DataRow row = dt.NewRow();
            for (int i = 0; i < csvReader.FieldCount; i++)
            {
                product_codes.Add(csvReader[i]);
                row[i] = csvReader[i];
            }
            dt.Rows.Add(row);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
683
3
Gpt4D_Clone683_3.cs 1 24
Gpt4D_Clone683_3.cs 25 51
----------------------------------------

public static void ProcessCsv () {
    var filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable ("MyTable");
    List < string > product_codes = new List < string > ();
    using (CsvReader csv = new CsvReader (new StreamReader (filename), true))
    {
        int fieldCount = csv.FieldCount;
        string [] headers = csv.GetFieldHeaders ();
        for (int i = 0; i < headers.Length; i ++) {
            dt.Columns.Add (headers [i], typeof (string));
        }
        while (csv.ReadNextRecord ()) {
            DataRow dr = dt.NewRow ();
            for (int i = 0; i < fieldCount; i ++) {
                product_codes.Add (csv [i]);
                dr [i] = csv [i];
            }
            dt.Rows.Add (dr);
        }
    }}
----------------------------------------

public static void ProcessCsv()
{
    var filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable("MyTable");
    List<string> product_codes = new List<string>();
    using (var reader = new StreamReader(filename))
    using (var csv = new CsvReader(reader, true))
    {
        for (int i = 0; i < csv.FieldCount; i++)
        {
            dt.Columns.Add(csv.GetFieldHeaders()[i], typeof(string));
        }
        while (csv.ReadNextRecord())
        {
            DataRow row = dt.NewRow();
            for (int i = 0; i < csv.FieldCount; i++)
            {
                row[i] = csv[i];
                product_codes.Add(csv[i]);
            }
            dt.Rows.Add(row);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
683
7
Gpt4D_Clone683_7.cs 1 24
Gpt4D_Clone683_7.cs 25 49
----------------------------------------

public static void ProcessCsv () {
    var filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable ("MyTable");
    List < string > product_codes = new List < string > ();
    using (CsvReader csv = new CsvReader (new StreamReader (filename), true))
    {
        int fieldCount = csv.FieldCount;
        string [] headers = csv.GetFieldHeaders ();
        for (int i = 0; i < headers.Length; i ++) {
            dt.Columns.Add (headers [i], typeof (string));
        }
        while (csv.ReadNextRecord ()) {
            DataRow dr = dt.NewRow ();
            for (int i = 0; i < fieldCount; i ++) {
                product_codes.Add (csv [i]);
                dr [i] = csv [i];
            }
            dt.Rows.Add (dr);
        }
    }}
----------------------------------------

public static void ProcessCsv()
{
    var filename = @"your_file_path\filename.csv";
    DataTable dt = new DataTable("MyTable");
    List<string> product_codes = new List<string>();
    using (StreamReader textReader = new StreamReader(filename))
    {
        CsvReader csvReader = new CsvReader(textReader, true);
        dt.Columns.AddRange(csvReader.GetFieldHeaders().Select(column => new DataColumn(column, typeof(string))).ToArray());
        while (csvReader.ReadNextRecord())
        {
            DataRow dataRow = dt.NewRow();
            for (int i = 0; i < csvReader.FieldCount; i++)
            {
                product_codes.Add(csvReader[i]);
                dataRow[i] = csvReader[i];
            }
            dt.Rows.Add(dataRow);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
0
Gpt4D_Clone686_0.cs 1 15
Gpt4D_Clone686_0.cs 16 29
----------------------------------------

static Type CreateEmailType () {
    var assemblyName = new AssemblyName ("DynamicAssembly");
    var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly (assemblyName, AssemblyBuilderAccess.Run);
    var moduleBuilder = assemblyBuilder.DefineDynamicModule (assemblyName.Name);
    var typeBuilder = moduleBuilder.DefineType ("Email", (TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.SequentialLayout | TypeAttributes.Serializable), typeof (ValueType));
    typeBuilder.DefineField ("From", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("To", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("Subject", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("Body", typeof (string), FieldAttributes.Public);
    return typeBuilder.CreateType ();
}
----------------------------------------

public static Type CreateEmailType(){
    var asmName = new AssemblyName("DynamicEmailAssembly");
    var asmBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(asmName, AssemblyBuilderAccess.RunAndSave);
    var modBuilder = asmBuilder.DefineDynamicModule(asmName.Name, asmName.Name + ".dll");
    var emailTypeBuilder = modBuilder.DefineType("Email", TypeAttributes.Public | TypeAttributes.SequentialLayout | TypeAttributes.Serializable);
    emailTypeBuilder.DefineField("From", typeof(string), FieldAttributes.Public);
    emailTypeBuilder.DefineField("To", typeof(string), FieldAttributes.Public);
    emailTypeBuilder.DefineField("Subject", typeof(string), FieldAttributes.Public);
    emailTypeBuilder.DefineField("Content", typeof(string), FieldAttributes.Public);
    return emailTypeBuilder.CreateType();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
1
Gpt4D_Clone686_1.cs 1 15
Gpt4D_Clone686_1.cs 16 29
----------------------------------------

static Type CreateEmailType () {
    var assemblyName = new AssemblyName ("DynamicAssembly");
    var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly (assemblyName, AssemblyBuilderAccess.Run);
    var moduleBuilder = assemblyBuilder.DefineDynamicModule (assemblyName.Name);
    var typeBuilder = moduleBuilder.DefineType ("Email", (TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.SequentialLayout | TypeAttributes.Serializable), typeof (ValueType));
    typeBuilder.DefineField ("From", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("To", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("Subject", typeof (string), FieldAttributes.Public);
    typeBuilder.DefineField ("Body", typeof (string), FieldAttributes.Public);
    return typeBuilder.CreateType ();
}
----------------------------------------

public static Type GenerateEmailType(){
    var an = new AssemblyName("DynamicAssemblyEmail");
    var ab = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.RunAndSave);
    var mb = ab.DefineDynamicModule(an.Name, an.Name + ".dll");
    var tb = mb.DefineType("Email", TypeAttributes.Public | TypeAttributes.AutoClass | TypeAttributes.BeforeFieldInit);
    tb.DefineField("Sender", typeof(string), FieldAttributes.Public);
    tb.DefineField("Recipient", typeof(string), FieldAttributes.Public);
    tb.DefineField("Subject", typeof(string), FieldAttributes.Public);
    tb.DefineField("Body", typeof(string), FieldAttributes.Public);
    return tb.CreateType();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
692
0
Gpt4D_Clone692_0.cs 1 51
Gpt4D_Clone692_0.cs 52 51
----------------------------------------

public void ReadXml (System.Xml.XmlReader reader) {
    var keySerializer = new XmlSerializer (typeof (TKey));
    var valueSerializer = new XmlSerializer (typeof (TValue));
    bool wasEmpty = reader.IsEmptyElement;
    reader.Read ();
    if (wasEmpty)
        return;
    while (reader.NodeType != System.Xml.XmlNodeType.EndElement) {
        reader.ReadStartElement ("item");
        reader.ReadStartElement ("key");
        var key = (TKey) keySerializer.Deserialize (reader);
        reader.ReadEndElement ();
        reader.ReadStartElement ("value");
        var value = (TValue) valueSerializer.Deserialize (reader);
        reader.ReadEndElement ();
        this.Add (key, value);
        reader.ReadEndElement ();
        reader.MoveToContent ();
    }
    reader.ReadEndElement ();
}
public void ReadXml (System.Xml.XmlReader reader)
{
    if (reader.MoveToContent() == XmlNodeType.Element && reader.LocalName == "item")
    {
        var keySerializer = new XmlSerializer (typeof (TKey));
        var valueSerializer = new XmlSerializer (typeof (TValue));
        bool wasEmpty = reader.IsEmptyElement;
        reader.ReadStartElement();
        if (wasEmpty)
            return;
        while (reader.MoveToContent() == XmlNodeType.Element && reader.LocalName == "key")
        {
            var key = (TKey) keySerializer.Deserialize (reader);
            reader.ReadEndElement();
            reader.MoveToContent();
            if(reader.NodeType == XmlNodeType.Element && reader.LocalName == "value")
            {
                var value = (TValue) valueSerializer.Deserialize (reader);
                reader.ReadEndElement();
                this.Add (key, value);
                reader.MoveToContent();
            }
        }
        reader.ReadEndElement();
    }
} 
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
697
0
Gpt4D_Clone697_0.cs 1 16
Gpt4D_Clone697_0.cs 17 32
----------------------------------------

private void textBox1_TextChanged (object sender, EventArgs e) {
    Point caretLocalLoc = textBox1.GetPositionFromCharIndex (textBox1.Text.Length - 1);
    Point caretLoc = new Point (caretLocalLoc.X + InitialTextBoxLoc.X, caretLocalLoc.Y + InitialTextBoxLoc.Y);
    Point scrollLoc = flowLayoutPanel1.AutoScrollPosition;
    if (caretLoc.X >= flowLayoutPanel1.Size.Width - 10) {
        scrollLoc.X = caretLoc.X;
    }
    if (caretLoc.Y >= flowLayoutPanel1.Size.Height - 10) {
        scrollLoc.Y = caretLoc.Y;
    }
    flowLayoutPanel1.AutoScrollPosition = scrollLoc;
}
----------------------------------------

 
private void textBox1_TextChanged (object sender, EventArgs e) {
    Point caretLocalLoc = textBox1.GetPositionFromCharIndex (textBox1.Text.Length - 1);
    Point caretLoc = new Point (caretLocalLoc.X + p.X, caretLocalLoc.Y + p.Y);
    Point scrollLoc = group.SuspendLayout().AutoScrollPosition;
    if (caretLoc.X >= group.SuspendLayout().Size.Width - 10) {
        scrollLoc.X = caretLoc.X;
    }
    if (caretLoc.Y >= group.SuspendLayout().Size.Height - 10) {
        scrollLoc.Y = caretLoc.Y;
    }
    group.SuspendLayout().AutoScrollPosition = scrollLoc;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
0
Gpt4D_Clone70_0.cs 1 17
Gpt4D_Clone70_0.cs 18 46
----------------------------------------

public void Set (int index) {
    int handlerCount;
    Action [] handlerList;
    lock (syncLock)
    {
        if (entries [index].IsSet)
            throw new InvalidOperationException ();
        entries [index].IsSet = true;
        handlerCount = entries [index].HandlerCount;
        handlerList = entries [index].HandlerList;
    } for (int i = 0; i < handlerCount; i ++)
        handlerList [i] ();
}
----------------------------------------

public void Set(int index) 
{
    int handlerCount;
    Action [] handlerList;
    Monitor.Enter(syncLock);
    try
    {
        if (entries [index].IsSet)
        {
            throw new InvalidOperationException();
        }
        entries [index].IsSet = true;
        handlerCount = entries [index].HandlerCount;
        handlerList = entries [index].HandlerList;
    }
    finally
    {
        Monitor.Exit(syncLock);
    }
    for (int i = 0; i < handlerCount; i++) 
    {
        handlerList [i] ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
1
Gpt4D_Clone70_1.cs 1 17
Gpt4D_Clone70_1.cs 18 42
----------------------------------------

public void Set (int index) {
    int handlerCount;
    Action [] handlerList;
    lock (syncLock)
    {
        if (entries [index].IsSet)
            throw new InvalidOperationException ();
        entries [index].IsSet = true;
        handlerCount = entries [index].HandlerCount;
        handlerList = entries [index].HandlerList;
    } for (int i = 0; i < handlerCount; i ++)
        handlerList [i] ();
}
----------------------------------------

public void Set(int index) 
{
    int handlerCount;
    Action[] handlerList;
    bool isSet;
    lock (syncLock)
    {
        isSet = entries [index].IsSet;
        handlerCount = entries [index].HandlerCount;
        handlerList = entries [index].HandlerList;
    }
    if (isSet)
    {
        throw new InvalidOperationException();
    }
    for (int i = 0; i < handlerCount; i ++) 
    {
        handlerList [i] ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
70
4
Gpt4D_Clone70_4.cs 1 17
Gpt4D_Clone70_4.cs 18 36
----------------------------------------

public void Set (int index) {
    int handlerCount;
    Action [] handlerList;
    lock (syncLock)
    {
        if (entries [index].IsSet)
            throw new InvalidOperationException ();
        entries [index].IsSet = true;
        handlerCount = entries [index].HandlerCount;
        handlerList = entries [index].HandlerList;
    } for (int i = 0; i < handlerCount; i ++)
        handlerList [i] ();
}
----------------------------------------

public void Set(int index) 
{
    bool isSet;
    Action[] handlers;
    
    lock (syncLock)
    {
        if (entries[index].IsSet)
        {
            throw new InvalidOperationException();
        }
        entries[index].IsSet = true;
        handlers = entries[index].HandlerList;
    }
    Parallel.ForEach(handlers, handler => handler());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
1
Gpt4D_Clone712_1.cs 1 15
Gpt4D_Clone712_1.cs 16 30
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control.GetType () == typeof (MenuStrip)) {
        MenuStrip strip = (MenuStrip) control;
        ApplyResourceToToolStripItemCollection (strip.Items, res, lang);
    }
    foreach (Control c in control.Controls) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control is MenuStrip) {
        MenuStrip strip = control as MenuStrip;
        ApplyResourceToToolStripItemCollection (strip.Items, res, lang);
    } else {
        foreach (Control c in control.Controls) {
            ApplyResourceToControl (res, c, lang);
            res.ApplyResources (c, c.Name, lang);
        }
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
2
Gpt4D_Clone712_2.cs 1 15
Gpt4D_Clone712_2.cs 16 29
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control.GetType () == typeof (MenuStrip)) {
        MenuStrip strip = (MenuStrip) control;
        ApplyResourceToToolStripItemCollection (strip.Items, res, lang);
    }
    foreach (Control c in control.Controls) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control is MenuStrip strip) {
        ApplyResourceToToolStripItemCollection(strip.Items, res, lang);
    } else if (control.Controls.Count > 0) {
        foreach (Control child in control.Controls) {
            ApplyResourceToControl(res, child, lang);
            res.ApplyResources(child, child.Name, lang);
        }
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
4
Gpt4D_Clone712_4.cs 1 15
Gpt4D_Clone712_4.cs 16 28
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control.GetType () == typeof (MenuStrip)) {
        MenuStrip strip = (MenuStrip) control;
        ApplyResourceToToolStripItemCollection (strip.Items, res, lang);
    }
    foreach (Control c in control.Controls) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control is MenuStrip strip)
        ApplyResourceToControlCollection (strip.Items, res, lang);
    foreach (var c in control.Controls.Cast<Control>()) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
5
Gpt4D_Clone712_5.cs 1 15
Gpt4D_Clone712_5.cs 16 28
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control.GetType () == typeof (MenuStrip)) {
        MenuStrip strip = (MenuStrip) control;
        ApplyResourceToToolStripItemCollection (strip.Items, res, lang);
    }
    foreach (Control c in control.Controls) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

private static void ApplyResourceToControl (ComponentResourceManager res, Control control, CultureInfo lang) {
    if (control.GetType ().IsSubclassOf (typeof (MenuStrip))) {
        ApplyResourceToToolStripItemCollection (((MenuStrip) control).Items, res, lang);
    }
    foreach (Control c in control.Controls) {
        ApplyResourceToControl (res, c, lang);
        res.ApplyResources (c, c.Name, lang);
    }
    res.ApplyResources (control, control.Name, lang);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
1
Gpt4D_Clone714_1.cs 1 15
Gpt4D_Clone714_1.cs 16 33
----------------------------------------

private int CountDivisorsOfNumber (int number) {
    int count = 0;
    int end = (int) Math.Sqrt (number);
    for (int i = 1; i < end; i ++) {
        if (number % i == 0)
            count += 2;
    }
    if (end * end == number)
        count ++;
    return count;
}
----------------------------------------

private int CountDivisorsOfNumber(int number) {
    int count = 0;
    int sqrt = (int)Math.sqrt(number);
    for(int i=1; i<=sqrt; i++){
        if(number % i == 0){ 
            count++;
            if(i != sqrt){
                count++;
            }
        }
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
4
Gpt4D_Clone714_4.cs 1 15
Gpt4D_Clone714_4.cs 16 25
----------------------------------------

private int CountDivisorsOfNumber (int number) {
    int count = 0;
    int end = (int) Math.Sqrt (number);
    for (int i = 1; i < end; i ++) {
        if (number % i == 0)
            count += 2;
    }
    if (end * end == number)
        count ++;
    return count;
}
----------------------------------------

private int CountDivisorsOfNumber(int number) {
    int divisor = 0;
    for(int i=1; i<=number; i++){
        if(number % i == 0)
            divisor++;
    }
    return divisor;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
6
Gpt4D_Clone714_6.cs 1 15
Gpt4D_Clone714_6.cs 16 23
----------------------------------------

private int CountDivisorsOfNumber (int number) {
    int count = 0;
    int end = (int) Math.Sqrt (number);
    for (int i = 1; i < end; i ++) {
        if (number % i == 0)
            count += 2;
    }
    if (end * end == number)
        count ++;
    return count;
}
----------------------------------------

private int CountDivisorsOfNumber(int number) {
    int count = 0;
    for (int i = 1; i <= number; i++)
        if (number % i == 0)
            count++;
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
7
Gpt4D_Clone714_7.cs 1 15
Gpt4D_Clone714_7.cs 16 26
----------------------------------------

private int CountDivisorsOfNumber (int number) {
    int count = 0;
    int end = (int) Math.Sqrt (number);
    for (int i = 1; i < end; i ++) {
        if (number % i == 0)
            count += 2;
    }
    if (end * end == number)
        count ++;
    return count;
}
----------------------------------------

private int CountDivisorsOfNumber(int number) {
    int count = 0;
    for (int i = number; i > 0 ; --i) {
        if (number % i == 0) 
            count++;
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
1
Gpt4D_Clone743_1.cs 1 15
Gpt4D_Clone743_1.cs 16 29
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    textBox2.Clear();
    try {
        float v = float.Parse(textBox1.Text.Trim());
        textBox2.AppendText((Math.Sin(v)).ToString(CultureInfo.InvariantCulture));
    } catch {
        textBox2.Clear();
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
2
Gpt4D_Clone743_2.cs 1 15
Gpt4D_Clone743_2.cs 16 30
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click(object sender, EventArgs e)
{
    textBox2.Clear();
    try {
        var v = textBox1.Text;
        var value = Single.Parse(v);
        textBox2.AppendText((Math.Sin(value)).ToString());
    }
    catch {
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
3
Gpt4D_Clone743_3.cs 1 15
Gpt4D_Clone743_3.cs 16 29
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    string v = textBox1.Text;
    textBox2.Clear();
    try {
        float value = float.Parse(v);
        textBox2.AppendText((Math.Sin(value)).ToString());
    } catch {
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
4
Gpt4D_Clone743_4.cs 1 15
Gpt4D_Clone743_4.cs 16 29
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    textBox2.Clear();
    try {
        var v = Convert.ToDouble(textBox1.Text);
        textBox2.AppendText(Math.Sin(v).ToString());
    } catch {
        textBox2.Clear();
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
5
Gpt4D_Clone743_5.cs 1 15
Gpt4D_Clone743_5.cs 16 29
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    textBox2.Clear();
    bool isValid = double.TryParse(textBox1.Text, out double v);
    if(isValid)
        textBox2.AppendText((Math.Sin(v)).ToString());
    else {
        textBox2.Clear();
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
6
Gpt4D_Clone743_6.cs 1 15
Gpt4D_Clone743_6.cs 16 29
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    textBox2.Clear();
    try {
        decimal v = Convert.ToDecimal(textBox1.Text);
        textBox2.AppendText((Math.Sin(Double.Parse(v.ToString()))).ToString());
    } catch {
        textBox2.Clear();
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
8
Gpt4D_Clone743_8.cs 1 15
Gpt4D_Clone743_8.cs 16 28
----------------------------------------

private void button1_Click (object sender, EventArgs e) {
    textBox2.Clear ();
    try {
        float v = float.Parse (textBox1.Text);
        textBox2.AppendText ((Math.Sin (v)).ToString ());
    }
    catch {
        textBox2.Clear ();
        textBox2.AppendText ("Invalid Input");
    }
}
----------------------------------------

private void button1_Click (object sender, EventArgs e)
{
    textBox2.Clear();
    try {
        textBox2.AppendText((Math.Sin(Convert.ToSingle(textBox1.Text))).ToString());
    } catch {
        textBox2.Clear();
        textBox2.AppendText("Invalid Input");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
764
0
Gpt4D_Clone764_0.cs 1 19
Gpt4D_Clone764_0.cs 20 35
----------------------------------------

public string ConvertCsvFileToJsonObject (string path) {
    var csv = new List < string [] > ();
    var lines = File.ReadAllLines (path);
    foreach (string line in lines)
        csv.Add (line.Split (','));
    var properties = lines [0].Split (',');
    var listObjResult = new List < Dictionary < string, string > > ();
    for (int i = 1; i < lines.Length; i ++) {
        var objResult = new Dictionary < string, string > ();
        for (int j = 0; j < properties.Length; j ++)
            objResult.Add (properties [j], csv [i] [j]);
        listObjResult.Add (objResult);
    }
    return JsonConvert.SerializeObject (listObjResult);
}
----------------------------------------

public string ConvertCsvFileToJsonObject (string pth) {
	    var csvRows = new List < string [] > ();
	    var lines = File.ReadAllLines (pth);
	    lines.ToList ().ForEach (line => csvRows.Add (line.Split (',')));
	    var properties = lines.FirstOrDefault ()?.Split (',');
	    var listObjResult = new List < Dictionary < string, string > > ();
	    for (int i = 1; i < lines.Length; i ++) {
		var dictRow = new Dictionary < string, string > ();
		for (int j = 0; j < properties.Length; j ++)
		    dictRow[properties [j]] = csvRows [i] [j];
		listObjResult.Add (dictRow);
	    }
	    return JsonConvert.SerializeObject (listObjResult);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
783
0
Gpt4D_Clone783_0.cs 1 19
Gpt4D_Clone783_0.cs 20 33
----------------------------------------

private void panel1_MouseMove (object sender, MouseEventArgs e) {
    using (Graphics g = panel1.CreateGraphics ())
    {
        using (Pen clear_pen = new Pen (panel1.BackColor, PEN_WIDTH))
        {
            clear_pen.StartCap = START_CAP;
            clear_pen.EndCap = END_CAP;
            g.DrawLine (clear_pen, mAnchorPoint, mPreviousPoint);
        } mPreviousPoint = e.Location;
        using (Pen draw_pen = new Pen (Color.Black, PEN_WIDTH))
        {
            draw_pen.StartCap = START_CAP;
            draw_pen.EndCap = END_CAP;
            g.DrawLine (draw_pen, mAnchorPoint, e.Location);
        }}}
----------------------------------------

private void panel1_MouseMove (object sender, MouseEventArgs e) 
{
    using (Graphics g = panel1.CreateGraphics ())
    {
        using (Pen pen = new Pen (Color.Green, 3f))
        {
            pen.StartCap = START_CAP;
            pen.EndCap = END_CAP;
            g.DrawLine (pen, mAnchorPoint, mPreviousPoint);
            mPreviousPoint = e.Location;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
789
0
Gpt4D_Clone789_0.cs 1 16
Gpt4D_Clone789_0.cs 17 31
----------------------------------------

void OnShapeBrushChanged () {
    Brush rtn = default (Brush);
    for (int i = 0; i < ShapeChildren.Count; i ++) {
        Shape shape = ShapeChildren [i];
        if (i == 0) {
            rtn = shape.Fill;
        } else if (rtn != shape.Fill) {
            SetValue (FillDifferentProperty, default (Brush));
        } else
            SetValue (FillDifferentProperty, rtn);
    }
}
----------------------------------------

void OnShapeBrushChanged () {
	    Brush comparison = default (Brush);
	    Parallel.For(0, ShapeChildren.Count, (i, state) =>
	    {
		var shape = ShapeChildren [i];
		if (i == 0)
		    comparison = shape.Fill;
		else if (comparison != shape.Fill)
		    SetValue(FillDifferentProperty, default (Brush));
		else
		    SetValue(FillDifferentProperty, comparison);
	    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
803
1
Gpt4D_Clone803_1.cs 1 17
Gpt4D_Clone803_1.cs 18 40
----------------------------------------

public static childItem FindVisualChild < childItem > (DependencyObject obj) where childItem : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount (obj); i ++) {
        DependencyObject child = VisualTreeHelper.GetChild (obj, i);
        if (child != null && child is childItem)
            return (childItem) child;
        else {
            childItem childOfChild = FindVisualChild < childItem > (child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

public static TChildType FindVisualChild<TChildType>(DependencyObject depObj) where TChildType : DependencyObject
{
    if (depObj == null) return null;
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(depObj); i++)
    {
        var child = VisualTreeHelper.GetChild(depObj, i);
        var visualChild = child as TChildType;
        if (visualChild != null)
        {
            return visualChild;
        }
        var childItem = FindVisualChild<TChildType>(child);
        if (childItem != null) return childItem;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
803
2
Gpt4D_Clone803_2.cs 1 17
Gpt4D_Clone803_2.cs 18 36
----------------------------------------

public static childItem FindVisualChild < childItem > (DependencyObject obj) where childItem : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount (obj); i ++) {
        DependencyObject child = VisualTreeHelper.GetChild (obj, i);
        if (child != null && child is childItem)
            return (childItem) child;
        else {
            childItem childOfChild = FindVisualChild < childItem > (child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

public static TChildItem FindVisualChild<TChildItem>(DependencyObject obj) where TChildItem : DependencyObject
{
    int childrenCount = VisualTreeHelper.GetChildrenCount(obj);
    for (int i = 0; i < childrenCount; i++)
    {
        var child = VisualTreeHelper.GetChild(obj, i);
        if (child is TChildItem childItem)
            return childItem;
        else
        {
            var childOfChild = FindVisualChild<TChildItem>(child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
803
3
Gpt4D_Clone803_3.cs 1 17
Gpt4D_Clone803_3.cs 18 29
----------------------------------------

public static childItem FindVisualChild < childItem > (DependencyObject obj) where childItem : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount (obj); i ++) {
        DependencyObject child = VisualTreeHelper.GetChild (obj, i);
        if (child != null && child is childItem)
            return (childItem) child;
        else {
            childItem childOfChild = FindVisualChild < childItem > (child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

public static childItem FindVisualChild<childItem>(DependencyObject obj) where childItem : DependencyObject {
    var count = VisualTreeHelper.GetChildrenCount(obj);
    for (var i = 0; i < count; i++) {
        var child = VisualTreeHelper.GetChild(obj, i);
        if (child is childItem item) return item;
        var childOfChild = FindVisualChild<childItem>(child);
        if (childOfChild != null) return childOfChild;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
803
4
Gpt4D_Clone803_4.cs 1 17
Gpt4D_Clone803_4.cs 18 28
----------------------------------------

public static childItem FindVisualChild < childItem > (DependencyObject obj) where childItem : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount (obj); i ++) {
        DependencyObject child = VisualTreeHelper.GetChild (obj, i);
        if (child != null && child is childItem)
            return (childItem) child;
        else {
            childItem childOfChild = FindVisualChild < childItem > (child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

public static T FindVisualChild<T>(DependencyObject obj) where T : DependencyObject {
    foreach (DependencyObject child in Enumerable.Range(0, VisualTreeHelper.GetChildrenCount(obj)).Select(i => VisualTreeHelper.GetChild(obj, i)).Where(child => child != null)) {
        if (child is T item) return item;
        else {
            T childOfChild = FindVisualChild<T>(child);
            if (childOfChild != null) return childOfChild;
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
803
5
Gpt4D_Clone803_5.cs 1 17
Gpt4D_Clone803_5.cs 18 28
----------------------------------------

public static childItem FindVisualChild < childItem > (DependencyObject obj) where childItem : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount (obj); i ++) {
        DependencyObject child = VisualTreeHelper.GetChild (obj, i);
        if (child != null && child is childItem)
            return (childItem) child;
        else {
            childItem childOfChild = FindVisualChild < childItem > (child);
            if (childOfChild != null)
                return childOfChild;
        }
    }
    return null;
}
----------------------------------------

public static T FindVisualChild<T>(DependencyObject obj) where T : DependencyObject {
    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(obj); i++) {
        var child = VisualTreeHelper.GetChild(obj, i);
        if (child is T item) return item;
        var childOfChild = FindVisualChild<T>(child);
        if (childOfChild != null) return childOfChild;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
1
Gpt4D_Clone806_1.cs 1 20
Gpt4D_Clone806_1.cs 21 44
----------------------------------------

static void HasRows (SqlConnection connection) {
    using (connection)
    using (SqlCommand command = new SqlCommand ("SELECT CategoryID, CategoryName FROM Categories;", connection))
    {
        connection.Open ();
        using (SqlDataReader reader = command.ExecuteReader ())
        {
            if (reader.HasRows) {
                while (reader.Read ()) {
                    Console.WriteLine ("{0}\t{1}", reader.GetInt32 (0), reader.GetString (1));
                }
            } else {
                Console.WriteLine ("No rows found.");
            }
            reader.Close ();
        }}}
----------------------------------------

static void HasRows(SqlConnection connection)
{
    using (SqlCommand command = new SqlCommand())
    {
        command.CommandText = "SELECT CategoryID, CategoryName FROM Categories;";
        command.Connection = connection;
        connection.Open();
        SqlDataReader reader = command.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                Console.WriteLine(String.Format("{0}\t{1}", reader.GetInt32(0), reader.GetString(1)));
            }
        }
        else
        {
            Console.WriteLine("No rows found.");
        }
        reader.Close();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
2
Gpt4D_Clone806_2.cs 1 20
Gpt4D_Clone806_2.cs 21 43
----------------------------------------

static void HasRows (SqlConnection connection) {
    using (connection)
    using (SqlCommand command = new SqlCommand ("SELECT CategoryID, CategoryName FROM Categories;", connection))
    {
        connection.Open ();
        using (SqlDataReader reader = command.ExecuteReader ())
        {
            if (reader.HasRows) {
                while (reader.Read ()) {
                    Console.WriteLine ("{0}\t{1}", reader.GetInt32 (0), reader.GetString (1));
                }
            } else {
                Console.WriteLine ("No rows found.");
            }
            reader.Close ();
        }}}
----------------------------------------

static void HasRows(SqlConnection connection)
{
    connection.Open();
    SqlCommand command = new SqlCommand("SELECT CategoryID, CategoryName FROM Categories;", connection);
    SqlDataReader reader = command.ExecuteReader();
    if (reader.HasRows)
    {
        while (reader.Read())
        {
            Console.Write(reader.GetInt32(0));
            Console.Write("\t");
            Console.WriteLine(reader.GetString(1));
        }
    }
    else
    {
        Console.WriteLine("No rows found.");
    }
    reader.Close();
    connection.Close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
4
Gpt4D_Clone806_4.cs 1 20
Gpt4D_Clone806_4.cs 21 42
----------------------------------------

static void HasRows (SqlConnection connection) {
    using (connection)
    using (SqlCommand command = new SqlCommand ("SELECT CategoryID, CategoryName FROM Categories;", connection))
    {
        connection.Open ();
        using (SqlDataReader reader = command.ExecuteReader ())
        {
            if (reader.HasRows) {
                while (reader.Read ()) {
                    Console.WriteLine ("{0}\t{1}", reader.GetInt32 (0), reader.GetString (1));
                }
            } else {
                Console.WriteLine ("No rows found.");
            }
            reader.Close ();
        }}}
----------------------------------------

static void HasRows(SqlConnection connection)
{
    using (connection)
    {
        SqlCommand command = new SqlCommand("SELECT CategoryID, CategoryName FROM Categories;", connection);
        connection.Open();
        SqlDataReader reader = command.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                Console.WriteLine(reader.GetInt32(0) + "\t" + reader.GetString(1));
            }
        }
        else
        {
            Console.WriteLine("No rows found.");
        }
        reader.Close();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
5
Gpt4D_Clone806_5.cs 1 20
Gpt4D_Clone806_5.cs 21 38
----------------------------------------

static void HasRows (SqlConnection connection) {
    using (connection)
    using (SqlCommand command = new SqlCommand ("SELECT CategoryID, CategoryName FROM Categories;", connection))
    {
        connection.Open ();
        using (SqlDataReader reader = command.ExecuteReader ())
        {
            if (reader.HasRows) {
                while (reader.Read ()) {
                    Console.WriteLine ("{0}\t{1}", reader.GetInt32 (0), reader.GetString (1));
                }
            } else {
                Console.WriteLine ("No rows found.");
            }
            reader.Close ();
        }}}
----------------------------------------

static void HasRows (SqlConnection connection) 
{
   using (command) {
       command.Connection = connection;
       command.CommandText = "SELECT CategoryID, CategoryName FROM Categories;";
       connection.Open();
       using (reader = command.ExecuteReader()) {
           while (reader.Read ()) {
               Console.WriteLine ("{0}\t{1}", reader["CategoryID"], reader["CategoryName"]);
           }
           if (!reader.HasRows){
               Console.WriteLine ("No rows found.");
           }
       }
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
806
6
Gpt4D_Clone806_6.cs 1 20
Gpt4D_Clone806_6.cs 21 42
----------------------------------------

static void HasRows (SqlConnection connection) {
    using (connection)
    using (SqlCommand command = new SqlCommand ("SELECT CategoryID, CategoryName FROM Categories;", connection))
    {
        connection.Open ();
        using (SqlDataReader reader = command.ExecuteReader ())
        {
            if (reader.HasRows) {
                while (reader.Read ()) {
                    Console.WriteLine ("{0}\t{1}", reader.GetInt32 (0), reader.GetString (1));
                }
            } else {
                Console.WriteLine ("No rows found.");
            }
            reader.Close ();
        }}}
----------------------------------------

static void HasRows(SqlConnection connection)
{
    using (SqlCommand command = connection.CreateCommand())
    {
        command.CommandText = "SELECT CategoryID, CategoryName FROM Categories;";
        connection.Open();
        SqlDataReader reader = command.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                Console.WriteLine(reader.GetInt32(0) + "\t" + reader.GetString(1));
            }
        }
        else
        {
            Console.WriteLine("No rows found.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
0
Gpt4D_Clone812_0.cs 1 15
Gpt4D_Clone812_0.cs 16 32
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveAll();
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    _rootNode.AppendChild(_userNode);
	    foreach (Node n in nodeList)
	    {
		var xmlData = n.GenerateXML(_xmlDoc);
		foreach(XmlElement ele in xmlData)
		{
		    _userNode.AppendChild(ele);
		}
	    }
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
1
Gpt4D_Clone812_1.cs 1 15
Gpt4D_Clone812_1.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveChild(_userNode);
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    nodeList.ForEach(n => {
		foreach (XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    _userNode.AppendChild(e);
		}
	    });
	    _rootNode.AppendChild(_userNode);
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
2
Gpt4D_Clone812_2.cs 1 15
Gpt4D_Clone812_2.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveChild(_userNode);
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    nodeList.Reverse().ForEach(n => {
		foreach(XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    _userNode.AppendChild(e);
		}
	    });
	    _rootNode.AppendChild(_userNode);
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
3
Gpt4D_Clone812_3.cs 1 15
Gpt4D_Clone812_3.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveChild(_userNode);
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    nodeList.OrderBy(n => n).ToList().ForEach(n => {
		foreach(XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    _userNode.AppendChild(e);
		}
	    });
	    _rootNode.AppendChild(_userNode);
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
4
Gpt4D_Clone812_4.cs 1 15
Gpt4D_Clone812_4.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    _rootNode.InsertAfter(_userNode, _rootNode.LastChild);
	    foreach(Node n in nodeList)
	    {
		foreach(XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    _userNode.AppendChild(e);
		}
	    }
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
5
Gpt4D_Clone812_5.cs 1 15
Gpt4D_Clone812_5.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    _rootNode.ReplaceChild(_userNode, _rootNode.FirstChild);
	    foreach(Node n in nodeList)
	    {
		foreach(XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    _userNode.AppendChild(e);
		}
	    }
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
6
Gpt4D_Clone812_6.cs 1 15
Gpt4D_Clone812_6.cs 16 29
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
    foreach (Node n in nodeList)
    {
		XmlElement displaySettings = _xmlDoc.CreateElement("Display_Settings");
		foreach(XmlElement e in n.GenerateXML(_xmlDoc))
		{
		    displaySettings.AppendChild(e);
		}
		_rootNode.AppendChild(displaySettings);
	    }
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
8
Gpt4D_Clone812_8.cs 1 15
Gpt4D_Clone812_8.cs 16 24
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveChild(_userNode);
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    _rootNode.AppendChild(_userNode);
	    nodeList.ForEach(n => n.GenerateXML(_xmlDoc).ToList().ForEach(e => _userNode.AppendChild(e)));
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
812
9
Gpt4D_Clone812_9.cs 1 15
Gpt4D_Clone812_9.cs 16 24
----------------------------------------

public void GenereateSettingsFile (List < Node > nodeList, string filePath) {
    _rootNode.RemoveChild (_userNode);
    _userNode = _xmlDoc.CreateElement ("Display_Settings");
    _rootNode.AppendChild (_userNode);
    foreach (Node n in nodeList) {
        foreach (XmlElement e in n.GenerateXML (_xmlDoc)) {
            _userNode.AppendChild (e);
        }
    }
    _xmlDoc.Save (filePath);
}
----------------------------------------

public void GenerateSettingsFile(List<Node> nodeList, string filePath)
{
	    _rootNode.RemoveChild(_userNode);
	    _userNode = _xmlDoc.CreateElement("Display_Settings");
	    _rootNode.AppendChild(_userNode);
	    nodeList.Select(n => n.GenerateXML(_xmlDoc)).SelectMany(x => x).ToList().ForEach(e => _userNode.AppendChild(e));
	    _xmlDoc.Save(filePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
1
Gpt4D_Clone823_1.cs 1 21
Gpt4D_Clone823_1.cs 22 40
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var response = new ApiResponse<IEnumerable<Customers>>();
    var isValid = tokenAuthorization.validateToken (access_token);
    if (! isValid) {
        response.Message = "Invalid Token";
    } else {
        try {
            response.IsSuccess = true;
            response.Data = customerService.FindCustomerById(id);
        } 
        catch (Exception ex) {
            response.Message = "Error Occured: " + ex.Message;
        } 
    }
    return response;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
2
Gpt4D_Clone823_2.cs 1 21
Gpt4D_Clone823_2.cs 22 39
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var res = new ApiResponse<IEnumerable<Customers>>();
    var isAuthorized = tokenAuthorization.validateToken (access_token);
    if(isAuthorized) {
        try {
            res.IsSuccess = true;
            res.Data = customersData.Get(id);
        } catch (Exception exc) {
            res.Message = exc.ToString();
        }
    } else {
        res.Message = "Permission Denied";
    }
    return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
3
Gpt4D_Clone823_3.cs 1 21
Gpt4D_Clone823_3.cs 22 40
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var apiResult = new ApiResponse<IEnumerable<Customers>>();
    bool isAuth = tokenAuthorization.validateToken (access_token);
    if (!isAuth) {
        apiResult.Message = "Token Expired";
        return apiResult;
    }
    try {
        apiResult.IsSuccess = true;
        apiResult.Data = customerRepository.GetById(id);
    }
    catch (Exception ex) {
        apiResult.Message = "Error: " + ex.Message;
    }
    return apiResult;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
4
Gpt4D_Clone823_4.cs 1 21
Gpt4D_Clone823_4.cs 22 39
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var response = new ApiResponse<IEnumerable<Customers>>();
    var tokenCheck = tokenAuthorization.validateToken (access_token);
    if (!tokenCheck) {
        response.Message = "Please login again";
        return response;
    }
    try {
        response.Data = customerManager.ById(id);
        response.IsSuccess = response.Data != null;
    } catch (Exception ex) {
        response.Message = "Application Error: " + ex.Message;
    }
    return response;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
5
Gpt4D_Clone823_5.cs 1 21
Gpt4D_Clone823_5.cs 22 38
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var apiResult = new ApiResponse<IEnumerable<Customers>>();
    if (!tokenAuthorization.validateToken(access_token)) {
        apiResult.Message = "Token Invalid";
        return apiResult;
    }
    try {
        apiResult.Data = customersDatabase.GetById(id);
        apiResult.IsSuccess = apiResult.Data != null;
    } catch (Exception ex) {
        apiResult.Message = ex.ToString();
    }
    return apiResult;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
6
Gpt4D_Clone823_6.cs 1 21
Gpt4D_Clone823_6.cs 22 37
----------------------------------------

public ApiResponse < IEnumerable < Customers > > getCustomersById (string id) {
    var retVal = new ApiResponse < IEnumerable < Customers > > ();
    var isAuthenticated = tokenAuthorization.validateToken (access_token);
    if (! isAuthenticated) {
        retVal.Message = "You are not authrized";
        return retVal;
    }
    try {
        var data = yourList;
        retVal.IsSuccess = true;
        retVal.Data = yourList;
    }
    catch (exception ex) {
        retVal.Message = yourmessage;
    }
    return retVal;
}
----------------------------------------

public ApiResponse<IEnumerable<Customers>> getCustomersById (string id) {
    var retval = new ApiResponse<IEnumerable<Customers>>();
    if (!tokenAuthorization.validateToken (access_token)) {
        retval.Message = "Unauthorized";
        return retval;
    }
    try {
        retval.IsSuccess = true;
        retval.Data = customerRepository.GetCustomerById(id);
    }
    catch (Exception ex) {
        retval.Message = ex.Message;
    }
    return retval;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
831
0
Gpt4D_Clone831_0.cs 1 19
Gpt4D_Clone831_0.cs 20 33
----------------------------------------

public Control FindControl (Control root, string name) {
    if (root == null)
        throw new ArgumentNullException ("root");
    var stack = new Stack < Control > ();
    stack.Push (root);
    while (stack.Count > 0) {
        Control item = stack.Pop ();
        if (item.Name == name)
            return item;
        foreach (Control child in item.Controls) {
            stack.Push (child);
        }
    }
    return null;
}
----------------------------------------

public Control FindControl(Control root, string name)
{
    if(name == null) throw new ArgumentNullException("name");
    if(root == null) return null;
    if(root.Name == name) return root;
    foreach(Control child in root.Controls){
        Control result = FindControl(child, name);
        if(result != null) return result;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
831
2
Gpt4D_Clone831_2.cs 1 19
Gpt4D_Clone831_2.cs 20 33
----------------------------------------

public Control FindControl (Control root, string name) {
    if (root == null)
        throw new ArgumentNullException ("root");
    var stack = new Stack < Control > ();
    stack.Push (root);
    while (stack.Count > 0) {
        Control item = stack.Pop ();
        if (item.Name == name)
            return item;
        foreach (Control child in item.Controls) {
            stack.Push (child);
        }
    }
    return null;
}
----------------------------------------

public Control FindControl(Control root, string name) 
{
    if(root == null) throw new ArgumentNullException("root");
    if(root.Name == name) return root;
    foreach(Control control in root.Controls){
        Control findControl = FindControl(control, name);
        if(findControl != null) return findControl;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
0
Gpt4D_Clone838_0.cs 1 18
Gpt4D_Clone838_0.cs 19 36
----------------------------------------

protected void Button1_Click (object sender, EventArgs e) {
    DataTable dt = new DataTable ();
    if (dt.Columns.Count == 0) {
        dt.Columns.Add ("PayScale", typeof (string));
        dt.Columns.Add ("IncrementAmt", typeof (string));
        dt.Columns.Add ("Period", typeof (string));
    }
    DataRow NewRow = dt.NewRow ();
    NewRow [0] = TextBox1.Text;
    NewRow [1] = TextBox2.Text;
    dt.Rows.Add (NewRow);
    GridView1.DataSource = dt;
    GridViewl.DataBind ();
}
----------------------------------------

protected void PayScaleButton_Click (object sender, EventArgs e) 
{
    DataTable dTable = new DataTable ();
    if (!dTable.Columns.Contains("PayScale")) 
    {
        dTable.Columns.Add ("PayScale", typeof (string));
        dTable.Columns.Add ("IncrementAmt", typeof (string));
        dTable.Columns.Add ("Period", typeof (string));
    }
    DataRow rowNew = dTable.NewRow ();
    rowNew ["PayScale"] = TextBox_Scale.Text;
    rowNew ["IncrementAmt"] = TextBox_Increment.Text;
    dTable.Rows.Add (rowNew);
    ScaleGridView.DataSource = dTable;
    ScaleGridView.DataBind ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
1
Gpt4D_Clone838_1.cs 1 18
Gpt4D_Clone838_1.cs 19 33
----------------------------------------

protected void Button1_Click (object sender, EventArgs e) {
    DataTable dt = new DataTable ();
    if (dt.Columns.Count == 0) {
        dt.Columns.Add ("PayScale", typeof (string));
        dt.Columns.Add ("IncrementAmt", typeof (string));
        dt.Columns.Add ("Period", typeof (string));
    }
    DataRow NewRow = dt.NewRow ();
    NewRow [0] = TextBox1.Text;
    NewRow [1] = TextBox2.Text;
    dt.Rows.Add (NewRow);
    GridView1.DataSource = dt;
    GridViewl.DataBind ();
}
----------------------------------------

protected void Button1_OnClick (object sender, EventArgs e) {
    var table = new DataTable ();
    if (!table.Columns.Contains("PayScale")) {
        table.Columns.Add ("PayScale", typeof (string));
        table.Columns.Add ("IncrementAmt", typeof (string));
        table.Columns.Add ("Period", typeof (string));
    }
    var newRow = table.NewRow ();
    newRow ["PayScale"] = TextBox1.Text;
    newRow ["IncrementAmt"] = TextBox2.Text;
    table.Rows.Add (newRow);
    Grid1.DataSource = table;
    Grid1.DataBind ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
2
Gpt4D_Clone838_2.cs 1 18
Gpt4D_Clone838_2.cs 19 38
----------------------------------------

protected void Button1_Click (object sender, EventArgs e) {
    DataTable dt = new DataTable ();
    if (dt.Columns.Count == 0) {
        dt.Columns.Add ("PayScale", typeof (string));
        dt.Columns.Add ("IncrementAmt", typeof (string));
        dt.Columns.Add ("Period", typeof (string));
    }
    DataRow NewRow = dt.NewRow ();
    NewRow [0] = TextBox1.Text;
    NewRow [1] = TextBox2.Text;
    dt.Rows.Add (NewRow);
    GridView1.DataSource = dt;
    GridViewl.DataBind ();
}
----------------------------------------

protected void Button_Clicked(object o, EventArgs evt)
{
    DataTable t = new DataTable();
    if(t.Columns.Count == 0)
    {
        t.Columns.AddRange(new DataColumn[] { 
            new DataColumn("PayScale", typeof(string)),
            new DataColumn("IncrementAmt", typeof(string)),
            new DataColumn("Period", typeof(string))
        });
    }
    DataRow r = t.NewRow();
    r[0] = TextBox_A.Text;
    r[1] = TextBox_B.Text;
    t.Rows.Add(r);
    myGridView.DataSource = t;
    myGridView.DataBind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
839
0
Gpt4D_Clone839_0.cs 1 24
Gpt4D_Clone839_0.cs 25 41
----------------------------------------

private static int ? GetAssemblyDelimiterIndex (string fullyQualifiedTypeName) {
    int scope = 0;
    for (int i = 0; i < fullyQualifiedTypeName.Length; i ++) {
        char current = fullyQualifiedTypeName [i];
        switch (current) {
            case '[' :
                scope ++;
                break;
            case ']' :
                scope --;
                break;
            case ',' :
                if (scope == 0) {
                    return i;
                }
                break;
        }
    }
    return null;
}
----------------------------------------

private static int? GetAssemblyDelimiterIndex1(char[] fqTypeName)
{
	    int s = 0;
	    foreach (var idx in Enumerable.Range(0, fqTypeName.Length))
	    {
		switch (fqTypeName[idx])
		{
		    case '[': s++; break;
		    case ']': s--; break;
		    case ',': if (s == 0) return idx; break;
		}
	    }
	    return null;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
0
Gpt4D_Clone856_0.cs 1 19
Gpt4D_Clone856_0.cs 20 40
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int attemptCount)
{
    Console.WriteLine ("Enter a guess: ");
    char letter = char.Parse (Console.ReadLine());
    for (int i = 0; i < HiddenWord.Length; i++)
    {
        if (HiddenWord[i] == letter && dashes[i] != letter)
        {
            attemptCount++;
            dashes[i] = letter;
            foreach (var dash in dashes)
            {
                Console.Write(dash + " ");
            }
        }
    }
    if (attemptCount < dashes.Length)
        askUserToGuess(attemptCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
1
Gpt4D_Clone856_1.cs 1 19
Gpt4D_Clone856_1.cs 20 40
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int count)
{
    Console.WriteLine("Enter your letter ");
    char letter = Convert.ToChar (Console.ReadLine ());
    for(int i = 0; i < HiddenWord.Length; i++)
    {
        if(HiddenWord[i] == letter && dashes[i] != letter)
        {
            count++;
            dashes[i] = letter;
            dashes.ToList().ForEach(x => Console.Write(x+ " "));
        }
    }
    if (count < dashes.Length)
    {
            askUserToGuess(count);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
2
Gpt4D_Clone856_2.cs 1 19
Gpt4D_Clone856_2.cs 20 37
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int count)
{
    Console.WriteLine ("Specify a letter: ");
    char letter = char.Parse(Console.ReadLine());
    foreach (char character in HiddenWord)
    {
        if (character == letter && dashes[HiddenWord.IndexOf(character)]!=letter) 
        {
            count++;
            dashes[HiddenWord.IndexOf(character)] = letter;
            dashes.ToList().ForEach(x => Console.Write(x+ " "));
        }
    }
    if (count < dashes.Length)
        askUserToGuess(count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
3
Gpt4D_Clone856_3.cs 1 20
Gpt4D_Clone856_3.cs 21 37
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
 
----------------------------------------

private static void askUserToGuess(int total)
{
    Console.WriteLine("Put a letter: ");
    char guess = Console.ReadKey().KeyChar;
    for (int cnt = 0; cnt < HiddenWord.Length; cnt++)
    {
        if (HiddenWord[cnt] == guess && dashes[cnt] != guess)
        {
            total++;
            dashes[cnt] = guess;
            Array.ForEach(dashes, x => Console.Write(x + " "));
        }
    }
    if (total < dashes.Length)
        askUserToGuess(total);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
4
Gpt4D_Clone856_4.cs 1 19
Gpt4D_Clone856_4.cs 20 37
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int count)
{
    Console.WriteLine ("Your letter: ");
    char userInput = Console.ReadLine()[0];
    for(int position = 0; position < HiddenWord.Length; position++)
    {
        if(HiddenWord[position] == userInput && dashes[position] != userInput)
        {
            count++;
            dashes[position] = userInput;
            dashes.ToList().ForEach(element => Console.Write(element + " "));
        }
    }
    if(count < dashes.Length)
        askUserToGuess(count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
5
Gpt4D_Clone856_5.cs 1 19
Gpt4D_Clone856_5.cs 20 37
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int num)
{
    Console.WriteLine("Type a letter: ");
    var userGuess = (Console.ReadLine()[0]);
    for (int index = 0; index < HiddenWord.Length; index++)
    {
        if (HiddenWord[index] == userGuess && dashes[index] != userGuess)
        {
            num++;
            dashes[index] = userGuess;
            dashes.ToList().ForEach(x => Console.Write(x + " "));
        }
    }
    if (num < dashes.Length)
        askUserToGuess(num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
856
6
Gpt4D_Clone856_6.cs 1 19
Gpt4D_Clone856_6.cs 20 37
----------------------------------------

private static void askUserToGuess (int count) {
    Console.WriteLine ("Enter a letter");
    char letter = char.Parse (Console.ReadLine ());
    for (int i = 0; i < HiddenWord.Length; i ++) {
        if ((HiddenWord [i] == letter) && (dashes [i] != letter)) {
            count ++;
            dashes [i] = letter;
            for (int j = 0; j < dashes.Length; j ++) {
                Console.Write (dashes [j] + " ");
            }
        }
    }
    if (count < dashes.Length)
        askUserToGuess (count);
}
----------------------------------------

private static void askUserToGuess(int count)
{
    Console.Write ("Please enter a letter: ");
    char letterGuess = char.Parse(Console.ReadLine());
    for (int i = 0; i < HiddenWord.Length; i++)
    {
        if (HiddenWord[i] == letterGuess && dashes[i] != letterGuess)
        {
            count++;
            dashes[i] = letterGuess;
            dashes.ToList().ForEach(x => Console.Write(x + " "));
        }
    }
    if (count < dashes.Length)
        askUserToGuess(count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
857
0
Gpt4D_Clone857_0.cs 1 21
Gpt4D_Clone857_0.cs 22 32
----------------------------------------

public int PerformAction () {
    int state;
    if (SomeArbitraryCondition ()) {
        if (SomeArbitraryCondition ()) {
            state = 1;
        } else {
            state = 2;
        }
    } else {
        if (SomeArbitraryCondition ()) {
            state = 3;
        } else {
            state = 4;
        }
    }
    return state;
}
----------------------------------------

public int PerformAction() {
    int state = 4;
    if (SomeArbitraryCondition()) {
        if (SomeArbitraryCondition()) state = 1;
        else state = 2;
    } else {
        if (SomeArbitraryCondition()) state = 3;
    }
    return state;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
3
Gpt4D_Clone861_3.cs 1 15
Gpt4D_Clone861_3.cs 16 34
----------------------------------------

protected void Unnamed1_Click (object sender, EventArgs e) {
    foreach (GridViewRow row in GridView1.Rows) {
        if (row.RowType == DataControlRowType.DataRow) {
            CheckBox cb = (CheckBox) row.FindControl ("ProductSelector");
            if (cb != null && cb.Checked) {
                int productID = Convert.ToInt32 (GridView1.DataKeys [row.RowIndex].Value);
                Response.Write (string.Format ("This would have deleted ProductID {0}<br />", productID));
            }
        }
    }
}
----------------------------------------

protected void Unnamed1_Click(object sender, EventArgs e)
{
	    for (int rowIndex = 0; rowIndex < GridView1.Rows.Count; rowIndex++) 
	    {
		GridViewRow row = GridView1.Rows[rowIndex];
		if (row.RowType == DataControlRowType.DataRow) 
		{
		    CheckBox cb = (CheckBox) row.FindControl("ProductSelector");
		    if (cb != null && cb.Checked) 
		    {
		        int productID = Convert.ToInt32 (GridView1.DataKeys [rowIndex].Value);
		        Response.Write (string.Format ("This would have deleted ProductID {0}<br />", productID));
		    }
		}
	    }  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
5
Gpt4D_Clone861_5.cs 1 15
Gpt4D_Clone861_5.cs 16 36
----------------------------------------

protected void Unnamed1_Click (object sender, EventArgs e) {
    foreach (GridViewRow row in GridView1.Rows) {
        if (row.RowType == DataControlRowType.DataRow) {
            CheckBox cb = (CheckBox) row.FindControl ("ProductSelector");
            if (cb != null && cb.Checked) {
                int productID = Convert.ToInt32 (GridView1.DataKeys [row.RowIndex].Value);
                Response.Write (string.Format ("This would have deleted ProductID {0}<br />", productID));
            }
        }
    }
}
----------------------------------------

protected void Unnamed1_Click(object sender, EventArgs e)
{
	    foreach (GridViewRow row in GridView1.Rows)
	    {
		if (row.RowType == DataControlRowType.DataRow)
		{
		    CheckBox cb = (CheckBox)row.FindControl("ProductSelector");
		    if (cb != null && cb.Checked)
		    {
		       Response.Write($"This would have deleted ProductID {GetDataKey(row)}<br />");
		    }
		}
	    }
		}
		private int GetDataKey(GridViewRow row) {
		    return Convert.ToInt32(GridView1.DataKeys[row.RowIndex].Value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
861
6
Gpt4D_Clone861_6.cs 1 15
Gpt4D_Clone861_6.cs 16 30
----------------------------------------

protected void Unnamed1_Click (object sender, EventArgs e) {
    foreach (GridViewRow row in GridView1.Rows) {
        if (row.RowType == DataControlRowType.DataRow) {
            CheckBox cb = (CheckBox) row.FindControl ("ProductSelector");
            if (cb != null && cb.Checked) {
                int productID = Convert.ToInt32 (GridView1.DataKeys [row.RowIndex].Value);
                Response.Write (string.Format ("This would have deleted ProductID {0}<br />", productID));
            }
        }
    }
}
----------------------------------------

protected void Unnamed1_Click(object sender, EventArgs e)
{
	    foreach (GridViewRow row in GridView1.Rows)
	    {
		CheckBox cb = row.RowType == DataControlRowType.DataRow ? (CheckBox)row.FindControl("ProductSelector") : null;
		if (cb != null && cb.Checked)
		{
		    int productID = Convert.ToInt32(GridView1.DataKeys[row.RowIndex].Value);
		    Response.Write($"This would have deleted ProductID {productID}<br />");      
		}
	    }   
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
862
0
Gpt4D_Clone862_0.cs 1 14
Gpt4D_Clone862_0.cs 15 25
----------------------------------------

public HashSet < TEntity > GetCollection < TEntity > () {
    var type = typeof (TEntity);
    if (type == typeof (Bike))
        return (HashSet < TEntity >) (object) Bikes;
    if (type == typeof (Car))
        return (HashSet < TEntity >) (object) Cars;
    if (type == typeof (Truck))
        return (HashSet < TEntity >) (object) Trucks;
    throw new InvalidOperationException ();
}
----------------------------------------

public HashSet<TEntity> GetCollection<TEntity>()
{
    if (typeof(TEntity) == typeof(Book))
        return (HashSet<TEntity>)(object)Books;
    if (typeof(TEntity) == typeof(Magazine))
        return (HashSet<TEntity>)(object)Magazines;
    if (typeof(TEntity) == typeof(Newspaper))
        return (HashSet<TEntity>)(object)Newspapers;
    throw new InvalidOperationException();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
0
Gpt4D_Clone870_0.cs 1 18
Gpt4D_Clone870_0.cs 19 34
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer RetrieveScrollViewer(FlowDocumentScrollViewer fDScrollViewer)
	{
	    if (VisualTreeHelper.GetChildrenCount(fDScrollViewer) == 0) 
		return null;
	    DependencyObject firstElement = VisualTreeHelper.GetChild(fDScrollViewer, 0);
	    if (firstElement == null) 
		return null;
	    Decorator component = VisualTreeHelper.GetChild(firstElement, 0) as Decorator;
	    if (component == null) 
		return null;
	    return component.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
1
Gpt4D_Clone870_1.cs 1 18
Gpt4D_Clone870_1.cs 19 34
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer LookForScrollViewer(FlowDocumentScrollViewer myDocumentViewer)
{
	    if (VisualTreeHelper.GetChildrenCount(myDocumentViewer) == 0) 
		return null;
	    DependencyObject topChild = VisualTreeHelper.GetChild(myDocumentViewer, 0);
	    if (topChild == null) 
		return null;
	    Decorator decorElement = VisualTreeHelper.GetChild(topChild, 0) as Decorator;
	    if (decorElement == null) 
		return null;
	    return decorElement.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
2
Gpt4D_Clone870_2.cs 1 18
Gpt4D_Clone870_2.cs 19 34
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer CaptureScrollViewer(FlowDocumentScrollViewer docView)
	{
	    if (VisualTreeHelper.GetChildrenCount(docView) == 0) 
		return null;
	    DependencyObject headChild = VisualTreeHelper.GetChild(docView, 0);
	    if (headChild == null) 
		return null;
	    Decorator decor = VisualTreeHelper.GetChild(headChild, 0) as Decorator;
	    if (decor == null) 
		return null;
	    return decor.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
3
Gpt4D_Clone870_3.cs 1 18
Gpt4D_Clone870_3.cs 19 32
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer GetScrollViewer(FlowDocumentScrollViewer documentScrollViewer)
{
	    if (VisualTreeHelper.GetChildrenCount(documentScrollViewer) == 0)
		return null;
	    DependencyObject child = VisualTreeHelper.GetChild(documentScrollViewer, 0);
	    if (child == null)
		return null;
	    Decorator decorator = VisualTreeHelper.GetChild(child, 0) as Decorator;
	    if (decorator == null)
		return null;
	    return decorator.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
4
Gpt4D_Clone870_4.cs 1 18
Gpt4D_Clone870_4.cs 19 34
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer ScanScrollViewer(FlowDocumentScrollViewer viewerObj)
	{
	    if (VisualTreeHelper.GetChildrenCount(viewerObj) == 0) 
		return null;
	    DependencyObject frontChild = VisualTreeHelper.GetChild(viewerObj, 0);
	    if (frontChild == null) 
		return null;
	    Decorator borderItem = VisualTreeHelper.GetChild(frontChild, 0) as Decorator;
	    if (borderItem == null)
		return null;
	      
	    return borderItem.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
5
Gpt4D_Clone870_5.cs 1 18
Gpt4D_Clone870_5.cs 19 34
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer FindScroller(FlowDocumentScrollViewer docViewer)
{
	    if (VisualTreeHelper.GetChildrenCount(docViewer) == 0) 
		return null;
	    DependencyObject firstInLine = VisualTreeHelper.GetChild(docViewer, 0);
	    if (firstInLine == null) 
		return null;
	    Decorator item = VisualTreeHelper.GetChild(firstInLine, 0) as Decorator;
	    if (item == null) 
		return null;
	    return item.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
6
Gpt4D_Clone870_6.cs 1 18
Gpt4D_Clone870_6.cs 19 31
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer DetectScrollViewer(FlowDocumentScrollViewer viewer)
	{
	    if (VisualTreeHelper.GetChildrenCount(viewer) == 0) 
		return null;
	    DependencyObject firstDependant = VisualTreeHelper.GetChild(viewer, 0);
	    if (firstDependant == null) 
		return null;
	    Decorator boarder = VisualTreeHelper.GetChild(firstDependant, 0) as Decorator;
	    if (boarder == null) 
		return null;
	    return boarder.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
7
Gpt4D_Clone870_7.cs 1 18
Gpt4D_Clone870_7.cs 19 31
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer ExtractScrollViewer(FlowDocumentScrollViewer documentViewer)
	{
	    if (VisualTreeHelper.GetChildrenCount(documentViewer) == 0) 
		return null;
	    DependencyObject childDependency = VisualTreeHelper.GetChild(documentViewer, 0);
	    if (childDependency == null) 
		return null;
	    Decorator firstDecorator = VisualTreeHelper.GetChild(childDependency, 0) as Decorator;
	    if (firstDecorator == null) 
		return null;
	    return firstDecorator.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
8
Gpt4D_Clone870_8.cs 1 18
Gpt4D_Clone870_8.cs 19 31
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer ObtainScrollViewer(FlowDocumentScrollViewer scrollViewer)
	{
	    if (VisualTreeHelper.GetChildrenCount(scrollViewer) == 0) 
		return null;
	    DependencyObject initialChild = VisualTreeHelper.GetChild(scrollViewer, 0);
	    if (initialChild == null) 
		return null;
	    Decorator decoratorItem = VisualTreeHelper.GetChild(initialChild, 0) as Decorator;
	    if (decoratorItem == null) 
		return null;
	    return decoratorItem.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
870
9
Gpt4D_Clone870_9.cs 1 18
Gpt4D_Clone870_9.cs 19 33
----------------------------------------

public static ScrollViewer FindScrollViewer (FlowDocumentScrollViewer flowDocumentScrollViewer) {
    if (VisualTreeHelper.GetChildrenCount (flowDocumentScrollViewer) == 0) {
        return null;
    }
    DependencyObject firstChild = VisualTreeHelper.GetChild (flowDocumentScrollViewer, 0);
    if (firstChild == null) {
        return null;
    }
    Decorator border = VisualTreeHelper.GetChild (firstChild, 0) as Decorator;
    if (border == null) {
        return null;
    }
    return border.Child as ScrollViewer;
}
----------------------------------------

public static ScrollViewer FetchScrollViewer(FlowDocumentScrollViewer viewer)
	{
	    if (VisualTreeHelper.GetChildrenCount(viewer) == 0) 
		return null;
	    DependencyObject firstOne = VisualTreeHelper.GetChild(viewer, 0);
	    if (firstOne == null)
		return null; 
	    Decorator part = VisualTreeHelper.GetChild(firstOne, 0) as Decorator;
	    if (part == null) 
		return null;
	    return part.Child as ScrollViewer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
0
Gpt4D_Clone877_0.cs 1 26
Gpt4D_Clone877_0.cs 27 45
----------------------------------------

public override void Serialize (BsonSerializationContext context, BsonSerializationArgs args, T value) {
    var nominalType = args.NominalType;
    var fields = nominalType.GetFields (BindingFlags.Instance | BindingFlags.Public);
    var propsAll = nominalType.GetProperties (BindingFlags.Instance | BindingFlags.Public);
    var props = new List < PropertyInfo > ();
    foreach (var prop in propsAll) {
        if (prop.CanWrite) {
            props.Add (prop);
        }
    }
    var bsonWriter = context.Writer;
    bsonWriter.WriteStartDocument ();
    foreach (var field in fields) {
        bsonWriter.WriteName (field.Name);
        BsonSerializer.Serialize (bsonWriter, field.FieldType, field.GetValue (value));
    }
    foreach (var prop in props) {
        bsonWriter.WriteName (prop.Name);
        BsonSerializer.Serialize (bsonWriter, prop.PropertyType, prop.GetValue (value, null));
    }
    bsonWriter.WriteEndDocument ();
}
----------------------------------------

public override void Serialize(BsonSerializationContext context, BsonSerializationArgs args, T value) {
    var propertiesToSerialize = typeof(T).GetProperties().Where(x => x.GetMethod.IsPublic);
    var fieldsToSerialize = typeof(T).GetFields(BindingFlags.NonPublic | BindingFlags.Instance);
    var writer = context.Writer;
    writer.WriteStartDocument();
    foreach (var field in fieldsToSerialize) {
        writer.WriteName(field.Name);
        BsonSerializer.Serialize(writer, field.FieldType, field.GetValue(value));
    }
    foreach (var property in propertiesToSerialize){
        writer.WriteName(property.Name);
        BsonSerializer.Serialize(writer, property.PropertyType, property.GetValue(value));
    }
    writer.WriteEndDocument();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
87
0
Gpt4D_Clone87_0.cs 1 24
Gpt4D_Clone87_0.cs 25 43
----------------------------------------

public void question () {
    switch (questionNr) {
        case 1 :
            questionLabel.Text = "What is Chuck's full name?";
            ans1.Text = "Charles Irving Bartowski";
            ans2.Text = "Charles Richard Bartowski";
            ans3.Text = "Charles Luke Bartowski";
            ans4.Text = "Zachary Strahovski";
            break;
        case 2 :
            questionLabel.Text = "Who/what is Orion?";
            ans1.Text = "Original name of the Intersect";
            ans2.Text = "Alias of a secret mission";
            ans3.Text = "Morgan's Xbox";
            ans4.Text = "Chuck's father";
            break;
        case 3 :
            break;
    }
}
----------------------------------------

public void question () {
	    if(questionNr == 1){
		questionLabel.Text = "What is Chuck's full name?";
		ans1.Text = "Charles Irving Bartowski";
		ans2.Text = "Charles Richard Bartowski";
		ans3.Text = "Charles Luke Bartowski";
		ans4.Text = "Zachary Strahovski";
	    }
	    else if(questionNr == 2){
		questionLabel.Text = "Who/what is Orion?";
		ans1.Text = "Original name of the Intersect";
		ans2.Text = "Alias of a secret mission";
		ans3.Text = "Morgan's Xbox";
		ans4.Text = "Chuck's father";
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
1
Gpt4D_Clone880_1.cs 1 15
Gpt4D_Clone880_1.cs 16 24
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0x46 :
            this.HandleWindowPosChanging (ref m);
            base.WndProc (ref m);
            break;
        default :
            base.WndProc (ref m);
            break;
    }
}
----------------------------------------

protected override void WndProc (ref Message m) {
	    switch (m.Msg) {
		case 0x46 :
		    this.HandleWindowPosChanging (ref m);
		    break;
	    }
	    base.WndProc (ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
89
0
Gpt4D_Clone89_0.cs 1 13
Gpt4D_Clone89_0.cs 14 23
----------------------------------------

protected override void OnStartup (StartupEventArgs e) {
    const string appName = "MyAppName";
    bool createdNew;
    _mutex = new Mutex (true, appName, out createdNew);
    if (! createdNew) {
        Application.Current.Shutdown ();
    }
    base.OnStartup (e);
}
----------------------------------------

 
protected override void OnStartup(StartupEventArgs e) {
    const string mutexId = "MyApplication";
    bool isCreatedNew;
    _mutex = new Mutex(stateInitiallyOwned: true, mutexId , out isCreatedNew);
    if (!isCreatedNew) Application.Current.Shutdown();
    base.OnStartup(e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
89
1
Gpt4D_Clone89_1.cs 1 13
Gpt4D_Clone89_1.cs 14 20
----------------------------------------

protected override void OnStartup (StartupEventArgs e) {
    const string appName = "MyAppName";
    bool createdNew;
    _mutex = new Mutex (true, appName, out createdNew);
    if (! createdNew) {
        Application.Current.Shutdown ();
    }
    base.OnStartup (e);
}
----------------------------------------

protected override void OnStartup(StartupEventArgs e) {
    bool isNewInstance;
    _mutex = new Mutex(initiallyOwned: true, name: "MyApp", createdNew: out isNewInstance);
    if (!isNewInstance) Application.Current.Shutdown();
    base.OnStartup(e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
89
2
Gpt4D_Clone89_2.cs 1 13
Gpt4D_Clone89_2.cs 14 22
----------------------------------------

protected override void OnStartup (StartupEventArgs e) {
    const string appName = "MyAppName";
    bool createdNew;
    _mutex = new Mutex (true, appName, out createdNew);
    if (! createdNew) {
        Application.Current.Shutdown ();
    }
    base.OnStartup (e);
}
----------------------------------------

 
protected override void OnStartup(StartupEventArgs e) {
    bool newlyCreated;
    _mutex = new Mutex(true, "MyApplicationName", out newlyCreated);
    if (!newlyCreated) Application.Current.Shutdown();
    base.OnStartup(e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
89
3
Gpt4D_Clone89_3.cs 1 13
Gpt4D_Clone89_3.cs 14 22
----------------------------------------

protected override void OnStartup (StartupEventArgs e) {
    const string appName = "MyAppName";
    bool createdNew;
    _mutex = new Mutex (true, appName, out createdNew);
    if (! createdNew) {
        Application.Current.Shutdown ();
    }
    base.OnStartup (e);
}
----------------------------------------

 
protected override void OnStartup(StartupEventArgs e) {
    bool firstInstance;
    _mutex = new Mutex(true, "UniqueAppName", out firstInstance);
    if (!firstInstance) Application.Current.Shutdown();
    base.OnStartup(e);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
1
Gpt4D_Clone908_1.cs 1 18
Gpt4D_Clone908_1.cs 19 30
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    using (var reader = XmlReader.Create (st, new XmlReaderSettings () {ConformanceLevel = ConformanceLevel.Fragment}))
    {
        while (reader.Read ()) {
            if (reader.NodeType == XmlNodeType.Element && reader.Depth == 0) {
                if (sawRoot)
                    return false;
                sawRoot = true;
            }
        }
    } return true;
}
 
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    var readerSettings = new XmlReaderSettings {ConformanceLevel = ConformanceLevel.Fragment};
    var reader = XmlReader.Create(st, readerSettings);
    while (reader.Read()) {
        var condition = reader.NodeType == XmlNodeType.Element && reader.Depth == 0;
        if (sawRoot && condition) return false;
        if (condition) sawRoot = true;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
2
Gpt4D_Clone908_2.cs 1 18
Gpt4D_Clone908_2.cs 19 29
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    using (var reader = XmlReader.Create (st, new XmlReaderSettings () {ConformanceLevel = ConformanceLevel.Fragment}))
    {
        while (reader.Read ()) {
            if (reader.NodeType == XmlNodeType.Element && reader.Depth == 0) {
                if (sawRoot)
                    return false;
                sawRoot = true;
            }
        }
    } return true;
}
 
----------------------------------------

static bool IsXmlRooted (Stream stream) {
    bool rootFound = false;
    var xmlReaderOptions = new XmlReaderSettings {ConformanceLevel = ConformanceLevel.Fragment};
    using (var xmlreader = XmlReader.Create(stream, xmlReaderOptions))
        while (xmlreader.Read())
            if (xmlreader.NodeType == XmlNodeType.Element && xmlreader.Depth == 0)
                if (rootFound) return false;
                else rootFound = true;
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
5
Gpt4D_Clone908_5.cs 1 18
Gpt4D_Clone908_5.cs 19 30
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    using (var reader = XmlReader.Create (st, new XmlReaderSettings () {ConformanceLevel = ConformanceLevel.Fragment}))
    {
        while (reader.Read ()) {
            if (reader.NodeType == XmlNodeType.Element && reader.Depth == 0) {
                if (sawRoot)
                    return false;
                sawRoot = true;
            }
        }
    } return true;
}
 
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool isRoot = false;
    var readerSettings = new XmlReaderSettings {ConformanceLevel = ConformanceLevel.Fragment};
    using (var reader = XmlReader.Create(st, readerSettings))
        while (reader.Read()) {
            if(reader.NodeType == XmlNodeType.Element && reader.Depth == 0)
                if (isRoot) return false;
                else isRoot = true;
        }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
6
Gpt4D_Clone908_6.cs 1 18
Gpt4D_Clone908_6.cs 19 31
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    using (var reader = XmlReader.Create (st, new XmlReaderSettings () {ConformanceLevel = ConformanceLevel.Fragment}))
    {
        while (reader.Read ()) {
            if (reader.NodeType == XmlNodeType.Element && reader.Depth == 0) {
                if (sawRoot)
                    return false;
                sawRoot = true;
            }
        }
    } return true;
}
 
----------------------------------------

static bool IsXmlRooted (Stream st) {
    bool sawRoot = false;
    var settings = new XmlReaderSettings {ConformanceLevel = ConformanceLevel.Fragment};
    using (var reader = XmlReader.Create(st, settings)){
        while (reader.Read()) 
            if (reader.IsStartElement() && reader.Depth == 0) {
                if(sawRoot) return false;
                sawRoot = true;
            }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
925
4
Gpt4D_Clone925_4.cs 1 24
Gpt4D_Clone925_4.cs 25 37
----------------------------------------

void DataGridCellPreviewMouseLeftButtonDown (object sender, System.Windows.Input.MouseButtonEventArgs e) {
    DataGridCell cell = sender as DataGridCell;
    if (cell != null && ! cell.IsEditing && ! cell.IsReadOnly) {
        if (! cell.IsFocused) {
            cell.Focus ();
        }
        DataGrid dataGrid = LogicalTreeWalker.FindParentOfType < DataGrid > (cell);
        if (dataGrid != null) {
            if (dataGrid.SelectionUnit != DataGridSelectionUnit.FullRow) {
                if (! cell.IsSelected)
                    cell.IsSelected = true;
            } else {
                DataGridRow row = LogicalTreeWalker.FindParentOfType < DataGridRow > (cell);
                if (row != null && ! row.IsSelected) {
                    row.IsSelected = true;
                }
            }
        }
    }
}
----------------------------------------

void DataGridCellPreviewMouseLeftButtonDown (object sender, System.Windows.Input.MouseButtonEventArgs e) {
    var cell = sender as DataGridCell;
    if (cell != null && !cell.IsEditing && !cell.IsReadOnly) {
        cell.Focus ();
        var grid = LogicalTreeWalker.FindParentOfType<DataGrid> (cell);
        if (grid != null && grid.SelectionUnit != DataGridSelectionUnit.FullRow && !cell.IsSelected)
            cell.IsSelected = true;
        var row = LogicalTreeWalker.FindParentOfType<DataGridRow> (cell);
        if (row != null && !row.IsSelected)
            row.IsSelected = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
2
Gpt4D_Clone929_2.cs 1 20
Gpt4D_Clone929_2.cs 21 41
----------------------------------------

public int RegisterMember (string memberName, string emailAddress, string memberPassword, string memberTypeAlias, string memberGroupName) {
    int umbracoMemberId = - 1;
    if (! MemberExists (emailAddress)) {
        IMember newMember = ApplicationContext.Current.Services.MemberService.CreateMember (emailAddress, emailAddress, memberName, memberTypeAlias);
        try {
            ApplicationContext.Current.Services.MemberService.Save (newMember);
            ApplicationContext.Current.Services.MemberService.SavePassword (newMember, memberPassword);
            ApplicationContext.Current.Services.MemberService.AssignRole (newMember.Id, memberGroupName);
            umbracoMemberId = newMember.Id;
        }
        catch (Exception ex) {
            throw new Exception ("Unable to create new member " + ex.Message);
        }
    }
    return umbracoMemberId;
}
----------------------------------------

public int RegisterMember(string memberName, string emailAddress, string memberPassword, string memberTypeAlias, string memberGroupName) {
		   if (MemberExists(emailAddress)) {
		       return -1;
		   }
		   else {
		       return AddNewMember(memberName, emailAddress, memberPassword, memberTypeAlias, memberGroupName);
		   }
		}
		private int AddNewMember(string memberName, string emailAddress, string memberPassword, string memberTypeAlias, string memberGroupName) {
		    IMember newMember = ApplicationContext.Current.Services.MemberService.CreateMember(emailAddress, emailAddress, memberName, memberTypeAlias);
		    try {
			ApplicationContext.Current.Services.MemberService.Save(newMember);
			ApplicationContext.Current.Services.MemberService.SavePassword(newMember, memberPassword);
			ApplicationContext.Current.Services.MemberService.AssignRole(newMember.Id, memberGroupName);
			return newMember.Id;
		    }
		    catch (Exception ex) {
			throw new Exception("Unable to create new member. Reason: " + ex.Message);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
4
Gpt4D_Clone929_4.cs 1 20
Gpt4D_Clone929_4.cs 21 33
----------------------------------------

public int RegisterMember (string memberName, string emailAddress, string memberPassword, string memberTypeAlias, string memberGroupName) {
    int umbracoMemberId = - 1;
    if (! MemberExists (emailAddress)) {
        IMember newMember = ApplicationContext.Current.Services.MemberService.CreateMember (emailAddress, emailAddress, memberName, memberTypeAlias);
        try {
            ApplicationContext.Current.Services.MemberService.Save (newMember);
            ApplicationContext.Current.Services.MemberService.SavePassword (newMember, memberPassword);
            ApplicationContext.Current.Services.MemberService.AssignRole (newMember.Id, memberGroupName);
            umbracoMemberId = newMember.Id;
        }
        catch (Exception ex) {
            throw new Exception ("Unable to create new member " + ex.Message);
        }
    }
    return umbracoMemberId;
}
----------------------------------------

public int RegisterMember (string memberName, string emailAddress, string memberPassword, string memberTypeAlias, string memberGroupName) {
    int umbracoMemberId = -1;
    if (! MemberExists (emailAddress)) {
        IMember newMember = ApplicationContext.Current.Services.MemberService.CreateMember (emailAddress, emailAddress, memberName, memberTypeAlias);
        ApplicationContext.Current.Services.MemberService.Save (newMember);
        ApplicationContext.Current.Services.MemberService.SavePassword (newMember, memberPassword);
        ApplicationContext.Current.Services.MemberService.AssignRole (newMember.Id, memberGroupName);
        umbracoMemberId = newMember.Id;
    }
    return umbracoMemberId;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
0
Gpt4D_Clone930_0.cs 1 31
Gpt4D_Clone930_0.cs 32 73
----------------------------------------

public void MethodA () {
    lock (key)
    {
        while (lockedType != this.GetType ()) {
            if (lockedType == null) {
                lockedType = this.GetType ();
                signal.Set ();
            } else if (lockedType != this.GetType ()) {
                signal.WaitOne ();
            }
        }
        Interlocked.Increment (ref threadsInMethodA);
    } semaphore.WaitOne ();
    try {
        MethodAImplementation ();
    }
    finally {
        lock (key)
        {
            semaphore.Release ();
            int threads = Interlocked.Decrement (ref threadsInMethodA);
            if (threads == 0) {
                lockedType = null;
                signal.Reset ();
            }
        }}
}
----------------------------------------

public void MethodA()
{
	    lock (key)
	    {
		while (lockedType != GetType())
		{
		    if (null == lockedType)
		    {
		        lockedType = GetType();
		        signal.Set();
		    }
		    else if (lockedType != GetType())
		    {
		        signal.WaitOne();
		    }
		}
		Interlocked.Increment(ref threadsInMethodA);
	    }
	    semaphore.WaitOne();
	    try 
	    {
		MethodAImplementation();
	    } 
	    finally
	    {
		lock (key)
		{
		    semaphore.Release();
		    if (0 == Interlocked.Decrement(ref threadsInMethodA))
		    {
		        lockedType = null;
		        signal.Reset();
		    }
		}
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
930
1
Gpt4D_Clone930_1.cs 1 31
Gpt4D_Clone930_1.cs 32 72
----------------------------------------

public void MethodA () {
    lock (key)
    {
        while (lockedType != this.GetType ()) {
            if (lockedType == null) {
                lockedType = this.GetType ();
                signal.Set ();
            } else if (lockedType != this.GetType ()) {
                signal.WaitOne ();
            }
        }
        Interlocked.Increment (ref threadsInMethodA);
    } semaphore.WaitOne ();
    try {
        MethodAImplementation ();
    }
    finally {
        lock (key)
        {
            semaphore.Release ();
            int threads = Interlocked.Decrement (ref threadsInMethodA);
            if (threads == 0) {
                lockedType = null;
                signal.Reset ();
            }
        }}
}
----------------------------------------

public void MethodA()
{
	    lock (key)
	    {
		while (!this.GetType().Equals(lockedType))
		{
		    if (null == lockedType)
		    {
		        lockedType = GetType();
		        signal.Set();
		    }
		    else if (!this.GetType().Equals(lockedType))
		    {
		        signal.WaitOne();
		    }
		}
		Interlocked.Increment(ref threadsInMethodA);
	    }
	    semaphore.WaitOne();
	    try 
	    {
		MethodAImplementation();
	    } 
	    finally
	    {
		lock (key)
		{
		    semaphore.Release();
		    if (Interlocked.Decrement(ref threadsInMethodA) == 0)
		    {
		        lockedType = null;
		        signal.Reset();
		    }
		}
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
945
2
Gpt4D_Clone945_2.cs 1 29
Gpt4D_Clone945_2.cs 30 57
----------------------------------------

public void DisableForm (ControlCollection ctrls) {
    foreach (Control ctrl in ctrls) {
        if (ctrl is TextBox)
            ((TextBox) ctrl).Enabled = false;
        if (ctrl is Button)
            ((Button) ctrl).Enabled = false;
        else if (ctrl is DropDownList)
            ((DropDownList) ctrl).Enabled = false;
        else if (ctrl is CheckBox)
            ((CheckBox) ctrl).Enabled = false;
        else if (ctrl is RadioButton)
            ((RadioButton) ctrl).Enabled = false;
        else if (ctrl is HtmlInputButton)
            ((HtmlInputButton) ctrl).Disabled = true;
        else if (ctrl is HtmlInputText)
            ((HtmlInputText) ctrl).Disabled = true;
        else if (ctrl is HtmlSelect)
            ((HtmlSelect) ctrl).Disabled = true;
        else if (ctrl is HtmlInputCheckBox)
            ((HtmlInputCheckBox) ctrl).Disabled = true;
        else if (ctrl is HtmlInputRadioButton)
            ((HtmlInputRadioButton) ctrl).Disabled = true;
        DisableForm (ctrl.Controls);
    }
}
----------------------------------------

public void DisableForm(ControlCollection ctrls) {
	    foreach (Control ctrl in ctrls) {
		if (ctrl.GetType() == typeof(TextBox))
		    ((TextBox)ctrl).Enabled = false;
		else if (ctrl.GetType() == typeof(Button))
		    ((Button)ctrl).Enabled = false;
		else if (ctrl.GetType() == typeof(DropDownList))
		     ((DropDownList)ctrl).Enabled = false;
		else if (ctrl.GetType() == typeof(CheckBox))
		    ((CheckBox)ctrl).Enabled = false;
		else if (ctrl.GetType() == typeof(RadioButton))
		    ((RadioButton)ctrl).Enabled = false;
		else if (ctrl.GetType() == typeof(HtmlInputButton))
		    ((HtmlInputButton)ctrl).Disabled = true;
		else if (ctrl.GetType() == typeof(HtmlInputText))
		    ((HtmlInputText)ctrl).Disabled = true;
		else if (ctrl.GetType() == typeof(HtmlSelect))
		    ((HtmlSelect)ctrl).Disabled = true;
		else if (ctrl.GetType() == typeof(HtmlInputCheckBox))
		    ((HtmlInputCheckBox)ctrl).Disabled = true;
		else if (ctrl.GetType() == typeof(HtmlInputRadioButton))
		    ((HtmlInputRadioButton)ctrl).Disabled = true;
		DisableForm(ctrl.Controls);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
0
Gpt4D_Clone963_0.cs 1 29
Gpt4D_Clone963_0.cs 30 29
----------------------------------------

public static byte [] ReadFully (Stream input) {
    byte [] buffer = new byte [16 * 1024];
    input.Position = 0;
    using (MemoryStream ms = new MemoryStream ())
    {
        int read;
        while ((read = input.Read (buffer, 0, buffer.Length)) > 0) {
            ms.Write (buffer, 0, read);
        }
        return ms.ToArray ();
    }}
//Implementation 9
public static byte[] ReadFully(Stream stream)
{
    using (MemoryStream ms = new MemoryStream())
    {
        byte[] buffer = new byte[8192];
        int count;
        while ((count = stream.Read(buffer, 0, buffer.Length)) != 0)
        {
            ms.Write(buffer, 0, count);
        }
        return ms.ToArray();
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
968
0
Gpt4D_Clone968_0.cs 1 17
Gpt4D_Clone968_0.cs 18 38
----------------------------------------

static void doubleNumber (int [] n) {
    int carry = 0;
    for (int i = 0; i < n.Length; i ++) {
        n [i] <<= 1;
        n [i] += carry;
        if (n [i] >= 1000000000) {
            carry = 1;
            n [i] -= 1000000000;
        } else {
            carry = 0;
        }
    }
}
----------------------------------------

static void doubleNumber(int[] n)
{
    int carry = 0;
    int i = 0;
    while (i < n.Length)
    {
        n[i] *= 2;
        n[i] += carry;
        if (n[i] >= 1000000000)
        {
            carry = 1;
            n[i] -= 1000000000;
        }
        else
        {
            carry = 0;
        }
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
0
Gpt4D_Clone970_0.cs 1 22
Gpt4D_Clone970_0.cs 23 36
----------------------------------------

public static Dictionary < int, string > GetListItems (Type enumType) {
    if (! enumType.IsEnum)
        throw new ApplicationException ("GetListItems does not support non-enum types");
    Dictionary < int, string > list = new Dictionary < int, string > ();
    foreach (FieldInfo field in enumType.GetFields (BindingFlags.Static | BindingFlags.GetField | BindingFlags.Public)) {
        int value;
        string display;
        value = (int) field.GetValue (null);
        display = Enum.GetName (enumType, value);
        foreach (Attribute currAttr in field.GetCustomAttributes (true)) {
            EnumValueDataAttribute valueAttribute = currAttr as EnumValueDataAttribute;
            if (valueAttribute != null)
                display = valueAttribute.Name;
        }
        list.Add (value, display);
    }
    return list;
}
----------------------------------------

public static SortedDictionary < int, string > GetListItems (Type enumType) {
    if (! enumType.IsEnum)
        throw new Exception ("Invalid type. Expected enum");
    SortedDictionary < int, string > list = new SortedDictionary < int, string > ();
    var enumValues = Enum.GetValues(enumType).Cast<int>();
    foreach (int value in enumValues) {
        string display;
        display = Enum.GetName (enumType, value);
        list.Add (value, display);
    }
    return list;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
0
Gpt4D_Clone976_0.cs 1 20
Gpt4D_Clone976_0.cs 21 37
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapSource LoadImage(byte[] imageData)
{
    if (imageData == null || imageData.Length < 1)
        return null;
    var image = new BitmapImage();
    using (var mem = new MemoryStream(imageData))
    {
        image.BeginInit();
        image.StreamSource = mem;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.CreateOptions = BitmapCreateOptions.None;
        image.EndInit();
    } image.Freeze();
    return image;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
1
Gpt4D_Clone976_1.cs 1 20
Gpt4D_Clone976_1.cs 21 38
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapImage LoadImage(byte [] imageData)
{
    if (imageData == null || imageData.Length < 1) return null;
    var image = new BitmapImage();
    using (var mem = new MemoryStream(imageData))
    {
        mem.Position = 0;
        image.BeginInit();
        image.StreamSource = mem;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.EndInit();
    } 
    image.Freeze();
    return image;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
2
Gpt4D_Clone976_2.cs 1 20
Gpt4D_Clone976_2.cs 21 37
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapImage LoadImage(byte [] imageData)
{
    if (imageData == null || imageData.Length == 0) return null;
    var bitmap = new BitmapImage();
    using (var mem = new MemoryStream(imageData))
    {
        bitmap.BeginInit();
        bitmap.StreamSource = mem;
        bitmap.CacheOption = BitmapCacheOption.OnLoad;
        bitmap.EndInit();
        bitmap.Freeze();
    }
    return bitmap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
3
Gpt4D_Clone976_3.cs 1 20
Gpt4D_Clone976_3.cs 21 38
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapImage LoadImage(byte [] imageData)
{
    var bitmap = new BitmapImage();
    if (imageData != null && imageData.Length > 0)
    {
        using (var stream = new MemoryStream(imageData))
        {
            stream.Position = 0;
            bitmap.BeginInit();
            bitmap.StreamSource = stream;
            bitmap.CacheOption = BitmapCacheOption.OnLoad;
            bitmap.EndInit();
        } bitmap.Freeze();
    }
    return bitmap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
4
Gpt4D_Clone976_4.cs 1 20
Gpt4D_Clone976_4.cs 21 37
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapImage LoadImage(byte[] imageData)
{
    if (imageData == null || imageData.Length == 0) return null;
    BitmapImage bi = new BitmapImage();
    using (MemoryStream ms = new MemoryStream(imageData, false))
    {
        bi.BeginInit();
        bi.CacheOption = BitmapCacheOption.OnLoad;
        bi.StreamSource = ms;
        bi.EndInit();
    }
    bi.Freeze(); // optional
    return bi;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
5
Gpt4D_Clone976_5.cs 1 20
Gpt4D_Clone976_5.cs 21 36
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static BitmapImage LoadImage(byte[] imageData)
{
    if (imageData == null || imageData.Length < 1)
        return null;
    var image = new BitmapImage();
    using (var stream = new MemoryStream(imageData))
    {
        image.BeginInit();
        image.StreamSource = stream;
        image.CacheOption = BitmapCacheOption.OnDemand;
        image.EndInit();
    } image.Freeze();
    return image;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
6
Gpt4D_Clone976_6.cs 1 20
Gpt4D_Clone976_6.cs 21 36
----------------------------------------

private static BitmapImage LoadImage (byte [] imageData) {
    if (imageData == null || imageData.Length == 0)
        return null;
    var image = new BitmapImage ();
    using (var mem = new MemoryStream (imageData))
    {
        mem.Position = 0;
        image.BeginInit ();
        image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.UriSource = null;
        image.StreamSource = mem;
        image.EndInit ();
    } image.Freeze ();
    return image;
}
----------------------------------------

private static ImageSource LoadImage(byte[] imageData)
{
    if (imageData == null || imageData.Length < 1)
        return null;
    var image = new BitmapImage();
    using (var stream = new MemoryStream(imageData, 0, imageData.Length))
    {
        image.BeginInit();
        image.StreamSource = stream;
        image.CacheOption = BitmapCacheOption.OnLoad;
        image.EndInit();
    } image.Freeze();
    return image;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
0
Gpt4D_Clone9_0.cs 1 13
Gpt4D_Clone9_0.cs 14 27
----------------------------------------

public Image RotateImage (Image img) {
    var bmp = new Bitmap (img);
    using (Graphics gfx = Graphics.FromImage (bmp))
    {
        gfx.Clear (Color.White);
        gfx.DrawImage (img, 0, 0, img.Width, img.Height);
    } bmp.RotateFlip (RotateFlipType.Rotate270FlipNone);
    return bmp;
}
----------------------------------------

public Image RotateImage1 (Image img) {
    var bmp = new Bitmap (img);
    using (Graphics gfx = Graphics.FromImage (bmp)) {
        gfx.Clear (Color.Transparent); //Clear with transparent color
        gfx.InterpolationMode = InterpolationMode.HighQualityBicubic;
        gfx.SmoothingMode = SmoothingMode.HighQuality;
        gfx.PixelOffsetMode = PixelOffsetMode.HighQuality;
        gfx.CompositingQuality = CompositingQuality.HighQuality;
        gfx.DrawImage (img, 0, 0, img.Width, img.Height); }
    bmp.RotateFlip (RotateFlipType.Rotate90FlipNone);   //Different rotation degree
    return bmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
3
Gpt4D_Clone103_3.cs 1 15
Gpt4D_Clone103_3.cs 16 27
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Enabled = false;
    try {
        _count++;
        EventLog.WriteEntry(Program.EventLogName, $"Checking emails {_count}");
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, ex.Message);
    }
    _timer.Enabled = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
4
Gpt4D_Clone103_4.cs 1 15
Gpt4D_Clone103_4.cs 16 27
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
 
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Enabled = false;
    try {
        string message = string.Format("Checking emails {0}", _count++);
        EventLog.WriteEntry(Program.EventLogName, message);
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, ex.Message);
    }
    _timer.Enabled = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
7
Gpt4D_Clone103_7.cs 1 14
Gpt4D_Clone103_7.cs 15 27
----------------------------------------

private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Stop ();
    try {
        EventLog.WriteEntry (Program.EventLogName, "Checking emails " + _count ++);
    }
    catch (Exception ex) {
        EventLog.WriteEntry (Program.EventLogName, "This is my error " + ex.Message);
    }
    _timer.Start ();
}
----------------------------------------

 
private void timer_Elapsed (object sender, System.Timers.ElapsedEventArgs e) {
    _timer.Enabled = false;
    try {
        EventLog.WriteEntry (Program.EventLogName, $"Checking emails {_count++}");
    }
    catch (Exception ex) {
        EventLog.WriteEntry(Program.EventLogName, ex.Message);
    }
    _timer.Enabled = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
0
Gpt4D_Clone111_0.cs 1 16
Gpt4D_Clone111_0.cs 17 26
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    if(a == true && b == true) return doAB();
    if(a == true && b == false) return doA();
    if(a == false && b == true) return doB();
    if(a == false && b == false) return doNotANotB();
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
1
Gpt4D_Clone111_1.cs 1 16
Gpt4D_Clone111_1.cs 17 25
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    if(a && b) return doAB();
    else if(a && !b) return doA();
    else if(!a && b) return doB();
    else return doNotANotB();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
2
Gpt4D_Clone111_2.cs 1 16
Gpt4D_Clone111_2.cs 17 26
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    MyType result = doNotANotB();
    if(a && b) result = doAB();
    else if(a) result = doA();
    else if(b) result = doB();
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
3
Gpt4D_Clone111_3.cs 1 16
Gpt4D_Clone111_3.cs 17 27
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    if(a) {
        return b ? doAB() : doA();
    }
    else {
        return b ? doB() : doNotANotB();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
4
Gpt4D_Clone111_4.cs 1 16
Gpt4D_Clone111_4.cs 17 23
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    if(b) return a ? doAB() : doB();
    return a ? doA() : doNotANotB();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
5
Gpt4D_Clone111_5.cs 1 16
Gpt4D_Clone111_5.cs 17 23
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    if(a) return b ? doAB() : doA();
    return b ? doB() : doNotANotB();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
6
Gpt4D_Clone111_6.cs 1 16
Gpt4D_Clone111_6.cs 17 22
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    return a && b ? doAB() : a ? doA() : b ? doB() : doNotANotB();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
7
Gpt4D_Clone111_7.cs 1 16
Gpt4D_Clone111_7.cs 17 20
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
    return (a ? (b ? doAB() : doA()) : (b ? doB() : doNotANotB()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
8
Gpt4D_Clone111_8.cs 1 16
Gpt4D_Clone111_8.cs 17 22
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething (bool a, bool b) {
   return a && b ? doAB() : (!a && !b ? doNotANotB() : (a ? doA() : doB()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
111
9
Gpt4D_Clone111_9.cs 1 16
Gpt4D_Clone111_9.cs 17 29
----------------------------------------

public MyType doSomething (bool a, bool b) {
    switch (a) {
        case true :
            if (b)
                return doAB ();
            return doA ();
        default :
            if (b)
                return doB ();
            return doNotANotB ();
    }
}
----------------------------------------

public MyType doSomething(bool a, bool b)
{
    return a
        ? b
            ? doAB()
            : doA()
        : b
            ? doB()
            : doNotANotB();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
0
Gpt4D_Clone114_0.cs 1 18
Gpt4D_Clone114_0.cs 19 28
----------------------------------------

static void Main () {
    string strn = "A great things are happen with great humans.";
    System.Console.WriteLine ("'{0}'", strn);
    bool case1 = strn.StartsWith ("A great");
    System.Console.WriteLine ("starts with 'A great'? {0}", case1);
    bool case2 = strn.StartsWith ("A great", System.StringComparison.OrdinalIgnoreCase);
    System.Console.WriteLine ("starts with 'A great'? {0} (ignoring case)", case2);
    bool case3 = strn.EndsWith (".");
    System.Console.WriteLine ("ends with '.'? {0}", case3);
    int start = strn.IndexOf ("great");
    int end = strn.LastIndexOf ("great");
    string strn2 = strn.Substring (start, end - start);
    System.Console.WriteLine ("between two 'great' words: '{0}'", strn2);
}
----------------------------------------

 
static void Main () {
    string strn = "A great things are happen with great humans.";
    System.Console.WriteLine ($"'{strn }'");
    System.Console.WriteLine ($"Starts with 'A great'? {strn.StartsWith ("A great")}");
    System.Console.WriteLine ($"Starts with 'A great'?(Ignoring case): {strn.StartsWith ("A great", System.StringComparison.OrdinalIgnoreCase)}");
    System.Console.WriteLine ($"Ends with '.'? {strn.EndsWith (".")}");
    System.Console.WriteLine ($"Between two 'great' words: '{strn.Substring (strn.IndexOf ("great"), strn.LastIndexOf ("great") - strn.IndexOf ("great"))}'");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
122
0
Gpt4D_Clone122_0.cs 1 29
Gpt4D_Clone122_0.cs 30 39
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, int processId, out string fileName) {
    IntPtr currentProcess = NativeMethods.GetCurrentProcess ();
    bool remote = (processId != NativeMethods.GetProcessId (currentProcess));
    SafeProcessHandle processHandle = null;
    SafeObjectHandle objectHandle = null;
    try {
        if (remote) {
            processHandle = NativeMethods.OpenProcess (ProcessAccessRights.PROCESS_DUP_HANDLE, true, processId);
            if (NativeMethods.DuplicateHandle (processHandle.DangerousGetHandle (), handle, currentProcess, out objectHandle, 0, false, DuplicateHandleOptions.DUPLICATE_SAME_ACCESS)) {
                handle = objectHandle.DangerousGetHandle ();
            }
        }
        return GetFileNameFromHandle (handle, out fileName, 200);
    }
    finally {
        if (remote) {
            if (processHandle != null) {
                processHandle.Close ();
            }
            if (objectHandle != null) {
                objectHandle.Close ();
            }
        }
    }
}
----------------------------------------

private static bool GetFileNameFromHandle(IntPtr handle, int processId, out string fileName)
{
    StringBuilder sb = new StringBuilder(1024);
    GetModuleFileNameEx(handle, IntPtr.Zero, sb, sb.Capacity);
    fileName = sb.ToString();
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
1
Gpt4D_Clone123_1.cs 1 16
Gpt4D_Clone123_1.cs 17 32
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static Task<bool> GetFileNameFromHandle6(IntPtr handle, out string fileName, int wait)
{
    return Task.Run(() =>
    {
       using (var fileState = new FileNameFromHandleState(handle))
       {
          ThreadPool.QueueUserWorkItem(state => GetFileNameFromHandle(state), fileState);
          bool result = fileState.WaitOne(wait);
          fileName = result ? fileState.FileName : string.Empty;
          return result;
       }
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
2
Gpt4D_Clone123_2.cs 1 16
Gpt4D_Clone123_2.cs 17 30
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle5(IntPtr handle, out string fileName, int wait)
{
    using (var fileState = new FileNameFromHandleState(handle))
    {
        ThreadPool.QueueUserWorkItem(state =>
        {
            var f = (FileNameFromHandleState)state;
            GetFileNameFromHandle(f);
        }, fileState);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
3
Gpt4D_Clone123_3.cs 1 16
Gpt4D_Clone123_3.cs 17 29
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle1(IntPtr handle, out string fileName, int wait)
{
    using (FileNameFromHandleState fileState = new FileNameFromHandleState(handle))
    {
        ThreadPool.QueueUserWorkItem(s => GetFileNameFromHandle((FileNameFromHandleState)s), fileState);
        bool retVal = fileState.WaitOne(wait);
        fileName = retVal ? fileState.FileName : string.Empty;
        return retVal;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
4
Gpt4D_Clone123_4.cs 1 16
Gpt4D_Clone123_4.cs 17 30
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle7(IntPtr handle, out string fileName, int wait, Action callback)
{
    using (var fileState = new FileNameFromHandleState(handle))
    {
       ThreadPool.QueueUserWorkItem(state => 
       {
           GetFileNameFromHandle(state);
           callback();
       }, fileState);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
5
Gpt4D_Clone123_5.cs 1 16
Gpt4D_Clone123_5.cs 17 28
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle8(IntPtr handle, out string fileName, int wait)
{
    using (var fileState = new FileNameFromHandleState(handle))
    {
       var task = new Task(state => GetFileNameFromHandle(state), fileState);
       task.Start();
       return fileState.WaitOne(wait) ? (fileName = f.FileName, true) : (fileName = string.Empty, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
6
Gpt4D_Clone123_6.cs 1 16
Gpt4D_Clone123_6.cs 17 28
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle2(IntPtr handle, out string fileName, int wait)
{
    using (FileNameFromHandleState fileState = new FileNameFromHandleState(handle))
    {
        ThreadPool.QueueUserWorkItem(GetFileNameFromHandle, fileState);
        fileName = fileState.WaitOne(wait) ? fileState.FileName : string.Empty;
        return fileName != string.Empty;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
7
Gpt4D_Clone123_7.cs 1 16
Gpt4D_Clone123_7.cs 17 28
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle(IntPtr handle, out string fileName, int wait)
{
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        var state = new FileNameFromHandleState(handle);
        ThreadPool.QueueUserWorkItem(state => GetFileNameFromHandle(state), f);
        return f.WaitOne(wait) ? (fileName = f.FileName, true) : (fileName = string.Empty, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
8
Gpt4D_Clone123_8.cs 1 16
Gpt4D_Clone123_8.cs 17 27
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private async static Task<bool> GetFileNameFromHandle9(IntPtr handle, string fileName, int wait)
{
    using (var fileState = new FileNameFromHandleState(handle))
    {
       await Task.Factory.StartNew(state => GetFileNameFromHandle(state), fileState);
       return fileState.WaitOne(wait) ? (fileName = fileState.FileName, true) : (fileName = string.Empty, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
123
9
Gpt4D_Clone123_9.cs 1 16
Gpt4D_Clone123_9.cs 17 26
----------------------------------------

private static bool GetFileNameFromHandle (IntPtr handle, out string fileName, int wait) {
    using (FileNameFromHandleState f = new FileNameFromHandleState (handle))
    {
        ThreadPool.QueueUserWorkItem (new WaitCallback (GetFileNameFromHandle), f);
        if (f.WaitOne (wait)) {
            fileName = f.FileName;
            return f.RetValue;
        } else {
            fileName = string.Empty;
            return false;
        }
    }}
----------------------------------------

private static bool GetFileNameFromHandle4(IntPtr handle, out string fileName, int wait)
{
    using (var fileState = new FileNameFromHandleState(handle))
    {
        ThreadPool.QueueUserWorkItem(state => GetFileNameFromHandle((FileNameFromHandleState)state), fileState);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
0
Gpt4D_Clone124_0.cs 1 29
Gpt4D_Clone124_0.cs 30 52
----------------------------------------

private static string GetHandleTypeToken (IntPtr handle, int processId) {
    IntPtr currentProcess = NativeMethods.GetCurrentProcess ();
    bool remote = (processId != NativeMethods.GetProcessId (currentProcess));
    SafeProcessHandle processHandle = null;
    SafeObjectHandle objectHandle = null;
    try {
        if (remote) {
            processHandle = NativeMethods.OpenProcess (ProcessAccessRights.PROCESS_DUP_HANDLE, true, processId);
            if (NativeMethods.DuplicateHandle (processHandle.DangerousGetHandle (), handle, currentProcess, out objectHandle, 0, false, DuplicateHandleOptions.DUPLICATE_SAME_ACCESS)) {
                handle = objectHandle.DangerousGetHandle ();
            }
        }
        return GetHandleTypeToken (handle);
    }
    finally {
        if (remote) {
            if (processHandle != null) {
                processHandle.Close ();
            }
            if (objectHandle != null) {
                objectHandle.Close ();
            }
        }
    }
}
----------------------------------------

private static string GetHandleTypeToken(IntPtr handle, int processId)
{
    IntPtr currentProcess = NativeMethods.GetCurrentProcess();
    bool remote = processId != NativeMethods.GetProcessId(currentProcess);
    SafeProcessHandle processHandle = remote ? NativeMethods.OpenProcess(ProcessAccessRights.PROCESS_DUP_HANDLE, true, processId) : null;
    SafeObjectHandle objectHandle;
    try {
        if (remote && processHandle != null) {
            objectHandle = NativeMethods.DuplicateHandle(processHandle.DangerousGetHandle(), handle, currentProcess, 0, false, DuplicateHandleOptions.DUPLICATE_SAME_ACCESS);
            handle = objectHandle != null ? objectHandle.DangerousGetHandle() : handle;
        }
        return GetHandleTypeToken(handle);
    }
    finally {
        if (remote) {
            processHandle?.Close();
            objectHandle?.Close();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
0
Gpt4D_Clone126_0.cs 1 17
Gpt4D_Clone126_0.cs 18 38
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
		    int x;
		    if(Int32.TryParse(textBox1.Text, out x))
		    {
			if(x < 10 && x > 0)
			{
			    var processor = new MyProcessor();
			    textBox1.Text = processor.AddTen(x).ToString();
			}
			else ShowErrorMessage();
		    }
		    else ShowErrorMessage();
		}
		public void ShowErrorMessage()
		{
		    MessageBox.Show("You need to enter a number between 1 and 9");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
1
Gpt4D_Clone126_1.cs 1 17
Gpt4D_Clone126_1.cs 18 30
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
    try {
        int x = Int32.Parse(textBox1.Text);
        if(x >= 1 && x <= 9)
            textBox1.Text = new MyProcessor().AddTen(x).ToString();
        else throw new ArgumentException();
    } catch {
        MessageBox.Show("You need to enter a number between 1 and 9");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
10
Gpt4D_Clone126_10.cs 1 17
Gpt4D_Clone126_10.cs 18 38
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
		    int x;
		    if(Int32.TryParse(textBox1.Text, out x))
		    {
			if(x < 10 && x > 0)
			{
			    var processor = new MyProcessor();
			    textBox1.Text = processor.AddTen(x).ToString();
			}
			else ShowErrorMessage();
		    }
		    else ShowErrorMessage();
		}
		public void ShowErrorMessage()
		{
		    MessageBox.Show("You need to enter a number between 1 and 9");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
2
Gpt4D_Clone126_2.cs 1 17
Gpt4D_Clone126_2.cs 18 30
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
    int x;
    bool isParsed = Int32.TryParse(textBox1.Text, out x);
    bool isInRange = x > 0 && x < 10;
    if(!isParsed || !isInRange)
    {
        MessageBox.Show("You need to enter a number between 1 and 9");
    }
    else textBox1.Text = new MyProcessor().AddTen(x).ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
3
Gpt4D_Clone126_3.cs 1 17
Gpt4D_Clone126_3.cs 18 37
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
    if(int.TryParse(textBox1.Text, out int x))
    {
        if(x >= 1 && x <= 9)
        {
            textBox1.Text = new MyProcessor().AddTen(x).ToString();
        }
        else
        {
            MessageBox.Show("You need to enter a number between 1 and 9");
        }
    }
    else
    {
        MessageBox.Show("You need to enter a number between 1 and 9");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
4
Gpt4D_Clone126_4.cs 1 17
Gpt4D_Clone126_4.cs 18 29
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
   int value;
   bool success = Int32.TryParse(textBox1.Text, out value);
   if (success &&  value > 0 && value < 10) {
       textBox1.Text = new MyProcessor().AddTen(value).ToString();
   } 
   else {
       MessageBox.Show("You need to enter a number between 1 an 9");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
5
Gpt4D_Clone126_5.cs 1 17
Gpt4D_Clone126_5.cs 18 32
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
		   int value;
		   if (IsValidInput(textBox1.Text, out value)) {
		       textBox1.Text = new MyProcessor().AddTen(value).ToString();
		   } 
		   else {
		       MessageBox.Show("You need to enter a number between 1 an 9");
		   }
		}
		protected bool IsValidInput (string text, out int value) {
		    return int.TryParse(text, out value) && value > 0 && value < 10;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
6
Gpt4D_Clone126_6.cs 1 17
Gpt4D_Clone126_6.cs 18 41
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
		{
		    var value = IsValidValue(textBox1.Text);
		    if (value.HasValue)
		    {
			textBox1.Text = new MyProcessor().AddTen(value.Value).ToString();
		    }
		    else
		    {
			MessageBox.Show("You need to enter a number between 1 and 9");
		    }
		}
		private int? IsValidValue(string text)
		{
		    if (!int.TryParse(text, out var value) || value < 1 || value > 9)
		    {
			return null;
		    }
		    return value;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
7
Gpt4D_Clone126_7.cs 1 17
Gpt4D_Clone126_7.cs 18 30
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
	    if (int.TryParse(textBox1.Text, out int value) && value > 0 && value < 10)
	    {
		textBox1.Text = new MyProcessor().AddTen(value).ToString();
	    }
	    else
	    {
		MessageBox.Show("You need to enter a number between 1 an 9");
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
8
Gpt4D_Clone126_8.cs 1 17
Gpt4D_Clone126_8.cs 18 26
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
    bool isValid = Int32.TryParse(textBox1.Text, out int x) && x <= 9 && x >= 1;
    textBox1.Text = isValid ? new MyProcessor().AddTen(x).ToString() : "You need to enter a number between 1 and 9";
    if (!isValid)
        MessageBox.Show(textBox1.Text);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
9
Gpt4D_Clone126_9.cs 1 17
Gpt4D_Clone126_9.cs 18 31
----------------------------------------

protected void button1_Click (object sender, EventArgs e) {
    int safelyConvertedValue = - 1;
    if (! System.Int32.TryParse (textBox1.Text, out safelyConvertedValue)) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    if (safelyConvertedValue < 0 || safelyConvertedValue > 9) {
        MessageBox.Show ("You need to enter a number between 1 an 9");
        return;
    }
    MyProcessor p = new MyProcessor ();
    textBox1.Text = p.AddTen (safelyConvertedValue).ToString ();
}
----------------------------------------

protected void button1_Click(object sender, EventArgs e)
{
    if(Int32.TryParse(textBox1.Text, out int x) && x >= 1 && x <= 9)
    {
        textBox1.Text = (new MyProcessor().AddTen(x)).ToString();
    }
    else
    {
        MessageBox.Show("You need to enter a number between 1 and 9");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
0
Gpt4D_Clone129_0.cs 1 35
Gpt4D_Clone129_0.cs 36 58
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public static Bitmap RotateImage2(Image image, PointF offset, float angle)
{
    if (image is null)
        throw new ArgumentNullException(nameof(image));
    float x = offset.X, y = offset.Y;
    Bitmap rotatedBmp = new Bitmap(image.Width, image.Height);
    rotatedBmp.SetResolution(image.HorizontalResolution, image.VerticalResolution);
    using (Graphics g = Graphics.FromImage(rotatedBmp))
    {
        g.SmoothingMode = SmoothingMode.HighQuality;
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.PixelOffsetMode = PixelOffsetMode.HighQuality;
        g.RotateTransform(angle);
        g.DrawImage(image, new PointF(x, y));
    }
    return rotatedBmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
1
Gpt4D_Clone129_1.cs 1 35
Gpt4D_Clone129_1.cs 36 56
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public Bitmap RotateImage6(Image image, float angle, bool highQuality)
{
    int width = image.Width;
    int height = image.Height;
    float size = Math.Max(width, height);
    Bitmap bitmap = new Bitmap((int)size, (int)size);
    Graphics g = Graphics.FromImage(bitmap);
    g.SmoothingMode = highQuality ? SmoothingMode.HighQuality : SmoothingMode.Default;
    g.TranslateTransform(size / 2f, size / 2f);
    g.RotateTransform(angle);
    g.TranslateTransform(-width / 2f, -height / 2f);
    g.DrawImage(image, 0, 0);
    return bitmap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
2
Gpt4D_Clone129_2.cs 1 35
Gpt4D_Clone129_2.cs 36 51
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public static Image RotateImage1 (Image img, float angle)
{
    var rectangle = new Rectangle(0, 0, img.Width, img.Height);
    var bitmap = new Bitmap(img.Width, img.Height);
    bitmap.SetResolution(img.HorizontalResolution, img.VerticalResolution);
    using (Graphics graphics = Graphics.FromImage(bitmap))
    {
        graphics.SmoothingMode = SmoothingMode.AntiAlias;
        graphics.TranslateTransform((float) bitmap.Width / 2, (float) bitmap.Height / 2);
        graphics.RotateTransform(angle);
        graphics.TranslateTransform((float) -bitmap.Width / 2, (float) -bitmap.Height / 2);
        graphics.DrawImage(img, rectangle);
    } return bitmap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
3
Gpt4D_Clone129_3.cs 1 35
Gpt4D_Clone129_3.cs 36 51
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public Bitmap RotateImage3(Bitmap bmp, float angle)
{
    Matrix rotation = new Matrix();
    rotation.RotateAt(angle, new PointF(bmp.Width / 2f, bmp.Height / 2f));
    Bitmap rotatedImage = new Bitmap(bmp.Width, bmp.Height);
    using (Graphics g = Graphics.FromImage(rotatedImage))
    {
        g.InterpolationMode = InterpolationMode.HighQualityBilinear;
        g.PixelOffsetMode = PixelOffsetMode.HighQuality;
        g.Transform = rotation;
        g.DrawImage(bmp, new Point(0, 0));
    }
    return rotatedImage;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
4
Gpt4D_Clone129_4.cs 1 35
Gpt4D_Clone129_4.cs 36 51
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public Image RotateImage7(Image img, float rotationAngle)
{
    var bmp = new Bitmap(img.Width, img.Height);
    using (var graphics = Graphics.FromImage(bmp))
    {
        graphics.Clear(Color.White); // better performance than graphics.FillRectangle
        graphics.TranslateTransform((float)bmp.Width / 2, (float)bmp.Height / 2);
        graphics.RotateTransform(rotationAngle);
        graphics.TranslateTransform(-(float)bmp.Width / 2, -(float)bmp.Height / 2);
        graphics.DrawImage(img, new Point(0, 0));
    }
    return bmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
5
Gpt4D_Clone129_5.cs 1 35
Gpt4D_Clone129_5.cs 36 50
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public static Bitmap RotateImage8(Image img, float rotationAngle)
{
    Bitmap bmp = new Bitmap(img.Width, img.Height);
    using (Graphics gfx = Graphics.FromImage(bmp))
    {
        gfx.TranslateTransform((float)bmp.Width / 2, (float)bmp.Height / 2);
        gfx.RotateTransform(rotationAngle);
        gfx.TranslateTransform(-(float)bmp.Width / 2, -(float)bmp.Height / 2);
        gfx.DrawImage(img, new Point(0, 0));
    }
    return bmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
6
Gpt4D_Clone129_6.cs 1 35
Gpt4D_Clone129_6.cs 36 49
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public Image RotateImage9(Image img, float rotationAngle)
{
    var bmp = new Bitmap(img.Width, img.Height);
    var graphics = Graphics.FromImage(bmp);
    graphics.TranslateTransform((float)bmp.Width / 2, (float)bmp.Height / 2);
    graphics.RotateTransform(rotationAngle);
    graphics.TranslateTransform(-(float)bmp.Width / 2, -(float)bmp.Height / 2);
    graphics.DrawImage(img, new Rectangle(0, 0, img.Width, img.Height), new Rectangle(0, 0, img.Width, img.Height), GraphicsUnit.Pixel);
    graphics.Dispose();
    return bmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
7
Gpt4D_Clone129_7.cs 1 35
Gpt4D_Clone129_7.cs 36 47
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public static Bitmap RotateImage4(Image img, float angle)
{
    int length = Math.Max(img.Width, img.Height);
    Bitmap bmp = new Bitmap(length,length);
    Graphics g = Graphics.FromImage(bmp);
    g.TranslateTransform(length/2, length / 2);
    g.RotateTransform(angle);
    g.TranslateTransform(-img.Width /2, -img.Height/2);
    g.DrawImage(img, new Point(0,0));
    return bmp;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
8
Gpt4D_Clone129_8.cs 1 35
Gpt4D_Clone129_8.cs 36 50
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public static Image RotateImage10(Image img, float rotationAngle)
{
    Bitmap loBmpRet = new Bitmap(img.Width, img.Height);
    Graphics loG = Graphics.FromImage(loBmpRet);
    Point loRotationPoint = new Point(loBmpRet.Width / 2, loBmpRet.Height / 2);
    loG.TranslateTransform(loRotationPoint.X, loRotationPoint.Y);
    loG.RotateTransform(rotationAngle);
    loG.TranslateTransform(-loRotationPoint.X, -loRotationPoint.Y);
    loG.DrawImage(img, new Rectangle(0, 0, loBmpRet.Width, loBmpRet.Height), 0, 0, img.Width, img.Height, GraphicsUnit.Pixel);
    return loBmpRet;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
9
Gpt4D_Clone129_9.cs 1 35
Gpt4D_Clone129_9.cs 36 52
----------------------------------------

public static Image RotateImage (Image img, float rotationAngle) {
    int minx = int.MaxValue, maxx = int.MinValue, miny = int.MaxValue, maxy = int.MinValue;
    using (Bitmap bmp = new Bitmap (1, 1))
    {
        using (Graphics g = Graphics.FromImage (bmp))
        {
            g.TranslateTransform ((float) img.Width / 2, (float) img.Height / 2);
            g.RotateTransform (rotationAngle);
            g.TranslateTransform (- (float) img.Width / 2, - (float) img.Height / 2);
            Point [] pts = new Point [4];
            pts [0] = new Point (0, 0);
            pts [1] = new Point (img.Width, 0);
            pts [2] = new Point (img.Width, img.Height);
            pts [3] = new Point (0, img.Height);
            g.TransformPoints (CoordinateSpace.Device, CoordinateSpace.World, pts);
            foreach (Point pt in pts) {
                minx = Math.Min (minx, pt.X);
                maxx = Math.Max (maxx, pt.X);
                miny = Math.Min (miny, pt.Y);
                maxy = Math.Max (maxy, pt.Y);
            }
        }} Bitmap bmp2 = new Bitmap (maxx - minx, maxy - miny);
    using (Graphics g = Graphics.FromImage (bmp2))
    {
        g.TranslateTransform ((float) bmp2.Width / 2, (float) bmp2.Height / 2);
        g.RotateTransform (rotationAngle);
        g.TranslateTransform (- (float) bmp2.Width / 2, - (float) bmp2.Height / 2);
        g.InterpolationMode = InterpolationMode.HighQualityBicubic;
        g.DrawImage (img, bmp2.Width / 2 - img.Width / 2, bmp2.Height / 2 - img.Height / 2);
    } return bmp2;
}
----------------------------------------

public Bitmap RotateImage5(Bitmap b, float angle)
{
    //create a new empty bitmap to hold rotated image
    Bitmap returnBitmap = new Bitmap(b.Size.Width, b.Size.Height);
    //make a graphics object from the empty bitmap
    Graphics g = Graphics.FromImage(returnBitmap);
    //move rotation point to center of image
    g.TranslateTransform((float)b.Width / 2, (float)b.Height / 2);
    //rotate
    g.RotateTransform(angle);
    //move image back
    g.TranslateTransform(-(float)b.Width / 2, -(float)b.Height / 2);
    //draw passed in image onto graphics object
    g.DrawImage(b, new Point(0,0));
    return returnBitmap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
0
Gpt4D_Clone135_0.cs 1 18
Gpt4D_Clone135_0.cs 19 44
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
	{
	    int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
	    GridViewRow row = GridView1.Rows[e.RowIndex];
	    TextBox name = row.FindControl("nam") as TextBox;
	    TextBox ques = row.FindControl("que") as TextBox;
	    string updateQuery = @"update exam set name1=@name,ques=@ques where id = @id";
	    using(MySqlConnection conn = new MySqlConnection(connString))
	    {
		using(MySqlCommand command = new MySqlCommand())
		{
		    command.Connection = conn;
		    command.CommandText = updateQuery;
		    command.Parameters.AddWithValue("@id", id);
		    command.Parameters.AddWithValue("@name", name.Text.Trim());
		    command.Parameters.AddWithValue("@ques", ques.Text.Trim());
		    conn.Open();
		    command.ExecuteNonQuery();
		}
	    }
	    GridView1.EditIndex = -1;
	    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
1
Gpt4D_Clone135_1.cs 1 18
Gpt4D_Clone135_1.cs 19 43
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
	    var id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
	    var row = GridView1.Rows[e.RowIndex];
	    var name = ((TextBox)row.Cells[1].Controls[0]).Text;
	    var ques = ((TextBox)row.Cells[2].Controls[0]).Text;
	    var query = "update exam set name1=@name,ques=@ques where id = @id";
	    using (MySqlConnection con = new MySqlConnection(connectionString))
	    {
		using (MySqlCommand cmd = new MySqlCommand(query, con))
		{
		    cmd.Parameters.AddWithValue("@id", id);
		    cmd.Parameters.AddWithValue("@name", name);
		    cmd.Parameters.AddWithValue("@ques", ques);
		    con.Open();
		    cmd.ExecuteNonQuery();
		    con.Close();
		}
	    }
	    GridView1.EditIndex = -1;
	    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
2
Gpt4D_Clone135_2.cs 1 18
Gpt4D_Clone135_2.cs 19 38
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString);
    GridViewRow row = (GridViewRow)GridView1.Rows[e.RowIndex];
    Textbox name = row.FindControl("nam") as TextBox;
    Textbox ques = row.FindControl("que") as TextBox;
    var id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
    conn.Open();
    string updateQuery = "UPDATE exam SET name1=@name, ques=@ques WHERE id = @id";
    SqlCommand com = new SqlCommand(updateQuery, conn);
    com.Parameters.AddWithValue("@id", id);
    com.Parameters.AddWithValue("@name", name.Text.Trim());
    com.Parameters.AddWithValue("@ques", ques.Text.Trim());
    com.ExecuteNonQuery();
    GridView1.EditIndex = -1;
    bind();
    conn.Close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
3
Gpt4D_Clone135_3.cs 1 18
Gpt4D_Clone135_3.cs 19 39
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    string id = GridView1.DataKeys[e.RowIndex].Value.ToString();
    GridViewRow row = GridView1.Rows[e.RowIndex];
    var name = ((TextBox)row.FindControl("nam")).Text;
    var ques = ((TextBox)row.FindControl("que")).Text;
    using(MySqlCommand cmd = new MySqlCommand())
    {
        cmd.Connection = con;
        cmd.CommandText = "update exam set name1=@name,ques=@ques where id = @id";
        cmd.Parameters.AddWithValue("@id", id);
        cmd.Parameters.AddWithValue("@name", name);
        cmd.Parameters.AddWithValue("@ques", ques);
        con.Open();
        cmd.ExecuteNonQuery();
    }
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
4
Gpt4D_Clone135_4.cs 1 18
Gpt4D_Clone135_4.cs 19 38
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    var id = ((Label)GridView1.Rows[e.RowIndex].FindControl("lblID")).Text;
    var name = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("txtName")).Text;
    var ques = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("txtQues")).Text;
    var updateSql = "update exam set name1=@name,ques=@ques where id = @id"; 
    using(SqlConnection conn = new SqlConnection(connStr))
    using(SqlCommand cmd = new SqlCommand(updateSql, conn))
    {
        cmd.Parameters.AddWithValue("@id", id);
        cmd.Parameters.AddWithValue("@name", name);
        cmd.Parameters.AddWithValue("@ques", ques);
        conn.Open();
        cmd.ExecuteNonQuery();
    }
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
5
Gpt4D_Clone135_5.cs 1 18
Gpt4D_Clone135_5.cs 19 39
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    var id = ((Label)GridView1.Rows[e.RowIndex].FindControl("lblID")).Text;
    var name = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("txtName")).Text;
    var ques = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("txtQues")).Text;
    using (SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
    {
        using (SqlCommand cmd = new SqlCommand("update exam set name1=@name,ques=@ques where id = @id", con))
        {
            cmd.Parameters.AddWithValue("@id", id);
            cmd.Parameters.AddWithValue("@name", name);
            cmd.Parameters.AddWithValue("@ques", ques);
            con.Open();
            cmd.ExecuteNonQuery();
        }
    }
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
6
Gpt4D_Clone135_6.cs 1 18
Gpt4D_Clone135_6.cs 19 38
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    string id = GridView1.DataKeys[e.RowIndex].Value.ToString();
    GridViewRow row = GridView1.Rows[e.RowIndex];
    string name = ((TextBox)row.Cells[1].Controls[0]).Text;
    string ques = ((TextBox)row.Cells[2].Controls[0]).Text;
    MySqlConnection conn = new MySqlConnection(myConnectionString);
    MySqlCommand cmd = new MySqlCommand("update exam set name1=@name,ques=@ques where id = @id", conn);
    cmd.Parameters.AddWithValue("@id", id);
    cmd.Parameters.AddWithValue("@name", name);
    cmd.Parameters.AddWithValue("@ques", ques);
    conn.Open();
    cmd.ExecuteNonQuery();
    conn.Close();
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
7
Gpt4D_Clone135_7.cs 1 18
Gpt4D_Clone135_7.cs 19 37
----------------------------------------

protected void GridView1_RowUpdating (object sender, GridViewUpdateEventArgs e) {
    GridViewRow row = (GridViewRow) GridView1.Rows [e.RowIndex];
    int id = Int32.Parse (GridView1.DataKeys [e.RowIndex].Value.ToString ());
    TextBox tname = (TextBox) row.FindControl ("nam");
    TextBox tques = (TextBox) row.FindControl ("que");
    MySqlCommand cmd = new MySqlCommand ("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.Add ("@id", MySqlDbType.Int16).Value = id;
    cmd.Parameters.Add ("@name", MySqlDbType.VarChar, 30).Value = tname.Text.Trim ();
    cmd.Parameters.Add ("@ques", MySqlDbType.VarChar, 40).Value = tques.Text.Trim ();
    con.Open ();
    cmd.ExecuteNonQuery ();
    GridView1.EditIndex = - 1;
    bind ();
}
----------------------------------------

protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    string id = GridView1.DataKeys[e.RowIndex].Value.ToString();
    GridViewRow row = GridView1.Rows[e.RowIndex];
    var name = ((TextBox)row.Cells[1].FindControl("nam")).Text;
    var ques = ((TextBox)row.Cells[2].FindControl("que")).Text;
    SqlCommand cmd = new SqlCommand("update exam set name1=@name,ques=@ques where id = @id", con);
    cmd.Parameters.AddWithValue("@id", id);
    cmd.Parameters.AddWithValue("@name", name);
    cmd.Parameters.AddWithValue("@ques", ques);
    con.Open();
    cmd.ExecuteNonQuery();
    con.Close();
    GridView1.EditIndex = -1;
    bind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
0
Gpt4D_Clone143_0.cs 1 22
Gpt4D_Clone143_0.cs 23 42
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');      
    int iterations = xs.Length < ys.Length ? xs.Length : ys.Length;
    
    for(int i = 0; i < iterations ; i++)
    {
        int X = int.Parse(xs[i]), Y = int.Parse(ys[i]);
        if(X > Y) return 1;
        if(X < Y) return -1;
    }
    
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
1
Gpt4D_Clone143_1.cs 1 22
Gpt4D_Clone143_1.cs 23 45
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.'); 
    int limit = Math.Min(xs.Length, ys.Length);
    for(int i = 0; i < limit; i++)
    {
        if(int.Parse(xs[i]) > int.Parse(ys[i])) 
        {
            return 1;
        } 
        else if(int.Parse(xs[i]) < int.Parse(ys[i])) 
        {
            return -1;
        }
    }
    return xs.Length - ys.Length;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
2
Gpt4D_Clone143_2.cs 1 22
Gpt4D_Clone143_2.cs 23 41
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');      
    int iterations = (xs.Length < ys.Length) ? xs.Length : ys.Length;
    
    for(int i = 0; i < iterations; i++)
    {
        int x_elem = int.Parse(xs[i]);
        int y_elem = int.Parse(ys[i]);
        if(x_elem != y_elem) return x_elem > y_elem ? 1 : -1;
    }
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
3
Gpt4D_Clone143_3.cs 1 22
Gpt4D_Clone143_3.cs 23 43
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    string[] xs = x.Split('.');
    string[] ys = y.Split('.');
    int minLen = Math.Min(xs.Length, ys.Length);
    for (int i = 0; i < minLen; i++)
    {
        int xVal = int.Parse(xs[i]);
        int yVal = int.Parse(ys[i]);
        if (xVal != yVal)
            return xVal.CompareTo(yVal);
    }
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
4
Gpt4D_Clone143_4.cs 1 22
Gpt4D_Clone143_4.cs 23 36
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');
    int iterations = Math.Min(xs.Length, ys.Length);
    for(int i = 0; i < iterations; i++)
    {
        var comp = int.Parse(xs[i]).CompareTo(int.Parse(ys[i]));
        if(comp != 0) return comp;
    }
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
5
Gpt4D_Clone143_5.cs 1 22
Gpt4D_Clone143_5.cs 23 39
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');      
    var limit = Math.Min(xs.Length, ys.Length);
    
    for(int i = 0; i < limit; i++)
    {
        int comparison = int.Parse(xs[i]).CompareTo(int.Parse(ys[i]));
        if(comparison != 0) return comparison;
    }
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
6
Gpt4D_Clone143_6.cs 1 22
Gpt4D_Clone143_6.cs 23 40
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    string[] xs = x.Split('.');
    string[] ys = y.Split('.');
    int len = Math.Min(xs.Length, ys.Length);
    for (int i = 0; i < len; i++)
    {
        int xi = int.Parse(xs[i]), yi = int.Parse(ys[i]);
        if (xi != yi)
            return xi < yi ? -1 : 1;
    }
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
7
Gpt4D_Clone143_7.cs 1 22
Gpt4D_Clone143_7.cs 23 40
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');      
    var limit = Math.Min(xs.Length, ys.Length);
    
    for(int i = 0; i < limit; i++)
    {
        int comparison = int.Parse(xs[i]) - int.Parse(ys[i]);
        if(comparison != 0) return Math.Sign(comparison);
    }
    return Math.Sign(xs.Length - ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
8
Gpt4D_Clone143_8.cs 1 23
Gpt4D_Clone143_8.cs 24 40
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
    
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');      
    int iterations = xs.Length < ys.Length ? xs.Length : ys.Length;
    
    for(int i = 0; i < iterations ; i++)
    {
        int result = int.Parse(xs[i]) - int.Parse(ys[i]);
        if(result != 0) return Math.Sign(result);
    }
    return xs.Length - ys.Length;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
143
9
Gpt4D_Clone143_9.cs 1 22
Gpt4D_Clone143_9.cs 23 41
----------------------------------------

public int Compare (string x, string y) {
    string [] xs = x.Split ('.');
    string [] ys = y.Split ('.');
    int maxLoop = Math.Min (xs.Length, ys.Length);
    for (int i = 0; i < maxLoop; i ++) {
        if (int.Parse (xs [i]) > int.Parse (ys [i])) {
            return 1;
        } else if (int.Parse (xs [i]) < int.Parse (ys [i])) {
            return - 1;
        }
    }
    if (xs.Length > ys.Length) {
        return 1;
    } else if (xs.Length < ys.Length) {
        return - 1;
    }
    return 0;
}
----------------------------------------

public int Compare(string x, string y)
{
    var xs = x.Split('.');
    var ys = y.Split('.');
    for (int i = 0; i < Math.Min(xs.Length, ys.Length); i++)
    {
        int cx = int.Parse(xs[i]), cy = int.Parse(ys[i]);
        if (cx != cy)
            return cx > cy ? 1 : -1;
    }
 
    return xs.Length.CompareTo(ys.Length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
0
Gpt4D_Clone145_0.cs 1 28
Gpt4D_Clone145_0.cs 29 56
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		if (Process.GetProcessesByName(processName).Length == 0)
		{
		    Console.WriteLine(processName + " process not found");
		}
		else
		{
		    Process process = Process.GetProcessesByName(processName)[0];
		    TimeSpan currentTotalProcessorTime = process.TotalProcessorTime;
		    DateTime currentTime = DateTime.Now;
		    double cpuUsagePercentage = CalculateCPUUsage(currentTime, currentTotalProcessorTime);
		    Console.WriteLine("{0} CPU: {1:0.0}%", processName, cpuUsagePercentage * 100);
		    Thread.Sleep(250);
		}
	    }
	}
	static double CalculateCPUUsage(DateTime currentTime, TimeSpan currentTotalProcessorTime)
	{
	    return (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
1
Gpt4D_Clone145_1.cs 1 28
Gpt4D_Clone145_1.cs 29 71
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
		    string processName = "OUTLOOK";
		    Console.WriteLine("Press the any key to stop...\n");
		    while (!Console.KeyAvailable)
		    {
			Process[] processList = Process.GetProcessesByName(processName);
			if (processList.Length == 0)
			{
			    Console.WriteLine(processName + " process not found");
			}
			else
			{
			    Process process = processList[0];
			    CPUUsage(process, processName);
			}
			Thread.Sleep(250);
		    }
		}
		static void CPUUsage(Process process, string processName)
		{
		    if (lastTime == null || lastTime == new DateTime())
		    {
			lastTime = DateTime.Now;
			lastTotalProcessorTime = process.TotalProcessorTime;
		    }
		    else
		    {
			DateTime currentTime = DateTime.Now;
			TimeSpan currentTotalProcessorTime = process.TotalProcessorTime;
			double cpuUsagePercentage = CalculateCPUUsage(currentTime, currentTotalProcessorTime);
			Console.WriteLine("{0} CPU: {1:0.0}%", processName, cpuUsagePercentage * 100);
			lastTime = currentTime;
			lastTotalProcessorTime = currentTotalProcessorTime;
		    }
		}
		static double CalculateCPUUsage(DateTime currentTime, TimeSpan currentTotalProcessorTime)
		{
		    return (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
2
Gpt4D_Clone145_2.cs 1 28
Gpt4D_Clone145_2.cs 29 71
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
		    string processName = "OUTLOOK";
		    Console.WriteLine("Press the any key to stop...\n");
		    while (!Console.KeyAvailable)
		    {
			Process[] processList = Process.GetProcessesByName(processName);
			if (processList.Length == 0)
			{
			    Console.WriteLine(processName + " process not found");
			}
			else
			{
			    Process process = processList[0];
			    CPUUsage(process, processName);
			}
			Thread.Sleep(250);
		    }
		}
		static void CPUUsage(Process process, string processName)
		{
		    if (lastTime == null || lastTime == new DateTime())
		    {
			lastTime = DateTime.Now;
			lastTotalProcessorTime = process.TotalProcessorTime;
		    }
		    else
		    {
			DateTime currentTime = DateTime.Now;
			TimeSpan currentTotalProcessorTime = process.TotalProcessorTime;
			double cpuUsagePercentage = CalculateCPUUsage(currentTime, currentTotalProcessorTime);
			Console.WriteLine("{0} CPU: {1:0.0}%", processName, cpuUsagePercentage * 100);
			lastTime = currentTime;
			lastTotalProcessorTime = currentTotalProcessorTime;
		    }
		}
		static double CalculateCPUUsage(DateTime currentTime, TimeSpan currentTotalProcessorTime)
		{
		    return (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
3
Gpt4D_Clone145_3.cs 1 28
Gpt4D_Clone145_3.cs 29 66
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		bool processExists = ProcessExists(processName);
		if (!processExists)
		{
		    Console.WriteLine(processName + " process not found");
		}
		else
		{
		    LogCPUUsage(processName);
		}
		Thread.Sleep(250);
	    }
	}
	static void LogCPUUsage(string processName)
	{
	    Process process = Process.GetProcessesByName(processName)[0];
	    TimeSpan currentTotalProcessorTime = process.TotalProcessorTime;
	    DateTime currentTime = DateTime.Now;
	    double cpuUsagePercentage = CalculateCPUUsage(currentTime, currentTotalProcessorTime);
	    Console.WriteLine("{0} CPU: {1:0.0}%", processName, cpuUsagePercentage * 100);
	}
	static double CalculateCPUUsage(DateTime currentTime, TimeSpan currentTotalProcessorTime)
	{
	    return (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	}
	static bool ProcessExists(string processName)
	{
	    return Process.GetProcessesByName(processName).Length > 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
4
Gpt4D_Clone145_4.cs 1 28
Gpt4D_Clone145_4.cs 29 58
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		var processList = Process.GetProcessesByName(processName);
		if (processList.Length == 0)
		{
		    Console.WriteLine("{0} process not found", processName);
		}
		else {
		    UpdateCPULoad(processList[0], processName);
		}
		Thread.Sleep(250);
	    }
	}
	static void UpdateCPULoad(Process process, string processName)
	{
	     DateTime currentTime = DateTime.Now;
	    TimeSpan currentProcessorUsage = process.TotalProcessorTime;
	    double CPULoad = (currentProcessorUsage.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	    Console.WriteLine("{0} CPU: {1:0.0}%", processName, CPULoad * 100);
	    lastTime = currentTime;
	    lastTotalProcessorTime = currentProcessorUsage;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
5
Gpt4D_Clone145_5.cs 1 28
Gpt4D_Clone145_5.cs 29 60
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		if (!ProcessExists(processName))
		{
		    Console.WriteLine(string.Format("{0} process not found", processName));
		}
		else
		{
		    LogProcessCpuUsage(processName);
		}
		Thread.Sleep(250);
	    }
	}
	static bool ProcessExists(string processName){
	    return Process.GetProcessesByName(processName).Length > 0;
	}
	static void LogProcessCpuUsage(string processName){
	    Process p = Process.GetProcessesByName(processName)[0];
	    TimeSpan currentTotalProcessorTime = p.TotalProcessorTime;
	    DateTime currentTime = DateTime.Now;
	    double cpuUsage = (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	    Console.WriteLine(string.Format("{0} CPU: {1:0.0}%", processName, cpuUsage * 100));
	    lastTime = currentTime;
	    lastTotalProcessorTime = currentTotalProcessorTime;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
6
Gpt4D_Clone145_6.cs 1 28
Gpt4D_Clone145_6.cs 29 60
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		if (!ProcessExists(processName))
		{
		    Console.WriteLine(string.Format("{0} process not found", processName));
		}
		else
		{
		    LogProcessCpuUsage(processName);
		}
		Thread.Sleep(250);
	    }
	}
	static bool ProcessExists(string processName){
	    return Process.GetProcessesByName(processName).Length > 0;
	}
	static void LogProcessCpuUsage(string processName){
	    Process p = Process.GetProcessesByName(processName)[0];
	    TimeSpan currentTotalProcessorTime = p.TotalProcessorTime;
	    DateTime currentTime = DateTime.Now;
	    double cpuUsage = (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	    Console.WriteLine(string.Format("{0} CPU: {1:0.0}%", processName, cpuUsage * 100));
	    lastTime = currentTime;
	    lastTotalProcessorTime = currentTotalProcessorTime;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
7
Gpt4D_Clone145_7.cs 1 28
Gpt4D_Clone145_7.cs 29 58
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		var processList = Process.GetProcessesByName(processName);
		if (processList.Length == 0)
		{
		    Console.WriteLine("{0} process not found", processName);
		}
		else {
		    UpdateCPULoad(processList[0], processName);
		}
		Thread.Sleep(250);
	    }
	}
	static void UpdateCPULoad(Process process, string processName)
	{
	     DateTime currentTime = DateTime.Now;
	    TimeSpan currentProcessorUsage = process.TotalProcessorTime;
	    double CPULoad = (currentProcessorUsage.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	    Console.WriteLine("{0} CPU: {1:0.0}%", processName, CPULoad * 100);
	    lastTime = currentTime;
	    lastTotalProcessorTime = currentProcessorUsage;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
8
Gpt4D_Clone145_8.cs 1 28
Gpt4D_Clone145_8.cs 29 66
----------------------------------------

static void Main (string [] args) {
    string processName = "OUTLOOK";
    Console.WriteLine ("Press the any key to stop...\n");
    while (! Console.KeyAvailable) {
        Process [] pp = Process.GetProcessesByName (processName);
        if (pp.Length == 0) {
            Console.WriteLine (processName + " does not exist");
        } else {
            Process p = pp [0];
            if (lastTime == null || lastTime == new DateTime ()) {
                lastTime = DateTime.Now;
                lastTotalProcessorTime = p.TotalProcessorTime;
            } else {
                curTime = DateTime.Now;
                curTotalProcessorTime = p.TotalProcessorTime;
                double CPUUsage = (curTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / curTime.Subtract (lastTime).TotalMilliseconds / Convert.ToDouble (Environment.ProcessorCount);
                Console.WriteLine ("{0} CPU: {1:0.0}%", processName, CPUUsage * 100);
                lastTime = curTime;
                lastTotalProcessorTime = curTotalProcessorTime;
            }
        }
        Thread.Sleep (250);
    }
}
----------------------------------------

static void Main(string[] args)
{
	    const string processName = "OUTLOOK";
	    Console.WriteLine("Press any key to stop...\n");
	    while (!Console.KeyAvailable)
	    {
		bool processExists = ProcessExists(processName);
		if (!processExists)
		{
		    Console.WriteLine(processName + " process not found");
		}
		else
		{
		    LogCPUUsage(processName);
		}
		Thread.Sleep(250);
	    }
	}
	static void LogCPUUsage(string processName)
	{
	    Process process = Process.GetProcessesByName(processName)[0];
	    TimeSpan currentTotalProcessorTime = process.TotalProcessorTime;
	    DateTime currentTime = DateTime.Now;
	    double cpuUsagePercentage = CalculateCPUUsage(currentTime, currentTotalProcessorTime);
	    Console.WriteLine("{0} CPU: {1:0.0}%", processName, cpuUsagePercentage * 100);
	}
	static double CalculateCPUUsage(DateTime currentTime, TimeSpan currentTotalProcessorTime)
	{
	    return (currentTotalProcessorTime.TotalMilliseconds - lastTotalProcessorTime.TotalMilliseconds) / currentTime.Subtract(lastTime).TotalMilliseconds / Convert.ToDouble(Environment.ProcessorCount);
	}
	static bool ProcessExists(string processName)
	{
	    return Process.GetProcessesByName(processName).Length > 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
1
Gpt4D_Clone152_1.cs 1 23
Gpt4D_Clone152_1.cs 24 41
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    bool Handled = false;
    if(m.Msg == 0x0084 || m.Msg == 0x0200) //WM_NCHITTEST & WM_MOUSEMOVE
    {
        int x = m.LParam.ToInt32() & 0xffff;
        int y = m.LParam.ToInt32() >> 16;
        Point pt = PointToClient(new Point(x, y));
        Rectangle gripRect = new Rectangle(ClientSize.Width - 10, ClientSize.Height - 10, 10, 10);
        if(gripRect.Contains(pt)){
            m.Result = (IntPtr)17; //HTBOTTOMRIGHT
            Handled = true;
        }
    }
    if(!Handled) { base.WndProc(ref m); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
3
Gpt4D_Clone152_3.cs 1 23
Gpt4D_Clone152_3.cs 24 41
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0x0084) // WM_NCHITTEST
    {
        Point pos = new Point(m.LParam.ToInt32());
        Rectangle resizeArea = new Rectangle(eavtForm.Width - 10, eavtForm.Height - 10, 10, 10);
        if (resizeArea.Contains(pos))
        {
            m.Result = new IntPtr(17); // HTBOTTOMRIGHT
            return;
        }
    }
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
4
Gpt4D_Clone152_4.cs 1 23
Gpt4D_Clone152_4.cs 24 41
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0x0084) // WM_NCHITTEST
    {
        Point posPoint = new Point(m.LParam.ToInt32() & 0xffff, m.LParam.ToInt32() >> 16);
        Rectangle resizeRectangle = new Rectangle(eavtForm.Width - 10, eavtForm.Height - 10, 10, 10);
        if (resizeRectangle.Contains(posPoint))
        {
            m.Result = new IntPtr(17); // HTBOTTOMRIGHT
            return;
        }
    }
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
5
Gpt4D_Clone152_5.cs 1 23
Gpt4D_Clone152_5.cs 24 38
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc (ref Message m) 
{
    const int HitTestBottomRight = 17;
    if (m.Msg == 0x0084)
    {
        Point pos = new Point(m.LParam.ToInt32() & 0xffff, m.LParam.ToInt32() >> 16);
        if (pos.X >= this.ClientSize.Width - 10 && pos.Y >= this.ClientSize.Height - 10)
        {
            m.Result = new IntPtr(HitTestBottomRight);
            return;
        }
    }
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
6
Gpt4D_Clone152_6.cs 1 23
Gpt4D_Clone152_6.cs 24 39
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0x0084) // WM_NCHITTEST
    {
        var cursor = this.PointToClient(Cursor.Position);
        var resizezone = new Rectangle(this.ClientSize.Width - 10, this.ClientSize.Height - 10, 10, 10);
        if (resizezone.Contains(cursor))
        {
            m.Result = (IntPtr)0x0011; // HTBOTTOMRIGHT
            return;
        }
    }
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
7
Gpt4D_Clone152_7.cs 1 23
Gpt4D_Clone152_7.cs 24 37
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message message)
{
    if (message.Msg == 0x0084) // WM_NCHITTEST
    {
        var cursor = this.PointToClient(Cursor.Position);
        if (bottomRight.Contains(cursor))
        {
            message.Result = (IntPtr)17; // HTBOTTOMRIGHT
            return;
        }
    }
    base.WndProc(ref message);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
8
Gpt4D_Clone152_8.cs 1 23
Gpt4D_Clone152_8.cs 24 35
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    base.WndProc(ref m);
    if (m.Msg == 0x0084) // WM_NCHITTEST
    {
        var cursor = this.PointToClient(Cursor.Position);
        if (bottomRight.Contains(cursor))
            m.Result = (IntPtr)17; // HTBOTTOMRIGHT
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
0
Gpt4D_Clone153_0.cs 1 23
Gpt4D_Clone153_0.cs 24 48
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        if (m.Msg == 0x0084) // WM_NCHITTEST
        {
            if (this.WindowState == FormWindowState.Normal)
            {
                Point screenPoint = new Point(m.LParam.ToInt32());
                Point clientPoint = this.PointToClient(screenPoint);
                CornerArea cornerArea = CornerArea.None;
                if (new Rectangle(this.ClientSize.Width - RESIZE_HANDLE_SIZE, this.ClientSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE).Contains(clientPoint)) cornerArea = CornerArea.BottomRight;
                if (cornerArea != CornerArea.None)
                {
                    m.Result = (IntPtr)(int)cornerArea;
                    return;
                }
            }
        }
        base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
1
Gpt4D_Clone153_1.cs 1 23
Gpt4D_Clone153_1.cs 24 48
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        const int resizeHandleSize = 10;
        const int htBottomRight = 17;
        var msgMouse = 0x20a;
        base.WndProc(ref m);
        if (m.Msg == msgMouse)
        {
            var screenCoordinates = new Point(m.LParam.ToInt32());
            var clientCoordinates = PointToClient(screenCoordinates);
            if (this.Size.Width - resizeHandleSize < clientCoordinates.X &&
                this.Size.Height - resizeHandleSize < clientCoordinates.Y)
            {
                m.Result = new IntPtr(htBottomRight);
                return;
            }
        }
        
        base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
2
Gpt4D_Clone153_2.cs 1 23
Gpt4D_Clone153_2.cs 24 38
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        if (m.Msg == WM_NCHITTEST && m.Result.ToInt32() == 1)
        {
            var clientPoint = new Point(m.LParam.ToInt32()).Subtract(this.Location);
            if (new Rectangle(this.ClientSize.Width - RESIZE_HANDLE_SIZE, this.ClientSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE).Contains(clientPoint))
                m.Result = new IntPtr(HTBOTTOMRIGHT);
            else
                base.WndProc(ref m);
        }
        else
            base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
3
Gpt4D_Clone153_3.cs 1 23
Gpt4D_Clone153_3.cs 24 37
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        base.WndProc(ref m);
        if (m.Msg == WM_NCHITTEST && m.Result.ToInt32() == HTBOTTOMRIGHT)
        {
            var screenPoint = PointToScreen(new Point(this.Width - RESIZE_HANDLE_SIZE, this.Height - RESIZE_HANDLE_SIZE));
            if (new Rectangle(screenPoint, new Size(RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE)).Contains(Cursor.Position))
                m.Result = (IntPtr)HTCLIENT;
            else
                m.Result = new IntPtr(HTBOTTOMRIGHT);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
4
Gpt4D_Clone153_4.cs 1 23
Gpt4D_Clone153_4.cs 24 39
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        if (m.Msg == WM_NCHITTEST && m.WParam.ToInt32() > 1)
        {
            Point clientPoint = PointToClient(new Point(m.LParam.ToInt32()));
            if (clientPoint.X >= this.ClientSize.Width - RESIZE_HANDLE_SIZE &&
                clientPoint.Y >= this.ClientSize.Height - RESIZE_HANDLE_SIZE)
            {
                m.Result = (IntPtr)HTBOTTOMRIGHT;
                return;
            }
        }
        base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
5
Gpt4D_Clone153_5.cs 1 23
Gpt4D_Clone153_5.cs 24 39
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        if (m.Msg == WM_MOUSEMOVE)
        {
            Point clientPoint = this.PointToClient(Cursor.Position);
            if (clientPoint.X >= this.ClientSize.Width - RESIZE_HANDLE_SIZE &&
                clientPoint.Y >= this.ClientSize.Height - RESIZE_HANDLE_SIZE)
            {
                m.Result = (IntPtr)HTBOTTOMRIGHT;
                return;
            }
        }
        base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
6
Gpt4D_Clone153_6.cs 1 23
Gpt4D_Clone153_6.cs 24 38
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        if (m.Msg == 0x0084)
        {
            base.WndProc(ref m);
            if (((int)m.Result) == 0x01 && ModifierKeys == Keys.Control)
                m.Result = (IntPtr)17;
        }
        else
        {
            base.WndProc(ref m);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
7
Gpt4D_Clone153_7.cs 1 23
Gpt4D_Clone153_7.cs 24 38
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void wndProc(ref Message m)
    {
        if (m.Msg == 0x0084)
        {
            base.wndProc(ref m);
            if (((int)m.Result) == 0x01)
                m.Result = new IntPtr(17);
        }
        else
        {
            base.wndProc(ref m);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
8
Gpt4D_Clone153_8.cs 1 23
Gpt4D_Clone153_8.cs 24 33
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m) 
    { 
        base.WndProc(ref m); 
        if (m.Msg == WM_NCHITTEST) 
        { 
            if (new Rectangle(this.ClientSize.Width - 10, this.ClientSize.Height - 10, 10, 10).Contains(this.PointToClient(Cursor.Position))) m.Result = (IntPtr)HTBOTTOMRIGHT; 
        } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
153
9
Gpt4D_Clone153_9.cs 1 23
Gpt4D_Clone153_9.cs 24 34
----------------------------------------

protected override void WndProc (ref Message m) {
    const UInt32 WM_NCHITTEST = 0x0084;
    const UInt32 WM_MOUSEMOVE = 0x0200;
    const UInt32 HTBOTTOMRIGHT = 17;
    const int RESIZE_HANDLE_SIZE = 10;
    bool handled = false;
    if (m.Msg == WM_NCHITTEST || m.Msg == WM_MOUSEMOVE) {
        Size formSize = this.Size;
        Point screenPoint = new Point (m.LParam.ToInt32 ());
        Point clientPoint = this.PointToClient (screenPoint);
        Rectangle hitBox = new Rectangle (formSize.Width - RESIZE_HANDLE_SIZE, formSize.Height - RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE, RESIZE_HANDLE_SIZE);
        if (hitBox.Contains (clientPoint)) {
            m.Result = (IntPtr) HTBOTTOMRIGHT;
            handled = true;
        }
    }
    if (! handled)
        base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
    {
        base.WndProc(ref m);
        if (m.Msg == 0x0200 && Cursor.Position.X >= Right - 10 && Cursor.Position.Y >= Bottom - 10)
        {
            m.Result = new IntPtr(17);
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
0
Gpt4D_Clone158_0.cs 1 28
Gpt4D_Clone158_0.cs 29 35
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
public void ResetFields(Control.ControlCollection controls)
{
    foreach (Control c in controls)
    {
        switch (c)
        {
            case TextBox textbox:
                textbox.Text = string.Empty;
                break;
            case NumericUpDown numericUpdown:
                numericUpdown.Value = 3;
                break;
        }
----------------------------------------

        if (c.HasChildren)
        {
            ResetFields(c.Controls);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
1
Gpt4D_Clone158_1.cs 1 15
Gpt4D_Clone158_1.cs 16 25
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls) 
{ 
    Array.ForEach(controls.OfType<Control>().ToArray(), (control) => 
    { 
        if (control is TextBox) control.Text = string.Empty; 
        else if (control is NumericUpDown) (control as NumericUpDown).Value = 3; 
        if (control.Controls.Count > 0) ResetFields(control.Controls); 
    }); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
2
Gpt4D_Clone158_2.cs 1 15
Gpt4D_Clone158_2.cs 16 30
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls)
{
    controls.OfType<Control>()
                .ToList()
                .ForEach(c =>
                {
                    if (c is TextBox) 
                        c.Text = string.Empty;
                    if (c is NumericUpDown) 
                        ((NumericUpDown) c).Value = 3;
                    if (c.Controls.Count > 0)
                        ResetFields(c.Controls);
                });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
3
Gpt4D_Clone158_3.cs 1 15
Gpt4D_Clone158_3.cs 16 31
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls) 
{
    Parallel.ForEach(controls.OfType<Control>(), control =>
    {
        if (control is TextBox) 
            control.Text = string.Empty;
        if (control is NumericUpDown) 
            ((NumericUpDown)control).Value = 3;
        if(control.Controls.Count > 0)
        {
            ResetFields(control.Controls);
        }
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
4
Gpt4D_Clone158_4.cs 1 15
Gpt4D_Clone158_4.cs 16 29
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls)
{
    controls.ToList().ForEach(control =>
    {
        if (control is TextBox)
            control.Text = string.Empty;
        else if (control is NumericUpDown)
            (control as NumericUpDown).Value = 3;
        
        if (control.Controls.Count > 0)
            ResetFields(control.Controls);
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
5
Gpt4D_Clone158_5.cs 1 15
Gpt4D_Clone158_5.cs 16 29
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls)
{
    foreach (var c in controls)
    {
        if (c is TextBox textBox) 
            textBox.Clear();
        if (c is NumericUpDown numUpDown) 
            numUpDown.Value = 3;
        if (c.Controls.Count > 0)
            ResetFields(c.Controls);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
6
Gpt4D_Clone158_6.cs 1 15
Gpt4D_Clone158_6.cs 16 29
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls)
{
    foreach(Control c in controls)
    {
        if (c is TextBox tb)
            tb.Text = string.Empty;
        else if (c is NumericUpDown nud)
            nud.Value = 3;
        
        if (c.Controls.Count > 0)
            ResetFields(c.Controls);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
7
Gpt4D_Clone158_7.cs 1 15
Gpt4D_Clone158_7.cs 16 30
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls)
{
    foreach (Control c in controls.Cast<Control>())
    {
        if (c.GetType() == typeof(TextBox))
            c.Text = string.Empty;
        else if (c.GetType() == typeof(NumericUpDown))
            (c as NumericUpDown).Value = 3;
 
        if (c.Controls.Count > 0)
            ResetFields(c.Controls);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
8
Gpt4D_Clone158_8.cs 1 21
Gpt4D_Clone158_8.cs 22 25
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
private void InstanceFields(IEnumerable<Control> controls)
{
    foreach (var control in controls)
    {
        if (control is TextBox) control.Text = string.Empty;
        else if (control is NumericUpDown) (control as NumericUpDown).Value = 3;
----------------------------------------

        InstanceFields(control.Controls.Cast<Control>());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
9
Gpt4D_Clone158_9.cs 1 15
Gpt4D_Clone158_9.cs 16 20
----------------------------------------

public void ResetFields (Control.ControlCollection Controls) {
    foreach (Control control in Controls) {
        if (control is TextBox) {
            control.Text = string.Empty;
        } else if (control is NumericUpDown) {
            ((NumericUpDown) control).Value = 3;
        } else if (control.Controls.Count > 0) {
            this.ResetFields (control.Controls);
        }
    }
}
----------------------------------------

public void ResetFields(Control.ControlCollection controls) 
{
    InstanceFields(controls.Cast<Control>());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
0
Gpt4D_Clone15_0.cs 1 17
Gpt4D_Clone15_0.cs 18 36
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    try
    {
        int bytesRead;
        string msg;
        SimNetSocket.EndReceive(async, out bytesRead, out msg);
        BeginReceive();
        MessageBuffer += msg;
        Debug.Log($"RAW RECEIVE: {msg}");
    }
    catch (Exception e)
    {
        Debug.LogError("Error while receiving : " + e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
1
Gpt4D_Clone15_1.cs 1 17
Gpt4D_Clone15_1.cs 18 32
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    int bytesRead = SimNetSocket.EndReceive(async);
    char[] msgArray = new char[bytesRead];
    for(int i = 0; i < bytesRead; i++)
        msgArray[i] = Convert.ToChar(ReadBuffer[i]);
    string msg = new string(msgArray);
    Debug.Log("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
2
Gpt4D_Clone15_2.cs 1 17
Gpt4D_Clone15_2.cs 18 33
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    if (SimNetSocket.EndReceive(async, out int bytesRead))
    {
        string msg = ReadBuffer.ConvertToString(bytesRead);
        Debug.Log("RAW RECEIVE: " + msg);
        MessageBuffer += msg;
        BeginReceive();
    }
    else
    {
        Debug.LogError("Failed to end receive");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
3
Gpt4D_Clone15_3.cs 1 17
Gpt4D_Clone15_3.cs 18 29
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    if (!SimNetSocket.EndReceive(async, out int bytesRead, out string msg))
        return;
    MessageBuffer += msg;
    BeginReceive();
    Debug.Log("RAW RECEIVE: " + msg);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
4
Gpt4D_Clone15_4.cs 1 17
Gpt4D_Clone15_4.cs 18 28
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    int bytesRead = SimNetSocket.EndReceive(async);
    string msg = Encoding.Default.GetString(ReadBuffer, 0, bytesRead);
    Debug.Log("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
5
Gpt4D_Clone15_5.cs 1 17
Gpt4D_Clone15_5.cs 18 28
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected async void EndReceive(IAsyncResult async)
{  
    int bytesRead = await Task.Run(() => SimNetSocket.EndReceive(async));
    string msg = await Task.Run(() => ByteArrayToString(ReadBuffer, bytesRead));
    BeginReceive();
    MessageBuffer += msg;
    Debug.Log("RAW RECEIVE: " + msg);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
6
Gpt4D_Clone15_6.cs 1 17
Gpt4D_Clone15_6.cs 18 28
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    int bytesRead = SimNetSocket.EndReceive(async);
    string msg = ReadBuffer.Take(bytesRead).FromArrayToString();
    Debug.Log("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
7
Gpt4D_Clone15_7.cs 1 17
Gpt4D_Clone15_7.cs 18 25
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{ 
    int bytesRead = SimNetSocket.EndReceive(async);
    MessageBuffer += ByteArrayToString(ReadBuffer, bytesRead, out string msg);
    BeginReceive();
    Debug.Log($"RAW RECEIVE: {msg}");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
8
Gpt4D_Clone15_8.cs 1 17
Gpt4D_Clone15_8.cs 18 27
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    int bytesRead = SimNetSocket.EndReceive(async);
    BeginReceive();
    Debug.Log("RAW RECEIVE: " + new string(ReadBuffer.Take(bytesRead).ToArray()));
    MessageBuffer += new string(ReadBuffer.Take(bytesRead).ToArray());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
9
Gpt4D_Clone15_9.cs 1 17
Gpt4D_Clone15_9.cs 18 27
----------------------------------------

protected void EndReceive (IAsyncResult async) {
    string msg = "";
    int bytesRead = SimNetSocket.EndReceive (async);
    try {
        msg = ByteArrayToString (ReadBuffer, bytesRead);
    }
    catch (Exception e) {
        Debug.LogError (e);
    }
    Debug.Log ("RAW RECEIVE: " + msg);
    MessageBuffer += msg;
    BeginReceive ();
}
----------------------------------------

protected void EndReceive(IAsyncResult async)
{
    string msg = SimNetSocket.EndReceive(async, out int bytesRead);
    BeginReceive();
    MessageBuffer += msg;
    Debug.Log($"RAW RECEIVE: {msg}");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
0
Gpt4D_Clone171_0.cs 1 15
Gpt4D_Clone171_0.cs 16 27
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    var customer = txtClient.Text;
    var piece = txtPart.Text;
    var material = txtMatl.Text;
    int quantity = int.Parse (txtQty.Text);
    float weight = float.Parse (txtWgt.Text);
    if (!string.IsNullOrEmpty(customer) && !string.IsNullOrEmpty(piece) && !string.IsNullOrEmpty(material)) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
1
Gpt4D_Clone171_1.cs 1 15
Gpt4D_Clone171_1.cs 16 27
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    var customer = txtCustomer.Text;
    var piece = txtItem.Text;
    var material = txtMaterial.Text;
    int quantity = int.Parse (txtCount.Text);
    float weight = float.Parse (txtLoad.Text);
    if (string.IsNullOrEmpty(customer) == false && string.IsNullOrEmpty(piece) == false && string.IsNullOrEmpty(material) == false) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
2
Gpt4D_Clone171_2.cs 1 15
Gpt4D_Clone171_2.cs 16 27
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    var customer = customerEditBox.Text;
    var piece = pieceBox.Text;
    var material = materialBox.Text;
    int quantity = int.Parse (quantityBox.Text);
    float weight = float.Parse (weightBox.Text);
    if (!string.IsNullOrWhiteSpace(customer) && !string.IsNullOrWhiteSpace(piece) && !string.IsNullOrWhiteSpace(material)) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
3
Gpt4D_Clone171_3.cs 1 15
Gpt4D_Clone171_3.cs 16 27
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = txtCustomer.Text;
    int quantity = Int32.Parse(nbxQuantity.Text);
    string material = txtMat.Text;
    float weight = Single.Parse (txtWt.Text);
    string piece = txtPiece.Text;
    if (String.IsNullOrWhiteSpace(customer) == false && piece != "" && material.Length > 0) {
        AllItems.Add (new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight});
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
4
Gpt4D_Clone171_4.cs 1 15
Gpt4D_Clone171_4.cs 16 34
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    var customer = txtCusto.Text;
    var piece = txtPieceInput.Text;
    var material = txtMaterialInput.Text;
    int quantity = int.Parse (txtQtyInput.Text);
    float weight = float.Parse (txtWeightInput.Text);
    if (!(string.IsNullOrWhiteSpace(customer) || string.IsNullOrWhiteSpace(piece) || string.IsNullOrWhiteSpace(material))) {
        AllItems.Add (
            new Liste {
                Customer = customer,
                Piece = piece,
                Material = material,
                Quantity = quantity,
                Weight = weight
            }
        );
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
5
Gpt4D_Clone171_5.cs 1 15
Gpt4D_Clone171_5.cs 16 26
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = customerTxt.Text;
    int quantity = Convert.ToInt32 (quantityTxt.Text);
    float weight = float.Parse (weightTxt.Text);
    string material = materialTxt.Text;
    string piece = pieceTxt.Text;
    if (!String.IsNullOrEmpty(customer) && !String.IsNullOrEmpty(piece) && !String.IsNullOrEmpty(material)) {
        AllItems.Add(new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight});
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
171
8
Gpt4D_Clone171_8.cs 1 15
Gpt4D_Clone171_8.cs 16 26
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = btnEditCustomer1.Text;
    string piece = btnPiece.Text;
    string material = txtMaterial.Text;
    int quantity = Convert.ToInt32 (txtQuantity.Text);
    float weight = float.Parse (txtWeight.Text);
    if (customer != null && piece != null && material != null) {
        var item = new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight};
        AllItems.Add (item);
    }
}
----------------------------------------

private void btnAdd_Click (object sender, RoutedEventArgs e) {
    string customer = txtCustomerEdit.Text;
    string piece = txtComponent.Text;
    string material = txtMaterialType.Text;
    int quantity = int.Parse (txtQty.Text);
    float weight = Convert.ToSingle (txtWeightField.Text);
    if (!String.IsNullOrEmpty(customer) && piece != String.Empty && material != default(string)) {
        AllItems.Add(new Liste {Customer = customer, Piece = piece, Material = material, Quantity = quantity, Weight = weight});
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
0
Gpt4D_Clone172_0.cs 1 29
Gpt4D_Clone172_0.cs 30 41
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    string forwarded = request.Headers ["Forwarded"];
    if (! String.IsNullOrEmpty (forwarded)) {
        foreach (string segment in forwarded.Split (',') [0].Split (';')) {
            string [] pair = segment.Trim ().Split ('=');
            if (pair.Length == 2 && pair [0].Equals ("for", StringComparison.OrdinalIgnoreCase)) {
                string ip = pair [1].Trim ('"');
                int left = ip.IndexOf ('['), right = ip.IndexOf (']');
                if (left == 0 && right > 0) {
                    return ip.Substring (1, right - 1);
                }
                int colon = ip.IndexOf (':');
                if (colon != - 1) {
                    return ip.Substring (0, colon);
                }
                return ip;
            }
        }
    }
    string xForwardedFor = request.Headers ["X-Forwarded-For"];
    if (! String.IsNullOrEmpty (xForwardedFor)) {
        return xForwardedFor.Split (',') [0];
    }
    return request.UserHostAddress;
}
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
	    var ipFromForwarded = GetForwardedIP(request);
	    if (ipFromForwarded != null) {
		return ipFromForwarded;
	    }
	    var ipFromXForwarded = GetXForwardedIP(request);
	    if (ipFromXForwarded != null) {
		return ipFromXForwarded;
	    }
	    return request.UserHostAddress;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
1
Gpt4D_Clone172_1.cs 1 29
Gpt4D_Clone172_1.cs 30 39
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    string forwarded = request.Headers ["Forwarded"];
    if (! String.IsNullOrEmpty (forwarded)) {
        foreach (string segment in forwarded.Split (',') [0].Split (';')) {
            string [] pair = segment.Trim ().Split ('=');
            if (pair.Length == 2 && pair [0].Equals ("for", StringComparison.OrdinalIgnoreCase)) {
                string ip = pair [1].Trim ('"');
                int left = ip.IndexOf ('['), right = ip.IndexOf (']');
                if (left == 0 && right > 0) {
                    return ip.Substring (1, right - 1);
                }
                int colon = ip.IndexOf (':');
                if (colon != - 1) {
                    return ip.Substring (0, colon);
                }
                return ip;
            }
        }
    }
    string xForwardedFor = request.Headers ["X-Forwarded-For"];
    if (! String.IsNullOrEmpty (xForwardedFor)) {
        return xForwardedFor.Split (',') [0];
    }
    return request.UserHostAddress;
}
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    var getIpAddress = new Func<HttpRequestBase, string>(GetIpFromForwarded);
    var ipAddress = getIpAddress(request);
    if (ipAddress == null) {
        getIpAddress = GetIpFromXForwarded;
        ipAddress = getIpAddress(request);
    }
    return ipAddress ?? request.UserHostAddress;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
2
Gpt4D_Clone172_2.cs 1 29
Gpt4D_Clone172_2.cs 30 36
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    string forwarded = request.Headers ["Forwarded"];
    if (! String.IsNullOrEmpty (forwarded)) {
        foreach (string segment in forwarded.Split (',') [0].Split (';')) {
            string [] pair = segment.Trim ().Split ('=');
            if (pair.Length == 2 && pair [0].Equals ("for", StringComparison.OrdinalIgnoreCase)) {
                string ip = pair [1].Trim ('"');
                int left = ip.IndexOf ('['), right = ip.IndexOf (']');
                if (left == 0 && right > 0) {
                    return ip.Substring (1, right - 1);
                }
                int colon = ip.IndexOf (':');
                if (colon != - 1) {
                    return ip.Substring (0, colon);
                }
                return ip;
            }
        }
    }
    string xForwardedFor = request.Headers ["X-Forwarded-For"];
    if (! String.IsNullOrEmpty (xForwardedFor)) {
        return xForwardedFor.Split (',') [0];
    }
    return request.UserHostAddress;
}
----------------------------------------

public string GetIPAddress(HttpRequestBase request) {
    string ip = request.Headers["ForwardedParsedIP"] ??
                request.Headers["X-Forwarded-ForParsedIP"] ??
                request.UserHostAddress;
    return ip;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
3
Gpt4D_Clone172_3.cs 1 29
Gpt4D_Clone172_3.cs 30 36
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    string forwarded = request.Headers ["Forwarded"];
    if (! String.IsNullOrEmpty (forwarded)) {
        foreach (string segment in forwarded.Split (',') [0].Split (';')) {
            string [] pair = segment.Trim ().Split ('=');
            if (pair.Length == 2 && pair [0].Equals ("for", StringComparison.OrdinalIgnoreCase)) {
                string ip = pair [1].Trim ('"');
                int left = ip.IndexOf ('['), right = ip.IndexOf (']');
                if (left == 0 && right > 0) {
                    return ip.Substring (1, right - 1);
                }
                int colon = ip.IndexOf (':');
                if (colon != - 1) {
                    return ip.Substring (0, colon);
                }
                return ip;
            }
        }
    }
    string xForwardedFor = request.Headers ["X-Forwarded-For"];
    if (! String.IsNullOrEmpty (xForwardedFor)) {
        return xForwardedFor.Split (',') [0];
    }
    return request.UserHostAddress;
}
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
		    return TryGetForwardedIP(request) 
			   ?? TryGetXForwardedIP(request) 
			   ?? request.UserHostAddress;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
172
4
Gpt4D_Clone172_4.cs 1 29
Gpt4D_Clone172_4.cs 30 33
----------------------------------------

internal static string GetIPAddress (HttpRequestBase request) {
    string forwarded = request.Headers ["Forwarded"];
    if (! String.IsNullOrEmpty (forwarded)) {
        foreach (string segment in forwarded.Split (',') [0].Split (';')) {
            string [] pair = segment.Trim ().Split ('=');
            if (pair.Length == 2 && pair [0].Equals ("for", StringComparison.OrdinalIgnoreCase)) {
                string ip = pair [1].Trim ('"');
                int left = ip.IndexOf ('['), right = ip.IndexOf (']');
                if (left == 0 && right > 0) {
                    return ip.Substring (1, right - 1);
                }
                int colon = ip.IndexOf (':');
                if (colon != - 1) {
                    return ip.Substring (0, colon);
                }
                return ip;
            }
        }
    }
    string xForwardedFor = request.Headers ["X-Forwarded-For"];
    if (! String.IsNullOrEmpty (xForwardedFor)) {
        return xForwardedFor.Split (',') [0];
    }
    return request.UserHostAddress;
}
----------------------------------------

internal static string GetIPAddress (HttpRequestBase requestBase) {
    return GetForwardedIP(requestBase.Headers["Forwarded"], requestBase.Headers["X-Forwarded-For"], requestBase.UserHostAddress);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
4
Gpt4D_Clone175_4.cs 1 27
Gpt4D_Clone175_4.cs 28 48
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    RegistryKey key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
    if (key != null) {
        string programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
        try {
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
        catch (Exception e) {
            // handle exception
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
7
Gpt4D_Clone175_7.cs 1 27
Gpt4D_Clone175_7.cs 28 46
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        if(Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true) is RegistryKey key) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue(programName, false);
            }
            result = true;
        }
    } catch {
        //ignore exceptions
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
8
Gpt4D_Clone175_8.cs 1 27
Gpt4D_Clone175_8.cs 28 47
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue(programName, false);
            }
            return true;
        }
    } catch {
        //ignore exceptions
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
175
9
Gpt4D_Clone175_9.cs 1 27
Gpt4D_Clone175_9.cs 28 43
----------------------------------------

public static bool SetBrowserEmulationVersion (BrowserEmulationVersion browserEmulationVersion) {
    bool result;
    result = false;
    try {
        RegistryKey key;
        key = Registry.CurrentUser.OpenSubKey (BrowserEmulationKey, true);
        if (key != null) {
            string programName;
            programName = Path.GetFileName (Environment.GetCommandLineArgs () [0]);
            if (browserEmulationVersion != BrowserEmulationVersion.Default) {
                key.SetValue (programName, (int) browserEmulationVersion, RegistryValueKind.DWord);
            } else {
                key.DeleteValue (programName, false);
            }
            result = true;
        }
    }
    catch (SecurityException) {
    }
    catch (UnauthorizedAccessException) {
    }
    return result;
}
----------------------------------------

public static bool SetBrowserEmulationVersion(BrowserEmulationVersion browserEmulationVersion)
{
    bool result = false;
    try {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(BrowserEmulationKey, true);
        if (key != null) {
            string programName = Path.GetFileName(Environment.GetCommandLineArgs()[0]);
            browserEmulationVersion = (browserEmulationVersion != BrowserEmulationVersion.Default) ? (key.SetValue(programName, (int)browserEmulationVersion, RegistryValueKind.DWord), result=true) : (key.DeleteValue(programName, false), result=true);
        }
    } catch {
        //ignore exceptions
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
3
Gpt4D_Clone177_3.cs 1 15
Gpt4D_Clone177_3.cs 16 30
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        Bitmap bitmap = Bitmap.FromFile(Path.GetFullPath(filePath));
        Set(bitmap, style);
        return true;
    }
    catch
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
5
Gpt4D_Clone177_5.cs 1 15
Gpt4D_Clone177_5.cs 16 28
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    var isSuccess = false;
    if(File.Exists(filePath))
    {
        using var img = System.Drawing.Image.FromFile(filePath);
        Set(img, style);
        isSuccess = true;
    }
     
    return isSuccess;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
6
Gpt4D_Clone177_6.cs 1 15
Gpt4D_Clone177_6.cs 16 29
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        var image = Bitmap.FromFile(Path.GetFullPath(filePath));
        Set(image, style);
        return true;
    }
    catch 
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
7
Gpt4D_Clone177_7.cs 1 15
Gpt4D_Clone177_7.cs 16 29
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        using var i = System.Drawing.Image.FromFile(Path.GetFullPath(filePath));
        Set(i, style);
        return true;
    }
    catch
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
177
8
Gpt4D_Clone177_8.cs 1 15
Gpt4D_Clone177_8.cs 16 28
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        Set(Bitmap.FromFile(Path.GetFullPath(filePath)), style);
        return true;
    }
    catch
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
0
Gpt4D_Clone178_0.cs 1 15
Gpt4D_Clone178_0.cs 16 34
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    var fileExists = File.Exists(filePath);
    if (!fileExists) return false;
    try
    {
        Image image = Image.FromFile(filePath);
        Set(image, style);
        return true;
    }
    catch
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
1
Gpt4D_Clone178_1.cs 1 15
Gpt4D_Clone178_1.cs 16 34
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set(string filePath, Style style)
{
    try
    {
        using (FileStream fs = new FileStream(filePath, FileMode.Open))
        {
            Image img = Image.FromStream(fs);
            Set(img, style);
        }
        return true;
    }
    catch (Exception)
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
4
Gpt4D_Clone178_4.cs 1 15
Gpt4D_Clone178_4.cs 16 33
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

 
public static bool Set(string filePath, Style style)
{
    try
    {
        using (var img = Image.FromFile(filePath))
        {
            Set(img, style);
            return true;
        }
    }
    catch (Exception)
    {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
5
Gpt4D_Clone178_5.cs 1 16
Gpt4D_Clone178_5.cs 17 30
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
 
----------------------------------------

public static bool Set(string filePath, Style style) 
{
    try
    {
        Bitmap bitmap = (Bitmap)Image.FromFile(filePath);
        Set (bitmap, style);
    }
    catch (Exception)
    {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
178
6
Gpt4D_Clone178_6.cs 1 15
Gpt4D_Clone178_6.cs 16 26
----------------------------------------

public static bool Set (string filePath, Style style) {
    bool Success = false;
    try {
        Image i = System.Drawing.Image.FromFile (Path.GetFullPath (filePath));
        Set (i, style);
        Success = true;
    }
    catch {
    }
    return Success;
}
----------------------------------------

public static bool Set (string filePath, Style style) {
    try {
        Bitmap b = new Bitmap(filePath);
        Set (b, style);
        return true;
    }
    catch {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
0
Gpt4D_Clone182_0.cs 1 27
Gpt4D_Clone182_0.cs 28 50
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var countryTable = new DataTable("Country Matrix");
    string[] countries = { "Name", "1 England", "2 Germany", "3 France " };
    foreach (var country in countries)
        countryTable.Columns.Add(Prettify(country));
    countryTable.Rows.Add(countries);
    // fill the rest of the table ...
    Console.WriteLine("Enter column number:");
    int column = Int32.Parse(Console.ReadLine());
    Console.WriteLine("Enter row number:");
    int row = Int32.Parse(Console.ReadLine());
    Console.WriteLine("Enter value:");
    string value = Console.ReadLine();
    SetValue(column, row, value, countryTable);
    PrintMatrix(countryTable);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
1
Gpt4D_Clone182_1.cs 1 27
Gpt4D_Clone182_1.cs 28 39
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    DataTable dataTable = InitMatrix();
    PrintMatrix(dataTable);
    int columnIndex = PromptUser("Enter column number:");
    int rowIndex = PromptUser("Enter row number:");
    string value = PromptUser("Enter value:", true);
    SetValue(columnIndex, rowIndex, value, dataTable);
    PrintMatrix(dataTable);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
2
Gpt4D_Clone182_2.cs 1 27
Gpt4D_Clone182_2.cs 28 45
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    DataTable dt = new DataTable().WithBeautifulColumns();
    AddRowToMatrix("1 England", dt);
    AddRowToMatrix("2 Germany", dt);
    AddRowToMatrix("3 France ", dt);
    dt.Print();
    var position = GetUserChoice();
    dt.Items[position.Row][position.Column] = position.Value;
    dt.Print();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
3
Gpt4D_Clone182_3.cs 1 27
Gpt4D_Clone182_3.cs 28 42
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    DataTable table = InitializeMatrix();
    table.Print();
    int row = ConsoleRequest("Enter row number:");
    int column = ConsoleRequest("Enter column number:");
    string value = RequestInput("Enter value:");
    table.SetValue(row, column, value);
    table.Print();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
4
Gpt4D_Clone182_4.cs 1 27
Gpt4D_Clone182_4.cs 28 39
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var myTable = SetUpBeautifulColumns();
    PopulateTable(myTable);
    PresentTable(myTable);
    ReceiveAndImplementUserCommands(myTable);
    PresentTable(myTable);
    EndProgramGracefully();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
5
Gpt4D_Clone182_5.cs 1 27
Gpt4D_Clone182_5.cs 28 39
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var myMatrix = SetUpMatrix();
    DisplayMatrix(myMatrix);
    var userInput = RequestUserInput();
    UpdateMatrix(myMatrix, userInput);
    DisplayMatrix(myMatrix);
    HaltProgram();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
6
Gpt4D_Clone182_6.cs 1 27
Gpt4D_Clone182_6.cs 28 39
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var informationTable = CreateBeautifulColumns();
    PopulateWithCountries(informationTable);
    RenderTable(informationTable);
    UpdateCountryValues(informationTable);
    RenderTable(informationTable);
    PauseUntilExit();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
7
Gpt4D_Clone182_7.cs 1 27
Gpt4D_Clone182_7.cs 28 39
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    var matrix = Initiate();
    Populate(matrix);
    Display(matrix);
    FetchInputAndUpdate(matrix);
    Display(matrix);
    EndProgram();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
8
Gpt4D_Clone182_8.cs 1 27
Gpt4D_Clone182_8.cs 28 38
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    DataTable data = CreateMatrix();
    PrintMatrix(data);
    RerouteMatrix(data);
    PrintMatrix(data);
    WaitForExit();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
9
Gpt4D_Clone182_9.cs 1 27
Gpt4D_Clone182_9.cs 28 37
----------------------------------------

static void Main (string [] args) {
    DataTable Matrix = new DataTable ();
    Matrix.TableName = "Matrix";
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("Name")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("1 England")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("2 Germany")));
    Matrix.Columns.Add (new DataColumn (MakeStringBeutiful ("3 France ")));
    Matrix.Rows.Add ("1 England", "    x    ", "         ", "         ");
    Matrix.Rows.Add ("2 Germany", "         ", "    x    ", "         ");
    Matrix.Rows.Add ("3 France ", "         ", "         ", "    x    ");
    PrintMatrix (Matrix);
    Console.WriteLine ("Enter column number:");
    string sx = Console.ReadLine ();
    int x = int.Parse (sx);
    Console.WriteLine ("Enter row number:");
    string sy = Console.ReadLine ();
    int y = int.Parse (sy);
    Console.WriteLine ("Enter value:");
    string v = Console.ReadLine ();
    SetValue (x, y, v, Matrix);
    PrintMatrix (Matrix);
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    DataTable records = InitializeDataTable();
    records.Print();
    ReadModifyPrint(records);
    WaitForKeyStroke();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
0
Gpt4D_Clone183_0.cs 1 17
Gpt4D_Clone183_0.cs 18 26
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (!Convertable(objectType)) throw new NotSupportedException();
    if (reader.TokenType == JsonToken.Null) return null;
    if (reader.TokenType == JsonToken.StartObject) return new Object[] {serializer.Deserialize<object>(reader)};
    return serializer.Deserialize<object[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
1
Gpt4D_Clone183_1.cs 1 17
Gpt4D_Clone183_1.cs 18 25
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanChange(objectType)) throw new NotSupportedException();
    if (reader.TokenType == JsonToken.Null) { reader.Skip(); return null; }
    return (reader.TokenType == JsonToken.StartObject) ? new object[] { serializer.Deserialize<object>(reader) } : serializer.Deserialize<object[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
2
Gpt4D_Clone183_2.cs 1 17
Gpt4D_Clone183_2.cs 18 24
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) 
{
    if (! Convert(objectType)) throw new NotSupportedException ();
    if (reader.TokenType == JsonToken.Null) return reader.Skip () ?? null;
    return reader.TokenType == JsonToken.StartObject ? new object[]{serializer.Deserialize<object>(reader)} : serializer.Deserialize<object[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
3
Gpt4D_Clone183_3.cs 1 17
Gpt4D_Clone183_3.cs 18 25
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (!CanConvertObj(objectType)) throw new NotSupportedException();
    if (reader.TokenType == JsonToken.Null) return null;
    return reader.TokenType == JsonToken.StartObject ? new object[]{serializer.Deserialize<object>(reader)} : serializer.Deserialize<object[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
4
Gpt4D_Clone183_4.cs 1 17
Gpt4D_Clone183_4.cs 18 25
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (!CanTranslate(objectType)) throw new NotSupportedException();
    return reader.TokenType == JsonToken.Null ? null :
           reader.TokenType == JsonToken.StartObject ? new T[] {serializer.Deserialize<T>(reader)} :
           serializer.Deserialize<T[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
5
Gpt4D_Clone183_5.cs 1 17
Gpt4D_Clone183_5.cs 18 26
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! isTranslatable(objectType)) throw new NotSupportedException();
    return (reader.TokenType == JsonToken.Null) ? null : 
           (reader.TokenType == JsonToken.StartObject) ? new Type[] { serializer.Deserialize<Type>(reader) } : 
           serializer.Deserialize<Type[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
6
Gpt4D_Clone183_6.cs 1 17
Gpt4D_Clone183_6.cs 18 26
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! CanConvert (objectType)) {
        throw new NotSupportedException ();
    }
    if (reader.TokenType == JsonToken.Null) {
        reader.Skip ();
        return null;
    } else if (reader.TokenType == JsonToken.StartObject) {
        return new T [] {serializer.Deserialize < T > (reader)};
    } else {
        return serializer.Deserialize < T [] > (reader);
    }
}
----------------------------------------

public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) {
    if (! AbleToConvert(objectType)) { throw new NotSupportedException(); }
    return reader.TokenType == JsonToken.Null ? null :
           reader.TokenType == JsonToken.StartObject ? new Type[] {serializer.Deserialize<Type>(reader)} : 
           serializer.Deserialize<Type[]>(reader);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
0
Gpt4D_Clone186_0.cs 1 24
Gpt4D_Clone186_0.cs 25 45
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int sum = 0;
    int count = 0;
    do
    {
        Console.WriteLine("Please enter Integer {0} now.", (count + 1));
        string input = Console.ReadLine();
        if (int.TryParse(input, out int value)) 
        {
            sum += value; 
            count++;
        }
        else Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
    }
    while (count < 5);
    Console.WriteLine("sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
1
Gpt4D_Clone186_1.cs 1 24
Gpt4D_Clone186_1.cs 25 47
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int sum = 0;
    int count = 0;
    while (true)
    {
        Console.WriteLine("Please enter Integer {0} now:", count + 1);
        try
        {
            sum += (int)double.Parse(Console.ReadLine());
            count++;
        }
        catch
        {
            Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
        }
        if (count >= 5) break;
    }
    Console.WriteLine("Sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
2
Gpt4D_Clone186_2.cs 1 24
Gpt4D_Clone186_2.cs 25 47
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int sum = 0;
    int count = 0;
    while (count < 5)
    {
        try
        {
            Console.WriteLine("Please enter Integer {0} now.", (count + 1));
            int value = int.Parse(Console.ReadLine());
            sum += value;
            count++;
        }
        catch (FormatException)
        {
            Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
        }
    }
    Console.WriteLine("sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
3
Gpt4D_Clone186_3.cs 1 24
Gpt4D_Clone186_3.cs 25 42
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int sum = 0;
    for (int count = 0; count < 5; count++)
    {
        Console.WriteLine("Please enter Integer {0} now.", (count + 1));
        string input = Console.ReadLine();
        if (int.TryParse(input, out int value)) sum += value;
        else
        {
            Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
            count--;
        }
    }
    Console.WriteLine("Sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
4
Gpt4D_Clone186_4.cs 1 24
Gpt4D_Clone186_4.cs 25 49
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
		{
		    SumOfIntegers(0, 5, 0);
		}
		static void SumOfIntegers(int sum, int count, int attempts)
		{
		    if (count == 0)
		    {
			Console.WriteLine("sum = " + sum);
			return;
		    }
		    Console.WriteLine("Please enter Integer {0} now.", attempts + 1);
		    string input = Console.ReadLine();
		    if (int.TryParse(input, out int value)) SumOfIntegers(sum + value, count - 1, attempts + 1);
		    else
		    {
			Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
			SumOfIntegers(sum, count, attempts + 1);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
5
Gpt4D_Clone186_5.cs 1 24
Gpt4D_Clone186_5.cs 25 42
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    var sum = 0;
    for (var count = 0; count < 5; )
    {
        Console.WriteLine("Please enter Integer {0} now:", count + 1);
        if (int.TryParse(Console.ReadLine(), out var value)) 
        {
            sum += value;
            count++;
        }
        else Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
    }
    Console.WriteLine("Sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
6
Gpt4D_Clone186_6.cs 1 24
Gpt4D_Clone186_6.cs 25 38
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    var integers = new List<int>();
    while (integers.Count < 5)
    {
        Console.WriteLine("Please enter Integer {0} now:", integers.Count + 1);
        if (int.TryParse(Console.ReadLine(), out var value)) integers.Add(value);
        else Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
    }
    Console.WriteLine("sum = " + integers.Sum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
7
Gpt4D_Clone186_7.cs 1 24
Gpt4D_Clone186_7.cs 25 38
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int[] integers = new int[5];
    for (int count = 0; count < 5; )
    {
        Console.WriteLine("Please enter Integer {0} now.", (count + 1));
        if (int.TryParse(Console.ReadLine(), out integers[count])) count++;
        else Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
    }
    Console.WriteLine("sum = " + integers.Sum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
8
Gpt4D_Clone186_8.cs 1 24
Gpt4D_Clone186_8.cs 25 38
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
{
    int sum = 0, count = 0;
    while (count < 5)
    {
        Console.WriteLine("Please enter Integer {0} now.", (count + 1));
        sum += int.TryParse(Console.ReadLine(), out int value) ? value : (Console.WriteLine("This is not a valid integer. Please enter a valid integer now:"), 0);
        if (value != 0) count++;
    }
    Console.WriteLine("sum = " + sum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
186
9
Gpt4D_Clone186_9.cs 1 24
Gpt4D_Clone186_9.cs 25 49
----------------------------------------

static void Main (string [] args) {
    int integerSum = 0;
    int count = 0;
    while (true) {
        Console.WriteLine ("Please enter Integer {0} now.", (count + 1));
        string rawInput = Console.ReadLine ();
        int integerInput;
        bool isInteger = int.TryParse (rawInput, out integerInput);
        if (isInteger == false) {
            Console.WriteLine ("This is not a valid integer. Please enter a valid integer now:");
        } else {
            integerSum += integerInput;
            count ++;
        }
        if (count >= 5) {
            break;
        }
    }
    Console.WriteLine ("sum = " + integerSum);
}
----------------------------------------

static void Main(string[] args)
		{
		    SumOfIntegers(0, 5, 0);
		}
		static void SumOfIntegers(int sum, int count, int attempts)
		{
		    if (count == 0)
		    {
			Console.WriteLine("sum = " + sum);
			return;
		    }
		    Console.WriteLine("Please enter Integer {0} now.", attempts + 1);
		    string input = Console.ReadLine();
		    if (int.TryParse(input, out int value)) SumOfIntegers(sum + value, count - 1, attempts + 1);
		    else
		    {
			Console.WriteLine("This is not a valid integer. Please enter a valid integer now:");
			SumOfIntegers(sum, count, attempts + 1);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
1
Gpt4D_Clone187_1.cs 1 15
Gpt4D_Clone187_1.cs 16 25
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.Buffer = false;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = string.Empty;
    var actionName = string.Empty;
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Exception = new ArgumentNullException();
    filterContext.Result = new RedirectResult("home/error");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
3
Gpt4D_Clone187_3.cs 1 15
Gpt4D_Clone187_3.cs 16 25
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.AllErrorsAreHandled = true;
    filterContext.HttpContext.Response.ClearHeaders();
    var actionName = (string) filterContext.RouteData.DataTokens["action"];
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var model = new HandleErrorInfo(filterContext.Exception, controllerName, "");
    filterContext.Exception = new ApplicationException();
    filterContext.Result = new RedirectResult("/Home/Error");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
4
Gpt4D_Clone187_4.cs 1 15
Gpt4D_Clone187_4.cs 16 24
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    var controllerName = (string)filterContext.ActionDescriptor.ControllerDescriptor.ControllerType.Name;
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, "");
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.Exception = null;
    filterContext.Result = new ViewResult { ViewBag = "Error", ViewData = new ViewDataDictionary<HandleErrorInfo>(model)};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
5
Gpt4D_Clone187_5.cs 1 15
Gpt4D_Clone187_5.cs 16 24
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.BufferOutput = false;
    var controllerName = (string) filterContext.RouteData.Values["default"];
    var actionName = (string) filterContext.RouteData.Values["default"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Exception = new UnauthorizedAccessException();
    filterContext.Result = new JsonResult{Data = new { success = false }, JsonRequestBehavior = JsonRequestBehavior.AllowGet};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
6
Gpt4D_Clone187_6.cs 1 15
Gpt4D_Clone187_6.cs 16 24
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.SuppressContent = true;
    filterContext.HttpContext.Response.Clear();
    var controllerName = (string) filterContext.Controller.GetType().Name;
    var model = new HandleErrorInfo (filterContext.Exception, "", "");
    filterContext.Exception = null;
    filterContext.Result = new JsonResult {Data = model, JsonRequestBehavior = JsonRequestBehavior.AllowGet};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
7
Gpt4D_Clone187_7.cs 1 15
Gpt4D_Clone187_7.cs 16 24
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = false;
    filterContext.ExceptionHandled = true;
    var controllerName = (string) filterContext.RouteData.Values["controller"];
    var model = new HandleErrorInfo(filterContext.Exception, "","",controllerName);
    filterContext.Exception = new NullReferenceException();
    filterContext.Result = new ViewResult{ViewName = "Error"};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
187
9
Gpt4D_Clone187_9.cs 1 15
Gpt4D_Clone187_9.cs 16 23
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    filterContext.ExceptionHandled = true;
    filterContext.HttpContext.Response.ClearContent ();
    var controllerName = (string) filterContext.RouteData.Values ["controller"];
    var actionName = (string) filterContext.RouteData.Values ["action"];
    var model = new HandleErrorInfo (filterContext.Exception, controllerName, actionName);
    filterContext.Result = new ViewResult {ViewName = View, MasterName = Master, ViewData = new ViewDataDictionary < HandleErrorInfo > (model), TempData = filterContext.Controller.TempData};
    filterContext.Exception = null;
}
 
----------------------------------------

public override void OnException (ExceptionContext filterContext) {
    filterContext.HttpContext.Response.TrySkipIisCustomErrors = true;
    var controllerName = (string) filterContext.ActionDescriptor.ControllerDescriptor.ControllerName;
    var model = new HandleErrorInfo (filterContext.Exception, "", "");
    filterContext.Exception = filterContext.Exception.InnerException;
    filterContext.Result = new ViewResult {ViewName = "Error", ViewData = new ViewDataDictionary<HandleErrorInfo>(model)};
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
0
Gpt4D_Clone188_0.cs 1 14
Gpt4D_Clone188_0.cs 15 29
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static async Task CopyTo (this Stream src, Stream dest) 
{
    byte [] buffer = new byte [0x2000];
    await src.ReadAsync (buffer, 0, buffer.Length).ContinueWith (readTask => 
    {
        int count = readTask.Result;
        if (count > 0) 
        {
            dest.WriteAsync (buffer, 0, count);
        }
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
1
Gpt4D_Clone188_1.cs 1 14
Gpt4D_Clone188_1.cs 15 27
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo (this Stream src, Stream dest) 
{
    const int size = 8192;
    byte [] buffer = new byte [size];
    int count;
    while ((count = src.Read (buffer, 0, size)) > 0) 
    {
        dest.Write (buffer, 0, count);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
2
Gpt4D_Clone188_2.cs 1 14
Gpt4D_Clone188_2.cs 15 27
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo (this Stream src, Stream dest) 
{
    const int size = 0x2000;
    byte [] buffer = new byte [size];
    int n;
    while ((n = src.Read (buffer, 0, size)) > 0) 
    {
        dest.Write (buffer, 0, n);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
3
Gpt4D_Clone188_3.cs 1 14
Gpt4D_Clone188_3.cs 15 24
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) 
{
    int size = src.CanSeek ? (int)Math.Min(src.Length - src.Position, 0x2000) : 0x2000;
    var buffer = new byte[size];
    for (int len; (len = src.Read(buffer, 0, buffer.Length)) != 0;)
    {
        dest.Write(buffer, 0, len);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
4
Gpt4D_Clone188_4.cs 1 14
Gpt4D_Clone188_4.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo(this Stream src, Stream dest)
{
    byte[] buffer = new byte[2048];
    int read;
    while ((read = src.Read(buffer, 0, buffer.Length)) > 0)
    {
        dest.Write(buffer, 0, read);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
5
Gpt4D_Clone188_5.cs 1 14
Gpt4D_Clone188_5.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo (this Stream src, Stream dest) 
{
    byte [] buffer = new byte [0x2000];
    int n;
    while ((n = src.Read (buffer, 0, buffer.Length)) > 0) 
    {
        dest.Write (buffer, 0, n);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
6
Gpt4D_Clone188_6.cs 1 14
Gpt4D_Clone188_6.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo(this Stream src, Stream dest)
{
    byte[] buffer = new byte[1024 * 8];
    int read;
    while ((read = src.Read(buffer, 0, buffer.Length)) > 0)
    {
        dest.Write(buffer, 0, read);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
7
Gpt4D_Clone188_7.cs 1 14
Gpt4D_Clone188_7.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static async void CopyTo (this Stream src, Stream dest) 
{
    byte [] buffer = new byte [4096];
    int bytesRead;
    while ((bytesRead = await src.ReadAsync (buffer, 0, buffer.Length)) != 0) 
    {
        await dest.WriteAsync (buffer, 0, bytesRead);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
8
Gpt4D_Clone188_8.cs 1 14
Gpt4D_Clone188_8.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo (this Stream src, Stream dest) 
{
    byte [] buffer = new byte [0x2000];
    int n;
    while((n = src.Read (buffer, 0, buffer.Length)) != 0)
    {
        dest.Write (buffer, 0, n);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
9
Gpt4D_Clone188_9.cs 1 14
Gpt4D_Clone188_9.cs 15 26
----------------------------------------

public static void CopyTo (this Stream src, Stream dest) {
    int size = (src.CanSeek) ? Math.Min ((int) (src.Length - src.Position), 0x2000) : 0x2000;
    byte [] buffer = new byte [size];
    int n;
    do
        {
            n = src.Read (buffer, 0, buffer.Length);
            dest.Write (buffer, 0, n);
        } while (n != 0);
}
----------------------------------------

 
public static void CopyTo (this Stream src, Stream dest) 
{
    byte [] buffer = new byte [0xFFFF];
    int n;
    while ((n = src.Read (buffer, 0, buffer.Length)) != 0) 
    {
        dest.Write (buffer, 0, n);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
0
Gpt4D_Clone18_0.cs 1 23
Gpt4D_Clone18_0.cs 24 58
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString ()
{
    // Use local functions
    builder.Clear ();
    AppendHyperlink ();
    AppendColor ();
    builder.AppendLine (Data);
    AppendClosingHyperlink ();
    return builder.ToString ();
    void AppendHyperlink ()
    {
        if (string.IsNullOrEmpty (Hyperlink)) return;
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    void AppendColor ()
    {
        if (string.IsNullOrEmpty (HexColor)) return;
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    void AppendClosingHyperlink ()
    {
        if (string.IsNullOrEmpty (Hyperlink)) return;
        builder.Append ("</a>");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
10
Gpt4D_Clone18_10.cs 1 23
Gpt4D_Clone18_10.cs 24 34
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString () {
    return new StringBuilder ()
    .Append (!string.IsNullOrEmpty (Hyperlink) ? $"<a href=\"{Hyperlink}\"><![CDATA[" : "")
    .Append (!string.IsNullOrEmpty (HexColor) ? $"<span style='color:{HexColor}'>" : "")
    .AppendLine (Data)
    .Append (!string.IsNullOrEmpty (Hyperlink) ? "</a>" : "")
    .ToString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
2
Gpt4D_Clone18_2.cs 1 23
Gpt4D_Clone18_2.cs 24 36
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString ()
{
    return new StringBuilder ()
    .Append ($"{formatHyperlink(Hyperlink)} {formatHexColor(HexColor)} {Data} {endHyperlink(Hyperlink)}")
    .ToString();
    string formatHyperlink(string hyperlink) => !string.IsNullOrEmpty(hyperlink) ? "<a href=\"" + hyperlink + "\"><![CDATA[" : "";
    string formatHexColor(string hexcolor) => !string.IsNullOrEmpty (hexcolor) ? "<span style='color:" + hexcolor + "'>" : "";
    string endHyperlink(string hyperlink) => !string.IsNullOrEmpty(hyperlink) ? "</a>" : "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
3
Gpt4D_Clone18_3.cs 1 23
Gpt4D_Clone18_3.cs 24 36
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString ()
{
    // Use ternary operators
    builder.Clear ();
    builder.Append (! string.IsNullOrEmpty (Hyperlink) ? $"<a href=\"{Hyperlink}\"><![CDATA[" : "");
    builder.Append (! string.IsNullOrEmpty (HexColor) ? $"<span style='color:{HexColor}'>" : "");
    builder.AppendLine (Data);
    builder.Append (! string.IsNullOrEmpty (Hyperlink) ? "</a>" : "");
    return builder.ToString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
4
Gpt4D_Clone18_4.cs 1 23
Gpt4D_Clone18_4.cs 24 57
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString()
{
	    builder.Clear();
	    AssignHyperlink();
	    AssignColor();
	    builder.AppendLine(Data);
	    CloseHyperlink();
	    return builder.ToString();
	}
	private void AssignHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("<a href=\"");
	    builder.Append(Hyperlink);
	    builder.Append("\"><![CDATA[");
	}
	private void AssignColor()
	{
	    if (string.IsNullOrEmpty(HexColor)) return;
	    builder.Append("<span style='color:");
	    builder.Append(HexColor);
	    builder.Append("'>");
	}
	private void CloseHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("</a>");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
5
Gpt4D_Clone18_5.cs 1 23
Gpt4D_Clone18_5.cs 24 57
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString()
{
	    builder.Clear();
	    AssignHyperlink();
	    AssignColor();
	    builder.AppendLine(Data);
	    CloseHyperlink();
	    return builder.ToString();
	}
	private void AssignHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("<a href=\"");
	    builder.Append(Hyperlink);
	    builder.Append("\"><![CDATA[");
	}
	private void AssignColor()
	{
	    if (string.IsNullOrEmpty(HexColor)) return;
	    builder.Append("<span style='color:");
	    builder.Append(HexColor);
	    builder.Append("'>");
	}
	private void CloseHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("</a>");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
6
Gpt4D_Clone18_6.cs 1 23
Gpt4D_Clone18_6.cs 24 57
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString()
{
	    builder.Clear();
	    AssignHyperlink();
	    AssignColor();
	    builder.AppendLine(Data);
	    CloseHyperlink();
	    return builder.ToString();
	}
	private void AssignHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("<a href=\"");
	    builder.Append(Hyperlink);
	    builder.Append("\"><![CDATA[");
	}
	private void AssignColor()
	{
	    if (string.IsNullOrEmpty(HexColor)) return;
	    builder.Append("<span style='color:");
	    builder.Append(HexColor);
	    builder.Append("'>");
	}
	private void CloseHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("</a>");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
7
Gpt4D_Clone18_7.cs 1 23
Gpt4D_Clone18_7.cs 24 57
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString()
{
	    builder.Clear();
	    AssignHyperlink();
	    AssignColor();
	    builder.AppendLine(Data);
	    CloseHyperlink();
	    return builder.ToString();
	}
	private void AssignHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("<a href=\"");
	    builder.Append(Hyperlink);
	    builder.Append("\"><![CDATA[");
	}
	private void AssignColor()
	{
	    if (string.IsNullOrEmpty(HexColor)) return;
	    builder.Append("<span style='color:");
	    builder.Append(HexColor);
	    builder.Append("'>");
	}
	private void CloseHyperlink()
	{
	    if (string.IsNullOrEmpty(Hyperlink)) return;
	    builder.Append("</a>");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
8
Gpt4D_Clone18_8.cs 1 23
Gpt4D_Clone18_8.cs 24 34
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString()
{
    return
        $"{(string.IsNullOrEmpty(Hyperlink) ? "" : $"<a href=\"{Hyperlink}\"><![CDATA[")} " +
        $"{(string.IsNullOrEmpty(HexColor) ? "" : $"<span style='color: {HexColor}'>")} " +
        $"{Data} " +
        $"{(string.IsNullOrEmpty(Hyperlink) ? "" : "</a>")}";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
9
Gpt4D_Clone18_9.cs 1 23
Gpt4D_Clone18_9.cs 24 35
----------------------------------------

public override string ToString () {
    builder.Clear ();
    bool hasHyperlink = ! string.IsNullOrEmpty (Hyperlink);
    bool hasColor = ! string.IsNullOrEmpty (HexColor);
    if (hasHyperlink) {
        builder.Append ("<a href=\"");
        builder.Append (Hyperlink);
        builder.Append ("\"><![CDATA[");
    }
    if (hasColor) {
        builder.Append ("<span style='color:");
        builder.Append (HexColor);
        builder.Append ("'>");
    }
    builder.AppendLine (Data);
    if (hasHyperlink)
        builder.Append ("</a>");
    return builder.ToString ();
}
----------------------------------------

public override string ToString () {
    return string.Format(
         "{0}{1}{2}{3}",
         string.IsNullOrEmpty (Hyperlink) ? "" : "<a href=\"" + Hyperlink + "\"><![CDATA[",
         string.IsNullOrEmpty (HexColor) ? "" : "<span style='color:" + HexColor + "'>",
         Data,
         string.IsNullOrEmpty (Hyperlink) ? "" : "</a>"
    );
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
0
Gpt4D_Clone190_0.cs 1 14
Gpt4D_Clone190_0.cs 15 26
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
    if(_disposed) return;
    if(!disposing) return;
    id = 0;
    name = string.Empty;
    pass = string.Empty;
    _disposed = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
1
Gpt4D_Clone190_1.cs 1 15
Gpt4D_Clone190_1.cs 16 29
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
 
----------------------------------------

protected virtual void Dispose(bool disposing)
{
    if(_disposed) return;
    if(disposing)
    {
        id = 0;
        name = string.Empty;
        pass = string.Empty;
    }
    _disposed = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
10
Gpt4D_Clone190_10.cs 1 14
Gpt4D_Clone190_10.cs 15 33
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
	    if (!_disposed)
	    {
		if (disposing)
		{
		    ResetValues();
		}
		_disposed = true;
	    }
	}
	private void ResetValues() 
	{
	   id = 0;
	   name = String.Empty;
	   pass = String.Empty;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
11
Gpt4D_Clone190_11.cs 1 14
Gpt4D_Clone190_11.cs 15 30
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
	    if(!_disposed && disposing)
	    {
		ClearData();
		_disposed = true;
	    }
	}
	private void ClearData()
	{
	    id = 0;
	    name = String.Empty;
	    pass = String.Empty;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
12
Gpt4D_Clone190_12.cs 1 15
Gpt4D_Clone190_12.cs 16 31
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
 
----------------------------------------

protected virtual void Dispose(bool disposing)
	{
	    if(!this._disposed)
	    {
		if (disposing)
		    ClearCredientials();
		_disposed = true;
	    }
	}
	private void ClearCredientials()
	{
	    id = 0;
	    name = "";
	    pass = "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
4
Gpt4D_Clone190_4.cs 1 15
Gpt4D_Clone190_4.cs 16 26
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
 
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (_disposed == false) {
        if (disposing) {
            id = default;
            name = default;
            pass = default;
        }
        _disposed = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
7
Gpt4D_Clone190_7.cs 1 15
Gpt4D_Clone190_7.cs 16 31
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
 
----------------------------------------

protected virtual void Dispose(bool disposing)
	{
	    if(!this._disposed)
	    {
		if (disposing)
		    ClearCredientials();
		_disposed = true;
	    }
	}
	private void ClearCredientials()
	{
	    id = 0;
	    name = "";
	    pass = "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
8
Gpt4D_Clone190_8.cs 1 15
Gpt4D_Clone190_8.cs 16 25
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
 
----------------------------------------

protected virtual void Dispose(bool disposing)
{
    if (!_disposed && disposing)
    {
        id = 0;
        name = pass = String.Empty;
        _disposed = true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
9
Gpt4D_Clone190_9.cs 1 14
Gpt4D_Clone190_9.cs 15 30
----------------------------------------

protected virtual void Dispose (bool disposing) {
    if (! _disposed) {
        if (disposing) {
            id = 0;
            name = String.Empty;
            pass = String.Empty;
        }
        _disposed = true;
    }
}
----------------------------------------

protected virtual void Dispose(bool disposing)
{
	    if(!_disposed && disposing)
	    {
		ClearData();
		_disposed = true;
	    }
	}
	private void ClearData()
	{
	    id = 0;
	    name = String.Empty;
	    pass = String.Empty;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
0
Gpt4D_Clone191_0.cs 1 22
Gpt4D_Clone191_0.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (!Environment.UserInteractive) {
      ServiceBase[] serviceToRun = {new Service()};
      ServiceBase.Run(serviceToRun);
      return;
   }
   (new MainLib()).Start();
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
1
Gpt4D_Clone191_1.cs 1 22
Gpt4D_Clone191_1.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (Environment.UserInteractive) {
      var mainLib = new MainLib();
      mainLib.Start();
      return;
   }
   ServiceBase.Run(new ServiceBase[] { new Service() });
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
2
Gpt4D_Clone191_2.cs 1 22
Gpt4D_Clone191_2.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (Environment.UserInteractive) {
      MainLib libObject = new MainLib();
      libObject.Start();
   } else {
      ServiceBase.Run(new ServiceBase[] { new Service() });
   }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
5
Gpt4D_Clone191_5.cs 1 22
Gpt4D_Clone191_5.cs 23 22
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (Environment.UserInteractive) {
      var lib = new MainLib();
      lib.Start();
      return;
   }
   ServiceBase.Run(new ServiceBase[] { new Service() });
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
6
Gpt4D_Clone191_6.cs 1 21
Gpt4D_Clone191_6.cs 22 21
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (!Environment.UserInteractive) {
      ServiceBase.Run(new Service[] { new Service() });
   } else {
      new MainLib().Start();
   }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
7
Gpt4D_Clone191_7.cs 1 21
Gpt4D_Clone191_7.cs 22 21
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (!Environment.UserInteractive) {
      ServiceBase.Run(new[] { new Service() });
      return;
   }
   new MainLib().Start();
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
8
Gpt4D_Clone191_8.cs 1 21
Gpt4D_Clone191_8.cs 22 21
----------------------------------------

static void Main (string [] args) {
    if (! Environment.UserInteractive) {
        ServiceBase [] ServicesToRun;
        ServicesToRun = new ServiceBase [] {new Service ()};
        ServiceBase.Run (ServicesToRun);
        return;
    }
    MainLib lib = new MainLib ();
    lib.Start ();
}
 static void Main(string[] args) {
   if (Environment.UserInteractive) {
      (new MainLib()).Start();
   } else {
      ServiceBase.Run(new ServiceBase[] { new Service() });
   }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
3
Gpt4D_Clone192_3.cs 1 23
Gpt4D_Clone192_3.cs 24 49
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
		    var sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
		    using (ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery))
		    {
			try 
			{
			    System.Console.WriteLine("User Accounts\n");
			    foreach (ManagementObject mObj in mSearcher.Get())
			    {
				System.Console.WriteLine($"Account {mObj["Name"]}");
				foreach (PropertyData prop in mObj.Properties)
				    System.Console.WriteLine($"Name: {prop.Name}\tValue: {prop.Value}");
				System.Console.WriteLine();
			    }
			}
			catch (Exception ex)
			{
			    System.Console.WriteLine(ex.Message);
			}
		    }
		    Console.ReadKey ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
5
Gpt4D_Clone192_5.cs 1 23
Gpt4D_Clone192_5.cs 24 55
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
			    SelectQuery sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
			    try
			    {
				using (ManagementObjectSearcher mSearcher = new ManagementObjectSearcher(sQuery))
				{
				    DisplayUserAccounts(mSearcher);
				}
			    }
			    catch (Exception ex)
			    {
				Console.WriteLine(ex);
			    }
			    Console.Read();
			}
			static void DisplayUserAccounts(ManagementObjectSearcher searcher)
			{
			    Console.WriteLine("User Accounts\n");
			    foreach (ManagementObject mObject in searcher.Get())
			    {
				Console.WriteLine($"Account {mObject["Name"]}");
				foreach (PropertyData prop in mObject.Properties)
				{
				    Console.WriteLine($"Name: {prop.Name}\tValue: {prop.Value}");
				}
				Console.WriteLine();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
6
Gpt4D_Clone192_6.cs 1 23
Gpt4D_Clone192_6.cs 24 56
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
		    var sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
		    try
		    {
			using (var mSearcher = new ManagementObjectSearcher(sQuery))
			{
			    PrintUserAccounts(mSearcher);
			}
		    }
		    catch (Exception ex)
		    {
			Console.WriteLine(ex.ToString());
		    }
		    Console.ReadKey();
		}
		private static void PrintUserAccounts(ManagementObjectSearcher mSearcher)
		{
		    Console.WriteLine("User Accounts");
		    Console.WriteLine();
		    foreach (ManagementObject mObject in mSearcher.Get())
		    {
			Console.WriteLine("Account {0}", mObject["Name"]);
			foreach (PropertyData prop in mObject.Properties)
			{
			    Console.WriteLine("Name: {0}\tValue: {1}", prop.Name, prop.Value);
			}
			Console.WriteLine();
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
7
Gpt4D_Clone192_7.cs 1 23
Gpt4D_Clone192_7.cs 24 56
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
		    var sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
		    try
		    {
			using (var mSearcher = new ManagementObjectSearcher(sQuery))
			{
			    PrintUserAccounts(mSearcher);
			}
		    }
		    catch (Exception ex)
		    {
			Console.WriteLine(ex.ToString());
		    }
		    Console.ReadKey();
		}
		private static void PrintUserAccounts(ManagementObjectSearcher mSearcher)
		{
		    Console.WriteLine("User Accounts");
		    Console.WriteLine();
		    foreach (ManagementObject mObject in mSearcher.Get())
		    {
			Console.WriteLine("Account {0}", mObject["Name"]);
			foreach (PropertyData prop in mObject.Properties)
			{
			    Console.WriteLine("Name: {0}\tValue: {1}", prop.Name, prop.Value);
			}
			Console.WriteLine();
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
8
Gpt4D_Clone192_8.cs 1 23
Gpt4D_Clone192_8.cs 24 55
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main(string[] args)
{
			    SelectQuery sQuery = new SelectQuery("Win32_UserAccount", "Domain='mypcname'");
			    try
			    {
				using (ManagementObjectSearcher mSearcher = new ManagementObjectSearcher(sQuery))
				{
				    DisplayUserAccounts(mSearcher);
				}
			    }
			    catch (Exception ex)
			    {
				Console.WriteLine(ex);
			    }
			    Console.Read();
			}
			static void DisplayUserAccounts(ManagementObjectSearcher searcher)
			{
			    Console.WriteLine("User Accounts\n");
			    foreach (ManagementObject mObject in searcher.Get())
			    {
				Console.WriteLine($"Account {mObject["Name"]}");
				foreach (PropertyData prop in mObject.Properties)
				{
				    Console.WriteLine($"Name: {prop.Name}\tValue: {prop.Value}");
				}
				Console.WriteLine();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
9
Gpt4D_Clone192_9.cs 1 23
Gpt4D_Clone192_9.cs 24 50
----------------------------------------

static void Main (string [] args) {
    SelectQuery sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
    try {
        ManagementObjectSearcher mSearcher = new ManagementObjectSearcher (sQuery);
        Console.WriteLine ("User Accounts");
        Console.WriteLine ();
        foreach (ManagementObject mObject in mSearcher.Get ()) {
            Console.WriteLine ("Account {0}", mObject ["Name"]);
            foreach (PropertyData prop in mObject.Properties) {
                Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
            }
            Console.WriteLine ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.ToString ());
    }
    Console.ReadKey ();
}
----------------------------------------

static void Main (string [] args) {
			    var sQuery = new SelectQuery ("Win32_UserAccount", "Domain='mypcname'");
			    try {
				using (var mSearcher = new ManagementObjectSearcher (sQuery)) {
				    Console.WriteLine ("User Accounts");
				    Console.WriteLine ();
				    var userAccounts = mSearcher.Get();
				    PrintUserAccounts(userAccounts);
				}
			    }
			    catch (Exception ex) {
				Console.WriteLine (ex.ToString ());
			    }
			    Console.ReadKey ();
			}
			private static void PrintUserAccounts (ManagementObjectCollection userAccounts) {
			    foreach (ManagementObject mObject in userAccounts) {
				Console.WriteLine ("Account {0}", mObject ["Name"]);
				foreach (var prop in mObject.Properties) {
				    Console.WriteLine ("Name: {0}\tValue: {1}", prop.Name, prop.Value);
				}
				Console.WriteLine ();
			    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
0
Gpt4D_Clone193_0.cs 1 16
Gpt4D_Clone193_0.cs 17 28
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    List<InputProperty> ipList = new List<InputProperty>();
    foreach(var pair in nvPairs)
    {
        if(pair == null) break;
        ipList.Add(new InputProperty { Name = "udf:" + pair.Name, Val = pair.Value});
    }
    Update update = new Update { Items = ipList.ToArray() };
    return update;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
1
Gpt4D_Clone193_1.cs 1 16
Gpt4D_Clone193_1.cs 17 31
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    List<InputProperty> ips = new List<InputProperty>();
    for (int i = 0; i < nvPairs.Length; i++)
    {
        if (nvPairs[i] == null)
            break;
        ips.Add(new InputProperty { Name = "udf:" + nvPairs[i].Name, Val = nvPairs[i].Value });
    }
    return new Update() { Items = ips.ToArray() };
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
2
Gpt4D_Clone193_2.cs 1 16
Gpt4D_Clone193_2.cs 17 26
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update update = new Update();
    update.Items = (from pair in nvPairs
                    where pair != null
                    select new InputProperty { Name = "udf:" + pair.Name, Val = pair.Value}).ToArray();
    return update;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
3
Gpt4D_Clone193_3.cs 1 16
Gpt4D_Clone193_3.cs 17 25
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update update = new Update();
    var ipArray = Array.ConvertAll(nvPairs, pair => new InputProperty { Name = "udf:" + pair.Name, Val = pair.Value });
    update.Items = ipArray;
    return update;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
4
Gpt4D_Clone193_4.cs 1 16
Gpt4D_Clone193_4.cs 17 27
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update u = new Update();
    u.Items = nvPairs
              .Where(x => x != null)
              .Select(x => new InputProperty { Name = "udf:" + x.Name, Val = x.Value })
              .ToArray();
    return u;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
5
Gpt4D_Clone193_5.cs 1 16
Gpt4D_Clone193_5.cs 17 27
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update u = new Update();
    u.Items = nvPairs
              .Where(nv => nv != null)
              .Select(nv => new InputProperty() { Name = "udf:" + nv.Name, Val = nv.Value })
              .ToArray();
    return u;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
6
Gpt4D_Clone193_6.cs 1 16
Gpt4D_Clone193_6.cs 17 26
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update update = new Update();
    update.Items = nvPairs.Where(pair => pair != null)
                          .Select(pair => new InputProperty { Name = "udf:" + pair.Name, Val = pair.Value})
                          .ToArray();
    return update;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
7
Gpt4D_Clone193_7.cs 1 16
Gpt4D_Clone193_7.cs 17 26
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] pairs)
{
    Update update = new Update();
    update.Items = pairs.TakeWhile(pair => pair != null)
                        .Select(pair => new InputProperty { Name = "udf:" + pair.Name, Val = pair.Value })
                        .ToArray();
    return update;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
8
Gpt4D_Clone193_8.cs 1 16
Gpt4D_Clone193_8.cs 17 26
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    InputProperty[] inputProps = nvPairs
                                 .Where(nv => nv != null)
                                 .Select(nv => new InputProperty("udf:" + nv.Name, nv.Value))
                                 .ToArray();
    return new Update() { Items = inputProps };
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
9
Gpt4D_Clone193_9.cs 1 16
Gpt4D_Clone193_9.cs 17 29
----------------------------------------

private Update BuildMetaData (MetaData [] nvPairs) {
    Update update = new Update ();
    var ip = new List < InputProperty > ();
    foreach (var nvPair in nvPairs) {
        if (nvPair == null)
            break;
        var inputProp = new InputProperty {Name = "udf:" + nvPair.Name, Val = nvPair.Value};
        ip.Add (inputProp);
    }
    update.Items = ip.ToArray ();
    return update;
}
----------------------------------------

private Update BuildMetaData(MetaData[] nvPairs)
{
    Update u = new Update()
    {
        Items = nvPairs
                 .TakeWhile(x => x != null)
                 .Select(x => new InputProperty { Name = "udf:" + x.Name, Val = x.Value })
                 .ToArray()
    };
    return u;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
0
Gpt4D_Clone196_0.cs 1 15
Gpt4D_Clone196_0.cs 16 27
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        if (Clipboard.ContainsText()) {
            string text = Clipboard.GetText();
        } else if (Clipboard.ContainsImage()) {
            Image image = Clipboard.GetImage();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
2
Gpt4D_Clone196_2.cs 1 15
Gpt4D_Clone196_2.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject dataFromClipboard = Clipboard.GetDataObject();
        if (dataFromClipboard.GetDataPresent(DataFormats.Text, false)) {
            string grabbedText = dataFromClipboard.GetData(DataFormats.Text).ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
5
Gpt4D_Clone196_5.cs 1 15
Gpt4D_Clone196_5.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject dataOnClipboard = Clipboard.GetDataObject();
        if (dataOnClipboard.GetDataPresent("Text")) {
            string grabbedText = dataOnClipboard.GetData("Text").ToString();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
7
Gpt4D_Clone196_7.cs 1 15
Gpt4D_Clone196_7.cs 16 28
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDataObject clipboardData = Clipboard.GetDataObject();
        if (clipboardData.GetDataPresent(typeof(string))) {
            string clipboardText = (string)clipboardData.GetData(typeof(string));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
8
Gpt4D_Clone196_8.cs 1 15
Gpt4D_Clone196_8.cs 16 25
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if (m.Msg == ClipboardUpdateMessage) {
        IDictionary dataObjects = Clipboard.GetDataObject().GetFormats().ToDictionary(x => x, x => Clipboard.GetDataObject().GetData(x));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
196
9
Gpt4D_Clone196_9.cs 1 15
Gpt4D_Clone196_9.cs 16 25
----------------------------------------

protected override void WndProc (ref Message m) {
    base.WndProc (ref m);
    if (m.Msg == WM_CLIPBOARDUPDATE) {
        IDataObject iData = Clipboard.GetDataObject ();
        if (iData.GetDataPresent (DataFormats.Text)) {
            string text = (string) iData.GetData (DataFormats.Text);
        } else if (iData.GetDataPresent (DataFormats.Bitmap)) {
            Bitmap image = (Bitmap) iData.GetData (DataFormats.Bitmap);
        }
    }
}
----------------------------------------

protected override void WndProc(ref Message m) {
    base.WndProc(ref m);
    if ((m.Msg == ClipboardUpdateMessage) && Clipboard.ContainsText()) {
        string grabbedText = Clipboard.GetText(TextDataFormat.UnicodeText);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
0
Gpt4D_Clone19_0.cs 1 12
Gpt4D_Clone19_0.cs 13 26
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n)
{
    if (n == 0)
        return false;
    while (n != 1)
    {
        if (n % 2 != 0)
            return false;
        n = n / 2;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
1
Gpt4D_Clone19_1.cs 1 12
Gpt4D_Clone19_1.cs 13 21
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n)
{
    if (n == 1)
        return true;
    if (n == 0 || (n & (n - 1)) != 0)
        return false;
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
2
Gpt4D_Clone19_2.cs 1 12
Gpt4D_Clone19_2.cs 13 22
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n)
{
    if(n <= 0)
        return false;
    
    bool result = ((n & n - 1) == 0);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
3
Gpt4D_Clone19_3.cs 1 12
Gpt4D_Clone19_3.cs 13 20
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong num) 
{
    if (num == 1)
        return true;
    return num > 2 && num % 2 == 0 && IsPowerOfTwo(num / 2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
4
Gpt4D_Clone19_4.cs 1 12
Gpt4D_Clone19_4.cs 13 20
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n)
{
    if (n == 0)
        return false;
    return (n & (n - 1)) == 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
5
Gpt4D_Clone19_5.cs 1 12
Gpt4D_Clone19_5.cs 13 18
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong x)
{
    return ((x != 0) && ((x & (~x + 1)) == x));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
6
Gpt4D_Clone19_6.cs 1 12
Gpt4D_Clone19_6.cs 13 18
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n)
{
    return n != 0 && ((n & (n - 1)) == 0);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
19
7
Gpt4D_Clone19_7.cs 1 12
Gpt4D_Clone19_7.cs 13 18
----------------------------------------

public static bool IsPowerOfTwo (ulong n) {
    if (n % 2 != 0)
        return false;
    double exp = Math.Log (n, 2);
    if (exp != Math.Floor (exp))
        return false;
    return Math.Pow (2, exp) == n;
}
----------------------------------------

public static bool IsPowerOfTwo(ulong n) 
{
    return Math.Ceiling(Math.Log(n, 2)) == Math.Floor(Math.Log(n, 2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
0
Gpt4D_Clone205_0.cs 1 13
Gpt4D_Clone205_0.cs 14 24
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    string result = mIPAD.pin.KSN;
    result += "," + mIPAD.pin.EPB;
    result += "," + mIPAD.getStatusCode();
    result += "\r\n";
    Thread.Sleep (20000);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
1
Gpt4D_Clone205_1.cs 1 13
Gpt4D_Clone205_1.cs 14 24
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    var ksnStr = new string(mIPAD.pin.KSN);
    var epbStr = new string(mIPAD.pin.EPB);
    var statusStr = new string(mIPAD.getStatusCode());
    var finalStr = $"{ksnStr},{epbStr},{statusStr}\r\n";
    Thread.Sleep (20000);
    return finalStr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
2
Gpt4D_Clone205_2.cs 1 13
Gpt4D_Clone205_2.cs 14 23
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    string a = mIPAD.pin.KSN + ",";
    string b = a + mIPAD.pin.EPB + ",";
    string c = b + mIPAD.getStatusCode();
    Thread.Sleep (20000);
    return c + "\r\n";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
3
Gpt4D_Clone205_3.cs 1 13
Gpt4D_Clone205_3.cs 14 19
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

public string GetResultPIN() {
    var result = $"{mIPAD.pin.KSN},{mIPAD.pin.EPB},{mIPAD.getStatusCode()}\r\n";
    Thread.Sleep(20000);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
4
Gpt4D_Clone205_4.cs 1 13
Gpt4D_Clone205_4.cs 14 21
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    var result = mIPAD.pin.KSN + "," + mIPAD.pin.EPB + "," + mIPAD.getStatusCode() + "\r\n";
    Thread.Sleep(20 * 1000);
    return new string(result.ToCharArray());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
5
Gpt4D_Clone205_5.cs 1 13
Gpt4D_Clone205_5.cs 14 21
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    string formattedStr = String.Format("{0},{1},{2}\r\n", mIPAD.pin.KSN, mIPAD.pin.EPB, mIPAD.getStatusCode());
    Thread.Sleep (20000);
    return formattedStr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
6
Gpt4D_Clone205_6.cs 1 13
Gpt4D_Clone205_6.cs 14 21
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    List<string> stringList = new List<string>(){mIPAD.pin.KSN, mIPAD.pin.EPB,mIPAD.getStatusCode(),"\r\n"};
    Thread.Sleep (20000);
    return string.Join(",", stringList);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
7
Gpt4D_Clone205_7.cs 1 13
Gpt4D_Clone205_7.cs 14 21
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    string[] pinElements = { mIPAD.pin.KSN, mIPAD.pin.EPB, mIPAD.getStatusCode(), "\r\n" };
    Thread.Sleep (20000);
    return String.Concat(pinElements);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
8
Gpt4D_Clone205_8.cs 1 13
Gpt4D_Clone205_8.cs 14 20
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    return string.Join(",", mIPAD.pin.KSN, mIPAD.pin.EPB, mIPAD.getStatusCode()) + "\r\n";
    Thread.Sleep (20000);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
9
Gpt4D_Clone205_9.cs 1 13
Gpt4D_Clone205_9.cs 14 20
----------------------------------------

public string GetResultPIN () {
    StringBuilder sb = new StringBuilder ();
    sb.Append (mIPAD.pin.KSN);
    sb.Append ("," + mIPAD.pin.EPB);
    sb.Append ("," + mIPAD.getStatusCode ());
    sb.Append ("\r\n");
    Thread.Sleep (20 * 1000);
    return sb.ToString ();
}
----------------------------------------

 
public string GetResultPIN() {
    return "{0},{1},{2}\r\n".Replace("{0}", mIPAD.pin.KSN).Replace("{1}", mIPAD.pin.EPB).Replace("{2}", mIPAD.getStatusCode());
    Thread.Sleep (20000);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
0
Gpt4D_Clone206_0.cs 1 21
Gpt4D_Clone206_0.cs 22 33
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    for (int i = 7; i <= 15; i++)
        listBox1.Items.Insert(0, $"item{i}");
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    
    if (firstVisibleItem != null)
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate { listBox1.ScrollIntoViewTop(firstVisibleItem); }));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
1
Gpt4D_Clone206_1.cs 1 21
Gpt4D_Clone206_1.cs 22 32
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    for (int i = 15; i >= 7; i--)
        listBox1.Items.Insert (0, String.Format("item{0}", i));
    
    if (firstVisibleItem != null)  
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
2
Gpt4D_Clone206_2.cs 1 21
Gpt4D_Clone206_2.cs 22 31
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    for (int i = 15; i >= 7; i--)
        listBox1.Items.Insert (0, "item" + i);
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    if (firstVisibleItem != null)
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
3
Gpt4D_Clone206_3.cs 1 21
Gpt4D_Clone206_3.cs 22 31
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    foreach (var i in Enumerable.Range(7, 9).Reverse())
        listBox1.Items.Insert (0, "item" + i.ToString());
    
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    
    if (firstVisibleItem != null) 
        Dispatcher.CurrentDispatcher.InvokeAsync(() => listBox1.ScrollIntoViewTop (firstVisibleItem), DispatcherPriority.Loaded);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
4
Gpt4D_Clone206_4.cs 1 21
Gpt4D_Clone206_4.cs 22 31
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    for (int i = 7; i <= 15; i++)
        listBox1.Items.Insert(0, $"item{i}");
    object firstVisibleItem = GetFirstVisibleItem (listBox1);
    if (firstVisibleItem != null)
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
5
Gpt4D_Clone206_5.cs 1 21
Gpt4D_Clone206_5.cs 22 33
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    for (int i = 15; i >= 7; i--) 
        listBox1.Items.Insert (0, $"item{i}");
    
    object firstVisibleItem = GetFirstVisibleItem (listBox1);
    if (firstVisibleItem != null)
        Dispatcher.CurrentDispatcher.InvokeAsync(() => listBox1.ScrollIntoViewTop (firstVisibleItem), DispatcherPriority.Loaded);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
6
Gpt4D_Clone206_6.cs 1 21
Gpt4D_Clone206_6.cs 22 32
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    
    listBox1.Items.InsertRange (0, Enumerable.Range(7, 9).Select(i => "item" + i.ToString()).Reverse().ToList());
    if (firstVisibleItem != null) 
       Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action(() => listBox1.ScrollIntoViewTop (firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
7
Gpt4D_Clone206_7.cs 1 21
Gpt4D_Clone206_7.cs 22 31
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    listBox1.Items.InsertRange (0, new[] { "item15", "item14", "item13", "item12", "item11", "item10", "item9", "item8", "item7" });
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    if (firstVisibleItem != null) 
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
8
Gpt4D_Clone206_8.cs 1 21
Gpt4D_Clone206_8.cs 22 32
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    
    Enumerable.Range(7, 9).ToList().ForEach(i=> listBox1.Items.Insert (0, "item" + i));
    
    if (firstVisibleItem != null) 
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
9
Gpt4D_Clone206_9.cs 1 21
Gpt4D_Clone206_9.cs 22 32
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item7");
    listBox1.Items.Insert (0, "item8");
    listBox1.Items.Insert (0, "item9");
    listBox1.Items.Insert (0, "item10");
    listBox1.Items.Insert (0, "item11");
    listBox1.Items.Insert (0, "item12");
    listBox1.Items.Insert (0, "item13");
    listBox1.Items.Insert (0, "item14");
    listBox1.Items.Insert (0, "item15");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

private void button2_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    
    Enumerable.Range(7, 9).Reverse().ToList().ForEach(i=> listBox1.Items.Insert (0, "item" + i));
    
    if (firstVisibleItem != null)  
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (() => listBox1.ScrollIntoViewTop(firstVisibleItem)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
0
Gpt4D_Clone207_0.cs 1 21
Gpt4D_Clone207_0.cs 22 33
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    var newItemIndices = new List<int>{16, 17, 18, 19, 20, 21, 22, 23, 24};
    foreach(var i in newItemIndices)
    {
        listBox1.Items.Insert (0, "item"+i);
    }
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
1
Gpt4D_Clone207_1.cs 1 21
Gpt4D_Clone207_1.cs 22 32
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    for(var i = 24; i >= 16; i--)
    {
        listBox1.Items.Insert (0, "item"+i);
    }
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
2
Gpt4D_Clone207_2.cs 1 21
Gpt4D_Clone207_2.cs 22 32
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    foreach (var i in Enumerable.Range(16, 9).Reverse())
    {
        listBox1.Items.Insert (0, $"item{i}");
    }
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
3
Gpt4D_Clone207_3.cs 1 21
Gpt4D_Clone207_3.cs 22 36
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
		    var firstVisibleItem = GetFirstVisibleItem (listBox1);
		    InsertItems(Enumerable.Range(16, 9).Reverse().Select(i => $"item{i}"));
		    ScrollToFirstVisibleItem(firstVisibleItem);
		}
		private void InsertItems(IEnumerable<string> items)
		{
		    foreach(var item in items)
		    {
			listBox1.Items.Insert (0, item);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
4
Gpt4D_Clone207_4.cs 1 21
Gpt4D_Clone207_4.cs 22 29
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    new List<string>{"item16","item17","item18","item19","item20","item21","item22","item23","item24"}.ForEach(item => listBox1.Items.Insert (0, item));
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
5
Gpt4D_Clone207_5.cs 1 21
Gpt4D_Clone207_5.cs 22 36
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
		    var firstVisibleItem = GetFirstVisibleItem (listBox1);
		    AddItems("item16","item17","item18","item19","item20","item21","item22","item23","item24");
		    ScrollToFirstVisibleItem(firstVisibleItem);
		}
		private void AddItems(params string[] items)
		{
		    foreach(var item in items.Reverse())
		    {
			listBox1.Items.Insert (0, item);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
6
Gpt4D_Clone207_6.cs 1 21
Gpt4D_Clone207_6.cs 22 33
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
			    var firstVisibleItem = GetFirstVisibleItem (listBox1);
			    InsertItems(new List<string>{"item16","item17","item18","item19","item20","item21","item22","item23","item24"});
			    ScrollToFirstVisibleItem(firstVisibleItem);
			}
			private void InsertItems(List<string> items)
			{
			    items.Reverse().ForEach(item => listBox1.Items.Insert (0, item));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
7
Gpt4D_Clone207_7.cs 1 21
Gpt4D_Clone207_7.cs 22 29
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    "item16,item17,item18,item19,item20,item21,item22,item23,item24".Split(',').Reverse().ToList().ForEach(item => listBox1.Items.Insert (0, item));
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
8
Gpt4D_Clone207_8.cs 1 21
Gpt4D_Clone207_8.cs 22 33
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
			    var firstVisibleItem = GetFirstVisibleItem (listBox1);
			    InsertItems(16, 9);
			    ScrollToFirstVisibleItem(firstVisibleItem);
			}
			private void InsertItems(int start, int count)
			{
			    Enumerable.Range(start, count).Reverse().ToList().ForEach(i => listBox1.Items.Insert(0, $"item{i}"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
9
Gpt4D_Clone207_9.cs 1 21
Gpt4D_Clone207_9.cs 22 29
----------------------------------------

private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    listBox1.Items.Insert (0, "item16");
    listBox1.Items.Insert (0, "item17");
    listBox1.Items.Insert (0, "item18");
    listBox1.Items.Insert (0, "item19");
    listBox1.Items.Insert (0, "item20");
    listBox1.Items.Insert (0, "item21");
    listBox1.Items.Insert (0, "item22");
    listBox1.Items.Insert (0, "item23");
    listBox1.Items.Insert (0, "item24");
    if (firstVisibleItem != null) {
        Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.Loaded, new Action (delegate () {
            listBox1.ScrollIntoViewTop (firstVisibleItem);
        }));
    }
}
----------------------------------------

 
private void button3_Click (object sender, RoutedEventArgs e) {
    var firstVisibleItem = GetFirstVisibleItem (listBox1);
    Enumerable.Range(16, 9).Reverse().ToList().ForEach(i => listBox1.Items.Insert(0, $"item{i}"));
    ScrollToFirstVisibleItem(firstVisibleItem);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
0
Gpt4D_Clone209_0.cs 1 13
Gpt4D_Clone209_0.cs 14 28
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    Double angle_Freq = Math.PI * Frequency / SampleRate;
    Double t = Math.Atan(angle_Freq);
    Double t_squared = t * t;
    Double norm = 1 / (1 + t / Q + t_squared);
    A0 = t_squared * norm;
    A1 = 2.0 * A0;
    A2 = A0;
    B1 = 2.0 * (t_squared - 1.0) * norm;
    B2 = (1 - t / Q + t_squared) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
1
Gpt4D_Clone209_1.cs 1 13
Gpt4D_Clone209_1.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double Z = (Math.PI * Frequency) / SampleRate;
    double T = Math.Tan(Z);
    double Tk = T / Q;
    double norm = 1.0 / (1.0  + Tk + (T * T));
    A0 = (T * T) * norm ;
    A1 = 2 * A0 ;
    A2 = A0 ;
    B1 = 2.0 * ((T * T) - 1) * norm ;
    B2 = (1 - Tk + (T * T)) * norm ;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
2
Gpt4D_Clone209_2.cs 1 13
Gpt4D_Clone209_2.cs 14 28
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    Double angle_Freq = Math.PI * Frequency / SampleRate;
    Double t = Math.Tan(angle_Freq);
    Double t_squared = t * t;
    Double norm = 1 / (1 + t / Q + t_squared);
    A0 = t_squared * norm;
    A1 = 2.0 * A0;
    A2 = A0;
    B1 = 2.0 * (t_squared - 1.0) * norm;
    B2 = (1 - t / Q + t_squared) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
3
Gpt4D_Clone209_3.cs 1 13
Gpt4D_Clone209_3.cs 14 23
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double s = Math.Sin (2 * Math.PI * Frequency / SampleRate);
    double c = 1 / Q;
    A0 = s * s / (2 * c);
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (s * s - c);
    B2 = (c - s / Q + s * s) / (2 * c);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
4
Gpt4D_Clone209_4.cs 1 13
Gpt4D_Clone209_4.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Exp( Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + Math.Log(k) / Q + Math.Pow(k, 2));
    A0 = Math.Pow(k, 2) * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (Math.Pow(k, 2) - 1) * norm;
    B2 = (1 - Math.Log(k) / Q + Math.Pow(k, 2)) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
5
Gpt4D_Clone209_5.cs 1 13
Gpt4D_Clone209_5.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double x = Math.Pow(Math.Tan(Math.PI * Frequency / SampleRate), 2);
    var norm = 1 / (1 + Math.Sqrt(x / Q) + x);
    A0 = x * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (x - 1) * norm;
    B2 = (1 - Math.Sqrt(x / Q) + x) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
6
Gpt4D_Clone209_6.cs 1 13
Gpt4D_Clone209_6.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = k * k * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Cos (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + Q / k + Math.Pow(k, 2));
    A0 = Math.Pow(k, 2) * norm;
    A1 = 2 * A0;
    A2 = A0;
    B1 = 2 * (Math.Pow(k, 2) - 1) * norm;
    B2 = (1 - Q / k + Math.Pow(k, 2)) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
0
Gpt4D_Clone20_0.cs 1 13
Gpt4D_Clone20_0.cs 14 32
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
		    Console.WriteLine("Enter number(s): ");
		    var values = new List<double>();
		    do 
		    {
			string input = Console.ReadLine();
			if (double.TryParse(input, out double num)) 
			{
			    values.Add(num);
			}
		    } 
		    while (values.Count < 3);
		    average(values.ToArray());
		    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
10
Gpt4D_Clone20_10.cs 1 13
Gpt4D_Clone20_10.cs 14 30
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
		    var values = new double[3];
		    FillArray(values);
		    Console.WriteLine("Enter number(s): ");
		    average(values);
		    Console.ReadKey();
		}
		static void FillArray(double[] nums) 
		{
		    for(int i = 0; i < nums.Length; i++)
			nums[i] = Convert.ToDouble(Console.ReadLine());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
3
Gpt4D_Clone20_3.cs 1 13
Gpt4D_Clone20_3.cs 14 23
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string [] args) 
{
    Console.WriteLine("Enter number(s): ");
    List<double> values = new List<double> { Convert.ToDouble(Console.ReadLine()), Convert.ToDouble(Console.ReadLine()), Convert.ToDouble(Console.ReadLine()) };
    average(values.ToArray());
    Console.ReadKey();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
20
5
Gpt4D_Clone20_5.cs 1 13
Gpt4D_Clone20_5.cs 14 33
----------------------------------------

static void Main (string [] args) {
    Console.WriteLine ("Enter number(s): ");
    double [] values = new double [3];
    for (int i = 0; i < values.Length; i ++) {
        values [i] = Convert.ToDouble (Console.ReadLine ());
    }
    average (values);
    Console.ReadKey ();
}
----------------------------------------

 
static void Main(string[] args)
		{
		    Console.WriteLine("Enter number(s): ");
		    double[] values = GetNumbersFromConsole(3);
		    average(values);
		    Console.ReadKey();
		}
		static double[] GetNumbersFromConsole(int length)
		{
		    double[] nums = new double[length];
		    
		    for (int i = 0; i < length; i++)
			nums[i] = Convert.ToDouble(Console.ReadLine());
		    
		    return nums;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
0
Gpt4D_Clone212_0.cs 1 13
Gpt4D_Clone212_0.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double Omega = 2 * Math.PI * Frequency / SampleRate;
    double sinHalfOmega = Math.Sin(Omega / 2);
    double cosHalfOmega = Math.Cos(Omega / 2);
    var norm = 1 / (1 + sinHalfOmega / Q + sinHalfOmega * sinHalfOmega);
    A0 =  1 * norm;
    A1 = - 2 * cosHalfOmega * norm;
    A2 =  1 * norm;
    B1 = - 2 * cosHalfOmega * norm;
    B2 =  (1 - sinHalfOmega / Q + sinHalfOmega * sinHalfOmega) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
1
Gpt4D_Clone212_1.cs 1 13
Gpt4D_Clone212_1.cs 14 26
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double Omega = 2 * Math.PI * Frequency / (2 * SampleRate);
    double tanOmegaHalf = Omega / Math.Sin(Omega);
    var norm = 1 + tanOmegaHalf / Q + tanOmegaHalf * tanOmegaHalf;
    A0 = norm;
    A1 = -2 * norm;
    A2 = norm;
    B1 = 2 * (1 - tanOmegaHalf * tanOmegaHalf) / norm;
    B2 = (1 + tanOmegaHalf / Q - tanOmegaHalf * tanOmegaHalf) / norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
2
Gpt4D_Clone212_2.cs 1 13
Gpt4D_Clone212_2.cs 14 26
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double Omega = 2 * Math.PI * Frequency / SampleRate;
    double K = Math.Tan (Omega / 2);
    var norm = 1 + K / Q + K * K;
    A0 = norm;
    A1 = -2 * A0;
    A2 = A0;
    B1 = 2 * (K * K - 1) / norm;
    B2 = (1 - K / Q + K * K) / norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
3
Gpt4D_Clone212_3.cs 1 13
Gpt4D_Clone212_3.cs 14 26
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double Omega = 2 * Math.PI * Frequency / (2 * SampleRate);
    double K = Omega / Math.Sin(Omega);
    var norm = 1 + K / Q + K * K;
    A0 = norm;
    A1 = -2 * norm;
    A2 = norm;
    B1 = 2 * (1 - K * K) / norm;
    B2 = (1 + K / Q - K * K) / norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
6
Gpt4D_Clone212_6.cs 1 13
Gpt4D_Clone212_6.cs 14 23
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * 2 * Frequency / (SampleRate * 2));
    var norm = 1 + k / Q + k * k;
    A0 = norm;
    A1 = - norm * 2;
    A2 = norm;
    B1 = 2 * (1 - k * k) / norm;
    B2 = (1 + k / Q - k * k) / norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
0
Gpt4D_Clone214_0.cs 1 13
Gpt4D_Clone214_0.cs 14 30
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

 
protected override void CalculateBiQuadCoefficients()
{
    double sinh = 1.0 / (2 * Q) * (Math.E - 1 / Math.E) / 2;
    double cosPi = Math.Cos(Math.PI * Frequency / SampleRate);
    double sinPi = Math.Sin(Math.PI * Frequency / SampleRate);
    double a = 1 + sinh * sinPi;
    double norm = 1 / a;
    A0 = norm;
    A1 = A0 * -2 * cosPi; 
    A2 = norm;
    B1 = 2 * cosPi * norm;
    B2 = (a - 2 * cosPi) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
1
Gpt4D_Clone214_1.cs 1 13
Gpt4D_Clone214_1.cs 14 29
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    double omega = 2 * Math.PI * Frequency / SampleRate;
    double cosOmega = Math.Cos(omega);
    double sinOmega = Math.Sin(omega);
    double alpha = sinOmega / (2 * Q);
    A0 = 1 / (1 + alpha);
    A1 = -2 * cosOmega * A0;
    A2 = A0;
    B1 = 2 * (cosOmega - 1) * A0;
    B2 = (1 - alpha) * A0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
2
Gpt4D_Clone214_2.cs 1 13
Gpt4D_Clone214_2.cs 14 30
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

 
protected override void CalculateBiQuadCoefficients()
{
    double omega = 2 * Math.PI * Frequency / SampleRate;
    double sinOmega = Math.Sin(omega);
    double alpha = sinOmega / (2 * Q);
    var norm = 1 / (1 + alpha);
    A0 = norm ;
    A1 = -2 * Math.Cos(omega) * norm;
    A2 = norm;
    B1 = 2 * (Math.Cos(omega) - 1) * norm;
    B2 = (1 - alpha) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
3
Gpt4D_Clone214_3.cs 1 13
Gpt4D_Clone214_3.cs 14 29
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    var w = 2 * Math.PI * Frequency / SampleRate;
    var cosw = Math.Cos(w);
    var sinw = Math.Sin(w);
    var alpha = sinw / (2 * Q);
    
    A0 = 1 / (1 + alpha);
    A1 = -2 * cosw * A0;
    A2 = A0;
    B1 = 2 * (cosw - 1) * A0;
    B2 = (1 - alpha) * A0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
5
Gpt4D_Clone214_5.cs 1 13
Gpt4D_Clone214_5.cs 14 28
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    var x = 2 * Math.PI * Frequency / SampleRate;
    var cosx = Math.Cos(x);
    var sinDivQ = Math.Sin(x) / (2 * Q);
    A0 = 1 / (1 + sinDivQ);
    A1 = -2 * cosx * A0;
    A2 = A0;
    B1 = 2 * (cosx - 1) * A0;
    B2 = (1 - sinDivQ) * A0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
7
Gpt4D_Clone214_7.cs 1 13
Gpt4D_Clone214_7.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    var w0 = 2 * Math.PI * Frequency / SampleRate;
    var alpha = Math.Sin(w0) / (2 * Q);
    A0 = 1 / (1 + alpha);
    A1 = -2 * Math.Cos(w0) * A0;
    A2 = A0;
    B1 = 2 * (Math.Cos(w0) - 1) * A0;
    B2 = (1 - alpha) * A0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
8
Gpt4D_Clone214_8.cs 1 13
Gpt4D_Clone214_8.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    var freq = 2 * Math.PI * Frequency / SampleRate;
    var alphaSQ = Math.Pow(Math.Sin(freq) / (2 * Q), 2);
    
    A0 = 1 / (1 + alphaSQ);
    A1 = -2 * Math.Cos(freq) * A0;
    A2 = A0;
    B1 = 2 * (Math.Cos(freq) - 1) * A0;
    B2 = (1 - alphaSQ) * A0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
214
9
Gpt4D_Clone214_9.cs 1 13
Gpt4D_Clone214_9.cs 14 26
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 2 * A0;
    A2 = A0;
    B1 = 2 * (k * k - 1) * norm;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients()
{
    double k = Math.Tan(Math.PI * Frequency / SampleRate / 2);
    var norm = 1 / (1 + k / Q + k * k);
    A0 = 1 * norm;
    A1 = - 1 * 2 * A0;
    A2 = A0;
    B1 = 2 * ((k * k) - 1) * norm;
    B2 = (1 - k / Q + (k * k)) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
3
Gpt4D_Clone219_3.cs 1 13
Gpt4D_Clone219_3.cs 14 27
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan ((Math.PI * Frequency) / SampleRate);
    double norm = 1 / (1 + (k / Q) + (k * k));
    A0 = norm * (1 + (k * k));
    A1 = norm * 2 * ((k * k) - 1);
    A2 = A0;
    B1 = A1;
    B2 = norm * ((1 - (k / Q)) + (k * k));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
4
Gpt4D_Clone219_4.cs 1 13
Gpt4D_Clone219_4.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Tan(Math.PI * (this.Frequency / this.SampleRate));
    double norm = 1 / (1 + k / this.Q + k * k);
    this.A0 = (1 + k * k) * norm;
    this.A1 = 2 * (k * k - 1) * norm;
    this.A2 = this.A0;
    this.B1 = this.A1;
    this.B2 = (1 - k / this.Q + k * k) * norm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
7
Gpt4D_Clone219_7.cs 1 13
Gpt4D_Clone219_7.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = 1 / Math.Tan(Math.PI * Frequency / SampleRate);
    double norm = 1 / (k / Q + k * k + 1);
    A0 = norm * (1 + k * k);
    A1 = norm * (2 * k * k - 2);
    A2 = A0;
    B1 = A1;
    B2 = norm * (k * k + k / Q - 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
8
Gpt4D_Clone219_8.cs 1 13
Gpt4D_Clone219_8.cs 14 25
----------------------------------------

protected override void CalculateBiQuadCoefficients () {
    double k = Math.Tan (Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + k * k);
    A0 = (1 + k * k) * norm;
    A1 = 2 * (k * k - 1) * norm;
    A2 = A0;
    B1 = A1;
    B2 = (1 - k / Q + k * k) * norm;
}
----------------------------------------

protected override void CalculateBiQuadCoefficients() {
    double k = Math.Tan(Math.PI * Frequency / SampleRate);
    double norm = 1 / (1 + k / Q + Math.Pow(k,2));
    A0 = norm * (Math.Pow(k,2) + 1);
    A1 = norm * (2 * Math.Pow(k,2) - 2);
    A2 = A0;
    B1 = A1;
    B2 = norm * (Math.Pow(k,2) - k / Q + 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
0
Gpt4D_Clone222_0.cs 1 22
Gpt4D_Clone222_0.cs 23 39
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    System.Diagnostics.ProcessStartInfo PROCESS = new System.Diagnostics.ProcessStartInfo();
    PROCESS.Verb = "print";
    PROCESS.FileName = @"c:\output.pdf";
    PROCESS.CreateNoWindow = true;
    PROCESS.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
    System.Diagnostics.Process PRINTER = new System.Diagnostics.Process();
    PRINTER.StartInfo = PROCESS;
    PRINTER.Start();
    while(PRINTER.TotalProcessorTime.Ticks != 0){
        System.Threading.Thread.Sleep(1000);
    }
    if(!(PRINTER.CloseMainWindow())){
        PRINTER.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
1
Gpt4D_Clone222_1.cs 1 22
Gpt4D_Clone222_1.cs 23 40
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    var processInfo = new ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    using(var process = new Process { StartInfo = processInfo }) {
        process.Start();
        while(process.TotalProcessorTime.Ticks - 1 != 0) {
            Thread.Sleep(1000);
        }
        if(process.CloseMainWindow() == false) {
            process.Kill();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
2
Gpt4D_Clone222_2.cs 1 21
Gpt4D_Clone222_2.cs 22 39
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
----------------------------------------

private void SendToPrinter() {
    ProcessStartInfo processStartInfo = new ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    using(Process process = new Process { StartInfo = processStartInfo }) {
        process.Start();
        while(process.TotalProcessorTime.Ticks !=0) {
            Thread.Sleep(1000);
        }
        if(!process.CloseMainWindow())
            process.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
3
Gpt4D_Clone222_3.cs 1 22
Gpt4D_Clone222_3.cs 23 40
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    ProcessStartInfo info = new ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    using(var p = new Process { StartInfo = info }) {
        p.Start();
        while(p.TotalProcessorTime.Ticks - 1 !=0) {
            Thread.Sleep(1000);
        }
        if(p.CloseMainWindow() == false) {
            p.Kill();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
4
Gpt4D_Clone222_4.cs 1 22
Gpt4D_Clone222_4.cs 23 39
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    ProcessStartInfo printInfo = new ProcessStartInfo() {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    Process printer = new Process { StartInfo = printInfo };
    printer.Start();
    while(printer.TotalProcessorTime.Ticks.Count() > 0) {
        Thread.Sleep(1000);
    }
    if(!printer.CloseMainWindow()){
        printer.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
5
Gpt4D_Clone222_5.cs 1 22
Gpt4D_Clone222_5.cs 23 39
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    ProcessStartInfo printProcessInfo = new ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    Process printProcess = new Process { StartInfo = printProcessInfo };
    printProcess.Start();
    while(printProcess.TotalProcessorTime.Ticks!=0) {
        System.Threading.Thread.Sleep(1000);
    }
    if(printProcess.CloseMainWindow() == false) {
        printProcess.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
6
Gpt4D_Clone222_6.cs 1 22
Gpt4D_Clone222_6.cs 23 39
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    ProcessStartInfo printInfo = new ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = ProcessWindowStyle.Hidden
    };
    Process printerProcess = new Process { StartInfo = printInfo };
    printerProcess.Start();
    while(printerProcess.TotalProcessorTime.Ticks - 1 != 0) {
        System.Threading.Thread.Sleep(1000);
    }
    if(!printerProcess.CloseMainWindow()) {
        printerProcess.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
7
Gpt4D_Clone222_7.cs 1 22
Gpt4D_Clone222_7.cs 23 38
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    var info = new System.Diagnostics.ProcessStartInfo  {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden
    };
    var printProcess = System.Diagnostics.Process.Start(info);
    while (printProcess.TotalProcessorTime.Ticks > 0) {
        System.Threading.Thread.Sleep(1000);
    }
    if (!printProcess.CloseMainWindow()) {
        printProcess.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
222
8
Gpt4D_Clone222_8.cs 1 22
Gpt4D_Clone222_8.cs 23 38
----------------------------------------

private void SendToPrinter () {
    ProcessStartInfo info = new ProcessStartInfo ();
    info.Verb = "print";
    info.FileName = @"c:\output.pdf";
    info.CreateNoWindow = true;
    info.WindowStyle = ProcessWindowStyle.Hidden;
    Process p = new Process ();
    p.StartInfo = info;
    p.Start ();
    long ticks = - 1;
    while (ticks != p.TotalProcessorTime.Ticks) {
        ticks = p.TotalProcessorTime.Ticks;
        Thread.Sleep (1000);
    }
    if (false == p.CloseMainWindow ())
        p.Kill ();
}
 
----------------------------------------

private void SendToPrinter() {
    var startInfo = new System.Diagnostics.ProcessStartInfo {
        Verb = "print",
        FileName = @"c:\output.pdf",
        CreateNoWindow = true,
        WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden
    };
    var process = System.Diagnostics.Process.Start(startInfo);
    while (process.TotalProcessorTime.Ticks != 0) {
        System.Threading.Thread.Sleep(1000);
    }
    if (process.CloseMainWindow() == false) {
        process.Kill();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
0
Gpt4D_Clone227_0.cs 1 23
Gpt4D_Clone227_0.cs 24 34
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    string userId = _userManager.GetUserId(User);
    var user = _userManager.Users.FirstOrDefault(u => u.Email == userId);
    if (user == null) return 0;
    var stakeholder = _context.Stakeholders.FirstOrDefault(s => s.IdentityId == user.Id);
    return stakeholder?.StakeholderId ?? 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
1
Gpt4D_Clone227_1.cs 1 23
Gpt4D_Clone227_1.cs 24 33
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    string currentUserId = _userManager.GetUserId(User);
    LinkedinUser user = _userManager.Users.FirstOrDefault(u => u.Email == currentUserId);
    Stakeholder stakeholder = _context.Stakeholders.FirstOrDefault(s => s.IdentityId == user.Id);
    return stakeholder?.StakeholderId ?? 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
2
Gpt4D_Clone227_2.cs 1 23
Gpt4D_Clone227_2.cs 24 32
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    string userId = _userManager.GetUserId(User);
    var stakeholderId = _userManager.Users.Where(u => u.Email == userId).Join(_context.Stakeholders, u => u.Id, s => s.IdentityId, (u, s) => s.StakeholderId).FirstOrDefault();
    return stakeholderId;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
3
Gpt4D_Clone227_3.cs 1 23
Gpt4D_Clone227_3.cs 24 36
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId() 
{
    var currentUser = User;
    long stakeholderId = _userManager.Users
    .Where(u => u.Email == currentUser.Email)
    .SelectMany(u => _context.Stakeholders, (u, s) => new { u, s })
    .Where(us => us.u.Id == us.s.IdentityId)
    .Select(us => us.s.StakeholderId)
    .FirstOrDefault();
    
    return stakeholderId;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
4
Gpt4D_Clone227_4.cs 1 23
Gpt4D_Clone227_4.cs 24 35
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId() 
{
    var currentUserId = _userManager.GetUserId(User);
    long stakeholderId = _context.Stakeholders
    .SingleOrDefault(s => s.IdentityId == _userManager.Users.Single(u => u.Email == currentUserId).Id)
    ?.StakeholderId ?? 0;
    
    return stakeholderId;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
5
Gpt4D_Clone227_5.cs 1 23
Gpt4D_Clone227_5.cs 24 32
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    var userId = _userManager.GetUserId(User);
    var users = _userManager.Users;
    return users.Where(u => u.Email == userId).SelectMany(u => _context.Stakeholders, (u, s) => new {u, s}).FirstOrDefault(us => us.u.Id == us.s.IdentityId)?.s.StakeholderId ?? 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
6
Gpt4D_Clone227_6.cs 1 23
Gpt4D_Clone227_6.cs 24 34
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    string userId = _userManager.GetUserId(User);
    return _context.Stakeholders
        .Where(s => s.IdentityId == _userManager.Users.FirstOrDefault(u => u.Email == userId)?.Id)
        .Select(s => s.StakeholderId)
        .FirstOrDefault();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
7
Gpt4D_Clone227_7.cs 1 23
Gpt4D_Clone227_7.cs 24 31
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    string userId = _userManager.GetUserId(User);
    return _context.Stakeholders.FirstOrDefault(s => s.IdentityId == userId)?.StakeholderId ?? 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
8
Gpt4D_Clone227_8.cs 1 23
Gpt4D_Clone227_8.cs 24 31
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    var currentUserId = _userManager.GetUserId(User);
    return _userManager.Users.FirstOrDefault(u => u.Email == currentUserId)?.Id ?? 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
227
9
Gpt4D_Clone227_9.cs 1 23
Gpt4D_Clone227_9.cs 24 38
----------------------------------------

private long GetStakeholderId () {
    string currentUserId = _userManager.GetUserId (User);
    long stakeholderId;
    var users = _userManager.Users;
    foreach (var user in users) {
        if (user.Email == currentUserId) {
            var idForStakeholder = user.Id;
            var stakeholders = _context.Stakeholders;
            foreach (var stakeholder in stakeholders) {
                if (stakeholder.IdentityId == idForStakeholder) {
                    stakeholderId = stakeholder.StakeholderId;
                    return stakeholderId;
                }
            }
            return 0;
        }
    }
    return 0;
}
----------------------------------------

private long GetStakeholderId()
{
    return _userManager.GetUserId(User).Email
        .Join(_userManager.Users, email => email, user => user.Email, (_, user) => user.Id)
        .Join(
            _context.Stakeholders,
            userId => userId,
            stakeholder => stakeholder.IdentityId,
            (_, stakeholder) => stakeholder.StakeholderId
        )
        .FirstOrDefault();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
10
Gpt4D_Clone230_10.cs 1 12
Gpt4D_Clone230_10.cs 13 32
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
		    CheckArrayIsNull(array);
		    PlcParameter [] ppArray = array as PlcParameter [];
		    CheckCopyToArray(ppArray, index);
		}
		void CheckArrayIsNull(Array array){
		    if (array == null)
			throw new ArgumentNullException ("array");
		}
		void CheckCopyToArray(PlcParameter [] ppArray, int index){
		    if (ppArray == null)
			throw new ArgumentException ();
		    else
			((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
11
Gpt4D_Clone230_11.cs 1 12
Gpt4D_Clone230_11.cs 13 32
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
		    CheckArrayIsNull(array);
		    PlcParameter [] ppArray = array as PlcParameter [];
		    CheckCopyToArray(ppArray, index);
		}
		void CheckArrayIsNull(Array array){
		    if (array == null)
			throw new ArgumentNullException ("array");
		}
		void CheckCopyToArray(PlcParameter [] ppArray, int index){
		    if (ppArray == null)
			throw new ArgumentException ();
		    else
			((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
2
Gpt4D_Clone230_2.cs 1 12
Gpt4D_Clone230_2.cs 13 24
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    var ppArray = array as PlcParameter [];
    if (ppArray != null)
        ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
    else 
        throw new ArgumentException ("array");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
3
Gpt4D_Clone230_3.cs 1 12
Gpt4D_Clone230_3.cs 13 23
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array is PlcParameter [] ppArray)
        ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
    else if (array == null)
        throw new ArgumentNullException ("array");
    else
        throw new ArgumentException ();
 }
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
5
Gpt4D_Clone230_5.cs 1 12
Gpt4D_Clone230_5.cs 13 23
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

 
void ICollection.CopyTo (Array array, int index) {
    if (array is null)
        throw new ArgumentNullException (nameof(array));
    if (array is PlcParameter [] ppArray)
         ((ICollection<PlcParameter>)this).CopyTo(ppArray, index);
    else
         throw new ArgumentException (nameof(array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
6
Gpt4D_Clone230_6.cs 1 12
Gpt4D_Clone230_6.cs 13 23
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array != null) {
        PlcParameter[] ppArray = array as PlcParameter [];
        ((ICollection < PlcParameter >) this)?.CopyTo (ppArray, index);
    } else {
        throw new ArgumentNullException ("array");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
230
9
Gpt4D_Clone230_9.cs 1 12
Gpt4D_Clone230_9.cs 13 32
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
    if (array == null)
        throw new ArgumentNullException ("array");
    PlcParameter [] ppArray = array as PlcParameter [];
    if (ppArray == null)
        throw new ArgumentException ();
    ((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

void ICollection.CopyTo (Array array, int index) {
		    CheckArrayIsNull(array);
		    PlcParameter [] ppArray = array as PlcParameter [];
		    CheckCopyToArray(ppArray, index);
		}
		void CheckArrayIsNull(Array array){
		    if (array == null)
			throw new ArgumentNullException ("array");
		}
		void CheckCopyToArray(PlcParameter [] ppArray, int index){
		    if (ppArray == null)
			throw new ArgumentException ();
		    else
			((ICollection < PlcParameter >) this).CopyTo (ppArray, index);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
4
Gpt4D_Clone23_4.cs 1 16
Gpt4D_Clone23_4.cs 17 30
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2?.IsDisposed == false) {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Select();
    } else {
        f2 = new Form2() { MdiParent = this };
        f2.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
5
Gpt4D_Clone23_5.cs 1 16
Gpt4D_Clone23_5.cs 17 28
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2 == null || f2.IsDisposed) {
        f2 = new Form2 ();
        f2.MdiParent = this;
        f2.Show ();
    } else {
        if (f2.WindowState == FormWindowState.Minimized) {
            f2.WindowState = FormWindowState.Normal;
        }
        f2.Activate ();
    }
}
----------------------------------------

private void newToolStripMenuItem_Click (object sender, EventArgs e) {
    if (f2?.IsDisposed != false) {
        f2 = new Form2 { MdiParent = this };
        f2.Show();
    } else {
        f2.WindowState = f2.WindowState == FormWindowState.Minimized ? FormWindowState.Normal : f2.WindowState;
        f2.Focus();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
0
Gpt4D_Clone242_0.cs 1 27
Gpt4D_Clone242_0.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch (Exception ex)
    {
        Console.Error.WriteLine(ex);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
1
Gpt4D_Clone242_1.cs 1 27
Gpt4D_Clone242_1.cs 28 53
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
	    try
	    {
		ExecuteAction(CallAndThrow);
	    }
	    catch (Exception ex)
	    {
		Console.WriteLine(ex.ToString());
	    }
	}
	static void ExecuteAction(Action action)
	{
	    try
	    {
		action();
	    }
	    catch (Exception ex)
	    {
		throw new Exception("An error occurred", ex);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
10
Gpt4D_Clone242_10.cs 1 27
Gpt4D_Clone242_10.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch
    {
        // swallow exception
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
2
Gpt4D_Clone242_2.cs 1 27
Gpt4D_Clone242_2.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch (Exception ex)
    {
        throw new ApplicationException("An error occurred", ex.InnerException);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
3
Gpt4D_Clone242_3.cs 1 27
Gpt4D_Clone242_3.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch (Exception ex)
    {
         Console.WriteLine(ex.Message);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
4
Gpt4D_Clone242_4.cs 1 27
Gpt4D_Clone242_4.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch (Exception ex)
    {
        Console.WriteLine($"****** Exception ******\n{ex}\n");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
5
Gpt4D_Clone242_5.cs 1 27
Gpt4D_Clone242_5.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch (Exception ex)
    {
        Debug.WriteLine(ex.ToString());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
6
Gpt4D_Clone242_6.cs 1 27
Gpt4D_Clone242_6.cs 28 49
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    try
		    {
			CallAndThrow();
		    }
		    catch (Exception ex)
		    {
			LogException(ex);
		    }
		}
		static void LogException(Exception ex)
		{
		    Console.WriteLine(ex.Message);
		    Console.WriteLine(ex.InnerException?.Message);
		    Console.WriteLine(ex.StackTrace);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
7
Gpt4D_Clone242_7.cs 1 27
Gpt4D_Clone242_7.cs 28 53
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
	    try
	    {
		ExecuteAction(CallAndThrow);
	    }
	    catch (Exception ex)
	    {
		Console.WriteLine(ex.ToString());
	    }
	}
	static void ExecuteAction(Action action)
	{
	    try
	    {
		action();
	    }
	    catch (Exception ex)
	    {
		throw new Exception("An error occurred", ex);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
8
Gpt4D_Clone242_8.cs 1 27
Gpt4D_Clone242_8.cs 28 42
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    try
    {
        CallAndThrow();
    }
    catch 
    { 
        throw;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
9
Gpt4D_Clone242_9.cs 1 27
Gpt4D_Clone242_9.cs 28 49
----------------------------------------

static void Main (string [] args) {
    try {
        try {
            try {
                CallAndThrow ();
            }
            catch (Exception ex) {
                var dispatchException = ExceptionDispatchInfo.Capture (ex);
                dispatchException.Throw ();
            }
        }
        catch (Exception ex) {
            var dispatchException = ExceptionDispatchInfo.Capture (ex);
            dispatchException.Throw ();
        }
    }
    catch (Exception ex) {
        Console.WriteLine (ex.Message);
        Console.WriteLine (ex.InnerException.Message);
        Console.WriteLine (ex.StackTrace);
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    try
		    {
			CallAndThrow();
		    }
		    catch (Exception ex)
		    {
			LogException(ex);
		    }
		}
		static void LogException(Exception ex)
		{
		    Console.WriteLine(ex.Message);
		    Console.WriteLine(ex.InnerException?.Message);
		    Console.WriteLine(ex.StackTrace);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
1
Gpt4D_Clone243_1.cs 1 13
Gpt4D_Clone243_1.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    RegisterHit(shot);
    ResetMissedShots();
    UpdateHitEnd(shot);
    if (HasNoHitStart())
        UpdateHitStart(shot);
    if (sunk)
        PurgeTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
3
Gpt4D_Clone243_3.cs 1 13
Gpt4D_Clone243_3.cs 14 23
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    AddHitShot(shot);
    ResetMissCount();
    SetEndPoint(1, shot);
    if (!HasStartPoint())
        SetStartPoint(shot);
    if (sunk)
        ResetTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
4
Gpt4D_Clone243_4.cs 1 13
Gpt4D_Clone243_4.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    StoreHitShot(shot);
    ResetMissTracker();
    UpdateShotEnd(shot);
    if (HasNullShotStart())
        UpdateShotStart(shot);
    if (sunk)
        ReleaseTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
8
Gpt4D_Clone243_8.cs 1 13
Gpt4D_Clone243_8.cs 14 25
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

 
public void ShotHit (Point shot, bool sunk) {
    InsertHit(shot);
    ClearMisses();
    SetHitEnd(shot);
    if (NoHitStart())
        SetHitStart(shot);
    if (sunk)
        CleanTarget();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
0
Gpt4D_Clone244_0.cs 1 13
Gpt4D_Clone244_0.cs 14 28
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    if(!sunk) MissCount = 0;
    HitShots.AddLast(shot);
    if(sunk) {
        NullOutTarget();
        if (EndPoints[0] == null) { 
            EndPoints[0] = shot;
        }
    } else {
        EndPoints[1] = shot;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
1
Gpt4D_Clone244_1.cs 1 13
Gpt4D_Clone244_1.cs 14 26
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit(Point shot, bool sunk) {
    HitShots.AddLast(shot);
    if (EndPoints[0] == null) { EndPoints[0] = shot; } 
    if (sunk) {
        NullOutTarget();
    } else {
        MissCount = 0;
    }
    EndPoints[1] = shot;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
4
Gpt4D_Clone244_4.cs 1 13
Gpt4D_Clone244_4.cs 14 21
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    HitShots.AddLast (shot);
    MissCount = 0;
    EndPoints [1] = shot;
    if (EndPoints [0] == null)
        EndPoints [0] = shot;
    if (sunk)
        NullOutTarget ();
}
----------------------------------------

public void ShotHit (Point shot, bool sunk) {
    if (HitShots != null) { HitShots.AddLast(shot); } 
    MissCount = sunk ? MissCount : 0; 
    EndPoints[1] = (EndPoints[1] != null) ? EndPoints[1] : shot; 
    if (EndPoints[0] == null) { EndPoints[0] = shot; }
    if (sunk) { NullOutTarget(); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
0
Gpt4D_Clone245_0.cs 1 27
Gpt4D_Clone245_0.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p;
    if(HasAttackVector()) {
        p = ExtendShot ();
    } 
    else {
        p = EvaluateBoard ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
1
Gpt4D_Clone245_1.cs 1 27
Gpt4D_Clone245_1.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count > 0) {
        p = ExtendShot ();
    }
    else {
        p = ProcessTargets ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
2
Gpt4D_Clone245_2.cs 1 27
Gpt4D_Clone245_2.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point shot;
    if (IsAttackVectorAlive()) {
        shot = ContinueFight ();
    }
    else {
        shot = NewFight ();
    }
    return shot;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
3
Gpt4D_Clone245_3.cs 1 27
Gpt4D_Clone245_3.cs 28 37
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Any ()) {
        p = ExtendShot ();
    } else {
        p = GetWeightedShot ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
4
Gpt4D_Clone245_4.cs 1 27
Gpt4D_Clone245_4.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point shot = new Point ();
    if (TargetLockedOn()) {
        shot = ContinueShot ();
    }
    else {
        shot = PickNewTarget ();
    }
    return shot;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
5
Gpt4D_Clone245_5.cs 1 27
Gpt4D_Clone245_5.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (HasAttackVector()) {
        p = ExtendShot ();
    }
    else {
        p = ChooseNewShot ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
6
Gpt4D_Clone245_6.cs 1 27
Gpt4D_Clone245_6.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p;
    if (attackVector.Count > 0) {
        p = ExtendShot ();
    }
    else {
        p = NewShot ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
7
Gpt4D_Clone245_7.cs 1 27
Gpt4D_Clone245_7.cs 28 40
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count > 0) {
        p = ContinueAttack ();
    }
    else {
        p = DetermineShot ();
    }
    return p;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
8
Gpt4D_Clone245_8.cs 1 27
Gpt4D_Clone245_8.cs 28 36
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    if (AttackInProgress()) {
        return ExtendShot ();
    }
    return ChooseRandomShot ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
9
Gpt4D_Clone245_9.cs 1 27
Gpt4D_Clone245_9.cs 28 36
----------------------------------------

public Point GetShot () {
    Point p = new Point ();
    if (attackVector.Count () > 0) {
        p = ExtendShot ();
        return p;
    }
    Board potential = new Board (size);
    for (p.Y = 0; p.Y < size.Height; ++ p.Y) {
        for (p.X = 0; p.X < size.Width; ++ p.X) {
            if (shotBoard.ShotAt (p)) {
                potential [p] = 0;
                continue;
            }
            foreach (HunterBoard b in targetBoards) {
                potential [p] += b.GetWeightAt (p);
            }
        }
    }
    Point shot;
    shot = potential.GetWeightedRandom (rand.NextDouble ());
    shotBoard [shot] = Shot.Unresolved;
    return shot;
}
----------------------------------------

public Point GetShot () {
    if (AttackVector()) {
        return ExtendShot ();
    }
    return CalculateShot ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
247
0
Gpt4D_Clone247_0.cs 1 36
Gpt4D_Clone247_0.cs 37 57
----------------------------------------

public override String ToString () {
    String output = "";
    String horzDiv = "   +----+----+----+----+----+----+----+----+----+----+\n";
    String disp;
    int x, y;
    output += "      A    B    C    D    E    F    G    H    I    J    \n" + horzDiv;
    for (y = 0; y < size.Height; ++ y) {
        output += String.Format ("{0} ", y + 1).PadLeft (3);
        for (x = 0; x < size.Width; ++ x) {
            switch (grid [x, y]) {
                case (int) Shot.None :
                    disp = "";
                    break;
                case (int) Shot.Hit :
                    disp = "#";
                    break;
                case (int) Shot.Miss :
                    disp = ".";
                    break;
                case (int) Shot.Unresolved :
                    disp = "?";
                    break;
                default :
                    disp = "!";
                    break;
            }
            output += String.Format ("| {0} ", disp.PadLeft (2));
        }
        output += "|\n" + horzDiv;
    }
    return output;
}
----------------------------------------

public override String ToString () {
	    StringBuilder output = new StringBuilder();
	    var horzDiv = new String('-', 48);
	    var disp = new Dictionary<int, string> {
		{(int) Shot.None, "" },
		{(int) Shot.Hit, "#" },
		{(int) Shot.Miss, "." },
		{(int) Shot.Unresolved, "?" },
	    };
	    string row;
	    for (var y = 0; y < size.Height; y++) {
		row = $"{y + 1,3}:";
		for (var x = 0; x < size.Width; x++) {
		    row += $"| {disp.ContainsKey(grid[x, y]) ? disp[grid[x, y]] : "!"} ";
		}
		output.AppendLine($"{row}|\n{horzDiv}");
	    }
	    return output.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
0
Gpt4D_Clone254_0.cs 1 16
Gpt4D_Clone254_0.cs 17 36
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string testStr = "just a little test string.";
    Test1(testStr);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var sw = new Stopwatch();
    sw.Start();
    int count = 0;
    do
    {
        Test1(testStr);
        count++;
    }while(count < 10000);
    sw.Stop();
    Console.WriteLine($"Elapsed = {sw.Elapsed}");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
2
Gpt4D_Clone254_2.cs 1 16
Gpt4D_Clone254_2.cs 17 36
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string str = "just a little test string.";
    Test1(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    using (var timer = new Stopwatch())
    {
        timer.Start();
        for (int i = 0; i < 10000; i++)
        {
            Test1(str);
        }
        timer.Stop();
        Console.WriteLine(timer.Elapsed.ToString());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
3
Gpt4D_Clone254_3.cs 1 16
Gpt4D_Clone254_3.cs 17 38
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string testString = "just a little test string.";
    var timer1 = Stopwatch.StartNew();
    Test1(testString);
    timer1.Stop();
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var timer2 = Stopwatch.StartNew();
    for (int i = 0; i < 10000; ++i)
    {
        Test1(testString);
    }
    timer2.Stop();
    Console.WriteLine(timer1.Elapsed + "\n" + timer2.Elapsed);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
4
Gpt4D_Clone254_4.cs 1 16
Gpt4D_Clone254_4.cs 17 32
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    const string str = "just a little test string.";
    Test1(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var timer = Stopwatch.StartNew();
    Parallel.For(0, 10000, i => {
        Test1(str);
    });
    timer.Stop();
    Console.WriteLine(timer.Elapsed.TotalMilliseconds);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
5
Gpt4D_Clone254_5.cs 1 16
Gpt4D_Clone254_5.cs 17 34
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string str = "just a little test string.";
    Test1(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var timer = Stopwatch.StartNew();
    for (int i = 0; i < 10000; i++)
    {
        Test1(str);
        Thread.Sleep(1);
    }
    timer.Stop();
    Console.WriteLine(timer.Elapsed.TotalMilliseconds);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
7
Gpt4D_Clone254_7.cs 1 16
Gpt4D_Clone254_7.cs 17 30
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string str = "just a little test string.";
    Test1(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    var timer = Stopwatch.StartNew();
    new List<int>(Enumerable.Range(1, 10000)).ForEach(i => Test1(str));
    timer.Stop();
    Console.WriteLine(timer.ElapsedTicks);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
9
Gpt4D_Clone254_9.cs 1 16
Gpt4D_Clone254_9.cs 17 28
----------------------------------------

static void Main (string [] args) {
    Test1 ("just a little test string.");
    GC.Collect ();
    GC.WaitForPendingFinalizers ();
    Stopwatch timer = new Stopwatch ();
    timer.Start ();
    for (int i = 0; i < 10000; i ++) {
        Test1 ("just a little test string.");
    }
    timer.Stop ();
    Console.WriteLine (timer.Elapsed);
}
----------------------------------------

static void Main(string[] args)
{
    string str = "just a little test string.";
    Test1(str);
    GC.Collect();
    GC.WaitForPendingFinalizers();
    Stopwatch timer = Stopwatch.StartNew();
    Enumerable.Range(0, 10000).ToList().ForEach(x => Test1(str));
    timer.Stop();
    Console.WriteLine(timer.Elapsed);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
0
Gpt4D_Clone257_0.cs 1 23
Gpt4D_Clone257_0.cs 24 52
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable LoadDataFromExcel(string filename)
{
    using (var pck = new ExcelPackage())
    {
        using (var stream = File.OpenRead(filename))
        {
            pck.Load(stream);
        }
        var ws = pck.Workbook.Worksheets.First();
        DataTable tbl = new DataTable();
        foreach (var firstRowCell in ws.Cells[1, 1, 1, ws.Dimension.End.Column])
        {
            tbl.Columns.Add(hasHeader ? firstRowCell.Text : string.Format("Column {0}", firstRowCell.Start.Column));
        }
        var startRow = hasHeader ? 2 : 1;
        for (int rowNum = startRow; rowNum <= ws.Dimension.End.Row; rowNum++)
        {
            var wsRow = ws.Cells[rowNum, 1, rowNum, ws.Dimension.End.Column];
            DataRow row = tbl.NewRow();
            foreach (var cell in wsRow)
            {
                row[cell.Start.Column - 1] = cell.Text;
            }
            tbl.Rows.Add(row);
        }
        return tbl;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
1
Gpt4D_Clone257_1.cs 1 23
Gpt4D_Clone257_1.cs 24 42
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    var fileNameExtension = Path.GetExtension(fileName);
    var connectionString = string.Empty;
    if (fileNameExtension == ".xls")
        connectionString = $"Provider=Microsoft.Jet.OLEDB.4.0;Data Source={fileName};Extended Properties=Excel 8.0";
    else if (fileNameExtension == ".xlsx")
        connectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={fileName};Extended Properties=Excel 12.0";
    using (var conn = new OleDbConnection(connectionString)){
        using(var cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn))
        {
            using(var adapter = new OleDbDataAdapter(cmd)){
                DataTable dt = new DataTable();
                adapter.Fill(dt);
                return dt;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
2
Gpt4D_Clone257_2.cs 1 23
Gpt4D_Clone257_2.cs 24 39
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = $"Provider=Microsoft.Jet.OLEDB.4.0;Data source={fileName}; Extended Properties=Excel 8.0;";
    using (var conn = new OleDbConnection (connectionString))
    {
        using(var cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn))
        {
            using(var adapter = new OleDbDataAdapter(cmd))
            {
                DataSet ds = new DataSet();
                adapter.Fill(ds);
                return ds.Tables[0];
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
3
Gpt4D_Clone257_3.cs 1 23
Gpt4D_Clone257_3.cs 24 38
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable(string fileName)
{
    var connectionString = Path.GetExtension(fileName) == ".xls" ? $"Provider=Microsoft.Jet.OLEDB.4.0;Data source={fileName}; Extended Properties=Excel 8.0;" : $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={fileName}; Extended Properties=Excel 12.0;";
    using (var conn = new OleDbConnection(connectionString))
    {
        var dataTable = new DataTable();
        conn.Open();
        var query = "SELECT * FROM [Sheet1$]";
        var adapter = new OleDbDataAdapter(query, conn);
        adapter.Fill(dataTable);
        return dataTable;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
4
Gpt4D_Clone257_4.cs 1 23
Gpt4D_Clone257_4.cs 24 34
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = $"Provider=Microsoft.Jet.OLEDB.4.0;Data source={fileName}; Extended Properties=Excel 8.0;";
    using (var conn = new OleDbConnection (connectionString)){
        conn.Open();
        var cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn);
        var dt = new DataTable();
        dt.Load(cmd.ExecuteReader());
        return dt;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
5
Gpt4D_Clone257_5.cs 1 23
Gpt4D_Clone257_5.cs 24 34
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable (string fileName){
    string connectionString = $"Provider=Microsoft.Jet.OLEDB.4.0;Data source={fileName}; Extended Properties=Excel 8.0;";
    var conn = new OleDbConnection (connectionString);
    var cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn);
    var adapter = new OleDbDataAdapter (cmd);
    var dt = new DataTable ();
    conn.Open();
    adapter.Fill (dt);
    return dt;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
6
Gpt4D_Clone257_6.cs 1 23
Gpt4D_Clone257_6.cs 24 35
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelData(string file)
{
    var connectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={file};Extended Properties='Excel 12.0 Xml;HDR=YES;'";
    var query = "SELECT * FROM [Sheet1$]";
    using (var adapter = new OleDbDataAdapter(query, connectionString))
    {
        var dataSet = new DataSet();
        adapter.Fill(dataSet);
        return dataSet.Tables[0];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
7
Gpt4D_Clone257_7.cs 1 23
Gpt4D_Clone257_7.cs 24 32
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable(string filePath) {
    OleDbConnection connection = new OleDbConnection($"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={filePath};Extended Properties=Excel 8.0;");
    connection.Open();
    OleDbDataAdapter adapter = new OleDbDataAdapter("select * from [Sheet1$]", connection);
    DataTable dtExcel = new DataTable();
    adapter.Fill(dtExcel);
    return dtExcel;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
257
8
Gpt4D_Clone257_8.cs 1 23
Gpt4D_Clone257_8.cs 24 31
----------------------------------------

public DataTable GetExcelDataTable (string fileName) {
    string connectionString = Path.GetExtension (fileName) == "xls" ? string.Format ("Provider=Microsoft.Jet.OLEDB.4.0;Data source={0}; Extended Properties=Excel 8.0;", fileName) : string.Format ("Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties=Excel 12.0;", fileName);
    var conn = new OleDbConnection (connectionString);
    using (var adapter = new OleDbDataAdapter ("SELECT * FROM [Sheet1$]", conn))
    {
        var dt = new DataTable ();
        int recordRead = 0;
        int recordCur = 0;
        int recordStep = 6789;
        do
            {
                recordRead = adapter.Fill (recordCur, recordStep, dt);
                recordCur += recordRead;
            } while (recordRead > 0);
        conn.Close ();
        conn.Dispose ();
        adapter.Dispose ();
        return dt;
    }}
----------------------------------------

public DataTable GetExcelDataTable(string file)
{
    FileStream stream = File.Open(file, FileMode.Open, FileAccess.Read);
    IExcelDataReader excelReader = ExcelReaderFactory.CreateOpenXmlReader(stream);
    DataSet result = excelReader.AsDataSet();
    return result.Tables[0];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
0
Gpt4D_Clone259_0.cs 1 24
Gpt4D_Clone259_0.cs 25 30
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    StringBuilder sb = new StringBuilder();
    sb.Append(a);
    return sb.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
1
Gpt4D_Clone259_1.cs 1 24
Gpt4D_Clone259_1.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = string.Concat(a);
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
2
Gpt4D_Clone259_2.cs 1 24
Gpt4D_Clone259_2.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = String.Intern(a.ToString());
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
3
Gpt4D_Clone259_3.cs 1 24
Gpt4D_Clone259_3.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = a + "";
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
4
Gpt4D_Clone259_4.cs 1 24
Gpt4D_Clone259_4.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = new[] { a }.ToString();
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
5
Gpt4D_Clone259_5.cs 1 24
Gpt4D_Clone259_5.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = new StringBuilder(a.ToString()).ToString();
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
6
Gpt4D_Clone259_6.cs 1 24
Gpt4D_Clone259_6.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = String.Format("{0}", a);
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
7
Gpt4D_Clone259_7.cs 1 24
Gpt4D_Clone259_7.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = $"{a}";
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
8
Gpt4D_Clone259_8.cs 1 24
Gpt4D_Clone259_8.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

public string IntToString(int a) {
    var s = Convert.ToString(a);
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
9
Gpt4D_Clone259_9.cs 1 24
Gpt4D_Clone259_9.cs 25 29
----------------------------------------

public string IntToString (int a) {
    if (a == 0)
        return "0";
    if (a == int.MinValue)
        return "-2147483648";
    var isNegative = false;
    if (a < 0) {
        a = - a;
        isNegative = true;
    }
    var stack = new Stack < char > ();
    while (a != 0) {
        var c = a % 10 + '0';
        stack.Push ((char) c);
        a /= 10;
    }
    if (isNegative)
        stack.Push ('-');
    return new string (stack.ToArray ());
}
----------------------------------------

 
public string IntToString(int a) {
    return a.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
7
Gpt4D_Clone263_7.cs 1 13
Gpt4D_Clone263_7.cs 14 20
----------------------------------------

public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    if (p == null)
        return null;
    if (bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value)) {
        return p;
    }
    return null;
}
----------------------------------------

 
public PointF ? Intersect (LineSegment other) {
    var p = line.Intersect (other.line);
    return p != null && bindingRectangle.Contains (p.Value) && other.bindingRectangle.Contains (p.Value) ? p : null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
265
0
Gpt4D_Clone265_0.cs 1 28
Gpt4D_Clone265_0.cs 29 28
----------------------------------------

public PointF ? Intersect (LineEquation other) {
    if (isVertical && other.isVertical)
        return null;
    if (a == other.a)
        return null;
    if (isVertical)
        return other.Intersect (xConstForVertical);
    if (other.isVertical)
        return Intersect (other.xConstForVertical);
    var x = (b - other.b) / (other.a - a);
    return Intersect (x);
}
public PointF ? CheckIntersect (LineEquation other) {
    if (this.isVertical && other.isVertical)
        return null;
    if (this.a == other.a)
        return null;
    if (this.isVertical)
        return other.CheckIntersect (this.xConstForVertical);
    if (other.isVertical)
        return this.CheckIntersect (other.xConstForVertical);
    var x = (this.b - other.b) / (other.a - this.a);
    return CheckIntersect (x);
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
0
Gpt4D_Clone266_0.cs 1 19
Gpt4D_Clone266_0.cs 20 41
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    string result = "No UA Found";
    if(hr != null)
    {
        string originalUserAgent = hr.ServerVariables["X-OperaMini-Phone-UA"];
        string anotherUserAgent = hr.ServerVariables["X-Device-User-Agent"];
        if(!string.IsNullOrEmpty(originalUserAgent))
            result = "OPERAMINI " + originalUserAgent;
        else if(!string.IsNullOrEmpty(anotherUserAgent))
            result = "NOVARRA " + anotherUserAgent;
        else
            result = hr.UserAgent.ToString();
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
1
Gpt4D_Clone266_1.cs 1 19
Gpt4D_Clone266_1.cs 20 37
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    if(hr is null)
        return "No UA Found";
    var originalBrowser = hr.ServerVariables["X-OperaMini-Phone-UA"];
    var anotherBrowser = hr.ServerVariables["X-Device-User-Agent"];
    if(!string.IsNullOrEmpty(originalBrowser))
        return $"OPERAMINI {originalBrowser}";
    if(!string.IsNullOrEmpty(anotherBrowser))
        return $"NOVARRA {anotherBrowser}";
    return hr.UserAgent?.ToString() ?? "No UA Found";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
2
Gpt4D_Clone266_2.cs 1 19
Gpt4D_Clone266_2.cs 20 37
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    if(hr is null)
        return "No UA Found";
    string ua = hr.ServerVariables["X-OperaMini-Phone-UA"];
    if(!string.IsNullOrEmpty(ua))
        return "OPERAMINI " + ua;
    ua = hr.ServerVariables["X-Device-User-Agent"];
    if(!string.IsNullOrEmpty(ua))
        return "NOVARRA " + ua;
    return hr.UserAgent?.ToString() ?? "No UA Found";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
3
Gpt4D_Clone266_3.cs 1 19
Gpt4D_Clone266_3.cs 20 35
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    try 
    {
        if(!string.IsNullOrEmpty(hr.ServerVariables["X-OperaMini-Phone-UA"]))
            return "OPERAMINI " + hr.ServerVariables["X-OperaMini-Phone-UA"];
        if(!string.IsNullOrEmpty(hr.ServerVariables["X-Device-User-Agent"]))
            return "NOVARRA " + hr.ServerVariables["X-Device-User-Agent"];
        return hr.UserAgent?.ToString() ?? "No UA Found";
    }
    catch 
    {
        return "No UA Found";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
5
Gpt4D_Clone266_5.cs 1 19
Gpt4D_Clone266_5.cs 20 35
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    var originalBrowser = hr?.ServerVariables["X-OperaMini-Phone-UA"];
    var alternateBrowser = hr?.ServerVariables["X-Device-User-Agent"];
    if(string.IsNullOrWhiteSpace(originalBrowser) == false)
        return $"OPERAMINI {originalBrowser}";
    if(string.IsNullOrWhiteSpace(alternateBrowser) == false)
        return $"NOVARRA {alternateBrowser}";
    return string.IsNullOrWhiteSpace(hr?.UserAgent) == false ? hr.UserAgent.ToString() : "No UA Found";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
6
Gpt4D_Clone266_6.cs 1 19
Gpt4D_Clone266_6.cs 20 37
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    var agent = new string[] 
    {
        hr?.ServerVariables["X-OperaMini-Phone-UA"],
        hr?.ServerVariables["X-Device-User-Agent"]
    };
    if(!string.IsNullOrEmpty(agent[0]))
        return $"OPERAMINI {agent[0]}";
    if(!string.IsNullOrEmpty(agent[1]))
        return $"NOVARRA {agent[1]}";
    return hr?.UserAgent?.ToString() ?? "No UA Found";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
7
Gpt4D_Clone266_7.cs 1 19
Gpt4D_Clone266_7.cs 20 35
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    try
    {
        return !string.IsNullOrEmpty(hr.ServerVariables["X-OperaMini-Phone-UA"]) ? "OPERAMINI " + hr.ServerVariables["X-OperaMini-Phone-UA"] : 
            !string.IsNullOrEmpty(hr.ServerVariables["X-Device-User-Agent"]) ? "NOVARRA " + hr.ServerVariables["X-Device-User-Agent"] : 
            hr.UserAgent.ToString();
    }
    catch
    {
        return "No UA Found";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
8
Gpt4D_Clone266_8.cs 1 19
Gpt4D_Clone266_8.cs 20 36
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    try
    {
        return hr == null ? "No UA Found" :
            !string.IsNullOrEmpty(hr.ServerVariables["X-OperaMini-Phone-UA"]) ? $"OPERAMINI {hr.ServerVariables["X-OperaMini-Phone-UA"]}" :
            !string.IsNullOrEmpty(hr.ServerVariables["X-Device-User-Agent"]) ? $"NOVARRA {hr.ServerVariables["X-Device-User-Agent"]}" :
            hr.UserAgent.ToString();
    }
    catch
    {
        return "No UA Found";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
9
Gpt4D_Clone266_9.cs 1 19
Gpt4D_Clone266_9.cs 20 33
----------------------------------------

public static string GetUa (HttpRequest hr) {
    try {
        string originalBrowser = hr.ServerVariables ["X-OperaMini-Phone-UA"];
        string anotherOriginalBrowser = hr.ServerVariables ["X-Device-User-Agent"];
        if (! String.IsNullOrEmpty (originalBrowser))
            return "OPERAMINI " + originalBrowser;
        else if (! String.IsNullOrEmpty (anotherOriginalBrowser))
            return "NOVARRA " + anotherOriginalBrowser;
        else
            return hr.UserAgent.ToString ();
    }
    catch {
        return "No UA Found";
    }
}
----------------------------------------

public static string GetUa(HttpRequest hr)
{
    if(hr is null)
        return "No UA Found";
    return
        !String.IsNullOrEmpty(hr.ServerVariables["X-OperaMini-Phone-UA"]) ? "OPERAMINI " + hr.ServerVariables["X-OperaMini-Phone-UA"] :
        (!String.IsNullOrEmpty(hr.ServerVariables["X-Device-User-Agent"])) ? "NOVARRA " + hr.ServerVariables["X-Device-User-Agent"] :
        (!String.IsNullOrEmpty(hr.UserAgent)) ? hr.UserAgent.ToString() :
        "No UA Found";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
0
Gpt4D_Clone267_0.cs 1 17
Gpt4D_Clone267_0.cs 18 28
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    string ans = proto switch
    {
        ProtocolType.Tcp => ((TcpServices)port).ToString(),
        ProtocolType.Udp => ((UdpServices)port).ToString(),
        _ => port.ToString()
    };
    return $"{ans}({port})";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
1
Gpt4D_Clone267_1.cs 1 17
Gpt4D_Clone267_1.cs 18 26
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    string ans = "";
    if(proto== ProtocolType.Tcp) ans += (TcpServices)port;
    else ans += (UdpServices)port;
    ans += "(" + port + ")";
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
2
Gpt4D_Clone267_2.cs 1 17
Gpt4D_Clone267_2.cs 18 23
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    var service = proto == ProtocolType.Tcp ? (TcpServices)port : (UdpServices)port;
    return string.Join("", service, "(", port, ")");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
3
Gpt4D_Clone267_3.cs 1 17
Gpt4D_Clone267_3.cs 18 24
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    string result = proto == ProtocolType.Tcp ? $"{(TcpServices)port}({port})" : $"{(UdpServices)port}({port})";
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
4
Gpt4D_Clone267_4.cs 1 17
Gpt4D_Clone267_4.cs 18 23
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    string ans = $"{(proto == ProtocolType.Tcp ? (TcpServices)port : (UdpServices)port)}({port})";
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
5
Gpt4D_Clone267_5.cs 1 17
Gpt4D_Clone267_5.cs 18 23
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {    
    var ans= proto == ProtocolType.Tcp ? ((TcpServices)port).ToString() : ((UdpServices)port).ToString();
    return $"{ans}({port})";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
6
Gpt4D_Clone267_6.cs 1 17
Gpt4D_Clone267_6.cs 18 24
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    return string.Format("{0}({1})", 
        proto == ProtocolType.Tcp ? (TcpServices)port : (UdpServices)port,
        port);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
7
Gpt4D_Clone267_7.cs 1 17
Gpt4D_Clone267_7.cs 18 30
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
	    return proto == ProtocolType.Tcp ? TcpServicesFunction(port) : UdpServicesFunction(port);
	}
	private static string TcpServicesFunction(short port) {
	    return $"{(TcpServices)port}({port})";
	}
	private static string UdpServicesFunction(short port) {
	    return $"{(UdpServices)port}({port})";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
8
Gpt4D_Clone267_8.cs 1 17
Gpt4D_Clone267_8.cs 18 24
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {    
    return String.Concat(
        proto == ProtocolType.Tcp ? ((TcpServices)port).ToString() : ((UdpServices)port).ToString(),
        "(", port, ")");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
267
9
Gpt4D_Clone267_9.cs 1 17
Gpt4D_Clone267_9.cs 18 22
----------------------------------------

public static string GetServByPort (short port, ProtocolType proto) {
    StringBuilder ans = new StringBuilder ();
    switch (proto) {
        case ProtocolType.Tcp :
            ans.Append ((TcpServices) port);
            break;
        case ProtocolType.Udp :
            ans.Append ((UdpServices) port);
            break;
    }
    ans.Append ("(").Append (port).Append (")");
    return ans.ToString ();
}
----------------------------------------

  
public static string GetServByPort (short port, ProtocolType proto) { 
    return proto==ProtocolType.Tcp ? $@"{(TcpServices)port}({port})" : $@"{(UdpServices)port}({port})";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
0
Gpt4D_Clone269_0.cs 1 17
Gpt4D_Clone269_0.cs 18 32
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    const int WM_PAINT = 0xf;
    if (m.Msg == WM_PAINT)
    {
        g = Graphics.FromHwnd(Handle);
        Rectangle r = GetWndRect(Handle); 
        g.DrawRectangle(p, r);
        Debug.WriteLine($"WM_PAINT: {r.ToString()}");
    }
    Debug.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
1
Gpt4D_Clone269_1.cs 1 17
Gpt4D_Clone269_1.cs 18 32
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0xf)
    {
        var g = Graphics.FromHwnd(Handle);
        var rect=GetWndRect(Handle);
        using (Pen p = new Pen(Color.Red))
            g.DrawRectangle(p, rect.Left, rect.Top, rect.Width, rect.Height);
            Debug.Print("WM_PAINT: " + rect.ToString());
    }
    Debug.Print("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
2
Gpt4D_Clone269_2.cs 1 17
Gpt4D_Clone269_2.cs 18 30
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0xf)
    {
        g = Graphics.FromHwnd(base.Handle);
        Rectangle r = new Rectangle(0, 0, base.Width, base.Height);
        g.DrawRectangle(p, r);
        Debug.WriteLine($"WM_PAINT: {r}");
    }
    Debug.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
3
Gpt4D_Clone269_3.cs 1 17
Gpt4D_Clone269_3.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m) 
{
    if (m.Msg == 15)
    {
        var g = Graphics.FromHwnd(Handle);
        var r = new Rectangle(GetWndRect(Handle));
        g.DrawRectangle(p, r);
        Console.Out.WriteLine($"WM_PAINT: {r}");
    }
    Console.Out.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
4
Gpt4D_Clone269_4.cs 1 17
Gpt4D_Clone269_4.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0xf)
    {
        g = Graphics.FromHwnd(this.Handle);
        Rectangle r = GetWndRect(this.Handle); 
        g.DrawRectangle(new Pen(Color.Black), r);
        Trace.TraceInformation("WM_PAINT: {0}", r);
    }
    Trace.TraceInformation("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
6
Gpt4D_Clone269_6.cs 1 17
Gpt4D_Clone269_6.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m) 
{
    if (m.Msg == 15)
    {
        g = Graphics.FromHwnd(Handle);
        Rectangle r = GetWndRect(Handle); 
        g.DrawRectangle(p, r);
        Console.WriteLine($"WM_PAINT: {r}");
    }
    Console.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
7
Gpt4D_Clone269_7.cs 1 17
Gpt4D_Clone269_7.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m)
{
    if (m.Msg == 0xf)
    {
        var g = Graphics.FromHwnd(Handle);
        var r = new Rectangle(GetWndRect(Handle));
        g.DrawRectangle(p, r);
        Console.WriteLine("WM_PAINT: " + r);
    }
    Console.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
269
8
Gpt4D_Clone269_8.cs 1 17
Gpt4D_Clone269_8.cs 18 31
----------------------------------------

protected override void WndProc (ref Message m) {
    switch (m.Msg) {
        case 0xf :
            {
                g = Graphics.FromHwnd (this.Handle);
                Rectangle r = GetWndRect (this.Handle);
                g.DrawRectangle (p, r);
                Trace.WriteLine ("WM_PAINT: " + r.ToString ());
            } break;
    }
    Trace.WriteLine ("handled");
    base.WndProc (ref m);
}
----------------------------------------

protected override void WndProc(ref Message m) 
{
    if (m.Msg == 0xf)
    {
        g = Graphics.FromHwnd(this.Handle);
        Rectangle r = Rectangle.FromLTRB(0,0, this.Width, this.Height);
        g.DrawRectangle(p, r);
        Trace.WriteLine($"WM_PAINT: {r.ToString()}");
    }
    Trace.WriteLine("handled");
    base.WndProc(ref m);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
0
Gpt4D_Clone26_0.cs 1 29
Gpt4D_Clone26_0.cs 30 55
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    Console.Write("Enter a number: ");
    int n = int.Parse(Console.ReadLine());
    bool isPrime = true;
    if(n>1)
    {
        for(int i = 2; i * i <= n; i++)
        {
            if (n % i == 0)
            {
                isPrime = false;
                break;
            }
        }
    }
    else
    {
        isPrime = false;
    }
    Console.WriteLine(isPrime ? "{0} is a prime!" : "{0} is not a prime", n);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
1
Gpt4D_Clone26_1.cs 1 29
Gpt4D_Clone26_1.cs 30 43
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    Console.Write("Enter a number: ");
    int n = int.Parse(Console.ReadLine());
    var primes = new[] { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29 };
    bool isPrime = primes.Contains(n);
    string output = isPrime ? "{0} is a prime!" : "{0} is not a prime";
    Console.WriteLine(output, n);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
2
Gpt4D_Clone26_2.cs 1 29
Gpt4D_Clone26_2.cs 30 47
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    Console.Write("Enter a number: ");
    int n = int.Parse(Console.ReadLine());
    if (n > 1 && Enumerable.Range(1, n).Where(x => n % x == 0).SequenceEqual(new[] { 1, n }))
    {
        Console.WriteLine("{0} is a prime!", n);
    }
    else
    {
        Console.WriteLine("{0} is not a prime", n);
    }
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
3
Gpt4D_Clone26_3.cs 1 29
Gpt4D_Clone26_3.cs 30 39
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    Console.Write("Enter a number: ");
    int n = int.Parse(Console.ReadLine());
    Console.WriteLine(Enumerable.Range(2, (int)Math.Sqrt(n)).All(i => n % i != 0) ? "{0} is a prime!" : "{0} is not a prime", n);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
4
Gpt4D_Clone26_4.cs 1 29
Gpt4D_Clone26_4.cs 30 54
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    Console.Write("Enter a number: ");
		    var num = int.Parse(Console.ReadLine());
		    Console.WriteLine(IsPrime(num) ? "{0} is a prime!" : "{0} is not a prime", num);
		    Console.ReadLine();
		}
		public static bool IsPrime(int num)
		{
		    if (num <= 1) return false;
		    if (num == 2) return true;
		    if (num % 2 == 0) return false;
		    var boundary = (int)Math.Floor(Math.Sqrt(num));
		    for (int i = 3; i <= boundary; i += 2)
			if (num % i == 0)
			    return false;
		    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
5
Gpt4D_Clone26_5.cs 1 29
Gpt4D_Clone26_5.cs 30 48
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    Console.Write("Enter a number: ");
		    int n = int.Parse(Console.ReadLine());
		    Console.WriteLine(isPrime(n) ? "{0} is a prime!" : "{0} is not a prime", n);
		    Console.ReadLine();
		}
		static bool isPrime(int n)
		{
		    if (n < 2) return false;
		    int limit = (int)Math.Sqrt(n);
		    for (int i = 2; i <= limit; ++i)
			if (n % i == 0) return false;
		    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
6
Gpt4D_Clone26_6.cs 1 29
Gpt4D_Clone26_6.cs 30 39
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
    Console.Write("Enter a number: ");
    int x = int.Parse(Console.ReadLine());
    Console.WriteLine(Enumerable.Range(2, (int)Math.Sqrt(x) - 1).All(i => x % i != 0) ? "{0} is a prime!" : "{0} is not a prime", x);
    Console.ReadLine();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
7
Gpt4D_Clone26_7.cs 1 29
Gpt4D_Clone26_7.cs 30 49
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    Console.Write("Input a number: ");
		    int n = Convert.ToInt32(Console.ReadLine());
		    Console.WriteLine(checkPrimes(n) ? "{0} is a prime!" : "{0} is not a prime", n);
		    Console.ReadLine();
		}
		static bool checkPrimes(int n)
		{
		    if (n <= 1) return false;
		    if (n <= 3) return true;
		    if (n % 2 == 0 || n % 3 == 0) return false;
		    for (int i = 5; i * i <= n; i = i + 6)
			if (n % i == 0 || n % (i + 2) == 0) return false;
		    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
8
Gpt4D_Clone26_8.cs 1 29
Gpt4D_Clone26_8.cs 30 47
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    Console.Write("Enter a number: ");
		    int y = Convert.ToInt32(Console.ReadLine());
		    Console.WriteLine(PrimeTool.IsPrime(y) ? "{0} is a prime!" : "{0} is not a prime", y);
		    Console.ReadLine();
		}
		static bool IsPrime(int number)
		{
		    if (number < 2) return false;
		    for (int i = 2; i < number; i++)
			if (number % i == 0) return false;
		    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
9
Gpt4D_Clone26_9.cs 1 29
Gpt4D_Clone26_9.cs 30 50
----------------------------------------

static void Main (string [] args) {
    Console.Write ("Enter a number: ");
    int theNum = int.Parse (Console.ReadLine ());
    if (theNum < 3) {
        if (theNum == 2) {
            Console.WriteLine ("{0} is a prime!", theNum);
        } else {
            Console.WriteLine ("{0} is not a prime", theNum);
        }
    } else {
        if (theNum % 2 == 0) {
            Console.WriteLine ("{0} is not a prime", theNum);
        } else {
            int div;
            for (div = 3; theNum % div != 0; div += 2)
                ;
            if (div == theNum) {
                Console.WriteLine ("{0} is a prime!", theNum);
            } else {
                Console.WriteLine ("{0} is not a prime", theNum);
            }
        }
    }
    Console.ReadLine ();
}
----------------------------------------

static void Main(string[] args)
{
		    Console.Write("Enter a number: ");
		    int number = Convert.ToInt32(Console.ReadLine());
		    Console.WriteLine(CheckPrime(number) ? "{0} is a prime!" : "{0} is not a prime", number);
		    Console.ReadLine();
		}
		static bool CheckPrime(int number)
		{
		    if (number == 1) return false;
		    if (number == 2) return true;
		    for (int i = 2; i <= Math.Sqrt(number); i++)
			if (number % i == 0) return false;
		    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
1
Gpt4D_Clone274_1.cs 1 35
Gpt4D_Clone274_1.cs 36 54
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
   this._keyboardState = Keyboard.GetState();
   GameState gState = _gameState;
   if (_keyboardState.IsKeyDown(Keys.A)) { gState = GameState.Menu; }
   if (_keyboardState.IsKeyDown(Keys.B)) { gState = GameState.InGame; }
   if (_keyboardState.IsKeyDown(Keys.C)) { gState = GameState.Undefined; }
   _gameState = gState;
   if (_gameState == GameState.Undefined) { MediaPlayer.Stop(); }
   else if (_gameState == GameState.Menu) { MediaPlayer.Stop(); MediaPlayer.Play(_song1); }
   else if (_gameState == GameState.InGame) { MediaPlayer.Stop(); MediaPlayer.Play(_song2); }
   base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
10
Gpt4D_Clone274_10.cs 1 35
Gpt4D_Clone274_10.cs 36 50
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
    _gameState = _keyboardState.IsKeyUp(Keys.D) ? GameState.Menu : 
        _keyboardState.IsKeyUp(Keys.E) ? GameState.InGame : GameState.Undefined;
    if (_gameState != GameState.Undefined)
    {
        MediaPlayer.Stop();
        MediaPlayer.Play(_gameState == GameState.Menu ? _song1 : _song2 );
    }
    
    base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
11
Gpt4D_Clone274_11.cs 1 35
Gpt4D_Clone274_11.cs 36 58
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
		   _keyboardState = Keyboard.GetState();
		   if (keyboardState.IsKeyDown(Keys.A)) { ChangeGameStateg( GameState.Menu, _song1 ); }
		   else if (keyboardState.IsKeyDown(Keys.B)) { ChangeGameStateg( GameState.InGame, _song2 ); }
		   else if (keyboardState.IsKeyDown(Keys.C)) { ChangeGameStateg( GameState.Undefined, null ); }
		   base.Update(gameTime);
		}
		private void ChangeGameStateg(GameState newState, Song newSong)
		{
		   _gameState = newState;
		   MediaPlayer.Stop(); 
		   
		   if(newSong != null)
		   {
		       MediaPlayer.Play(newSong);
		   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
12
Gpt4D_Clone274_12.cs 1 35
Gpt4D_Clone274_12.cs 36 64
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
    var newKeyboardState = Keyboard.GetState();
    if (newKeyboardState.IsKeyDown(Keys.A) && _keyboardState.IsKeyUp(Keys.A)) 
    {
        ChangeState(GameState.Menu, _song1);
    }
    else if (newKeyboardState.IsKeyDown(Keys.B) && _keyboardState.IsKeyUp(Keys.B)) 
    {
        ChangeState(GameState.InGame, _song2);
    } 
    else if (newKeyboardState.IsKeyDown(Keys.C) && _keyboardState.IsKeyUp(Keys.C)) 
    {
        ChangeState(GameState.Undefined, null);
    }
    _keyboardState = newKeyboardState;
    base.Update(gameTime);
	}
	private void ChangeState(GameState newState, Song song)
	{
	    _gameState = newState;
	    MediaPlayer.Stop();
	    if(song != null) MediaPlayer.Play(song);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
13
Gpt4D_Clone274_13.cs 1 35
Gpt4D_Clone274_13.cs 36 65
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
	     keyboardState = Keyboard.GetState ();
	    _gameState = keyboardState.IsKeyDown(Keys.A) ? GameState.Menu : 
		keyboardState.IsKeyDown(Keys.B) ? GameState.InGame : GameState.Undefined;
	    switch (_gameState)
	    {
		case GameState.Menu :
		    ChangeSong(_song1);
		    break;
		case GameState.InGame :
		    ChangeSong(_song2);
		    break;
		case GameState.Undefined :
		    MediaPlayer.Stop();
		    break;
		default :
		    throw new ArgumentOutOfRangeException ();
	     }
	     base.Update (gameTime);
	}
	private void ChangeSong(Song newSong)
	{
	    MediaPlayer.Stop();
	    MediaPlayer.Play(newSong);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
2
Gpt4D_Clone274_2.cs 1 35
Gpt4D_Clone274_2.cs 36 65
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
	     keyboardState = Keyboard.GetState ();
	    _gameState = keyboardState.IsKeyDown(Keys.A) ? GameState.Menu : 
		keyboardState.IsKeyDown(Keys.B) ? GameState.InGame : GameState.Undefined;
	    switch (_gameState)
	    {
		case GameState.Menu :
		    ChangeSong(_song1);
		    break;
		case GameState.InGame :
		    ChangeSong(_song2);
		    break;
		case GameState.Undefined :
		    MediaPlayer.Stop();
		    break;
		default :
		    throw new ArgumentOutOfRangeException ();
	     }
	     base.Update (gameTime);
	}
	private void ChangeSong(Song newSong)
	{
	    MediaPlayer.Stop();
	    MediaPlayer.Play(newSong);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
3
Gpt4D_Clone274_3.cs 1 35
Gpt4D_Clone274_3.cs 36 60
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
    KeyboardState keyboardState = Keyboard.GetState();
    _gameState = keyboardState.IsKeyDown(Keys.A) ? GameState.Menu : keyboardState.IsKeyDown(Keys.B) ? GameState.InGame : GameState.Undefined;
    if (_gameState == GameState.Menu)
    {
        MediaPlayer.Stop();
        MediaPlayer.Play(_song1);
    }
    else if (_gameState == GameState.InGame)
    {
        MediaPlayer.Stop();
        MediaPlayer.Play(_song2);
    }
    else if (_gameState == GameState.Undefined)
    {
        MediaPlayer.Stop();
    }
    
    base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
4
Gpt4D_Clone274_4.cs 1 35
Gpt4D_Clone274_4.cs 36 53
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

 
protected override async void Update (GameTime gameTime) 
{
    GameState newState = _keyboardState.IsKeyDown(Keys.A) ? GameState.Menu 
        : _keyboardState.IsKeyDown(Keys.B) ? GameState.InGame 
        : _keyboardState.IsKeyDown(Keys.C) ? GameState.Undefined 
        : _gameState;
    if (newState != _gameState) 
    {
        if (_gameState == GameState.Menu) { MediaPlayer.Stop(); await MediaPlayer.PlayAsync(_song1); }
        else if (_gameState == GameState.InGame) { MediaPlayer.Stop(); await MediaPlayer.PlayAsync(_song2); }
        else if (_gameState == GameState.Undefined) { MediaPlayer.Stop(); }
    }
    base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
5
Gpt4D_Clone274_5.cs 1 35
Gpt4D_Clone274_5.cs 36 55
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
    _keyboardState = Keyboard.GetState();
    GameState nextGameState = keyboardState.IsKeyDown(Keys.A) ? GameState.Menu : keyboardState.IsKeyDown(Keys.B) ? GameState.InGame : GameState.Undefined;
    if (nextGameState != _gameState)
    {
        MediaPlayer.Stop();
        if (nextGameState == GameState.Menu) { MediaPlayer.Play(_song1); }
        else if (nextGameState == GameState.InGame) { MediaPlayer.Play(_song2); }
        _gameState = nextGameState;
    }
    base.Update(gameTime);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
6
Gpt4D_Clone274_6.cs 1 35
Gpt4D_Clone274_6.cs 36 64
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
    var newKeyboardState = Keyboard.GetState();
    if (newKeyboardState.IsKeyDown(Keys.A) && _keyboardState.IsKeyUp(Keys.A)) 
    {
        ChangeState(GameState.Menu, _song1);
    }
    else if (newKeyboardState.IsKeyDown(Keys.B) && _keyboardState.IsKeyUp(Keys.B)) 
    {
        ChangeState(GameState.InGame, _song2);
    } 
    else if (newKeyboardState.IsKeyDown(Keys.C) && _keyboardState.IsKeyUp(Keys.C)) 
    {
        ChangeState(GameState.Undefined, null);
    }
    _keyboardState = newKeyboardState;
    base.Update(gameTime);
	}
	private void ChangeState(GameState newState, Song song)
	{
	    _gameState = newState;
	    MediaPlayer.Stop();
	    if(song != null) MediaPlayer.Play(song);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
7
Gpt4D_Clone274_7.cs 1 35
Gpt4D_Clone274_7.cs 36 67
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
	    _keyboardState = Keyboard.GetState();
	    if (_keyboardState.IsKeyDown(Keys.A))
	    {
		PlayNewSong(GameState.Menu, _song1);
	    }
	    else if (_keyboardState.IsKeyDown(Keys.B))
	    {
		PlayNewSong(GameState.InGame, _song2);
	    }
	    else if (_keyboardState.IsKeyDown(Keys.C))
	    {
		PlayNewSong(GameState.Undefined, null);
	    }
	    base.Update(gameTime);
	}
	private void PlayNewSong(GameState newState, Song newSong)
	{
	    if (_gameState != newState)
	    {
		_gameState = newState;
		MediaPlayer.Stop();
		if (_gameState != GameState.Undefined)
		    MediaPlayer.Play(newSong);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
8
Gpt4D_Clone274_8.cs 1 35
Gpt4D_Clone274_8.cs 36 58
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update (GameTime gameTime) 
{
		   _keyboardState = Keyboard.GetState();
		   if (keyboardState.IsKeyDown(Keys.A)) { ChangeGameStateg( GameState.Menu, _song1 ); }
		   else if (keyboardState.IsKeyDown(Keys.B)) { ChangeGameStateg( GameState.InGame, _song2 ); }
		   else if (keyboardState.IsKeyDown(Keys.C)) { ChangeGameStateg( GameState.Undefined, null ); }
		   base.Update(gameTime);
		}
		private void ChangeGameStateg(GameState newState, Song newSong)
		{
		   _gameState = newState;
		   MediaPlayer.Stop(); 
		   
		   if(newSong != null)
		   {
		       MediaPlayer.Play(newSong);
		   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
9
Gpt4D_Clone274_9.cs 1 35
Gpt4D_Clone274_9.cs 36 67
----------------------------------------

protected override void Update (GameTime gameTime) {
    GameState gameState = _gameState;
    var keyboardState = Keyboard.GetState ();
    if (keyboardState.IsKeyDown (Keys.A) && _keyboardState.IsKeyUp (Keys.A)) {
        gameState = GameState.Menu;
    } else if (keyboardState.IsKeyDown (Keys.B) && _keyboardState.IsKeyUp (Keys.B)) {
        gameState = GameState.InGame;
    } else if (keyboardState.IsKeyDown (Keys.C) && _keyboardState.IsKeyUp (Keys.C)) {
        gameState = GameState.Undefined;
    }
    _keyboardState = keyboardState;
    if (gameState != _gameState) {
        switch (gameState) {
            case GameState.Undefined :
                MediaPlayer.Stop ();
                break;
            case GameState.Menu :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song1);
                break;
            case GameState.InGame :
                MediaPlayer.Stop ();
                MediaPlayer.Play (_song2);
                break;
            default :
                throw new ArgumentOutOfRangeException ();
        }
        _gameState = gameState;
    }
    base.Update (gameTime);
}
----------------------------------------

protected override void Update(GameTime gameTime)
{
	    _keyboardState = Keyboard.GetState();
	    if (_keyboardState.IsKeyDown(Keys.A))
	    {
		PlayNewSong(GameState.Menu, _song1);
	    }
	    else if (_keyboardState.IsKeyDown(Keys.B))
	    {
		PlayNewSong(GameState.InGame, _song2);
	    }
	    else if (_keyboardState.IsKeyDown(Keys.C))
	    {
		PlayNewSong(GameState.Undefined, null);
	    }
	    base.Update(gameTime);
	}
	private void PlayNewSong(GameState newState, Song newSong)
	{
	    if (_gameState != newState)
	    {
		_gameState = newState;
		MediaPlayer.Stop();
		if (_gameState != GameState.Undefined)
		    MediaPlayer.Play(newSong);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
0
Gpt4D_Clone276_0.cs 1 17
Gpt4D_Clone276_0.cs 18 28
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool isForced) {
    var action = how switch {
        RestartOptions.Suspend => () => SuspendSystem(false, isForced),
        RestartOptions.Hibernate => () => SuspendSystem(true, isForced),
        _ => () => ExitWindows((int)how, isForced)
    };
    action();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
1
Gpt4D_Clone276_1.cs 1 17
Gpt4D_Clone276_1.cs 18 29
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

  
public static void ExitWindows (RestartOptions how, bool force)
{
    how = how switch 
    {
        RestartOptions.Suspend => SuspendSystem (false, force),
        RestartOptions.Hibernate => SuspendSystem (true, force),
        _ => ExitWindows ((int) how, force)
    };
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
2
Gpt4D_Clone276_2.cs 1 17
Gpt4D_Clone276_2.cs 18 29
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool forced) {
    if (how == RestartOptions.Suspend){
        SuspendSystem (false, forced);
    } else if (how == RestartOptions.Hibernate) {
        SuspendSystem (true, forced);
    } else {
        ExitWindows ((int) how, forced);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
3
Gpt4D_Clone276_3.cs 1 17
Gpt4D_Clone276_3.cs 18 41
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool doForce) 
{
	    ExecuteActionBasedOnRestartOption(doForce, how == RestartOptions.Suspend, 
	    how == RestartOptions.Hibernate, (int)how);
	} 
	private static void ExecuteActionBasedOnRestartOption(bool doForce, bool isSuspend, bool isHibernate, int shutDown) 
	{
	    if (isSuspend)
	    {
		SuspendSystem(false, doForce);
	    }
	    else if (isHibernate)
	    {
		SuspendSystem(true, doForce);
	    }
	    else 
	    {
		ExitWindows(shutDown, doForce);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
4
Gpt4D_Clone276_4.cs 1 17
Gpt4D_Clone276_4.cs 18 27
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    if (how == RestartOptions.Suspend)
        SuspendSystem (false, force);
    if (how == RestartOptions.Hibernate)
        SuspendSystem (true, force);
    if (how != RestartOptions.Suspend && how != RestartOptions.Hibernate)
        ExitWindows ((int) how, force);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
5
Gpt4D_Clone276_5.cs 1 17
Gpt4D_Clone276_5.cs 18 28
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool forceShutdown) {
    var action = how == RestartOptions.Suspend ? 
                 () => SuspendSystem (false, forceShutdown) : 
                 how == RestartOptions.Hibernate ? 
                 () => SuspendSystem (true, forceShutdown) : 
                 () => ExitWindows ((int) how, forceShutdown);
    action();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
6
Gpt4D_Clone276_6.cs 1 17
Gpt4D_Clone276_6.cs 18 30
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool forced) 
{
    Dictionary<RestartOptions, Action> actions = new Dictionary<RestartOptions, Action>()
    {
        {RestartOptions.Suspend, ()=> SuspendSystem(false, forced)},
        {RestartOptions.Hibernate, ()=> SuspendSystem(true, forced)},
        {RestartOptions.Other, ()=> ExitWindows((int) how, forced)}
    };
    actions[how]();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
7
Gpt4D_Clone276_7.cs 1 17
Gpt4D_Clone276_7.cs 18 41
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool doForce) 
{
	    ExecuteActionBasedOnRestartOption(doForce, how == RestartOptions.Suspend, 
	    how == RestartOptions.Hibernate, (int)how);
	} 
	private static void ExecuteActionBasedOnRestartOption(bool doForce, bool isSuspend, bool isHibernate, int shutDown) 
	{
	    if (isSuspend)
	    {
		SuspendSystem(false, doForce);
	    }
	    else if (isHibernate)
	    {
		SuspendSystem(true, doForce);
	    }
	    else 
	    {
		ExitWindows(shutDown, doForce);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
8
Gpt4D_Clone276_8.cs 1 17
Gpt4D_Clone276_8.cs 18 26
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) {
    switch (how) {
        case RestartOptions.Suspend :
            SuspendSystem (false, force);
            break;
        case RestartOptions.Hibernate :
            SuspendSystem (true, force);
            break;
        default :
            ExitWindows ((int) how, force);
            break;
    }
}
----------------------------------------

public static void ExitWindows (RestartOptions how, bool force) 
{
    (how == RestartOptions.Suspend ? new Action(() => SuspendSystem(false, force)) 
    : how == RestartOptions.Hibernate ? new Action(() => SuspendSystem(true, force)) 
    : new Action(() => ExitWindows((int)how, force)))();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
0
Gpt4D_Clone284_0.cs 1 18
Gpt4D_Clone284_0.cs 19 38
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    var logon = message.isA<QuickFix44.Logon>();
    if (logon) {
        string userName = logon.getUserName();
        string expectedPassword = PasswordsByUser[userName.ToString()];
        string suppliedPassword = logon.getPassword();
        if (expectedPassword.CompareTo(suppliedPassword) != 0) {
            MsgType msgType = new MsgType();
            msgType.setTag(35);
            msgType.setObj("5");
            Message _logoutmess = new Message();
            _logoutmess.setHeaderField(msgType);
            _logoutmess.setField("Text", "Invalid credentials");
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
1
Gpt4D_Clone284_1.cs 1 18
Gpt4D_Clone284_1.cs 19 38
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    try {
        QuickFix44.Logon logon = (QuickFix44.Logon) message;
        string userName = logon.getUserName().getValue();
        string expectedPassword = PasswordsByUser[userName];
        string suppliedPassword = logon.getPassword().getValue();
        if (_.equals(expectedPassword, suppliedPassword)) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, new ADT().with5("5"));
            _logoutmess.setField(58, new ADT().withText("Invalid credentials"));
            Session.SendToTarget(_logoutmess, id);
        }
    }
    catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
2
Gpt4D_Clone284_2.cs 1 18
Gpt4D_Clone284_2.cs 19 35
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID sessionId) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        String userName = logon.getUserName().getValue();
        String expectedPassword = PasswordsByUser[userName];
        String suppliedPassword = logon.getPassword().getValue();
        if (!expectedPassword.equals(suppliedPassword)) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField(old Text("Invalid credentials"));
            Session.SendToTarget(_logoutmess, sessionId);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
3
Gpt4D_Clone284_3.cs 1 18
Gpt4D_Clone284_3.cs 19 35
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    QuickFix44.Logon logon = message as QuickFix44.Logon;
    if (logon != null) {
        String userName = logon.getUserName().getValue();
        String expectedPassword = PasswordsByUser.get(userName);
        String suppliedPassword = logon.getPassword().getValue();
        if (!expectedPassword.equals(suppliedPassword)) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField("Text", "Invalid credentials");
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
4
Gpt4D_Clone284_4.cs 1 18
Gpt4D_Clone284_4.cs 19 34
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    if (message is QuickFix44.Logon logon) {
        String userName = logon.getUserName().getValue();
        String expectedPassword = PasswordsByUser[userName];
        String suppliedPassword = logon.getPassword().getValue();
        if (!expectedPassword.equals(suppliedPassword)) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField(new Text("Invalid credentials"));
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
7
Gpt4D_Clone284_7.cs 1 18
Gpt4D_Clone284_7.cs 19 34
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    if (message is QuickFix44.Logon logon) {
        String userName = logon.getUserName().getValue();
        String expectedPassword = PasswordsByUser.get(userName);
        
        if (!expectedPassword.Equals(logon.getPassword().getValue())) {
            var _logoutmess = new Message();
            _logoutmess.getHeader().setField(new StringField(35, "5"));
            _logoutmess.setField(new StringField(58, "Invalid credentials"));
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
8
Gpt4D_Clone284_8.cs 1 18
Gpt4D_Clone284_8.cs 19 32
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    if (message is QuickFix44.Logon logon) {
        string userName = logon.getUserName().getValue();
        if (!PasswordsByUser[userName].equals(logon.getPassword().getValue())) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(35, "5");
            _logoutmess.setField("58", "Invalid credentials");
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
284
9
Gpt4D_Clone284_9.cs 1 18
Gpt4D_Clone284_9.cs 19 32
----------------------------------------

public void fromAdmin (Message message, SessionID id) {
    var logon = message as QuickFix44.Logon;
    if (logon != null) {
        string userName = logon.getUserName ().getValue ();
        string expectedPassword = PasswordsByUser [userName];
        string suppliedPassword = logon.getPassword ().getValue ();
        if (expectedPassword != suppliedPassword) {
            Message _logoutmess = new Message ();
            _logoutmess.Header.SetField (new MsgType () {Tag = 35, Obj = "5"});
            _logoutmess.SetField (new Text ("Invalid credentials"));
            Session.SendToTarget (_logoutmess, id);
        }
    }
}
----------------------------------------

public void fromAdmin(Message message, SessionID id) {
    if (message is QuickFix44.Logon logon) {
        string userName = logon.getUserName().getValue();
        if (!PasswordsByUser[userName].equals(logon.getPassword().getValue())) {
            Message _logoutmess = new Message();
            _logoutmess.getHeader().setField(new StringField(35, "5"));
            _logoutmess.setField(new StringField(58, "Invalid credentials"));
            Session.SendToTarget(_logoutmess, id);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
0
Gpt4D_Clone287_0.cs 1 21
Gpt4D_Clone287_0.cs 22 33
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName (this Type type) {
    var friendlyName = type.Name;
    if (type.IsGenericType) {
        var iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) friendlyName = friendlyName.Remove(iBacktick);
        return string.Format("{0}<{1}>", friendlyName, string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName)));
    }
    return friendlyName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
1
Gpt4D_Clone287_1.cs 1 21
Gpt4D_Clone287_1.cs 22 30
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    string friendlyName = type.Name;
    if (!type.IsGenericType) return friendlyName;
    var iBacktick = friendlyName.IndexOf("`");
    friendlyName = friendlyName.Remove(iBacktick);
    friendlyName = $"{friendlyName}<{string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName))}>";
    return friendlyName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
2
Gpt4D_Clone287_2.cs 1 21
Gpt4D_Clone287_2.cs 22 32
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    var friendlyName = type.Name;
    if (type.IsGenericType) {
        var iBacktick = friendlyName.IndexOf('`');
        friendlyName = friendlyName.Remove(iBacktick);
        string.Join(", ", type.GetGenericArguments().Select(a => a.GetFriendlyName()));
        friendlyName += $"<{string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName))}>";        
    }
    return friendlyName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
3
Gpt4D_Clone287_3.cs 1 21
Gpt4D_Clone287_3.cs 22 31
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    StringBuilder friendlyName = new StringBuilder();
    if (type.IsGenericType)
        friendlyName.Append(type.Name.Split('`')[0] + "<" + string.Join(", ", type.GetGenericArguments().Select(t => t.GetFriendlyName())) + ">");
    else
        friendlyName.Append(type.Name);
    return friendlyName.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
4
Gpt4D_Clone287_4.cs 1 21
Gpt4D_Clone287_4.cs 22 30
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    if (!type.IsGenericType) 
        return type.Name;
    var iBacktick = type.Name.IndexOf('`');
    var genericTypeName = $"{type.Name.Remove(iBacktick)}<";
    var friendlyName = $"{genericTypeName}{string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName))}>";
    return friendlyName;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
5
Gpt4D_Clone287_5.cs 1 21
Gpt4D_Clone287_5.cs 22 28
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    if (!type.IsGenericType) return type.Name;
    var name = type.Name.Substring(0, type.Name.IndexOf('`'));
    var types = string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName));
    return $"{name}<{types}>";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
6
Gpt4D_Clone287_6.cs 1 21
Gpt4D_Clone287_6.cs 22 27
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    if (!type.IsGenericType) return type.Name;
    var name = type.Name.Remove(type.Name.IndexOf('`'));
    return $"{name}<{string.Join(", ", type.GetGenericArguments().Select(a => a.GetFriendlyName()))}>";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
7
Gpt4D_Clone287_7.cs 1 21
Gpt4D_Clone287_7.cs 22 26
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName(this Type type) {
    var typeName = type.Name.Split('`')[0];
    return !type.IsGenericType ? typeName : $"{typeName}<{string.Join(", ", type.GetGenericArguments().Select(GetFriendlyName))}>";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
8
Gpt4D_Clone287_8.cs 1 21
Gpt4D_Clone287_8.cs 22 25
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName (this Type type) {
    return type.IsGenericType ? $"{type.Name.Split ('`')[0]}<{string.Join (", ", type.GetGenericArguments ().Select (t => t.GetFriendlyName ()))}>" : type.Name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
9
Gpt4D_Clone287_9.cs 1 21
Gpt4D_Clone287_9.cs 22 25
----------------------------------------

public static string GetFriendlyName (this Type type) {
    string friendlyName = type.Name;
    if (type.IsGenericType) {
        int iBacktick = friendlyName.IndexOf ('`');
        if (iBacktick > 0) {
            friendlyName = friendlyName.Remove (iBacktick);
        }
        friendlyName += "<";
        Type [] typeParameters = type.GetGenericArguments ();
        for (int i = 0; i < typeParameters.Length; ++ i) {
            string typeParamName = GetFriendlyName (typeParameters [i]);
            friendlyName += (i == 0 ? typeParamName : "," + typeParamName);
        }
        friendlyName += "><![CDATA[";
    }
    return friendlyName;
}
----------------------------------------

public static string GetFriendlyName (this Type type) {
    return type.IsGenericType ? $"{type.Name.Remove(type.Name.IndexOf('`'))}<{string.Join(", ", type.GetGenericArguments().Select(TypeExtensions.GetFriendlyName))}>" : type.Name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
28
0
Gpt4D_Clone28_0.cs 1 15
Gpt4D_Clone28_0.cs 16 29
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    LinearGradientBrush brush = null;
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    double scaleFactor = (((double) Value - (double) Minimum) / ((double) Maximum - (double) Minimum));
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) ((rec.Width * scaleFactor) - 4);
    rec.Height -= 4;
    brush = new LinearGradientBrush (rec, this.ForeColor, this.BackColor, LinearGradientMode.Vertical);
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e)
{
    LinearGradientBrush brush;
    Rectangle rec = new Rectangle(0, 0, this.Width, this.Height);
    double scaleFactor = (((double)Value - (double)Minimum) / ((double)Maximum - (double)Minimum));
    ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
    rec.Width = (int)(rec.Width * scaleFactor - 4);
    rec.Height = rec.Height - 4;
    brush = new LinearGradientBrush(rec, Color.Purple , Color.Orange, LinearGradientMode.Vertical);
    e.Graphics.FillRectangle(brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
28
2
Gpt4D_Clone28_2.cs 1 15
Gpt4D_Clone28_2.cs 16 26
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    LinearGradientBrush brush = null;
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    double scaleFactor = (((double) Value - (double) Minimum) / ((double) Maximum - (double) Minimum));
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) ((rec.Width * scaleFactor) - 4);
    rec.Height -= 4;
    brush = new LinearGradientBrush (rec, this.ForeColor, this.BackColor, LinearGradientMode.Vertical);
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e)
{
    LinearGradientBrush brush = new LinearGradientBrush(new Point(0, 0), new Point(this.Width, this.Height), this.ForeColor, this.BackColor);
    double scaleFactor = (((double)Value - (double)Minimum) / ((double)Maximum - (double)Minimum));
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar(e.Graphics, new Rectangle(0, 0, (int)(this.Width * scaleFactor), this.Height - 4));
    e.Graphics.FillRectangle(brush, 2, 2, this.Width - 4, this.Height - 4);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
1
Gpt4D_Clone299_1.cs 1 14
Gpt4D_Clone299_1.cs 15 22
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths == null) return null;
    return paths.Aggregate(new Uri(Path.Combine(paths)), uri => uri.AbsolutePath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
2
Gpt4D_Clone299_2.cs 1 14
Gpt4D_Clone299_2.cs 15 22
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths == null || paths.Length == 0) return null;
    return paths.Length == 1 ? paths[0] : paths.Skip(1).Aggregate(paths[0], (a, b) => a + Path.DirectorySeparatorChar + b);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
3
Gpt4D_Clone299_3.cs 1 14
Gpt4D_Clone299_3.cs 15 22
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths == null || !paths.Any()) return null;
    return paths.Aggregate("", (a, b) => Path.Combine(a, b));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
4
Gpt4D_Clone299_4.cs 1 14
Gpt4D_Clone299_4.cs 15 22
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths == null) return null;
    return paths.Skip(1).Aggregate(new StringBuilder(paths[0]), (sb, path) => sb.Append(Path.DirectorySeparatorChar + path)).ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
5
Gpt4D_Clone299_5.cs 1 14
Gpt4D_Clone299_5.cs 15 22
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    if (paths.Any(e=>e == null)) return null;
    return Path.GetFullPath(String.Join(Path.DirectorySeparatorChar, paths.Where(e=>!String.IsNullOrWhiteSpace(e))));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
6
Gpt4D_Clone299_6.cs 1 14
Gpt4D_Clone299_6.cs 15 21
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    return paths?.Aggregate((current, path) => Path.Combine(current, path));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
7
Gpt4D_Clone299_7.cs 1 14
Gpt4D_Clone299_7.cs 15 19
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    return paths == null ? null : Path.Combine(paths);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
8
Gpt4D_Clone299_8.cs 1 14
Gpt4D_Clone299_8.cs 15 21
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    return paths?.Aggregate(Path.Combine);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
9
Gpt4D_Clone299_9.cs 1 14
Gpt4D_Clone299_9.cs 15 21
----------------------------------------

public static string CombinePaths (params string [] paths) {
    if (paths == null) {
        return null;
    }
    string currentPath = paths [0];
    for (int i = 1; i < paths.Length; i ++) {
        currentPath = Path.Combine (currentPath, paths [i]);
    }
    return currentPath;
}
----------------------------------------

public static string CombinePaths(params string[] paths)
{
    return paths == null ? null : paths.Length == 0 ? String.Empty : paths.Aggregate((a, b) => Path.Combine(a, b));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
0
Gpt4D_Clone302_0.cs 1 15
Gpt4D_Clone302_0.cs 16 23
----------------------------------------

[TestMethod] public void TestGetCurrentFloor () {
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    lock (this)
    {
        elevator.GoToFloor (5);
        if (! Monitor.Wait (this, TIMEOUT))
            Assert.Fail ("Event did not arrive in time.");
    } int floor = elevator.GetCurrentFloor ();
    Assert.AreEqual (floor, 5);
}
----------------------------------------

public void TestGetCurrentFloor3() 
{
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    Invoke(elevator.GoToFloor, 5);
    Invoke(Assert.AreEqual, elevator.GetCurrentFloor (), 5);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
1
Gpt4D_Clone302_1.cs 1 23
Gpt4D_Clone302_1.cs 24 23
----------------------------------------

[TestMethod] public void TestGetCurrentFloor () {
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    lock (this)
    {
        elevator.GoToFloor (5);
        if (! Monitor.Wait (this, TIMEOUT))
            Assert.Fail ("Event did not arrive in time.");
    } int floor = elevator.GetCurrentFloor ();
    Assert.AreEqual (floor, 5);
}
 
public void TestGetCurrentFloor8() 
{
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    elevator.MoveToFloor(5).IsOnFloor(5).AssertTrue();
    Assert.AreEqual(elevator.GetCurrentFloor(), 5);
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
2
Gpt4D_Clone302_2.cs 1 23
Gpt4D_Clone302_2.cs 24 23
----------------------------------------

[TestMethod] public void TestGetCurrentFloor () {
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    lock (this)
    {
        elevator.GoToFloor (5);
        if (! Monitor.Wait (this, TIMEOUT))
            Assert.Fail ("Event did not arrive in time.");
    } int floor = elevator.GetCurrentFloor ();
    Assert.AreEqual (floor, 5);
}
 
public void TestGetCurrentFloor6() 
{
    var elevator = new HydraulicElevator(Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    elevator.Start().GoToFloor (5).Stop().WaitAndCheck(TIMEOUT, "Event did not arrive in time.");
    Assert.AreEqual(elevator.GetCurrentFloor(), 5);
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
302
3
Gpt4D_Clone302_3.cs 1 15
Gpt4D_Clone302_3.cs 16 22
----------------------------------------

[TestMethod] public void TestGetCurrentFloor () {
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    lock (this)
    {
        elevator.GoToFloor (5);
        if (! Monitor.Wait (this, TIMEOUT))
            Assert.Fail ("Event did not arrive in time.");
    } int floor = elevator.GetCurrentFloor ();
    Assert.AreEqual (floor, 5);
}
----------------------------------------

public void TestGetCurrentFloor2() 
{
    var elevator = new Elevator (Elevator.Environment.Offline);
    elevator.ElevatorArrivedOnFloor += TestElevatorArrived;
    Run(elevator.GoToFloor, 5, elevator.GetCurrentFloor, Assert.AreEqual, TIMEOUT);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
303
0
Gpt4D_Clone303_0.cs 1 26
Gpt4D_Clone303_0.cs 27 30
----------------------------------------

public static bool AreSame (Type sourceType, Type destinationType) {
    if (sourceType == null || destinationType == null) {
        return false;
    }
    if (sourceType == destinationType) {
        return true;
    }
    Type tempDestinationType = destinationType;
    while (tempDestinationType.BaseType != typeof (object)) {
        tempDestinationType = tempDestinationType.BaseType;
    }
    if (tempDestinationType.IsAssignableFrom (sourceType)) {
        return true;
    }
    var query = from d in destinationType.GetInterfaces ()
        join s in sourceType.GetInterfaces () on d.Name equals s.Name
        select s;
    if (query != Enumerable.Empty < Type > ()) {
        return true;
    }
    return false;
}
----------------------------------------

public static bool AreSame (Type sourceType, Type destinationType) {
    return sourceType == destinationType || (sourceType?.IsAssignableFrom(destinationType) ?? false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
0
Gpt4D_Clone306_0.cs 1 13
Gpt4D_Clone306_0.cs 14 21
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList ddl = (DropDownList)sender;
    ddl.DataTextField = "Column1";
    ddl.DataValueField = "Column2";
    ddl.DataBind();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
1
Gpt4D_Clone306_1.cs 1 13
Gpt4D_Clone306_1.cs 14 20
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList list = (DropDownList)sender;
    list.Items.Clear();
    list.Items.Add("No items");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
2
Gpt4D_Clone306_2.cs 1 13
Gpt4D_Clone306_2.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList ddl = (DropDownList)sender;
    ddl.Items.Insert(0, new ListItem("--Select--", "0"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
3
Gpt4D_Clone306_3.cs 1 13
Gpt4D_Clone306_3.cs 14 18
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList selection = (DropDownList)sender;
    selection.Items.FindByValue("X").Selected = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
4
Gpt4D_Clone306_4.cs 1 13
Gpt4D_Clone306_4.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList dd = (DropDownList) sender;
    dd.Items.RemoveAt(dd.SelectedIndex);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
5
Gpt4D_Clone306_5.cs 1 13
Gpt4D_Clone306_5.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList list = (DropDownList)sender;
    list.Enabled = false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
6
Gpt4D_Clone306_6.cs 1 13
Gpt4D_Clone306_6.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList ddl = (DropDownList)sender;
    string value = ddl.SelectedValue;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
7
Gpt4D_Clone306_7.cs 1 13
Gpt4D_Clone306_7.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList combo = (DropDownList)sender;
    combo.Items.Add(new ListItem("Some Text", "0"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
8
Gpt4D_Clone306_8.cs 1 13
Gpt4D_Clone306_8.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList s = (DropDownList)sender;
    s.AutoPostBack = true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
306
9
Gpt4D_Clone306_9.cs 1 13
Gpt4D_Clone306_9.cs 14 19
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    ilist1 = (DropDownList) sender;
    if (ilist1.SelectedIndex == 0) {
    } else if (ilist1.SelectedIndex == 1 && ilist2.SelectedIndex != 2) {
        ilist2.SelectedIndex = 2;
    } else if (ilist1.SelectedIndex == 2 && ilist2.SelectedIndex != 1) {
        ilist2.SelectedIndex = 1;
    }
}
----------------------------------------

protected void IndexChanged (object sender, EventArgs e) {
    DropDownList dropdown = (DropDownList) sender;
    ListItem selectedItem = dropdown.SelectedItem;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
0
Gpt4D_Clone314_0.cs 1 17
Gpt4D_Clone314_0.cs 18 39
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
    using (RegistryKey rk = Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = string.Empty;
        if (rk != null)
            currentVersion = rk.GetValue("CurrentVersion").ToString();
        using (RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            string javaHome = string.Empty;
            if (key != null)
                javaHome = key.GetValue("JavaHome").ToString();
            return javaHome;
        }}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
1
Gpt4D_Clone314_1.cs 1 17
Gpt4D_Clone314_1.cs 18 44
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath()
    {
        string path = Environment.GetEnvironmentVariable("JAVA_HOME");
        if (!string.IsNullOrEmpty(path))
        {
            return path;
        }
        const string jrePath = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
        string currentVer;
        string javaHome;
        using (var rk = Registry.LocalMachine.OpenSubKey(jrePath))
        {
            currentVer = rk.GetValue("CurrentVersion")?.ToString();
        }
        using (var rk = Registry.LocalMachine.OpenSubKey($"{jrePath}\\{currentVer}"))
        {
            javaHome = rk.GetValue("JavaHome")?.ToString();
        }
        return javaHome;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
2
Gpt4D_Clone314_2.cs 1 17
Gpt4D_Clone314_2.cs 18 34
----------------------------------------

private string GetJavaInstallationPath () {
    string environmentPath = Environment.GetEnvironmentVariable ("JAVA_HOME");
    if (! string.IsNullOrEmpty (environmentPath)) {
        return environmentPath;
    }
    string javaKey = "SOFTWARE\\JavaSoft\\Java Runtime Environment\\";
    using (Microsoft.Win32.RegistryKey rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey (javaKey))
    {
        string currentVersion = rk.GetValue ("CurrentVersion").ToString ();
        using (Microsoft.Win32.RegistryKey key = rk.OpenSubKey (currentVersion))
        {
            return key.GetValue ("JavaHome").ToString ();
        }}}
----------------------------------------

private string GetJavaInstallationPath()
        {
            var javaHome = Environment.GetEnvironmentVariable("JAVA_HOME") ?? "";
            if (!string.IsNullOrEmpty(javaHome)) return javaHome;
            var jrePath = @"SOFTWARE\JavaSoft\Java Runtime Environment\";
            using (var jreKey = Registry.LocalMachine.OpenSubKey(jrePath))
            {
                var currentVer = jreKey.GetValue("CurrentVersion")?.ToString();
                using (var versionKey = jreKey.OpenSubKey(currentVer))
                {
                    return versionKey.GetValue("JavaHome")?.ToString();
                }
            }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
0
Gpt4D_Clone316_0.cs 1 24
Gpt4D_Clone316_0.cs 25 43
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    byte[] buffer = new byte[source.Length];
    int read = source.Read(buffer, 0, buffer.Length);
    while (read > 0)
    {
        destination.Write(buffer, 0, read);
        read = source.Read(buffer, 0, buffer.Length);
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
1
Gpt4D_Clone316_1.cs 1 24
Gpt4D_Clone316_1.cs 25 42
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    using (StreamReader reader = new StreamReader(source))
    {
        string contents = reader.ReadToEnd();
        byte[] buffer = Encoding.UTF8.GetBytes(contents);
        destination.Write(buffer, 0, buffer.Length);
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
2
Gpt4D_Clone316_2.cs 1 24
Gpt4D_Clone316_2.cs 25 42
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    using (StreamWriter writer = new StreamWriter(destination))
    {
        using (StreamReader reader = new StreamReader(source))
        {
            writer.Write(reader.ReadToEnd());
        }
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
3
Gpt4D_Clone316_3.cs 1 24
Gpt4D_Clone316_3.cs 25 42
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    byte[] buffer = new byte[4096];
    int count;
    while ((count = source.Read(buffer, 0, buffer.Length)) != 0)
    {
        destination.WriteAsync(buffer, 0, count);
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
4
Gpt4D_Clone316_4.cs 1 24
Gpt4D_Clone316_4.cs 25 42
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    byte[] buffer = new byte[4096];
    int count;
    while ((count = source.Read(buffer, 0, buffer.Length)) != 0)
    {
        destination.Write(buffer, 0, count);
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
5
Gpt4D_Clone316_5.cs 1 24
Gpt4D_Clone316_5.cs 25 41
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    using (BinaryReader reader = new BinaryReader(source))
    {
        byte[] buffer = reader.ReadBytes((int)source.Length);
        destination.Write(buffer, 0, buffer.Length);
    }
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
6
Gpt4D_Clone316_6.cs 1 24
Gpt4D_Clone316_6.cs 25 39
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    byte[] buffer = new byte[source.Length];
    source.Read(buffer, 0, buffer.Length);
    destination.Write(buffer, 0, buffer.Length);
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
7
Gpt4D_Clone316_7.cs 1 24
Gpt4D_Clone316_7.cs 25 38
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    source.Position = 0;
    source.CopyToAsync(destination);
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
8
Gpt4D_Clone316_8.cs 1 24
Gpt4D_Clone316_8.cs 25 38
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    source.Position = 0;
    source.CopyTo(destination);
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
316
9
Gpt4D_Clone316_9.cs 1 24
Gpt4D_Clone316_9.cs 25 35
----------------------------------------

public static Stream Copy (this Stream source) {
    if (source == null)
        return null;
    long originalPosition = - 1;
    if (source.CanSeek)
        originalPosition = source.Position;
    MemoryStream ms = new MemoryStream ();
    try {
        Copy (source, ms);
        if (originalPosition > - 1)
            ms.Seek (originalPosition, SeekOrigin.Begin);
        else
            ms.Seek (0, SeekOrigin.Begin);
        return ms;
    }
    catch {
        ms.Dispose ();
        throw;
    }
}
----------------------------------------

public static Stream Copy(this Stream source)
{
    if (source == null)
        return null;
    MemoryStream destination = new MemoryStream();
    source.CopyTo(destination);
    return destination;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
0
Gpt4D_Clone318_0.cs 1 16
Gpt4D_Clone318_0.cs 17 34
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    bool result = false;
    if (key == _code [_index]) {
    	_index++;
    }
    if (_index == _code.Length) {
        result = true;
        _index = 0;
    }
    
    if (!result) _index = 0;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
1
Gpt4D_Clone318_1.cs 1 16
Gpt4D_Clone318_1.cs 17 31
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    bool result = false;
    if (key == _code [_index]) {
        _index++;
        result = (_index >= _code.Length);
        _index = (result ? 0 : _index);
    } else {
        _index = 0;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
5
Gpt4D_Clone318_5.cs 1 16
Gpt4D_Clone318_5.cs 17 30
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key != _code [_index]) {
        _index = 0;
        return false;
    } 
    else if (++_index == _code.Length) {
        _index = 0;
        return true;
    } 
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
6
Gpt4D_Clone318_6.cs 1 16
Gpt4D_Clone318_6.cs 17 32
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) 
{
    var isEqual = key == _code[_index];
    
    if(!isEqual) _index = 0;
    else if(++_index == _code.Length) 
    {
        _index = 0;
        isEqual = true;
    }
    
    return isEqual;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
7
Gpt4D_Clone318_7.cs 1 16
Gpt4D_Clone318_7.cs 17 26
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy (Keys key) {
    bool isMatch = key == _code [_index];
    _index = isMatch ? (_index + 1) : 0;
    bool isComplete = _index == _code.Length;
    _index = isComplete ? 0 : _index;
    return isComplete && isMatch;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
318
9
Gpt4D_Clone318_9.cs 1 16
Gpt4D_Clone318_9.cs 17 24
----------------------------------------

public bool IsCompletedBy (Keys key) {
    if (key == _code [_index]) {
        if (_index == _code.Length - 1) {
            _index = 0;
            return true;
        }
        ++ _index;
    } else {
        _index = 0;
    }
    return false;
}
----------------------------------------

public bool IsCompletedBy(Keys key) {
    bool result = key == _code[_index] ? (_index == _code.Length - 1 ? (++_index == _code.Length) : (++_index == _code.Length)) : (_index = 0) == 0;
    _index = result ? 0 : _index;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
0
Gpt4D_Clone31_0.cs 1 14
Gpt4D_Clone31_0.cs 15 22
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    SolidBrush UpdateBrush () => brush = brush == null || brush.Color != ForeColor ? new SolidBrush(ForeColor): brush;
    Rectangle CreateRectangle() => new Rectangle(0,0, Width, Height);
    Rectangle ResizeRectangle(Rectangle rec) => new Rectangle(rec.Left+2,rec.Top+2, (int)(rec.Width * ((double)Value / Maximum)) - 4, rec.Height - 4);
    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(e.Graphics, CreateRectangle());
    e.Graphics.FillRectangle (UpdateBrush(), ResizeRectangle(CreateRectangle()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
1
Gpt4D_Clone31_1.cs 1 14
Gpt4D_Clone31_1.cs 15 23
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
	    brush = brush == null || brush.Color != ForeColor ? new SolidBrush(ForeColor) : brush;
	    var rec = new Rectangle(0,0, this.Size);
	    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
	    rec.Width = (int)(rec.Width * Value / Maximum) - 4;
	    rec.Height -= 4;
	    e.Graphics.FillRectangle(brush, new Rectangle(new Point(2,2), rec.Size));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
10
Gpt4D_Clone31_10.cs 1 14
Gpt4D_Clone31_10.cs 15 25
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    brush = brush?.Color != ForeColor ? new SolidBrush(ForeColor) : brush;
		    Rectangle rec = new Rectangle(Point.Empty, this.Size);
		    ProgressBarIfSupported(e.Graphics, rec);
		    rec = new Rectangle(2,2, (int)(rec.Width * Value / Maximum) - 4, rec.Height - 4);
		    e.Graphics.FillRectangle(brush, rec);
		}
		private void ProgressBarIfSupported(Graphics g, Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(g, rec);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
11
Gpt4D_Clone31_11.cs 1 14
Gpt4D_Clone31_11.cs 15 32
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    brush = brush == null || brush.Color != ForeColor ? new SolidBrush(ForeColor) : brush;
		    Rectangle rec = new Rectangle(Point.Empty, Size);
		    DrawProgressBar(e.Graphics, ref rec);
		    ModifyRectangle(ref rec);
		    FilledRectangle(e.Graphics, rec);
		}
		private void DrawProgressBar(Graphics graphics, ref Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(graphics, rec);
		}
		private void ModifyRectangle(ref Rectangle rec) {
		    rec.Width = (int)(rec.Width * Value / Maximum) - 4;
		    rec.Height -= 4;
		}
		private void FilledRectangle(Graphics graphics, Rectangle rec) {
		    graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
2
Gpt4D_Clone31_2.cs 1 14
Gpt4D_Clone31_2.cs 15 22
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if(!ReferenceEquals(brush?.Color, this.ForeColor)) brush = new SolidBrush(this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, Width, Height);
    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
    rec.Size = new Size ((int)((rec.Width * Value / Maximum) - 4), rec.Height - 4);
    e.Graphics.FillRectangle (brush, rec);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
4
Gpt4D_Clone31_4.cs 1 14
Gpt4D_Clone31_4.cs 15 27
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
	    brush = (brush == null || brush.Color != ForeColor) ? new SolidBrush(ForeColor): brush;
	    var rec = new Rectangle(0,0, Width, Height);
	    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(e.Graphics, rec);
	    RecalculateRectangle(ref rec);
	    e.Graphics.FillRectangle(brush, new Rectangle(2,2, rec.Width, rec.Height));
	}
	private void RecalculateRectangle(ref Rectangle rec) {
	    rec.Width = (int)(rec.Width * Value / Maximum) - 4;
	    rec.Height -= 4;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
5
Gpt4D_Clone31_5.cs 1 14
Gpt4D_Clone31_5.cs 15 35
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    UpdateBrush();
		    var rec = new Rectangle(0,0, Width, Height);
		    DrawProgressBarOnSupport(e.Graphics, rec);
		    ResizeRectangle(ref rec);
		    FillGraphicsRectangle(e.Graphics, rec);
		}
		private void UpdateBrush() {
		    if(brush?.Color != ForeColor) brush = new SolidBrush(ForeColor);
		}
		private void DrawProgressBarOnSupport(Graphics g, Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(g, rec);
		}
		private void ResizeRectangle(ref Rectangle rec) {
		    rec.Width = (int)(rec.Width * ((double)Value / Maximum)) - 4;
		    rec.Height -= 4;
		}
		private void FillGraphicsRectangle(Graphics g, Rectangle rec) {
		    g.FillRectangle(brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
6
Gpt4D_Clone31_6.cs 1 14
Gpt4D_Clone31_6.cs 15 25
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    brush = brush?.Color != ForeColor ? new SolidBrush(ForeColor) : brush;
		    Rectangle rec = new Rectangle(Point.Empty, this.Size);
		    ProgressBarIfSupported(e.Graphics, rec);
		    rec = new Rectangle(2,2, (int)(rec.Width * Value / Maximum) - 4, rec.Height - 4);
		    e.Graphics.FillRectangle(brush, rec);
		}
		private void ProgressBarIfSupported(Graphics g, Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(g, rec);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
7
Gpt4D_Clone31_7.cs 1 14
Gpt4D_Clone31_7.cs 15 32
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    brush = brush == null || brush.Color != ForeColor ? new SolidBrush(ForeColor) : brush;
		    Rectangle rec = new Rectangle(Point.Empty, Size);
		    DrawProgressBar(e.Graphics, ref rec);
		    ModifyRectangle(ref rec);
		    FilledRectangle(e.Graphics, rec);
		}
		private void DrawProgressBar(Graphics graphics, ref Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(graphics, rec);
		}
		private void ModifyRectangle(ref Rectangle rec) {
		    rec.Width = (int)(rec.Width * Value / Maximum) - 4;
		    rec.Height -= 4;
		}
		private void FilledRectangle(Graphics graphics, Rectangle rec) {
		    graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
8
Gpt4D_Clone31_8.cs 1 14
Gpt4D_Clone31_8.cs 15 35
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    UpdateBrush();
		    var rec = new Rectangle(0,0, Width, Height);
		    DrawProgressBarOnSupport(e.Graphics, rec);
		    ResizeRectangle(ref rec);
		    FillGraphicsRectangle(e.Graphics, rec);
		}
		private void UpdateBrush() {
		    if(brush?.Color != ForeColor) brush = new SolidBrush(ForeColor);
		}
		private void DrawProgressBarOnSupport(Graphics g, Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(g, rec);
		}
		private void ResizeRectangle(ref Rectangle rec) {
		    rec.Width = (int)(rec.Width * ((double)Value / Maximum)) - 4;
		    rec.Height -= 4;
		}
		private void FillGraphicsRectangle(Graphics g, Rectangle rec) {
		    g.FillRectangle(brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
9
Gpt4D_Clone31_9.cs 1 14
Gpt4D_Clone31_9.cs 15 35
----------------------------------------

protected override void OnPaint (PaintEventArgs e) {
    if (brush == null || brush.Color != this.ForeColor)
        brush = new SolidBrush (this.ForeColor);
    Rectangle rec = new Rectangle (0, 0, this.Width, this.Height);
    if (ProgressBarRenderer.IsSupported)
        ProgressBarRenderer.DrawHorizontalBar (e.Graphics, rec);
    rec.Width = (int) (rec.Width * ((double) Value / Maximum)) - 4;
    rec.Height = rec.Height - 4;
    e.Graphics.FillRectangle (brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

protected override void OnPaint(PaintEventArgs e) {
		    UpdateBrush();
		    var rec = new Rectangle(0,0, Width, Height);
		    DrawProgressBarOnSupport(e.Graphics, rec);
		    ResizeRectangle(ref rec);
		    FillGraphicsRectangle(e.Graphics, rec);
		}
		private void UpdateBrush() {
		    if(brush?.Color != ForeColor) brush = new SolidBrush(ForeColor);
		}
		private void DrawProgressBarOnSupport(Graphics g, Rectangle rec) {
		    if (ProgressBarRenderer.IsSupported) ProgressBarRenderer.DrawHorizontalBar(g, rec);
		}
		private void ResizeRectangle(ref Rectangle rec) {
		    rec.Width = (int)(rec.Width * ((double)Value / Maximum)) - 4;
		    rec.Height -= 4;
		}
		private void FillGraphicsRectangle(Graphics g, Rectangle rec) {
		    g.FillRectangle(brush, 2, 2, rec.Width, rec.Height);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
0
Gpt4D_Clone322_0.cs 1 19
Gpt4D_Clone322_0.cs 20 33
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value == null) return null;
    string source = value.ToString ();
    MemoryStream ms = new MemoryStream(Convert.FromBase64String(source));
    var img = new BitmapImage();
    img.BeginInit();
    img.CacheOption = BitmapCacheOption.OnLoad;
    img.StreamSource = ms;
    img.EndInit();
    return img;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
1
Gpt4D_Clone322_1.cs 1 19
Gpt4D_Clone322_1.cs 20 36
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert(object value, Type targetType, object parameter, string language)
{
    if (value == null) return null;
    BitmapImage bitmapImage = new BitmapImage();
    byte[] byteBuffer = Convert.FromBase64String(value.ToString());
    MemoryStream memoryStream = new MemoryStream(byteBuffer);
    bitmapImage.BeginInit();
    bitmapImage.StreamSource = memoryStream;
    bitmapImage.EndInit();
    return bitmapImage;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
2
Gpt4D_Clone322_2.cs 1 19
Gpt4D_Clone322_2.cs 20 30
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value == null) return null;
    string source = value.ToString ();
    MemoryStream ms = new MemoryStream(Convert.FromBase64String(source));
    BitmapImage img = new BitmapImage();
    img.BeginInit();
    img.StreamSource = ms;
    img.EndInit();
    return img;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
3
Gpt4D_Clone322_3.cs 1 19
Gpt4D_Clone322_3.cs 20 35
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert(object value, Type targetType, object parameter, string language)
{
    if(value != null)
    {
        byte[] bytes = Convert.FromBase64String(value.ToString());
        BitmapImage bitmapImage = new BitmapImage();
        bitmapImage.BeginInit();
        bitmapImage.StreamSource = new MemoryStream(bytes);
        bitmapImage.EndInit();
        return bitmapImage;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
4
Gpt4D_Clone322_4.cs 1 19
Gpt4D_Clone322_4.cs 20 31
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value == null) return null;
    string source = value.ToString ();
    var imageData = Convert.FromBase64String(source);
    using (var stream = new MemoryStream(imageData))
    {
        return Bitmap.FromStream(stream);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
5
Gpt4D_Clone322_5.cs 1 19
Gpt4D_Clone322_5.cs 20 34
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString();
        byte[] data = Convert.FromBase64String(source);
        
        using (MemoryStream ms = new MemoryStream(data))
        {
            return new Bitmap(ms);
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
6
Gpt4D_Clone322_6.cs 1 19
Gpt4D_Clone322_6.cs 20 31
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert(object value, Type targetType, object parameter, string language)
{
    if (value == null) return null;
    var imageBytes = Convert.FromBase64String(value.ToString());
    using (var stream = new MemoryStream(imageBytes))
    {
        return new Bitmap(Bitmap.FromStream(stream));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
7
Gpt4D_Clone322_7.cs 1 19
Gpt4D_Clone322_7.cs 20 28
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value == null) return null;
    string source = value.ToString();
    byte[] data = Convert.FromBase64String(source);
    return new Bitmap(new MemoryStream(data));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
8
Gpt4D_Clone322_8.cs 1 19
Gpt4D_Clone322_8.cs 20 32
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert(object value, Type targetType, object parameter, string language)
{
    if (value != null)
    {
        string source = value.ToString();
        MemoryStream ms = new MemoryStream(Convert.FromBase64String(source));
        return Image.FromStream(ms);
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
9
Gpt4D_Clone322_9.cs 1 19
Gpt4D_Clone322_9.cs 20 31
----------------------------------------

public object Convert (object value, Type targetType, object parameter, string language) {
    if (value != null) {
        string source = value.ToString ();
        var ims = new InMemoryRandomAccessStream ();
        var bytes = Convert.FromBase64String (source);
        var dataWriter = new DataWriter (ims);
        dataWriter.WriteBytes (bytes);
        dataWriter.StoreAsync ();
        ims.Seek (0);
        var img = new BitmapImage ();
        img.SetSource (ims);
        return img;
    }
    return null;
}
----------------------------------------

public object Convert(object value, Type targetType, object parameter, string language)
{
    if (value != null)
    {
        string source = value.ToString();
        return Image.FromStream(new MemoryStream(Convert.FromBase64String(source)));
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
0
Gpt4D_Clone324_0.cs 1 14
Gpt4D_Clone324_0.cs 15 26
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    do {
        if (t.BaseType == baseType)
            return true;
        t = t.BaseType;
    } while (t != null);
     
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
3
Gpt4D_Clone324_3.cs 1 14
Gpt4D_Clone324_3.cs 15 24
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    if (baseType == null || t == null) return false;
    if (baseType == t) return true;
    return InheritsFrom(t.BaseType, baseType);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
5
Gpt4D_Clone324_5.cs 1 14
Gpt4D_Clone324_5.cs 15 25
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

 
public static bool InheritsFrom(this Type t, Type baseType) {
    for (Type type = t; type != null; type = type.BaseType) {
        if (type == baseType) {
            return true;
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
6
Gpt4D_Clone324_6.cs 1 14
Gpt4D_Clone324_6.cs 15 20
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    return t.BaseType != null ? t.BaseType.Equals(baseType) || t.BaseType.InheritsFrom(baseType) : false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
7
Gpt4D_Clone324_7.cs 1 14
Gpt4D_Clone324_7.cs 15 18
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    return t.BaseType != null && (t.BaseType == baseType || t.BaseType.InheritsFrom(baseType));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
8
Gpt4D_Clone324_8.cs 1 14
Gpt4D_Clone324_8.cs 15 20
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    return t.BaseType?.Equals(baseType) ?? false || t.BaseType?.InheritsFrom(baseType) ?? false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
9
Gpt4D_Clone324_9.cs 1 14
Gpt4D_Clone324_9.cs 15 21
----------------------------------------

public static bool InheritsFrom (this Type t, Type baseType) {
    Type cur = t.BaseType;
    while (cur != null) {
        if (cur.Equals (baseType)) {
            return true;
        }
        cur = cur.BaseType;
    }
    return false;
}
----------------------------------------

public static bool InheritsFrom(this Type t, Type baseType) {
    return baseType != null && t != null && 
        (t == baseType || InheritsFrom(t.BaseType, baseType));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
2
Gpt4D_Clone328_2.cs 1 12
Gpt4D_Clone328_2.cs 13 23
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int i = 0;
    while(true){
        if(i >= items.Length || itemsbought <= items[i]) break;
        discountItem = discount [i];
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
3
Gpt4D_Clone328_3.cs 1 12
Gpt4D_Clone328_3.cs 13 22
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem){
    int i = 0;
    while(i < items.Length){
        if(itemsbought <= items[i]) return;
        discountItem = discount[i++];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
4
Gpt4D_Clone328_4.cs 1 12
Gpt4D_Clone328_4.cs 13 23
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int count = items.Count();
    for (int i = 0; i < count; i++)
    {
        if(itemsbought <= items[i]) return;
        discountItem = discount[i];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
5
Gpt4D_Clone328_5.cs 1 12
Gpt4D_Clone328_5.cs 13 20
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int i = 0;
    while(i < items.Length && itemsbought > items[i]) 
        discountItem = discount[i++];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
6
Gpt4D_Clone328_6.cs 1 12
Gpt4D_Clone328_6.cs 13 20
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    int i = 0;
    while (items[i] < itemsbought && ++i < items.Length)
        discountItem = discount[i];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
7
Gpt4D_Clone328_7.cs 1 12
Gpt4D_Clone328_7.cs 13 18
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items[i] && i < items.Length; discountItem = discount[i++]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
8
Gpt4D_Clone328_8.cs 1 12
Gpt4D_Clone328_8.cs 13 18
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; i != items.Length && itemsbought > items[i]; discountItem = discount[i++]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
9
Gpt4D_Clone328_9.cs 1 12
Gpt4D_Clone328_9.cs 13 19
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for (int i = 0; itemsbought > items [i];) {
        discountItem = discount [i];
        i ++;
        if (i >= items.Length)
            break;
    }
}
----------------------------------------

private static void getDiscount (int [] items, int [] discount, ref int itemsbought, ref int discountItem) {
    for(int i = 0; i < items.Length && itemsbought > items[i]; i++)
        discountItem = discount[i];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
330
0
Gpt4D_Clone330_0.cs 1 24
Gpt4D_Clone330_0.cs 25 36
----------------------------------------

static public bool URLExists (string url) {
    bool result = false;
    WebRequest webRequest = WebRequest.Create (url);
    webRequest.Timeout = 1200;
    webRequest.Method = "HEAD";
    HttpWebResponse response = null;
    try {
        response = (HttpWebResponse) webRequest.GetResponse ();
        result = true;
    }
    catch (WebException webException) {
        Debug.Log (url + " doesn't exist: " + webException.Message);
    }
    finally {
        if (response != null) {
            response.Close ();
        }
    }
    return result;
}
----------------------------------------

public static bool URLExists(string url){
    try{
        var request = (HttpWebRequest)HttpWebRequest.Create(url);
        request.Method = "HEAD";
        using (var response = (HttpWebResponse)request.GetResponse()){
            return response.StatusCode == HttpStatusCode.OK;
        }
    } catch {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
0
Gpt4D_Clone331_0.cs 1 20
Gpt4D_Clone331_0.cs 21 34
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type t = ctor.DeclaringType;
    ParameterExpression pExpr = Expression.Parameter (typeof (object []), "args");
    var parameters = ctor.GetParameters ();
    Expression[] arguments = new Expression[parameters.Length];
    for (int i = 0; i < parameters.Length; i++)
        arguments[i] = Expression.Convert(Expression.ArrayIndex(pExpr, Expression.Constant(i)), parameters[i].ParameterType);
    Expression exp = Expression.Lambda(typeof (ObjectActivator), Expression.New(ctor, arguments), pExpr);
    return (ObjectActivator) exp.Compile ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
1
Gpt4D_Clone331_1.cs 1 20
Gpt4D_Clone331_1.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type t = ctor.DeclaringType;
    ParameterInfo [] pI = ctor.GetParameters ();
    ParameterExpression pExpr = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExpression = new Expression [pI.Length];
    for (int i = 0; i < pI.Length; i ++) {
        argsExpression [i] = Expression.Convert (Expression.ArrayIndex (pExpr, Expression.Constant (i)), pI[i].ParameterType);
    }
    return (ObjectActivator) Expression.Lambda (typeof (ObjectActivator), Expression.New (ctor, argsExpression), pExpr).Compile ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
2
Gpt4D_Clone331_2.cs 1 20
Gpt4D_Clone331_2.cs 21 33
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var paramsInfo = ctor.GetParameters ();
    var param = Expression.Parameter (typeof (object []), "args");
    var argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++)
        argsExp[i] = Expression.Convert (Expression.ArrayIndex (param, Expression.Constant (i)), paramsInfo[i].ParameterType);
    var lambda = Expression.Lambda (typeof (ObjectActivator), Expression.New (ctor, argsExp), param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
3
Gpt4D_Clone331_3.cs 1 20
Gpt4D_Clone331_3.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var parameters = ctor.GetParameters ();
    var argExp = new Expression[parameters.Length];
    var paramExp = Expression.Parameter (typeof (object []), "args");
    for (int i = 0; i < parameters.Length; i++)
        argExp[i] = Expression.Convert(Expression.ArrayIndex(paramExp, Expression.Constant(i)), parameters[i].ParameterType);
    return (ObjectActivator)Expression.Lambda(typeof(ObjectActivator), Expression.New(ctor, argExp), paramExp).Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
4
Gpt4D_Clone331_4.cs 1 20
Gpt4D_Clone331_4.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var type = ctor.DeclaringType;
    var paramsInfo = ctor.GetParameters ();
    var param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = paramsInfo.Select((p, i) => Expression.Convert (Expression.ArrayIndex (param, Expression.Constant (i)), p.ParameterType)).ToArray();
    var lambda = Expression.Lambda (typeof (ObjectActivator), Expression.New (ctor, argsExp), param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
5
Gpt4D_Clone331_5.cs 1 20
Gpt4D_Clone331_5.cs 21 31
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type t = ctor.DeclaringType;
    ParameterExpression pExpr = Expression.Parameter (typeof (object []), "args");
    var parameters = ctor.GetParameters ().Select((p, i) => Expression.Convert(Expression.ArrayIndex(pExpr, Expression.Constant(i)), p.ParameterType)).ToArray();
    var exp = Expression.Lambda(typeof(ObjectActivator), Expression.New(ctor, parameters), pExpr);
    return (ObjectActivator)exp.Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
6
Gpt4D_Clone331_6.cs 1 20
Gpt4D_Clone331_6.cs 21 33
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var paramsInfo = ctor.GetParameters ();
    var param = Expression.Parameter (typeof (object []), "args");
    var argsExp = paramsInfo.Select((p, i) =>
        Expression.Convert(Expression.ArrayIndex(param, Expression.Constant(i)), p.ParameterType)
    ).ToArray();
    var lambdaExp = Expression.Lambda(typeof(ObjectActivator), Expression.New(ctor, argsExp), param);
    return (ObjectActivator)lambdaExp.Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
7
Gpt4D_Clone331_7.cs 1 20
Gpt4D_Clone331_7.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var paramExp = Expression.Parameter(typeof(object[]), "args");
    var arguments = ctor.GetParameters().Select((x, i) =>
        Expression.Convert(Expression.ArrayIndex(paramExp, Expression.Constant(i)), x.ParameterType)
    ).ToArray();
    var newExpr = Expression.New(ctor, arguments);
    return (ObjectActivator)Expression.Lambda(typeof(ObjectActivator), newExpr, paramExp).Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
8
Gpt4D_Clone331_8.cs 1 20
Gpt4D_Clone331_8.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var argsExp = Expression.Parameter(typeof(object[]), "args");
    var constructorArgs = ctor.GetParameters().Select((param, index) =>
        Expression.Convert(Expression.ArrayIndex(argsExp, Expression.Constant(index)), param.ParameterType)
    ).ToArray();
    var newExp = Expression.New(ctor, constructorArgs);
    return (ObjectActivator)Expression.Lambda(typeof(ObjectActivator), newExp, argsExp).Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
9
Gpt4D_Clone331_9.cs 1 20
Gpt4D_Clone331_9.cs 21 32
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    Type type = ctor.DeclaringType;
    ParameterInfo [] paramsInfo = ctor.GetParameters ();
    ParameterExpression param = Expression.Parameter (typeof (object []), "args");
    Expression [] argsExp = new Expression [paramsInfo.Length];
    for (int i = 0; i < paramsInfo.Length; i ++) {
        Expression index = Expression.Constant (i);
        Type paramType = paramsInfo [i].ParameterType;
        Expression paramAccessorExp = Expression.ArrayIndex (param, index);
        Expression paramCastExp = Expression.Convert (paramAccessorExp, paramType);
        argsExp [i] = paramCastExp;
    }
    NewExpression newExp = Expression.New (ctor, argsExp);
    LambdaExpression lambda = Expression.Lambda (typeof (ObjectActivator), newExp, param);
    return (ObjectActivator) lambda.Compile ();
}
----------------------------------------

private ObjectActivator CreateActivator (ConstructorInfo ctor) {
    var arg = Expression.Parameter(typeof(object[]), "args");
    var parameters = ctor.GetParameters().Select((p, i) =>
        Expression.Convert(Expression.ArrayIndex(arg, Expression.Constant(i)), p.ParameterType)
    ).ToArray();
    var lambdaExp = Expression.Lambda(typeof(ObjectActivator), Expression.New(ctor, parameters), arg);
    return (ObjectActivator)lambdaExp.Compile();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
1
Gpt4D_Clone334_1.cs 1 15
Gpt4D_Clone334_1.cs 16 31
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    FileInfo fileInfo = new FileInfo(file_path);
    if (fileInfo.Exists) {
        StreamReader streamReader = new StreamReader(fileInfo.FullName);
        string line;
        int counter = 0;
        while ((line = streamReader.ReadLine()) != null) {
            counter++;
            Console.WriteLine($"{counter}: {line}");
        }
        return true;
    } 
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
2
Gpt4D_Clone334_2.cs 1 15
Gpt4D_Clone334_2.cs 16 30
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (File.Exists(file_path)) {
        var counter = 0;
        using (StreamReader reader = new StreamReader(file_path)) {
            while (!reader.EndOfStream) {
                counter++;
                Console.WriteLine($"{counter} {reader.ReadLine()}");
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
3
Gpt4D_Clone334_3.cs 1 15
Gpt4D_Clone334_3.cs 16 26
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        var lines = File.ReadAllLines(file_path);
        for(int i = 0; i < lines.Length; i++) {
            Console.WriteLine((i+1) + " " + lines[i]);
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
4
Gpt4D_Clone334_4.cs 1 15
Gpt4D_Clone334_4.cs 16 27
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (File.Exists(file_path)) {
        var lines = File.ReadLines(file_path);
        for (int i = 0; i < lines.Count(); i++) {
            Console.WriteLine($"{i+1} {lines.ElementAt(i)}");
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
5
Gpt4D_Clone334_5.cs 1 15
Gpt4D_Clone334_5.cs 16 27
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (File.Exists(file_path)) {
        var lines = File.ReadLines(file_path).Select((s, i) => $"{i+1} {s}");
        foreach (var line in lines) {
            Console.WriteLine(line);
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
7
Gpt4D_Clone334_7.cs 1 15
Gpt4D_Clone334_7.cs 16 25
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        var content = File.ReadAllText(file_path);
        content.Split('\n').Select((line, index) => Console.WriteLine((index + 1) + " " + line)).ToList();
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
8
Gpt4D_Clone334_8.cs 1 15
Gpt4D_Clone334_8.cs 16 25
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (new FileInfo(file_path).Exists) {
        var lines = File.ReadAllLines(file_path);
        Array.ForEach(lines, (line) => Console.WriteLine((Array.IndexOf(lines, line) + 1) + " " + line));
        return true;
     }
     return false;
 }
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
9
Gpt4D_Clone334_9.cs 1 15
Gpt4D_Clone334_9.cs 16 25
----------------------------------------

public static bool init_access (string file_path) {
    if (File.Exists (file_path)) {
        int counter = 0;
        foreach (string line in File.ReadAllLines (file_path)) {
            counter ++;
            Console.WriteLine (counter + " " + line);
        }
        return true;
    }
    return false;
}
----------------------------------------

public static bool init_access(string file_path) {
    if (File.Exists(file_path)) {
        File.ReadLines(file_path).Zip(Enumerable.Range(1, Int32.MaxValue), (line, index) => $"{index} {line}")
           .ToList().ForEach(Console.WriteLine);
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
0
Gpt4D_Clone335_0.cs 1 17
Gpt4D_Clone335_0.cs 18 30
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click2(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var row = myDGV.SelectedRows[0];
        newForm form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(row.Left, row.Bottom);
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
1
Gpt4D_Clone335_1.cs 1 17
Gpt4D_Clone335_1.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click1(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var rowIndex = myDGV.SelectedRows[0].Index;
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = myDGV.Location;
        form.Show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
2
Gpt4D_Clone335_2.cs 1 17
Gpt4D_Clone335_2.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click10(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(myDGV.Left, myDGV.Top);
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
3
Gpt4D_Clone335_3.cs 1 17
Gpt4D_Clone335_3.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click7(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = Cursor.Position;
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
4
Gpt4D_Clone335_4.cs 1 17
Gpt4D_Clone335_4.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click9(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(this.Location.X + myDGV.Width / 2, this.Location.Y + myDGV.Height / 2);
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
5
Gpt4D_Clone335_5.cs 1 17
Gpt4D_Clone335_5.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click8(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(myDGV.Location.X, this.Location.Y + myDGV.Bottom);
        form.Show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
6
Gpt4D_Clone335_6.cs 1 17
Gpt4D_Clone335_6.cs 18 27
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click3(object sender,EventArgs e) {
    if(dataGridView1.SelectedRows.Count > 0) {
        newForm form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = myDGV.SelectedRows[0].Cells[0].ContentBounds.Location;
        form.Show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
7
Gpt4D_Clone335_7.cs 1 17
Gpt4D_Clone335_7.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click4(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = myDGV.PointToScreen(myDGV.GetCellDisplayRectangle(0, myDGV.SelectedRows[0].Index, false).Location);
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
8
Gpt4D_Clone335_8.cs 1 17
Gpt4D_Clone335_8.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click6(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(myDGV.Right, myDGV.Bottom);
        form.Show();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
335
9
Gpt4D_Clone335_9.cs 1 17
Gpt4D_Clone335_9.cs 18 29
----------------------------------------

private void myBtn_Click (object sender, EventArgs e) {
    if (dataGridView1.SelectedRows.Count > 0) {
        var rowIndex = myDGV.SelectedRows [0].Index;
        var row = myDGV.Rows [rowIndex];
        var formLocation = this.Location;
        var gridLocation = myDGV.Location;
        var rowLocation = myDGV.GetRowDisplayRectangle (rowIndex, false).Location;
        newForm form = new newForm ();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = GetPopupStartingLocation (new Point [] {formLocation, gridLocation, rowLocation}, row.Height);
        form.Show (this);
    }
}
----------------------------------------

private void myBtn_Click5(object sender, EventArgs e)
{
    if (dataGridView1.SelectedRows.Count > 0)
    {
        var form = new newForm();
        form.StartPosition = FormStartPosition.Manual;
        form.Location = new Point(this.Location.X+ myDGV.Location.X, this.Location.Y+ myDGV.Location.Y);
        form.Show(this);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
0
Gpt4D_Clone336_0.cs 1 17
Gpt4D_Clone336_0.cs 18 29
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var dirInfo = new DirectoryInfo(HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var getFiles = dirInfo.GetFiles();
    var rnd = new Random();
    var orderedFiles = getFiles.OrderBy(e => rnd.Next()).ToArray();
    var txt = new StringBuilder();
    orderedFiles.Where(file => (file.Extension.ToUpper() == ".JPG") || (file.Extension.ToUpper() == ".JPEG"))
                .ToList()
                .ForEach(s => txt.Append($"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{s.Name}\" />"));
    lbl_Dias.Text += txt.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
1
Gpt4D_Clone336_1.cs 1 17
Gpt4D_Clone336_1.cs 18 33
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    Regex rgx = new Regex(@"\.jpe?g$", RegexOptions.IgnoreCase);
    string path = "/CSS/Design/Page_Design/Dias/1920x1080/";
    var files = Directory.GetFiles(HttpContext.Current.Server.MapPath(path), "*.jpg")
                         .Union(Directory.GetFiles(HttpContext.Current.Server.MapPath(path), "*.jpeg"))
                         .ToList();
    var randomFiles = files.RandomiseList();
    foreach (var file in randomFiles) {
        if (rgx.IsMatch(file)) {
            lbl_Dias.Text += $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(file)}\" />";
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
2
Gpt4D_Clone336_2.cs 1 17
Gpt4D_Clone336_2.cs 18 30
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var dirPath = HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/");
    var randomFiles = new DirectoryInfo(dirPath).GetFiles().OrderBy(g => Guid.NewGuid());
    foreach (var file in randomFiles) {
        var ext = file.Extension.ToUpper();
        if (ext == ".JPEG" || ext == ".JPG") {
            lbl_Dias.Text += String.Format("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{0}\" />", file.Name);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
3
Gpt4D_Clone336_3.cs 1 17
Gpt4D_Clone336_3.cs 18 31
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    string path = HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/");
    Directory.GetFiles(path)
             .OrderBy(f => Guid.NewGuid())
             .ToList()
             .ForEach(f => {
                if (Path.GetExtension(f).Equals(".jpg", StringComparison.OrdinalIgnoreCase) || Path.GetExtension(f).Equals(".jpeg", StringComparison.OrdinalIgnoreCase)) {
                    lbl_Dias.Text += $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(f)}\" />";
                }
             });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
4
Gpt4D_Clone336_4.cs 1 17
Gpt4D_Clone336_4.cs 18 29
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var path = HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/");
    var images = Directory.GetFiles(path).RandomiseList();
    foreach (string img in images) {
        if (new[] { ".jpg", ".jpeg" }.Any(img.ToUpper().EndsWith)) {
                lbl_Dias.Text += $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(img)}\" />";
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
5
Gpt4D_Clone336_5.cs 1 17
Gpt4D_Clone336_5.cs 18 26
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var path = HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/");
    var imagePaths = Directory.EnumerateFiles(path).RandomiseList();
    var images = imagePaths.Where(ip => ip.EndsWith(".jpg", StringComparison.OrdinalIgnoreCase) || ip.EndsWith(".jpeg", StringComparison.OrdinalIgnoreCase));
    lbl_Dias.Text = string.Join("\n", images.Select(i => $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(i)}\" />"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
6
Gpt4D_Clone336_6.cs 1 17
Gpt4D_Clone336_6.cs 18 29
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var getFiles = Directory.GetFiles(HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var imageExtension = new[] { ".JPG", ".JPEG" };
    var txt = string.Join(" ",
                          getFiles.RandomiseList()
                                  .Where(file => imageExtension.Contains(Path.GetExtension(file)?.ToUpper()))
                                  .Select(file => $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(file)}\" />"));
    lbl_Dias.Text += txt;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
7
Gpt4D_Clone336_7.cs 1 17
Gpt4D_Clone336_7.cs 18 29
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    string path = "/CSS/Design/Page_Design/Dias/1920x1080/";
    var files = Directory.EnumerateFiles(HttpContext.Current.Server.MapPath(path))
                         .Select(file => new FileInfo(file))
                         .Where(file => file.Extension.ToUpper() == ".JPG" || file.Extension == ".JPEG")
                         .RandomiseList()
                         .Select(file => $"<img src=\"{path}{file.Name}\" />");
    lbl_Dias.Text += string.Join("", files);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
8
Gpt4D_Clone336_8.cs 1 17
Gpt4D_Clone336_8.cs 18 27
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    var images = Directory.EnumerateFiles("/CSS/Design/Page_Design/Dias/1920x1080/", "*.*", SearchOption.AllDirectories)
                          .Where(s => s.ToUpper().EndsWith(".JPG") || s.ToUpper().EndsWith(".JPEG"))
                          .Select(Path.GetFileName)
                          .RandomiseList();
    lbl_Dias.Text += string.Join(Environment.NewLine, images.Select(name => $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{name}\" />"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
9
Gpt4D_Clone336_9.cs 1 17
Gpt4D_Clone336_9.cs 18 26
----------------------------------------

protected void DiasShow () {
    var getFiles = Directory.GetFiles (HttpContext.Current.Server.MapPath ("/CSS/Design/Page_Design/Dias/1920x1080/"));
    var random = RandomiseList (getFiles);
    var txt = new StringBuilder ();
    foreach (var randomFileName in random) {
        var fileType = System.IO.Path.GetExtension (randomFileName).ToUpper ();
        if ((fileType == ".JPG") || (fileType == ".JPEG")) {
            var imageName = System.IO.Path.GetFileName (randomFileName);
            txt.Append ("<img src=\"CSS/Design/Page_Design/Dias/1920x1080/" + imageName + "\" />");
        }
    }
    lbl_Dias.Text += txt.ToString ();
}
----------------------------------------

protected void DiasShow() {
    Directory.GetFiles(HttpContext.Current.Server.MapPath("/CSS/Design/Page_Design/Dias/1920x1080/"))
             .RandomiseList()
             .Where(f => f.EndsWith(".jpg", StringComparison.OrdinalIgnoreCase) || f.EndsWith(".jpeg", StringComparison.OrdinalIgnoreCase))
             .ToList()
             .ForEach(f => lbl_Dias.Text += $"<img src=\"CSS/Design/Page_Design/Dias/1920x1080/{Path.GetFileName(f)}\" />");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
1
Gpt4D_Clone33_1.cs 1 19
Gpt4D_Clone33_1.cs 20 39
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Func<Dictionary<long, uint>> construct = () =>
    {
        var dico = new Dictionary<long, uint>();
        for(long i = 0; i < 7500000; i++) dico[i] = (uint)i;
        return dico;
    };
    
    var data = new Test {Data = construct()};
    Serializer.PrepareSerializer<Test>();
    Serializer.Serialize(new StreamWriter("data.dat").BaseStream, data);
    data.Data.Clear();
    data = Serializer.Merge<Test>(new StreamReader("data.dat").BaseStream);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
2
Gpt4D_Clone33_2.cs 1 19
Gpt4D_Clone33_2.cs 20 37
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary<long, uint>(7500000);
    Parallel.For(0, 7500000, i =>
    {
        dico[(long)i] = (uint)i;
    });
    var data = new Test {Data = dico};
    Serializer.Serialize(File.Create("data.dat"), data);
    dico.Clear();
    Serializer.Merge<Test>(File.OpenRead("data.dat"), data);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
3
Gpt4D_Clone33_3.cs 1 19
Gpt4D_Clone33_3.cs 20 37
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var numbers = Enumerable.Range(0, 7500000);
    var dico = numbers.ToDictionary(num => (long)num, num => (uint)num);
    var data = new Test {Data = dico};
    using(var fileStream = new FileStream("data.dat", FileMode.Create))
        Serializer.Serialize(fileStream, data);
    dico.Clear();
    using(var fileStream = new FileStream("data.dat", FileMode.Open))
        Serializer.Merge(fileStream, data);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
4
Gpt4D_Clone33_4.cs 1 19
Gpt4D_Clone33_4.cs 20 38
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    var dico = new ConcurrentDictionary<long, uint>();
    Parallel.For(0, 7500000, i => 
    {
        dico.TryAdd((long)i, (uint)i);
    });
    Serializer.PrepareSerializer<Test>();
    var data = new Test {Data = new Dictionary<long, uint>(dico)};
    Serializer.Serialize(File.OpenWrite("data.dat"), data);
    dico.Clear();
    data = Serializer.Merge<Test>(File.OpenRead("data.dat"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
5
Gpt4D_Clone33_5.cs 1 19
Gpt4D_Clone33_5.cs 20 35
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dict = new Dictionary<long, uint>(7500000);
    for (long i = 0; i < 7500000; i++)
        dict.Add(i, (uint)i);
    var data = new Test {Data = dict};
    Serializer.Serialize(File.Open("data.dat", FileMode.Create), data);
    dict.Clear();
    Serializer.Merge<Test>(File.OpenRead("data.dat"), data);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
6
Gpt4D_Clone33_6.cs 1 19
Gpt4D_Clone33_6.cs 20 34
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = Enumerable.Range(0, 7500000).ToDictionary(i => (long)i, i => (uint)i);
    var data = new Test {Data = dico};
    var json = JsonConvert.SerializeObject(data);
    File.WriteAllText("data.dat", json);
    data.Data.Clear();
    json = File.ReadAllText("data.dat");
    data = JsonConvert.DeserializeObject<Test>(json);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
7
Gpt4D_Clone33_7.cs 1 19
Gpt4D_Clone33_7.cs 20 33
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    var dico = new Dictionary < long, uint > ();
    for (ulong i = 0; i < 7500000; i ++) dico[(long)i] = (uint)i;
    Serializer.PrepareSerializer < Test > ();
    var data = new Test {Data = dico};
    Serializer.Serialize (File.Open ("data.dat", FileMode.Create), data);
    data.Data?.Clear();
    Serializer.Merge < Test > (File.Open("data.dat", FileMode.Open), data);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
8
Gpt4D_Clone33_8.cs 1 19
Gpt4D_Clone33_8.cs 20 33
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dic = Enumerable.Range(0, 7500000).ToDictionary(i => (long)i, i => (uint)i);
    var data = new Test {Data = dic};
    Serializer.Serialize(File.OpenWrite("data.dat"), data);
    data.Data.Clear();
    Serializer.Merge<Test>(File.OpenRead("data.dat"), data);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
9
Gpt4D_Clone33_9.cs 1 19
Gpt4D_Clone33_9.cs 20 33
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var dico = new Dictionary < long, uint > ();
    for (long i = 0; i < 7500000; i ++) {
        dico.Add (i, (uint) i);
    }
    var data = new Test {Data = dico};
    using (var stream = File.OpenWrite ("data.dat"))
    {
        Serializer.Serialize (stream, data);
    } dico.Clear ();
    using (var stream = File.OpenRead ("data.dat"))
    {
        Serializer.Merge < Test > (stream, data);
    }}
----------------------------------------

public static void Main () {
    Serializer.PrepareSerializer < Test > ();
    var data = new Test
    {
        Data = Enumerable.Range(0, 7500000)
                .ToDictionary(i => (long)i, i => (uint)i)
    };
    File.WriteAllBytes("data.dat", Serializer.Serialize(data));
    data.Data.Clear();
    data = Serializer.Merge<Test>(File.ReadAllBytes("data.dat"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
1
Gpt4D_Clone342_1.cs 1 13
Gpt4D_Clone342_1.cs 14 25
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e) {
    if (e.Index < 0)
        return;
    if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
        e = new DrawItemEventArgs (e.Graphics, e.Font, e.Bounds, e.Index, e.State ^ DrawItemState.Selected, e.ForeColor, Color.Yellow);
    e.DrawBackground ();
    e.Graphics.DrawString (listBox1.Items [e.Index].ToString (), e.Font, Brushes.Black, e.Bounds, StringFormat.GenericDefault);
    e.DrawFocusRectangle ();
}
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e)
{
    if (e.Index < 0)
        return;
    var color = (e.State & DrawItemState.Selected) == DrawItemState.Selected  ? Brushes.Yellow : Brushes.White;
    e.Graphics.FillRectangle(color, e.Bounds);
    e.Graphics.DrawString(listBox1.Items [e.Index].ToString(), e.Font, new SolidBrush(e.ForeColor), e.Bounds, StringFormat.GenericDefault);
    e.DrawFocusRectangle ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
2
Gpt4D_Clone342_2.cs 1 13
Gpt4D_Clone342_2.cs 14 27
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e) {
    if (e.Index < 0)
        return;
    if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
        e = new DrawItemEventArgs (e.Graphics, e.Font, e.Bounds, e.Index, e.State ^ DrawItemState.Selected, e.ForeColor, Color.Yellow);
    e.DrawBackground ();
    e.Graphics.DrawString (listBox1.Items [e.Index].ToString (), e.Font, Brushes.Black, e.Bounds, StringFormat.GenericDefault);
    e.DrawFocusRectangle ();
}
----------------------------------------

private void listBox1_DrawItem (object sender, DrawItemEventArgs e)
{
    if (e.Index >= 0)
    {
        if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
            e = new DrawItemEventArgs (e.Graphics, e.Font, e.Bounds, e.Index, e.State, e.ForeColor, Color.White);
        e.DrawBackground ();
        e.Graphics.DrawString (listBox1.Items [e.Index].ToString (), e.Font, Brushes.Black, e.Bounds);
        e.DrawFocusRectangle ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
0
Gpt4D_Clone345_0.cs 1 36
Gpt4D_Clone345_0.cs 37 64
----------------------------------------

static void Main (string [] args) {
    Console.Clear ();
    Console.ForegroundColor = ConsoleColor.Gray;
    Dictionary < string, string [] > skins = new Dictionary < string, string [] > ();
    skins.Add ("ahri", new string [] {"Academy", "Challenger", "Dynasty", "Foxfire", "Midnight", "Popstar"});
    skins.Add ("leesin", new string [] {"Traditional", "Acolyte", "Dragon Fist", "Musy Thai", "Pool Party", "SKT T1", "Knockout"});
    Console.WriteLine ("Conor's Random League of Legends Skin Selector v0.1\r\n\r\n");
    Console.WriteLine ("What champion would you like to select a skin for? \r\nPress enter for a random champion...    ");
    var champion = Console.ReadLine ();
    var rnd = new Random ();
    if (champion.Equals (string.Empty)) {
        var tmpList = Enumerable.ToList (skins.Keys);
        champion = tmpList [rnd.Next (tmpList.Count)];
    } else {
        champion = champion.Trim ().ToLower ();
    }
    Console.Write (string.Format ("Champion {0} Selected \r\n", champion));
    if (skins.ContainsKey (champion)) {
        Console.WriteLine (string.Format ("Your random skin for {0} is: {1}\r\n", champion, skins [champion] [rnd.Next (skins [champion].Length)]));
    } else {
        Console.Clear ();
        Main (args);
    }
}
public class LoL
{
    private Dictionary<string, string[]> skins = new Dictionary<string, string[]>
    {
        {"ahri", new[] {"Academy", "Challenger", "Dynasty", "Foxfire", "Midnight", "Popstar"}},
        {"leesin", new[] {"Traditional", "Acolyte", "Dragon Fist", "Musy Thai", "Iron Monk", "SKT1", "Knockout"}}
    };
    private readonly Random rnd = new Random();
----------------------------------------

    public void Start()
    {
        var input = GetChampion();
        Console.WriteLine(SelectSkin(input));
    }
    private string GetChampion()
    {
        Console.WriteLine("Name a champion:");
        return Console.ReadLine()??"";
    }
    private string SelectSkin(string champion)
    {
        string[] outfits;
        if (skins.ContainsKey(champion)) 
        {
            outfits = skins[champion];
        }
        else
        {
            Console.WriteLine("Champion not found:");
            outfits = skins.Values.ElementAt(rnd.Next(skins.Count));
        }
        return outfits[rnd.Next(outfits.Length)];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
1
Gpt4D_Clone345_1.cs 1 36
Gpt4D_Clone345_1.cs 37 64
----------------------------------------

static void Main (string [] args) {
    Console.Clear ();
    Console.ForegroundColor = ConsoleColor.Gray;
    Dictionary < string, string [] > skins = new Dictionary < string, string [] > ();
    skins.Add ("ahri", new string [] {"Academy", "Challenger", "Dynasty", "Foxfire", "Midnight", "Popstar"});
    skins.Add ("leesin", new string [] {"Traditional", "Acolyte", "Dragon Fist", "Musy Thai", "Pool Party", "SKT T1", "Knockout"});
    Console.WriteLine ("Conor's Random League of Legends Skin Selector v0.1\r\n\r\n");
    Console.WriteLine ("What champion would you like to select a skin for? \r\nPress enter for a random champion...    ");
    var champion = Console.ReadLine ();
    var rnd = new Random ();
    if (champion.Equals (string.Empty)) {
        var tmpList = Enumerable.ToList (skins.Keys);
        champion = tmpList [rnd.Next (tmpList.Count)];
    } else {
        champion = champion.Trim ().ToLower ();
    }
    Console.Write (string.Format ("Champion {0} Selected \r\n", champion));
    if (skins.ContainsKey (champion)) {
        Console.WriteLine (string.Format ("Your random skin for {0} is: {1}\r\n", champion, skins [champion] [rnd.Next (skins [champion].Length)]));
    } else {
        Console.Clear ();
        Main (args);
    }
}
public class LoL
{
    private Dictionary<string, string[]> skins = new Dictionary<string, string[]>
    {
        {"ahri", new[] {"Academy", "Challenger", "Dynasty", "Foxfire", "Midnight", "Popstar"}},
        {"leesin", new[] {"Traditional", "Acolyte", "Dragon Fist", "Musy Thai", "Iron Monk", "SKT1", "Knockout"}}
    };
    private readonly Random rnd = new Random();
----------------------------------------

    public void Start()
    {
        var input = GetChampion();
        Console.WriteLine(SelectSkin(input));
    }
    private string GetChampion()
    {
        Console.WriteLine("Name a champion:");
        return Console.ReadLine()??"";
    }
    private string SelectSkin(string champion)
    {
        string[] outfits;
        if (skins.ContainsKey(champion)) 
        {
            outfits = skins[champion];
        }
        else
        {
            Console.WriteLine("Champion not found:");
            outfits = skins.Values.ElementAt(rnd.Next(skins.Count));
        }
        return outfits[rnd.Next(outfits.Length)];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
0
Gpt4D_Clone350_0.cs 1 29
Gpt4D_Clone350_0.cs 30 29
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
 public override void WellKnownBinary (Stream sout) {
    var header = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (header);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    var ringCount = BitConverter.GetBytes (this.Rings.Count);
    sout.Write (ringCount, 0, 4);
    this.Rings.ForEach(ring => {
        var ringSize = BitConverter.GetBytes (ring.Count);
        sout.Write (ringSize, 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    });
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
1
Gpt4D_Clone350_1.cs 1 29
Gpt4D_Clone350_1.cs 30 29
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
 public override void WellKnownBinary (Stream sout) {
    byte endian = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (endian);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    byte[] ringsCount = BitConverter.GetBytes (this.Rings.Count);
    sout.Write (ringsCount, 0, 4);
    foreach (var ring in this.Rings) {
        byte[] ringCount = BitConverter.GetBytes (ring.Count);
        sout.Write (ringCount, 0, 4);
        foreach (var pos in ring) {
            pos.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
2
Gpt4D_Clone350_2.cs 1 27
Gpt4D_Clone350_2.cs 28 27
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
 public override void WellKnownBinary (Stream sout) {
    byte endian = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (endian);
    WriteData(sout, GeoBase.PolygonWkbs);
    WriteData(sout, BitConverter.GetBytes (this.Rings.Count));
    foreach (var ring in this.Rings) {
        WriteData(sout, BitConverter.GetBytes (ring.Count));
        foreach (var pos in ring) {
            pos.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
3
Gpt4D_Clone350_3.cs 1 15
Gpt4D_Clone350_3.cs 16 27
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    byte endianByte = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (endianByte);
    sout.Write (GeoBase.PolygonWkbs, 0, GeoBase.PolygonWkbs.Length);
    WriteCountToStream(sout, this.Rings.Count);
    this.Rings.ForEach(ring => {
        WriteCountToStream(sout, ring.Count);
        ring.ForEach(pos => pos.WellKnownBinary (sout));
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
4
Gpt4D_Clone350_4.cs 1 15
Gpt4D_Clone350_4.cs 16 29
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    byte endianOrder = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (endianOrder);
    sout.Write (GeoBase.PolygonWkbs, 0, GeoBase.PolygonWkbs.Length);
    WriteIntToStream(sout, this.Rings.Count);
    foreach (var ring in this.Rings) {
        WriteIntToStream(sout, ring.Count);
        foreach (var pos in ring) {
            pos.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
5
Gpt4D_Clone350_5.cs 1 15
Gpt4D_Clone350_5.cs 16 28
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    byte order = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (order);
    WriteToStream(sout, GeoBase.PolygonWkbs);
    WriteToStream(sout, BitConverter.GetBytes (this.Rings.Count));
    this.Rings.ForEach(ring => {
        WriteToStream(sout, BitConverter.GetBytes (ring.Count));
        ring.ForEach(pos => pos.WellKnownBinary (sout));
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
6
Gpt4D_Clone350_6.cs 1 15
Gpt4D_Clone350_6.cs 16 28
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    byte littleEndian = BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0;
    sout.WriteByte (littleEndian);
    sout.Write (GeoBase.PolygonWkbs, 0, GeoBase.PolygonWkbs.Length);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, sizeof(int));
    this.Rings.ToList().ForEach(ring => {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, sizeof(int));
        ring.ForEach(position => position.WellKnownBinary (sout));
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
7
Gpt4D_Clone350_7.cs 1 15
Gpt4D_Clone350_7.cs 16 29
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte ((byte) (BitConverter.IsLittleEndian ? 1 : 0));
    sout.Write (GeoBase.PolygonWkbs, 0, GeoBase.PolygonWkbs.Length);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, sizeof(int));
    foreach (var currentRing in this.Rings) {
        sout.Write (BitConverter.GetBytes (currentRing.Count), 0, sizeof(int));
        foreach (var currentPosition in currentRing) {
            currentPosition.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
350
8
Gpt4D_Clone350_8.cs 1 15
Gpt4D_Clone350_8.cs 16 26
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte (BitConverter.IsLittleEndian ? (byte) 1 : (byte) 0);
    sout.Write (GeoBase.PolygonWkbs, 0, 4);
    sout.Write (BitConverter.GetBytes (this.Rings.Count), 0, 4);
    foreach (var ring in this.Rings) {
        sout.Write (BitConverter.GetBytes (ring.Count), 0, 4);
        foreach (var position in ring) {
            position.WellKnownBinary (sout);
        }
    }
}
----------------------------------------

public override void WellKnownBinary (Stream sout) {
    sout.WriteByte ((byte) (BitConverter.IsLittleEndian ? 1 : 0));
    WriteBytes(sout, GeoBase.PolygonWkbs);
    WriteBytes(sout, BitConverter.GetBytes (this.Rings.Count));
    this.Rings.ForEach(ring => {
        WriteBytes(sout, BitConverter.GetBytes (ring.Count));
        ring.ForEach(pos => pos.WellKnownBinary (sout));
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
0
Gpt4D_Clone35_0.cs 1 14
Gpt4D_Clone35_0.cs 15 28
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles() 
{
    OpenFileDialog pfdlg = new OpenFileDialog();
    pfdlg.Multiselect = true;
    var result = pfdlg.ShowDialog();
    if (result.GetValueOrDefault()) 
    {
        uploadFileList.Clear();
        uploadFileList.AddRange(pfdlg.FileNames);
        SelectedFileText.Text = string.Join("\n", uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
1
Gpt4D_Clone35_1.cs 1 14
Gpt4D_Clone35_1.cs 15 25
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles() {
    OpenFileDialog fileDialog = new OpenFileDialog();
    fileDialog.Multiselect = true;
    bool? userClickedOK = fileDialog.ShowDialog();
    if(userClickedOK == true) {
        uploadFileList.Clear();
        uploadFileList.AddRange(fileDialog.FileNames.ToList());
        SelectedFileText.Text = string.Join("\n", uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
2
Gpt4D_Clone35_2.cs 1 14
Gpt4D_Clone35_2.cs 15 27
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles()
{
    OpenFileDialog dlg = new OpenFileDialog();
    dlg.Multiselect = true;
    if (dlg.ShowDialog().GetValueOrDefault()) 
    {
        uploadFileList.Clear();
        uploadFileList.AddRange(dlg.FileNames);
        SelectedFileText.Text = string.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
3
Gpt4D_Clone35_3.cs 1 14
Gpt4D_Clone35_3.cs 15 27
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles() 
{
    OpenFileDialog dlg = new OpenFileDialog();
    dlg.Multiselect = true;
    if (dlg.ShowDialog() == true) 
    {
        uploadFileList.Clear();
        uploadFileList.AddRange(dlg.FileNames);
        SelectedFileText.Text = string.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
4
Gpt4D_Clone35_4.cs 1 14
Gpt4D_Clone35_4.cs 15 27
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles() 
{
    OpenFileDialog dialog = new OpenFileDialog();
    dialog.Multiselect = true;
    if (dialog.ShowDialog().GetValueOrDefault(false))
    {
        uploadFileList.Clear();
        uploadFileList.AddRange(dialog.FileNames);
        SelectedFileText.Text = string.Join("\n", uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
5
Gpt4D_Clone35_5.cs 1 14
Gpt4D_Clone35_5.cs 15 27
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles()
{
    OpenFileDialog myDialog = new OpenFileDialog();
    myDialog.Multiselect = true;
    Nullable<bool> result = myDialog.ShowDialog();
    if (result.HasValue && result.Value) 
    {
        uploadFileList = myDialog.FileNames.ToList();
        SelectedFileText.Text = String.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
6
Gpt4D_Clone35_6.cs 1 14
Gpt4D_Clone35_6.cs 15 26
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles() 
{
    OpenFileDialog dlg = new OpenFileDialog { Multiselect = true };
    if (dlg.ShowDialog().GetValueOrDefault()) 
    {
        uploadFileList.Clear();
        uploadFileList.AddRange(dlg.FileNames);
        SelectedFileText.Text = uploadFileList.Aggregate((a, b) => a + '\n' + b);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
7
Gpt4D_Clone35_7.cs 1 14
Gpt4D_Clone35_7.cs 15 26
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles()
{
    OpenFileDialog dlg = new OpenFileDialog() { Multiselect = true };
    if (dlg.ShowDialog() == true)
    {
        uploadFileList?.Clear();
        uploadFileList?.AddRange(dlg.FileNames);
        SelectedFileText.Text = String.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
8
Gpt4D_Clone35_8.cs 1 14
Gpt4D_Clone35_8.cs 15 25
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles()
{
    OpenFileDialog dlg = new OpenFileDialog() { Multiselect = true };
    if (dlg.ShowDialog() == true)
    {
        uploadFileList = new List<string>(dlg.FileNames);
        SelectedFileText.Text = String.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
35
9
Gpt4D_Clone35_9.cs 1 14
Gpt4D_Clone35_9.cs 15 25
----------------------------------------

public void SelectFiles () {
    dlg = new Microsoft.Win32.OpenFileDialog ();
    dlg.Multiselect = true;
    Nullable < bool > result = dlg.ShowDialog ();
    if (result == true) {
        uploadFileList.Clear ();
        uploadFileList.AddRange (dlg.FileNames);
        SelectedFileText.Text = String.Join (Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

public void SelectFiles()
{
    var dialog = new OpenFileDialog() { Multiselect = true };
    if ((bool) dialog.ShowDialog()) 
    {
        uploadFileList = dialog.FileNames.ToList();
        SelectedFileText.Text = String.Join(Environment.NewLine, uploadFileList);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
0
Gpt4D_Clone368_0.cs 1 26
Gpt4D_Clone368_0.cs 27 38
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
	    List<byte> leadingZerosGuarded = new List<byte>();
	    for(int i = 0; i < 4; i++){
		byte temp = (byte)(value>>((3-i)*8));
		if (temp != 0 || leadingZerosGuarded.Count > 0)
		    leadingZerosGuarded.Add(temp);
	    }
	    leadingZerosGuarded.CopyTo(buffer, index);
	    
	    return index + leadingZerosGuarded.Count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
1
Gpt4D_Clone368_1.cs 1 26
Gpt4D_Clone368_1.cs 27 34
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    buffer[index++] = (byte)(value >> 24);
    buffer[index++] = (byte)(value >> 16);
    buffer[index++] = (byte)(value >> 8);
    buffer[index++] = (byte)value;
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
2
Gpt4D_Clone368_2.cs 1 26
Gpt4D_Clone368_2.cs 27 34
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte [] buffer, int index) {
    MemoryStream memoryStream = new MemoryStream(buffer);
    memoryStream.Position = index;
    BinaryWriter writer = new BinaryWriter(memoryStream);
    writer.Write(value);
    return (int)memoryStream.Position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
3
Gpt4D_Clone368_3.cs 1 26
Gpt4D_Clone368_3.cs 27 36
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
	    for (int i = 3; i >= 0 ; i--) {
		byte temp = (byte)((value >> (i * 8)) & 0xFF);
		if (temp != 0 || i == 0 || buffer[index-1] != 0)
		    buffer[index++] = temp;
	    }
	    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
4
Gpt4D_Clone368_4.cs 1 26
Gpt4D_Clone368_4.cs 27 34
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    EncodeByte(buffer, ref index, (value > > 24) & 0xFF);
    EncodeByte(buffer, ref index, (value > > 16) & 0xFF);
    EncodeByte(buffer, ref index, (value > > 8) & 0xFF);
    EncodeByte(buffer, ref index, value & 0xFF);
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
5
Gpt4D_Clone368_5.cs 1 26
Gpt4D_Clone368_5.cs 27 33
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    var bytes = BitConverter.GetBytes(value);
    Array.Reverse(bytes);
    Array.Copy(bytes, 0, buffer, index, bytes.Length);
    return index + bytes.Length;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
6
Gpt4D_Clone368_6.cs 1 26
Gpt4D_Clone368_6.cs 27 33
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    for(int i = 0; i < 4; i++) {
        buffer[index + i] = (byte) (value >> (24 - (i * 8)));
    }
    return index + 4;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
7
Gpt4D_Clone368_7.cs 1 26
Gpt4D_Clone368_7.cs 27 32
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    byte[] result = BitConverter.GetBytes(value).Reverse().ToArray();
    Buffer.BlockCopy(result, 0, buffer, index, 4);
    return index + 4;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
368
8
Gpt4D_Clone368_8.cs 1 26
Gpt4D_Clone368_8.cs 27 31
----------------------------------------

private static int Encode (int value, byte [] buffer, int index) {
    byte temp;
    bool leading = true;
    temp = (value > > 24) & 0xFF;
    if (temp > 0) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 16) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = (value > > 8) & 0xFF;
    if (temp > 0 || leading == false) {
        buffer [index ++] = temp;
        leading = false;
    }
    temp = value & 0xFF;
    buffer [index ++] = temp;
    return index;
}
----------------------------------------

private static int Encode(int value, byte[] buffer, int index) {
    Array.Copy(BitConverter.GetBytes(value), 0, buffer, index, 4);
    return index + 4;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
370
0
Gpt4D_Clone370_0.cs 1 20
Gpt4D_Clone370_0.cs 21 20
----------------------------------------

static void Main (string [] args) {
    Thread thread = new Thread (new ThreadStart (Zombie));
    thread.Start ();
    Thread.Sleep (500);
    thread.Abort ();
    Monitor.Enter (_lock);
    Console.WriteLine ("Main entered");
    Console.ReadKey ();
}
private static void LoggedMethod(string message)
{
    lock(_lock)
    {
        Console.WriteLine(message);
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
372
0
Gpt4D_Clone372_0.cs 1 13
Gpt4D_Clone372_0.cs 14 24
----------------------------------------

public void doWork () {
    int h = 0;
    do
        {
            Thread.Sleep (3000);
            h.Dump ();
            h ++;
        } while (true);
}
----------------------------------------

public void doWork () {
    int h = 0;
    while (true)
        {
            Thread.Sleep (3000);
            Console.WriteLine(h);
            h++;
        } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
373
0
Gpt4D_Clone373_0.cs 1 20
Gpt4D_Clone373_0.cs 21 20
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg == 0x20a) {
        Point pos = new Point (m.LParam.ToInt32 () & 0xffff, m.LParam.ToInt32 () > > 16);
        IntPtr hWnd = WindowFromPoint (pos);
        if (hWnd != IntPtr.Zero && hWnd != m.HWnd && Control.FromHandle (hWnd) != null) {
            SendMessage (hWnd, m.Msg, m.WParam, m.LParam);
            return true;
        }
    }
    return false;
}
bool SendIt(IntPtr handle, Message message)
{
    SendMessage(handle, message.Msg, message.WParam, message.LParam);
    return true;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
0
Gpt4D_Clone375_0.cs 1 19
Gpt4D_Clone375_0.cs 20 33
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    var isTargetMessage = m.Msg == 0x20a;
    if (!isTargetMessage)
        return false;
    var mousePosition = new Point(m.LParam.ToInt32());
    var targetControl = Control.FromHandle(WindowFromPoint(mousePosition));
    if (targetControl != mCtrl) 
        return false;
    FireMouseWheelEvent(m, mousePosition);
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
1
Gpt4D_Clone375_1.cs 1 19
Gpt4D_Clone375_1.cs 20 31
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
   var isMessageMatched = m.Msg == 0x20a;
   if (!isMessageMatched) return false;
   var mouseAbsolutePosition = new Point(m.LParam.ToInt32());
   if (BuildControlFromPoint(mouseAbsolutePosition) != mCtrl)  return false;
   var mouseEventArgs = BuildMouseEventArgs(m, mouseAbsolutePosition);
   mOnMouseWheel(mouseEventArgs);
   return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
2
Gpt4D_Clone375_2.cs 1 19
Gpt4D_Clone375_2.cs 20 31
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    var isMsgMatched = m.Msg == 0x20a;
    if (!isMsgMatched) return false;
    var mouseAbsolutePosition = new Point(m.LParam.ToInt32());
    if (Control.FromHandle(WindowFromPoint(mouseAbsolutePosition)) != mCtrl) return false;
    var e = new MouseEventArgs(GetMouseButtons(m.WParam.ToInt32()), 0, mCtrl.PointToClient(mouseAbsolutePosition).X, mCtrl.PointToClient(mouseAbsolutePosition).Y, m.WParam.ToInt32() >> 16);
    mOnMouseWheel(e);
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
3
Gpt4D_Clone375_3.cs 1 19
Gpt4D_Clone375_3.cs 20 32
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
   if(m.Msg == 0x20a) {
      var pos = new Point(m.LParam.ToInt32());
      var relPos = mCtrl.PointToClient(pos);
      if(Control.FromHandle(WindowFromPoint(pos)) == mCtrl) {
         var args = new MouseEventArgs(GetMouseButtons(m.WParam.ToInt32()), 0, relPos.X, relPos.Y, m.WParam.ToInt32() >> 16);
         mOnMouseWheel(args);
         return true;
      }
   }
   return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
4
Gpt4D_Clone375_4.cs 1 19
Gpt4D_Clone375_4.cs 20 34
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    bool returnValue = false;
    if (m.Msg == 0x20a) {
        var point = new Point(m.LParam.ToInt32());
        var control = Control.FromHandle(WindowFromPoint(point));
        if (control == mCtrl) {
            TriggerMouseWheel(m, point);
            returnValue = true;
        }
    }
    return returnValue;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
5
Gpt4D_Clone375_5.cs 1 19
Gpt4D_Clone375_5.cs 20 34
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    bool result = false;
    if (m.Msg == Constant.MessageValue){
        var absolutePosition = GetMessagePoint(m.LParam.ToInt32());
        bool isControlMatched = IsControlMatchedWithMouse(mCtrl, absolutePosition, WindowFromPoint);
        if(isControlMatched){
            ProcessOnMouseWheel(m, absolutePosition);
            result = true;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
6
Gpt4D_Clone375_6.cs 1 19
Gpt4D_Clone375_6.cs 20 33
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    bool returnVal = false;
    if(m.Msg == 0x20a) {
        var p = new Point (m.LParam.ToInt32 ());
        if(Control.FromHandle(WindowFromPoint(p)) == mCtrl){
            mOnMouseWheel(new MouseEventArgs (GetMouseButtons (m.WParam.ToInt32 ()), 0, mCtrl.PointToClient (p).X, mCtrl.PointToClient (p).Y, m.WParam.ToInt32 () > > 16));
            returnVal = true;
        }
    }
    return returnVal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
7
Gpt4D_Clone375_7.cs 1 19
Gpt4D_Clone375_7.cs 20 33
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

 
public bool PreFilterMessage(ref Message message) {
    if (message.Msg != 0x20a) {
        return false;
    }
    var mousePosition = new Point(message.LParam.ToInt32());
    if (Control.FromHandle(WindowFromPoint(mousePosition)) != mCtrl) {
        return false;
    }
    InvokeMouseWheel(message, mousePosition);
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
8
Gpt4D_Clone375_8.cs 1 19
Gpt4D_Clone375_8.cs 20 29
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    if(m.Msg != 0x20a || Control.FromHandle(WindowFromPoint(new Point(m.LParam.ToInt32()))) != mCtrl)
        return false;
    mOnMouseWheel(new MouseEventArgs(GetMouseButtons(m.WParam.ToInt32()), 0, mCtrl.PointToClient(new Point(m.LParam.ToInt32())).X, 
                   mCtrl.PointToClient(new Point(m.LParam.ToInt32())).Y, m.WParam.ToInt32() >> 16));
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
9
Gpt4D_Clone375_9.cs 1 19
Gpt4D_Clone375_9.cs 20 29
----------------------------------------

public bool PreFilterMessage (ref Message m) {
    if (m.Msg != 0x20a)
        return false;
    Point mouseAbsolutePosition = new Point (m.LParam.ToInt32 ());
    Point mouseRelativePosition = mCtrl.PointToClient (mouseAbsolutePosition);
    IntPtr hControlUnderMouse = WindowFromPoint (mouseAbsolutePosition);
    Control controlUnderMouse = Control.FromHandle (hControlUnderMouse);
    if (controlUnderMouse != mCtrl)
        return false;
    MouseButtons buttons = GetMouseButtons (m.WParam.ToInt32 ());
    int delta = m.WParam.ToInt32 () > > 16;
    var e = new MouseEventArgs (buttons, 0, mouseRelativePosition.X, mouseRelativePosition.Y, delta);
    mOnMouseWheel (e);
    return true;
}
----------------------------------------

public bool PreFilterMessage(ref Message m) {
    if (!(m.Msg == 0x20a && Control.FromHandle(WindowFromPoint(new Point(m.LParam.ToInt32()))) == mCtrl))
        return false;
    mOnMouseWheel(new MouseEventArgs(GetMouseButtons(m.WParam.ToInt32()), 0, mCtrl.PointToClient(new Point(m.LParam.ToInt32())).X, 
                   mCtrl.PointToClient(new Point(m.LParam.ToInt32())).Y, m.WParam.ToInt32() >> 16));
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
0
Gpt4D_Clone377_0.cs 1 12
Gpt4D_Clone377_0.cs 13 27
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (suppressNotification == true)
    {
        return;
    }
    else
    {
        base.OnCollectionChanged(e);
        CollectionChanged?.Invoke(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
2
Gpt4D_Clone377_2.cs 1 12
Gpt4D_Clone377_2.cs 13 27
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if(!suppressNotification)
    {
        base.OnCollectionChanged(e);
        if(CollectionChanged != null)
        {
            CollectionChanged(this, e);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
4
Gpt4D_Clone377_4.cs 1 12
Gpt4D_Clone377_4.cs 13 24
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if(!suppressNotification)
    {
        base.OnCollectionChanged(e);
        if(CollectionChanged != null)
            CollectionChanged(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
5
Gpt4D_Clone377_5.cs 1 12
Gpt4D_Clone377_5.cs 13 25
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (!suppressNotification)
    {
        base.OnCollectionChanged(e);
        if (CollectionChanged != null)
            CollectionChanged(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
7
Gpt4D_Clone377_7.cs 1 12
Gpt4D_Clone377_7.cs 13 24
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if(suppressNotification == false)
    {
        base.OnCollectionChanged(e);
        if(CollectionChanged != null)
            CollectionChanged(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
8
Gpt4D_Clone377_8.cs 1 12
Gpt4D_Clone377_8.cs 13 23
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if(suppressNotification == false)
    {
        base.OnCollectionChanged(e);
        CollectionChanged?.Invoke(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
377
9
Gpt4D_Clone377_9.cs 1 12
Gpt4D_Clone377_9.cs 13 23
----------------------------------------

protected override void OnCollectionChanged (NotifyCollectionChangedEventArgs e) {
    if (suppressNotification)
        return;
    base.OnCollectionChanged (e);
    if (CollectionChanged != null) {
        CollectionChanged.Invoke (this, e);
    }
}
----------------------------------------

protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
{
    if (!suppressNotification)
    {
        base.OnCollectionChanged(e);
        CollectionChanged?.Invoke(this, e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
2
Gpt4D_Clone380_2.cs 1 24
Gpt4D_Clone380_2.cs 25 24
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #8
public override int Read() {
    int i = _source.Read();
    if (i == - 1) return -1;
    if (i != '\r') return isNewLine(i) ? '\n' : i;
    return _source.Peek() == '\n' ? _source.Read() : i;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
3
Gpt4D_Clone380_3.cs 1 24
Gpt4D_Clone380_3.cs 25 24
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #9
public override int Read() {
    int i = _source.Read();
    if (i == -1) return -1;
    if (i == '\r' && _source.Peek() == '\n') _source.Read();
    return isNewLine(i) ? '\n' : i;
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
380
6
Gpt4D_Clone380_6.cs 1 22
Gpt4D_Clone380_6.cs 23 22
----------------------------------------

public override int Read () {
    int i = _source.Read ();
    if (i == - 1)
        return - 1;
    if (i == '\r') {
        if (_source.Peek () == '\n')
            _source.Read ();
        return i;
    }
    if (isNewLine (i))
        return '\n';
    return i;
}
//Implementation #3
public override int Read() {
    int i = _source.Read();
    return i == - 1 ? -1 : (i == '\r' && _source.Peek() == '\n' ? _source.Read() : (isNewLine(i) ? '\n' : i));
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
0
Gpt4D_Clone388_0.cs 1 24
Gpt4D_Clone388_0.cs 25 38
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
	    if (dataTable == null || dataTable.Rows.Count <= 0) return;
	    foreach (DataRow row in dataTable.Rows)
	    {
		if (row.IsNull("DataDesc")) continue;
		string description = row["DataDesc"].ToString();
		description = description.Contains("STATE") ? description.Replace("STATE", "") : description;
		description = description.Contains("HELLO ALL") ? description.Replace("HELLO ALL", "") : description;
		if (description.Contains("(")) description = description.Substring(0, description.IndexOf("("));
		row["DataDesc"] = description.Trim();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
1
Gpt4D_Clone388_1.cs 1 24
Gpt4D_Clone388_1.cs 25 39
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
    if (dataTable == null || dataTable.Rows.Count <= 0) return;
    foreach (DataRow row in dataTable.Rows)
    {
        if (!row.IsNull("DataDesc"))
        {
            string dataDesc = row["DataDesc"].ToString().Replace("STATE", "").Replace("HELLO ALL", "");
            int index = dataDesc.IndexOf("(");
            if (index >= 0) dataDesc = dataDesc.Remove(index);
            row["DataDesc"] = dataDesc.Trim();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
2
Gpt4D_Clone388_2.cs 1 24
Gpt4D_Clone388_2.cs 25 37
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
    if (dataTable == null || dataTable.Rows.Count == 0) return;
    foreach (DataRow row in dataTable.Rows)
    {
        string dataDesc = row["DataDesc"]?.ToString();
        if (dataDesc == null) continue;
        dataDesc = Regex.Replace(dataDesc, "(STATE|HELLO ALL)", "");
        dataDesc = Regex.Replace(dataDesc, @"\s*\(.+?\)\s*", "");
        row["DataDesc"] = dataDesc.Trim();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
3
Gpt4D_Clone388_3.cs 1 24
Gpt4D_Clone388_3.cs 25 36
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
	    if (dataTable == null || dataTable.Rows.Count == 0) return;
	    foreach (DataRow dr in dataTable.Rows)
	    {
		if (dr.IsNull("DataDesc")) continue;
		string dataDesc = dr["DataDesc"].ToString().Replace("STATE", "").Replace("HELLO ALL", "");
		int index = dataDesc.IndexOf('(');
		dr["DataDesc"] = index != -1 ? dataDesc.Remove(index).Trim() : dataDesc;
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
4
Gpt4D_Clone388_4.cs 1 23
Gpt4D_Clone388_4.cs 24 40
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
----------------------------------------

 
public void UpdateDescription(DataTable dataTable)
{
		    if (dataTable == null || dataTable.Rows.Count == 0) return; 
		    foreach (DataRow dr in dataTable.Rows)
		    {
			if (!dr.IsNull("DataDesc")) continue;
			dr["DataDesc"] = ProcessDescription(dr["DataDesc"].ToString());
		    }
		}
		private string ProcessDescription(string description)
		{
		    return description.Replace("STATE", "").Replace("HELLO ALL", "").Split('(').First().Trim();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
5
Gpt4D_Clone388_5.cs 1 24
Gpt4D_Clone388_5.cs 25 35
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
    if (dataTable == null || dataTable.Rows.Count <= 0) return;
    foreach (DataRow row in dataTable.Rows.Cast<DataRow>().Where(row => !row.IsNull("DataDesc")))
    {
        string data = row["DataDesc"].ToString();
        data = data.Replace("STATE", "").Replace("HELLO ALL", "");
        row["DataDesc"] = RemoveTextInsideBrackets(data);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
6
Gpt4D_Clone388_6.cs 1 24
Gpt4D_Clone388_6.cs 25 33
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
	    if (dataTable == null || dataTable.Rows.Count <= 0) return;
	    foreach (DataRow dr in dataTable.Rows.OfType<DataRow>().Where(dr => !dr.IsNull("DataDesc")))
	    {
		dr["DataDesc"] = dr["DataDesc"].ToString().Replace("STATE", "").Replace("HELLO ALL", "").Split('(').FirstOrDefault()?.Trim();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
7
Gpt4D_Clone388_7.cs 1 24
Gpt4D_Clone388_7.cs 25 33
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
	    if (dataTable != null && dataTable.Rows.Count > 0)
	    {
		var newTable = dataTable.AsEnumerable().Where(row => !row.IsNull("DataDesc"))            
		.ToList().ForEach(row => row["DataDesc"] = row["DataDesc"].ToString().Replace("STATE", "").Replace("HELLO ALL", "").Split('(').FirstOrDefault()?.Trim());
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
388
8
Gpt4D_Clone388_8.cs 1 24
Gpt4D_Clone388_8.cs 25 38
----------------------------------------

public void UpdateDescription (DataTable dataTable) {
    if (dataTable != null && dataTable.Rows.Count > 0) {
        foreach (DataRow dr in dataTable.Rows) {
            String dataDesc = dr ["DataDesc"].ToString ();
            if (! dr.IsNull ("DataDesc")) {
                if (dataDesc.Contains ("STATE")) {
                    dataDesc = dataDesc.Replace ("STATE", "").Trim ();
                }
                if (dataDesc.Contains ("HELLO ALL")) {
                    dataDesc = dataDesc.Replace ("HELLO ALL", "").Trim ();
                }
                if (dataDesc.Contains ("(")) {
                    dataDesc = dataDesc.Remove (dataDesc.IndexOf ("(")).Trim ();
                }
            }
            dr ["DataDesc"] = dataDesc;
        }
    }
}
 
----------------------------------------

public void UpdateDescription(DataTable dataTable)
{
		    if (dataTable != null && dataTable.Rows.Count > 0)
		    {
			dataTable.AsEnumerable().Where(row => !row.IsNull("DataDesc"))
			.ToList().ForEach(row => row["DataDesc"] = Process(row["DataDesc"].ToString()));
		    }
		}
		private string Process(string data)
		{
		    return data.Replace("STATE", "").Replace("HELLO ALL", "").Split('(').First().Trim();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
0
Gpt4D_Clone393_0.cs 1 31
Gpt4D_Clone393_0.cs 32 50
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object anyObject) {
    if (anyObject == null) return false;
    RuntimeType ourType = this.GetType () as RuntimeType;
    RuntimeType compareType = anyObject.GetType () as RuntimeType;
    if (!compareType.Equals (ourType)) return false;
    var originalObject = this;
    var isFastPossible = originalObject is IComparable;
    if (isFastPossible) return QuickEqualsTest (originalObject, anyObject);
    var privateAndPublicInstanceFields = ourType.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (var i = 0; i < privateAndPublicInstanceFields.Length; i++) {
        var obj1 = (RtFieldInfo)privateAndPublicInstanceFields[i].GetValue (originalObject);
        var obj2 = (RtFieldInfo)privateAndPublicInstanceFields[i].GetValue (anyObject);
        if ((obj1 == null && obj2 != null) || (obj1 != null && !obj1.Equals (obj2))) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
1
Gpt4D_Clone393_1.cs 1 31
Gpt4D_Clone393_1.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object anyObj) {
    if (anyObj == null) return false;
    var selfType = (RuntimeType) this.GetType ();
    var comparingType = (RuntimeType) anyObj.GetType ();
    if (comparingType != selfType) return false;
    var originalObj = this;
    if (DoFastEqualityCheck (originalObj)) return AcceleratedCheck (originalObj, anyObj);
    FieldInfo [] fieldInfoCollection = selfType.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int index = 0; index < fieldInfoCollection.Length; index++) {
        var objA = ((RtFieldInfo) fieldInfoCollection[index]).UnsafeGetValue (originalObj);
        var objB = ((RtFieldInfo) fieldInfoCollection[index]).UnsafeGetValue (anyObj);
        if (objA == null && objB != null || !objA.Equals (objB)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
2
Gpt4D_Clone393_2.cs 1 31
Gpt4D_Clone393_2.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object comparisonItem) {
    if (comparisonItem == null) return false;
    var typeA = (RuntimeType) base.GetType ();
    var typeB = (RuntimeType) comparisonItem.GetType ();
    if (typeB != typeA) return false;
    var self = this;
    if (CanCompareBits (self)) return QuickEqualsCheck (self, comparisonItem);
    var fieldData = typeA.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int count = 0; count < fieldData.Length; count++) {
        var Object1 = ((RtFieldInfo) fieldData[count]).UnsafeGetValue (self);
        var Object2 = ((RtFieldInfo) fieldData[count]).UnsafeGetValue (comparisonItem);
        if (Object1 == null ? Object2 != null : !Object1.Equals (Object2)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
4
Gpt4D_Clone393_4.cs 1 31
Gpt4D_Clone393_4.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object other) {
    if (other == null) return false;
    var type1 = (RuntimeType) GetType ();
    var type2 = (RuntimeType) other.GetType ();
    if (type2 != type1) return false;
    var currentInstance = this;
    if (IsFastComparisonPossible (currentInstance)) return QuickEqualityCheck (currentInstance, other);
    var fieldsInfo = type1.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fieldsInfo.Length; i++) {
        var objectOne = ((RtFieldInfo) fieldsInfo[i]).UnsafeGetValue (currentInstance);
        var objectTwo = ((RtFieldInfo) fieldsInfo[i]).UnsafeGetValue (other);
        if (objectOne == null && objectTwo != null || !objectOne.Equals (objectTwo)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
5
Gpt4D_Clone393_5.cs 1 31
Gpt4D_Clone393_5.cs 32 49
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object compareTo) {
    if (compareTo == null) return false;
    var selfRT = (RuntimeType)GetType ();
    var otherRT = (RuntimeType)compareTo.GetType ();
    if (otherRT != selfRT) return false;
    var thisObj = this;
    if (CanPerformFastEqualCheck (thisObj)) return FastEqualChecker (thisObj, compareTo);
    var allFields = selfRT.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < allFields.Length; i++) {
        var primaryObj = ((RtFieldInfo)allFields[i]).UnsafeGetValueUnchecked (thisObj);
        var secondaryObj = ((RtFieldInfo)allFields[i]).UnsafeGetValueUnchecked (compareTo);
        if (primaryObj == null ? secondaryObj != null : !primaryObj.Equals (secondaryObj)) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
9
Gpt4D_Clone393_9.cs 1 31
Gpt4D_Clone393_9.cs 32 48
----------------------------------------

public override bool Equals (object obj) {
    if (obj == null) {
        return false;
    }
    RuntimeType type = (RuntimeType) base.GetType ();
    RuntimeType type2 = (RuntimeType) obj.GetType ();
    if (type2 != type) {
        return false;
    }
    object a = this;
    if (CanCompareBits (this)) {
        return FastEqualsCheck (a, obj);
    }
    FieldInfo [] fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (int i = 0; i < fields.Length; i ++) {
        object obj3 = ((RtFieldInfo) fields [i]).UnsafeGetValue (a);
        object obj4 = ((RtFieldInfo) fields [i]).UnsafeGetValue (obj);
        if (obj3 == null) {
            if (obj4 != null) {
                return false;
            }
        } else if (! obj3.Equals (obj4)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

 
public override bool Equals (object objToCheck) {
    if (objToCheck == null) return false;
    var TypeA = (RuntimeType) this.GetType ();
    var TypeB = (RuntimeType) objToCheck.GetType ();
    if (! TypeB.Equals (TypeA)) return false;
    if (CanCompareBeyondInheritance (this)) return RapidEqualityCheck (this, objToCheck);
    var FieldInfs = TypeA.GetFields (BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance);
    for (var i = 0; i < FieldInfs.Length; i++) {
        var objA = (RtFieldInfo) FieldInfs[i].GetValue (this);
        var objB = (RtFieldInfo) FieldInfs[i].GetValue (objToCheck);
        if ((objA == null && objB != null) || ((objA != null) && ! objA.Equals (objB))) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
398
0
Gpt4D_Clone398_0.cs 1 29
Gpt4D_Clone398_0.cs 30 55
----------------------------------------

static void Main (string [] args) {
    Stopwatch sw = new Stopwatch ();
    const int NUM_ITEMS = 10000;
    const int NUM_LOOPS2 = 1000000000;
    List < int > lst = new List < int > (NUM_ITEMS);
    IList < int > ilst = lst;
    for (int i = 0; i < NUM_ITEMS; i ++) {
        lst.Add (i);
    }
    int count = 0;
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = lst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 1.");
    sw.Reset ();
    sw.Start ();
    for (int i = 0; i < NUM_LOOPS2; i ++) {
        count = ilst.Count;
    }
    sw.Stop ();
    Console.Out.WriteLine ("Took " + (sw.ElapsedMilliseconds) + "ms - 2.");
}
----------------------------------------

static void Main (string [] args) {
    Stopwatch timekeeper = new Stopwatch ();
    IList < int > numbers = new int [10000];
    IEnumerable < int > enumerable = numbers;
    numbers.Add(0);
    for (int counter = 1; counter < 10000; counter ++) {
        numbers.Add(counter);
    }
    timekeeper.Reset();
    timekeeper.Start();
    for(int counter = 0; counter < 1000000000; counter++){
        numbers.Count();
    }
    timekeeper.Stop ();
    Console.Write(" Took " + (timekeeper.Elapsed.TotalMilliseconds) + "ms - 1.");
    timekeeper.Reset ();
    timekeeper.Start ();
    for (int counter = 0; counter < 1000000000; counter ++) {
        enumerable.Count();
    }
    timekeeper.Stop ();
    Console.Write(" Took " + (timekeeper.Elapsed.TotalMilliseconds) + "ms - 2.");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
401
0
Gpt4D_Clone401_0.cs 1 26
Gpt4D_Clone401_0.cs 27 47
----------------------------------------

public string Insert () {
    string conStr = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    int queryResult = 0;
    try {
        string querySQL = "Insert INTO tbl_User(Name,Email,Password)VALUES(@name,@email,@password)";
        using (SqlConnection Conn = new SqlConnection (conStr))
        {
            using (SqlCommand cmd = new SqlCommand (querySQL, Conn))
            {
                cmd.Parameters.Add ("@name", SqlDbType.VarChar).Value = Name;
                cmd.Parameters.Add ("@email", SqlDbType.VarChar).Value = email;
                cmd.Parameters.Add ("@password", SqlDbType.VarChar).Value = password;
                queryResult = cmd.ExecuteNonQuery ();
            }} return queryResult + "Record/s Inserted successfully!";
    }
    catch (SqlException ex) {
        if (ex.Number == 2627) {
            return "Record Already Exists";
        }
        return "Some other error";
    }
}
----------------------------------------

public string InsertMethod()
{
    string connectionString = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    string querySQL = "Insert INTO tbl_User(Name,Email,Password)VALUES(@name,@email,@password)";
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        using (SqlCommand command = new SqlCommand(querySQL, connection))
        {
            command.Parameters.AddWithValue("@name", name);
            command.Parameters.AddWithValue("@email", email);
            command.Parameters.AddWithValue("@password", password);
            connection.Open();
            int result = command.ExecuteNonQuery();
            if (result > 0)
                return "Data Inserted!!";
            else
                return "Data Insert Failed!!";
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
401
1
Gpt4D_Clone401_1.cs 1 26
Gpt4D_Clone401_1.cs 27 44
----------------------------------------

public string Insert () {
    string conStr = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    int queryResult = 0;
    try {
        string querySQL = "Insert INTO tbl_User(Name,Email,Password)VALUES(@name,@email,@password)";
        using (SqlConnection Conn = new SqlConnection (conStr))
        {
            using (SqlCommand cmd = new SqlCommand (querySQL, Conn))
            {
                cmd.Parameters.Add ("@name", SqlDbType.VarChar).Value = Name;
                cmd.Parameters.Add ("@email", SqlDbType.VarChar).Value = email;
                cmd.Parameters.Add ("@password", SqlDbType.VarChar).Value = password;
                queryResult = cmd.ExecuteNonQuery ();
            }} return queryResult + "Record/s Inserted successfully!";
    }
    catch (SqlException ex) {
        if (ex.Number == 2627) {
            return "Record Already Exists";
        }
        return "Some other error";
    }
}
----------------------------------------

public string InsertUser() {
    string connectionString = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    string query = "INSERT INTO tbl_User(Name, Email, Password) VALUES (@name, @email, @password)";
    using(SqlConnection conn = new SqlConnection(connectionString)) {
        using(SqlCommand cmd = new SqlCommand(query, conn)) {
            cmd.Parameters.AddWithValue("@name", name);
            cmd.Parameters.AddWithValue("@email", email);
            cmd.Parameters.AddWithValue("@password", password);
            conn.Open();
            int rows = cmd.ExecuteNonQuery();
            if(rows > 0)
                return "User inserted successfully";
            else
                return "Fail to insert user";
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
401
2
Gpt4D_Clone401_2.cs 1 26
Gpt4D_Clone401_2.cs 27 41
----------------------------------------

public string Insert () {
    string conStr = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    int queryResult = 0;
    try {
        string querySQL = "Insert INTO tbl_User(Name,Email,Password)VALUES(@name,@email,@password)";
        using (SqlConnection Conn = new SqlConnection (conStr))
        {
            using (SqlCommand cmd = new SqlCommand (querySQL, Conn))
            {
                cmd.Parameters.Add ("@name", SqlDbType.VarChar).Value = Name;
                cmd.Parameters.Add ("@email", SqlDbType.VarChar).Value = email;
                cmd.Parameters.Add ("@password", SqlDbType.VarChar).Value = password;
                queryResult = cmd.ExecuteNonQuery ();
            }} return queryResult + "Record/s Inserted successfully!";
    }
    catch (SqlException ex) {
        if (ex.Number == 2627) {
            return "Record Already Exists";
        }
        return "Some other error";
    }
}
----------------------------------------

public string InsertData () {
    string connectionString = @"Data Source=ZARAK\SQLEXPRESS;Initial Catalog=ProjectDAL;integrated security=true";
    var qryInsertUser = "Insert INTO tbl_User(Name,Email,Password)VALUES(@name,@email,@password)";
    using (var connection = new SqlConnection(connectionString)) {
        connection.Open();
        using (var command = new SqlCommand(qryInsertUser, connection)) {
            command.Parameters.AddWithValue("@name", name);
            command.Parameters.AddWithValue("@email", email);
            command.Parameters.AddWithValue("@password", password);
            var result = command.ExecuteNonQuery() > 0 ? "Data Inserted!" : "Insert Failed!";
            return result;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
0
Gpt4D_Clone404_0.cs 1 35
Gpt4D_Clone404_0.cs 36 51
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    dt.AsEnumerable().ToList().ForEach(row => 
        dt.Columns.OfType<DataColumn>().ToList().ForEach(c =>
            maxLengths[c.Ordinal] = Math.Max(c.ColumnName.Length, (row.IsNull(c.Ordinal) ? -1 : row[c.Ordinal].ToString().Length))));
    using (var writer = new StreamWriter(outputFilePath)) {
        dt.Columns.OfType<DataColumn>().ToList().ForEach(c =>
            writer.Write(c.ColumnName.PadRight(maxLengths[c.Ordinal] + 2)));
        writer.WriteLine();
        dt.AsEnumerable().ToList().ForEach(row => {
            dt.Columns.OfType<DataColumn>().ToList().ForEach(c => writer.Write(row[c].ToString().PadRight(maxLengths[c.Ordinal] + 2)));
            writer.WriteLine();
        });
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
1
Gpt4D_Clone404_1.cs 1 35
Gpt4D_Clone404_1.cs 36 52
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    var maxLengths = dt.Columns.OfType<DataColumn>().Select((c,i) => new {i, 
        MaxLength = dt.AsEnumerable().Max(r => r.IsNull(i) ? 0 : r[i].ToString().Length)}).ToArray();
    using (System.IO.StreamWriter sw = new System.IO.StreamWriter (outputFilePath, false)) {
        foreach (var ml in maxLengths) {
            sw.Write (dt.Columns [ml.i].ColumnName.PadRight (ml.MaxLength + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            foreach (var ml in maxLengths) {
                sw.Write ((row.IsNull(ml.i) ? "" : row[ml.i].ToString()).PadRight (ml.MaxLength + 2));
            }
            sw.WriteLine ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
2
Gpt4D_Clone404_2.cs 1 35
Gpt4D_Clone404_2.cs 36 56
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    using (System.IO.StreamWriter file = new System.IO.StreamWriter(@outputFilePath))
    {
        foreach (DataColumn column in dt.Columns)
        {
            file.Write(column.ColumnName + ',');
        }
        file.WriteLine();
        foreach (DataRow row in dt.Rows)
        {
            foreach (DataColumn column in dt.Columns)
            {
                file.Write(row[column.ColumnName].ToString() + ',');
            }
            file.WriteLine();
        }
        file.WriteLine();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
3
Gpt4D_Clone404_3.cs 1 35
Gpt4D_Clone404_3.cs 36 50
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    dt.Columns.OfType<DataColumn>().ToList().ForEach(c => maxLengths[c.Ordinal] =
        Math.Max(c.ColumnName.Length,dt.AsEnumerable().Max(r => r[c.Ordinal].ToString().Length)));
    using (StreamWriter sw = new StreamWriter (outputFilePath, false)) {
        dt.Columns.OfType<DataColumn>().ToList().ForEach(c => sw.Write (c.ColumnName.PadRight (maxLengths[c.Ordinal] + 2)));
        sw.WriteLine();
        dt.AsEnumerable().ToList().ForEach(row => {
            dt.Columns.OfType<DataColumn>().ToList().ForEach(c => sw.Write ((row.IsNull(c.Ordinal) ? "" : row[c.Ordinal].ToString()).PadRight (maxLengths[c.Ordinal] + 2)));
            sw.WriteLine();
        });
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
4
Gpt4D_Clone404_4.cs 1 35
Gpt4D_Clone404_4.cs 36 52
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write(DataTable dt, string outputFilePath)
{
    using (var tw = new StreamWriter(outputFilePath, false))
    {
        foreach (DataColumn column in dt.Columns)
            tw.Write(column.ColumnName + "\t");
        tw.WriteLine();
        foreach (DataRow dr in dt.Rows)
        {
            foreach (DataColumn column in dt.Columns)
                tw.Write(dr[column].ToString() + "\t");
            tw.WriteLine();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
5
Gpt4D_Clone404_5.cs 1 35
Gpt4D_Clone404_5.cs 36 45
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    var columnWidths = dt.Columns.Cast<DataColumn>().Select(column => column.ColumnName.Length).ToArray();
    using (var writer = new StreamWriter(outputFilePath)) {
        writer.WriteLine(string.Join("", dt.Columns.Cast<DataColumn>().Select((column, index) => column.ColumnName.PadRight(columnWidths[index]))));
        foreach (DataRow row in dt.Rows) {
            writer.WriteLine(string.Join("", row.ItemArray.Select((item, index) => item.ToString().PadRight(columnWidths[index]))));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
6
Gpt4D_Clone404_6.cs 1 35
Gpt4D_Clone404_6.cs 36 43
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    List<int> colsizes = dt.Columns.Cast<DataColumn>().Select((x, i) => Math.Max(x.ColumnName.Length, dt.AsEnumerable().Max(dr => dr.Field<string>(i).Length))).ToList();
    using (StreamWriter sw = new StreamWriter (outputFilePath, false)) {
        sw.WriteLine(string.Join("\t", dt.Columns.Cast<DataColumn>().Select(x => x.ColumnName)));
        foreach (DataRow row in dt.Rows) sw.WriteLine(string.Join("\t", row.ItemArray.Select((item,i) => item.ToString().PadRight(colsizes[i]))));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
7
Gpt4D_Clone404_7.cs 1 35
Gpt4D_Clone404_7.cs 36 48
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write(DataTable dt, string outputFilePath)
{
    using (StreamWriter sw = new StreamWriter(outputFilePath, false))
    {
        sw.WriteLine(string.Join(",", dt.Columns.Cast<DataColumn>().Select(x => x.ColumnName)));
        foreach (DataRow row in dt.Rows)
        {
            sw.WriteLine(string.Join(",", row.ItemArray));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
8
Gpt4D_Clone404_8.cs 1 35
Gpt4D_Clone404_8.cs 36 45
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write(DataTable dt, string outputFilePath)
{
    using (var tw = new StreamWriter(outputFilePath, false))
    {
        tw.WriteLine(string.Join(",", dt.Columns.Cast<DataColumn>().Select(column => column.ColumnName)));
        foreach (DataRow dr in dt.Rows)
            tw.WriteLine(string.Join(",", dr.ItemArray));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
9
Gpt4D_Clone404_9.cs 1 35
Gpt4D_Clone404_9.cs 36 43
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    int [] maxLengths = new int [dt.Columns.Count];
    for (int i = 0; i < dt.Columns.Count; i ++) {
        maxLengths [i] = dt.Columns [i].ColumnName.Length;
        foreach (DataRow row in dt.Rows) {
            if (! row.IsNull (i)) {
                int length = row [i].ToString ().Length;
                if (length > maxLengths [i]) {
                    maxLengths [i] = length;
                }
            }
        }
    }
    using (StreamWriter sw = new StreamWriter (outputFilePath, false))
    {
        for (int i = 0; i < dt.Columns.Count; i ++) {
            sw.Write (dt.Columns [i].ColumnName.PadRight (maxLengths [i] + 2));
        }
        sw.WriteLine ();
        foreach (DataRow row in dt.Rows) {
            for (int i = 0; i < dt.Columns.Count; i ++) {
                if (! row.IsNull (i)) {
                    sw.Write (row [i].ToString ().PadRight (maxLengths [i] + 2));
                } else {
                    sw.Write (new string (' ', maxLengths [i] + 2));
                }
            }
            sw.WriteLine ();
        }
        sw.Close ();
    }}
----------------------------------------

static void Write (DataTable dt, string outputFilePath) {
    using (StreamWriter writer = new StreamWriter(outputFilePath)) {
        foreach (DataRow row in dt.Rows) {
            writer.WriteLine(string.Join(", ", row.ItemArray.Select(item => item.ToString())));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
0
Gpt4D_Clone413_0.cs 1 21
Gpt4D_Clone413_0.cs 22 49
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    var filePathstr = string.Join(" ", args);
	    Application ap = null;
	    Document document = null;
	    try
	    {
		ap = new Application();
		document = ap.Documents.Open(filePathstr);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    }
	    finally
	    {
		if(document != null)
		    document.Close();
		if(ap != null)
		    ap = null;
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
1
Gpt4D_Clone413_1.cs 1 21
Gpt4D_Clone413_1.cs 22 46
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main (string [] args) {
    var filePathstr = args.Length > 0 ? args[0] : throw new ArgumentNullException();
    
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        using (var ap = new Application())
        {
            using (var document = ap.Documents.Open(filePathstr))
            {
                foreach (Field field in document.Fields)
                {
                    field.Update();
                }
                document.Save();
            }
        }
    }
    catch (NullReferenceException) 
    {
        MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
10
Gpt4D_Clone413_10.cs 1 21
Gpt4D_Clone413_10.cs 22 51
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

static void Main (string [] args) {
	    var filePathstr = string.Join(" ", args);
	    withApplication(ap => 
	    {
		var document = ap.Documents.Open(filePathstr);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    });
	}
	private static void withApplication(Action<Application> action)
	{
	    var app = new Application();
	    try
	    { 
		action(app);
	    }
	    finally
	    { 
		app.Quit();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
11
Gpt4D_Clone413_11.cs 1 21
Gpt4D_Clone413_11.cs 22 46
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    var filePathstr = string.Join(" ", args);
	    if (!File.Exists(filePathstr)) MessageBox.Show("A valid file was not selected.");
	    withAp(ap => 
	    {
		var document = ap.Documents.Open(filePathstr);
		if (document != null)
		    foreach (Field field in document.Fields)
		        field.Update();
		document?.Save();
		document?.Close();
	    });
	}
	private static void withAp(Action<Application> action)
	{
	    var ap = new Application();
	    try { action(ap); }
	    finally { ap?.Quit(); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
12
Gpt4D_Clone413_12.cs 1 21
Gpt4D_Clone413_12.cs 22 48
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    string filePathstr = string.Join(" ", args);
	    Application app = new Application();
	    UsingAddIn(app, filePathstr);
	}
	static void UsingAddIn(Application app, string filePath)
	{
	    try
	    {
		var document = app.Documents.Open(filePath);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    }
	    finally
	    {
		app.Quit();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
13
Gpt4D_Clone413_13.cs 1 21
Gpt4D_Clone413_13.cs 22 50
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    TryProcessFile(args.SingleOrDefault());
	}
	private void TryProcessFile(string filePath)
	{
	    if (string.IsNullOrWhiteSpace(filePath) || !File.Exists(filePath))
	    {
		MessageBox.Show("A valid file was not selected.");
		return;
	    }
	    using(var ap = new Application())
	    {
		var document = ap.Documents.Open(filePath);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
3
Gpt4D_Clone413_3.cs 1 21
Gpt4D_Clone413_3.cs 22 44
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
    var filePathstr = args.Single();
    
    if (!File.Exists(filePathstr))
        throw new ArgumentException("File not found");
        
    var ap = new Application();
    try
    {
        var document = ap.Documents.Open(filePathstr);
        document.Fields.Cast<Field>().ToList().ForEach(f => f.Update());
        document.Save();
        document.Close();
    }
    finally
    {
        ap.Quit();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
5
Gpt4D_Clone413_5.cs 1 21
Gpt4D_Clone413_5.cs 22 46
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    var filePathstr = string.Join(" ", args);
	    if (!File.Exists(filePathstr)) MessageBox.Show("A valid file was not selected.");
	    withAp(ap => 
	    {
		var document = ap.Documents.Open(filePathstr);
		if (document != null)
		    foreach (Field field in document.Fields)
		        field.Update();
		document?.Save();
		document?.Close();
	    });
	}
	private static void withAp(Action<Application> action)
	{
	    var ap = new Application();
	    try { action(ap); }
	    finally { ap?.Quit(); }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
6
Gpt4D_Clone413_6.cs 1 21
Gpt4D_Clone413_6.cs 22 50
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    TryProcessFile(args.SingleOrDefault());
	}
	private void TryProcessFile(string filePath)
	{
	    if (string.IsNullOrWhiteSpace(filePath) || !File.Exists(filePath))
	    {
		MessageBox.Show("A valid file was not selected.");
		return;
	    }
	    using(var ap = new Application())
	    {
		var document = ap.Documents.Open(filePath);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
7
Gpt4D_Clone413_7.cs 1 21
Gpt4D_Clone413_7.cs 22 44
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

static void Main(string[] args)
{
    string filePathstr = string.Join(" ", args);
    using (Application ap = new Application())
    using (Document document = ap.Documents.Open(filePathstr))
    {
        try
        {
            foreach (Field field in document.Fields)
            {
                field.Update();
            }
            document.Save();
        }
        catch (NullReferenceException)
        {
            MessageBox.Show("A valid file was not selected.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
8
Gpt4D_Clone413_8.cs 1 21
Gpt4D_Clone413_8.cs 22 51
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

static void Main (string [] args) {
	    var filePathstr = string.Join(" ", args);
	    withApplication(ap => 
	    {
		var document = ap.Documents.Open(filePathstr);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    });
	}
	private static void withApplication(Action<Application> action)
	{
	    var app = new Application();
	    try
	    { 
		action(app);
	    }
	    finally
	    { 
		app.Quit();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
413
9
Gpt4D_Clone413_9.cs 1 21
Gpt4D_Clone413_9.cs 22 48
----------------------------------------

static void Main (string [] args) {
    List < string > path = new List < string > (args);
    string filePathstr = string.Join (" ", path.ToArray ());
    string folderPathstr = Path.GetDirectoryName (filePathstr);
    try {
        Application ap = new Application ();
        Document document = ap.Documents.Open (filePathstr);
        foreach (Field field in document.GetAllFields ()) {
            field.Update ();
        }
        document.Save ();
        document.Close ();
    }
    catch (NullReferenceException) {
        System.Windows.Forms.MessageBox.Show ("A valid file was not selected.");
    }
}
----------------------------------------

 
static void Main(string[] args)
{
	    string filePathstr = string.Join(" ", args);
	    Application app = new Application();
	    UsingAddIn(app, filePathstr);
	}
	static void UsingAddIn(Application app, string filePath)
	{
	    try
	    {
		var document = app.Documents.Open(filePath);
		foreach (Field field in document.Fields)
		{
		    field.Update();
		}
		document.Save();
		document.Close();
	    }
	    finally
	    {
		app.Quit();
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
0
Gpt4D_Clone418_0.cs 1 21
Gpt4D_Clone418_0.cs 22 44
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    if (GetWindowRect(hChildWnd, out Rectangle childRect))
    {
        if (GetWindowRect(_owner.Handle, out Rectangle parentRect))
        {
            int childWidth = childRect.Width;
            int childHeight = childRect.Height;
            int parentX = parentRect.X;
            int parentY = parentRect.Y;
            int parentWidth = parentRect.Width;
            int parentHeight = parentRect.Height;
            int centerX = parentX + ((parentWidth - parentX) / 2);
            int centerY = parentY + ((parentHeight - parentY) / 2);
            int x = Math.Max(0, (centerX - (childWidth / 2)));
            int y = Math.Max(0, (centerY - (childHeight / 2)));
            MoveWindow (hChildWnd, x, y, childWidth, childHeight, false);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
1
Gpt4D_Clone418_1.cs 1 21
Gpt4D_Clone418_1.cs 22 41
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    Rectangle childRect = new Rectangle();
    Rectangle parentRect = new Rectangle();
    bool success = GetWindowRect(hChildWnd, ref childRect);
    if (!success)
        return;
    int width = childRect.Width - childRect.X;
    int height = childRect.Height - childRect.Y;
    success = GetWindowRect(_owner.Handle, ref parentRect);
    if (!success)
        return;
    Point startPoint = new Point(
        Math.Max(0, (parentRect.X + (parentRect.Width - parentRect.X) / 2) - width / 2), 
        Math.Max(0, (parentRect.Y + (parentRect.Height - parentRect.Y) / 2) - height / 2));
    MoveWindow (hChildWnd, startPoint.X, startPoint.Y, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
2
Gpt4D_Clone418_2.cs 1 21
Gpt4D_Clone418_2.cs 22 38
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    var childWndRect = new Rectangle();
    var status = GetWindowRect(hChildWnd, ref childWndRect);
    var childWndWidth = childWndRect.Width - childWndRect.X;
    var childWndHeight = childWndRect.Height - childWndRect.Y;
    var parentWndRect = new Rectangle();
    status = GetWindowRect(_owner.Handle, ref parentWndRect);
    int X = parentWndRect.X + (parentWndRect.Width - parentWndRect.X) / 2 - childWndWidth / 2;
    int Y = parentWndRect.Y + (parentWndRect.Height - parentWndRect.Y) / 2 - childWndHeight / 2;
    X = X < 0 ? 0 : X;
    Y = Y < 0 ? 0 : Y;
    var ret = MoveWindow(hChildWnd, X, Y, childWndWidth, childWndHeight, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
3
Gpt4D_Clone418_3.cs 1 21
Gpt4D_Clone418_3.cs 22 36
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

private static void CenterWindow(IntPtr hChildWnd)
{
    var childRect = new Rectangle();
    var success = GetWindowRect(hChildWnd, ref childRect);
    var width = childRect.Width - childRect.X;
    var height = childRect.Height - childRect.Y;
    var parentRect = new Rectangle();
    success = GetWindowRect(_owner.Handle, ref parentRect);
    Point centerPoint = new Point ((parentRect.Width - parentRect.X) / 2, (parentRect.Height - parentRect.Y) / 2);
    Point startPoint = new Point(centerPoint.X - (width / 2), centerPoint.Y - (height / 2));
    startPoint.X = Math.Max(0, startPoint.X);
    startPoint.Y = Math.Max(0, startPoint.Y);
    var result = MoveWindow(hChildWnd, startPoint.X, startPoint.Y, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
4
Gpt4D_Clone418_4.cs 1 21
Gpt4D_Clone418_4.cs 22 36
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    Rectangle childRect = new Rectangle();
    GetWindowRect(hChildWnd, ref childRect);
    int width = childRect.Width;
    int height = childRect.Height;
    Rectangle parentRect = new Rectangle();
    GetWindowRect(_owner.Handle, ref parentRect);
    int startX = Math.Max(0, (parentRect.Width - width) / 2);
    int startY = Math.Max(0, (parentRect.Height - height) / 2);
    MoveWindow(hChildWnd, startX, startY, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
5
Gpt4D_Clone418_5.cs 1 21
Gpt4D_Clone418_5.cs 22 36
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    GetWindowRect(hChildWnd, out var childRect);
    int width = childRect.Width;
    int height = childRect.Height;
    GetWindowRect(_owner.Handle, out var parentRect);
    int midX = parentRect.Width / 2;
    int midY = parentRect.Height / 2;
    int startX = Math.Max(0, midX - width / 2);
    int startY = Math.Max(0, midY - height / 2);
    MoveWindow(hChildWnd, startX, startY, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
6
Gpt4D_Clone418_6.cs 1 21
Gpt4D_Clone418_6.cs 22 34
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    Rectangle childRect = Rectangle.Empty;
    Rectangle parentRect = Rectangle.Empty;
    bool success = GetWindowRect(hChildWnd, ref childRect) && GetWindowRect(_owner.Handle, ref parentRect);
    if (!success) return;
    int x = Math.Max(0, parentRect.X + ((parentRect.Width - parentRect.X) / 2) - ((childRect.Width - childRect.X) / 2));
    int y = Math.Max(0, parentRect.Y + ((parentRect.Height - parentRect.Y) / 2) - ((childRect.Height - childRect.Y) / 2));
    MoveWindow (hChildWnd, x, y, childRect.Width - childRect.X, childRect.Height - childRect.Y, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
7
Gpt4D_Clone418_7.cs 1 21
Gpt4D_Clone418_7.cs 22 34
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    if (!(GetWindowRect(hChildWnd, out var childRect) && GetWindowRect(_owner.Handle, out var parentRect)))
        return;
    int width = childRect.Width - childRect.X;
    int height = childRect.Height - childRect.Y;
    int x = Math.Max(0, parentRect.X + (parentRect.Width / 2) - (width / 2));
    int y = Math.Max(0, parentRect.Y + (parentRect.Height / 2) - (height / 2));
    MoveWindow(hChildWnd, x, y, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
8
Gpt4D_Clone418_8.cs 1 21
Gpt4D_Clone418_8.cs 22 34
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    GetWindowRect(hChildWnd, out Rectangle childRect);
    int width = childRect.Width;
    int height = childRect.Height;
    GetWindowRect(_owner.Handle, out Rectangle parentRect);
    int x = Math.Max(0, (parentRect.Width / 2) - (width / 2));
    int y = Math.Max(0, (parentRect.Height / 2) - (height / 2));
    MoveWindow(hChildWnd, x, y, width, height, false);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
418
9
Gpt4D_Clone418_9.cs 1 21
Gpt4D_Clone418_9.cs 22 35
----------------------------------------

private static void CenterWindow (IntPtr hChildWnd) {
    Rectangle recChild = new Rectangle (0, 0, 0, 0);
    bool success = GetWindowRect (hChildWnd, ref recChild);
    int width = recChild.Width - recChild.X;
    int height = recChild.Height - recChild.Y;
    Rectangle recParent = new Rectangle (0, 0, 0, 0);
    success = GetWindowRect (_owner.Handle, ref recParent);
    Point ptCenter = new Point (0, 0);
    ptCenter.X = recParent.X + ((recParent.Width - recParent.X) / 2);
    ptCenter.Y = recParent.Y + ((recParent.Height - recParent.Y) / 2);
    Point ptStart = new Point (0, 0);
    ptStart.X = (ptCenter.X - (width / 2));
    ptStart.Y = (ptCenter.Y - (height / 2));
    ptStart.X = (ptStart.X < 0) ? 0 : ptStart.X;
    ptStart.Y = (ptStart.Y < 0) ? 0 : ptStart.Y;
    int result = MoveWindow (hChildWnd, ptStart.X, ptStart.Y, width, height, false);
}
----------------------------------------

 
private static void CenterWindow(IntPtr hChildWnd)
{
    if (GetWindowRect(hChildWnd, out Rectangle childWndRect) && GetWindowRect(_owner.Handle, out Rectangle parentWndRect))
    {
        int width = childWndRect.Width;
        int height = childWndRect.Height;
        int x = Math.Max(0, (parentWndRect.Width - parentWndRect.X) / 2 - width / 2);
        int y = Math.Max(0, (parentWndRect.Height - parentWndRect.Y) / 2 - height / 2);
        MoveWindow (hChildWnd, x, y, width, height, false);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
0
Gpt4D_Clone424_0.cs 1 27
Gpt4D_Clone424_0.cs 28 55
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write(char value) {
    switch(value){
        case '&':
            _bufferState = _bufferState == 0 ? _bufferState+1 : 0;
            if (_bufferState > 0) return;
        break;
        case ';':
            if (_bufferState > 1) {
                _bufferState++;
                return;
            } else {
              this.Write('&');
              this.Write('A');
              _bufferState = 0;
            }
        break;
        case '\n':
            base.Write("&#10;");
            return;
        default:
            base.Write(value);
        break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
4
Gpt4D_Clone424_4.cs 1 27
Gpt4D_Clone424_4.cs 28 45
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    switch (value) {
        case '&':
            ProcessAmpersand();
            break;
        case ';':
            ProcessSemicolon();
            break;
        case '\n':
            base.Write("&#10;");
            return;
        default:
            base.Write(value);
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
5
Gpt4D_Clone424_5.cs 1 27
Gpt4D_Clone424_5.cs 28 49
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write(char value)
{
    switch(value){
        case '&':
            HandleAmpersand();
            break;
        case ';':
            HandleSemicolon();
            break;
        case '\n':
            base.Write("&#10;");
            break;
        default:
            base.Write(value);
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
6
Gpt4D_Clone424_6.cs 1 27
Gpt4D_Clone424_6.cs 28 46
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if(value == '&') {
        _bufferState = HandleAmpersand(_bufferState);
        if(_bufferState != 0) { return; }
    }
    
    if(value == ';') {
        _bufferState = HandleSemicolon(_bufferState);
        if(_bufferState != 0) { return; }
    }
    
    if(value == '\n') {
        base.Write("&#10;");
    } else {
        base.Write(value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
7
Gpt4D_Clone424_7.cs 1 27
Gpt4D_Clone424_7.cs 28 47
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    _bufferState = (value == '&') ? ((_bufferState == 0) ? (_bufferState + 1) : 0) : _bufferState;
    
    if(value == '&' && _bufferState > 0)
     return;
    _bufferState = (value == ';') ? ((_bufferState > 1) ? (_bufferState + 1) : 0) : _bufferState;
    
    if(value == ';'){
        Write('&');
        Write(AmpToken);
    }
    
    if(value == '\n')
     base.Write("&#10;");
    else
     base.Write(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
8
Gpt4D_Clone424_8.cs 1 27
Gpt4D_Clone424_8.cs 28 35
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if(value == '&') HandleAmpersand();
    else if(value == ';') HandleSemicolon();
    else if(value == '\n') base.Write("&#10;");
    else base.Write(value);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
9
Gpt4D_Clone424_9.cs 1 27
Gpt4D_Clone424_9.cs 28 40
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if (value == '&'){
        processAnd(value);
    } else if (value == ';'){
        processSemicolon(value);
    } else if (value == '\n'){
        base.Write("&#10;");
    } else {
        base.Write(value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
0
Gpt4D_Clone425_0.cs 1 42
Gpt4D_Clone425_0.cs 43 42
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
 
public override void Write (char value) {
   Action action = value switch
   {
       '&' => () => { _bufferState = _bufferState == 0 ? _bufferState+1: 0; },
       ';' => () => {
            _bufferState = _bufferState > 1 ? _bufferState+1 : 0;
            base.Write('&');
            base.Write(AmpToken);
       },
       '\n' => () => { base.Write ("&#10;"); },
       _ => () => { base.Write(value); }
    };
    action();
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
1
Gpt4D_Clone425_1.cs 1 48
Gpt4D_Clone425_1.cs 49 48
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
public override void Write (char value) {
    switch (value) {
        case '&':
            _bufferState = _bufferState == 0 ? ++_bufferState : 0;
            break;
        case ';':
            if (_bufferState > 1) ++_bufferState;
            else {
                this.Write('&');
                this.Write(AmpToken);
                _bufferState = 0;
            }
            break;
        case '\n':
            base.Write ("&#10;");
            return;
        default:
            base.Write (value);
            break;
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
2
Gpt4D_Clone425_2.cs 1 27
Gpt4D_Clone425_2.cs 28 47
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
   Func<char, char> dict = new Func<char, char>(){ {'&', '&'}, {';', ';'}, {'\n', '\n'}};
    switch (value) {
        case '&': 
            _bufferState = _bufferState == 0 ? _bufferState+1: 0; 
            break;
        case ';': 
            _bufferState = _bufferState > 1 ? _bufferState+1 : 0;
            base.Write(dict[value]);
            base.Write(AmpToken);
            break;
        case '\n': 
            base.Write ("&#10;");
            break;
        default: 
            base.Write (value);
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
3
Gpt4D_Clone425_3.cs 1 42
Gpt4D_Clone425_3.cs 43 42
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
 
public override void Write (char value){
    var switchMap = new Dictionary<char, Action>() {
        { '&', () => { _bufferState = _bufferState == 0 ? ++_bufferState : 0; } },
        { ';', () => { _bufferState =  _bufferState > 1 ? ++_bufferState : (_bufferState = 0); 
                Write('&');
                Write(AmpToken); }  },
        { '\n', () => { base.Write ("&#10;"); return;} },
    };
    if(switchMap.ContainsKey(value)) {
        switchMap[value].Invoke();
    } else {
        base.Write (value);
    }
}
----------------------------------------

----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
4
Gpt4D_Clone425_4.cs 1 27
Gpt4D_Clone425_4.cs 28 48
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    var handlers = new Dictionary<char, Action> {
        ['&'] = () => _bufferState = _bufferState == 0 ? 1 : 0,
        [';'] = () => {
            if (_bufferState > 1) _bufferState++;
            else {
                Write ('&');
                Write (AmpToken);
                _bufferState = 0;
            }
        },
        ['\n'] = () => base.Write("&#10;")
    };
    if(handlers.TryGetValue(value, out var handler)){
        handler();
    } else {
        base.Write (value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
6
Gpt4D_Clone425_6.cs 1 27
Gpt4D_Clone425_6.cs 28 39
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if (value.Equals('&')) {
        HandleAmp();
    } else if (value.Equals(';')) {
        HandleSemiColon();
    } else if (value.Equals('\n')) {
        HandleLineBreak();
    } else {
        base.Write (value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
7
Gpt4D_Clone425_7.cs 1 27
Gpt4D_Clone425_7.cs 28 39
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        if (_bufferState == 0) {
            _bufferState ++;
            return;
        } else {
            _bufferState = 0;
        }
    } else if (value == ';') {
        if (_bufferState > 1) {
            _bufferState ++;
            return;
        } else {
            Write ('&');
            Write (AmpToken);
            _bufferState = 0;
        }
    } else if (value == '\n') {
        base.Write ("&#10;");
        return;
    }
    base.Write (value);
}
----------------------------------------

public override void Write (char value) {
    if (value == '&') {
        ManageBufferState();
    } else if (value == ';') {
        ManageSemiColon();
    } else if (value == '\n') {
        base.Write ("&#10;");
    } else {
        base.Write (value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
0
Gpt4D_Clone434_0.cs 1 13
Gpt4D_Clone434_0.cs 14 24
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    switch(e.Button) {
        case MouseButtons.Left:
            rec.Size = new Size(e.X - rec.X, e.Y - rec.Y);
            break;
        case MouseButtons.Right: 
            rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
1
Gpt4D_Clone434_1.cs 1 13
Gpt4D_Clone434_1.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if ((Control.MouseButtons & MouseButtons.Left) == MouseButtons.Left){
        rec.Size = new Size (e.X - rec.Left, e.Y - rec.Top);
    } else if ((Control.MouseButtons & MouseButtons.Right) == MouseButtons.Right){
        rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
2
Gpt4D_Clone434_2.cs 1 13
Gpt4D_Clone434_2.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if ((Control.MouseButtons == MouseButtons.Left)) {
        rec.Size = new Size(e.X - rec.X, e.Y - rec.Y);
    } else if ((Control.MouseButtons == MouseButtons.Right)) {
        rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
3
Gpt4D_Clone434_3.cs 1 13
Gpt4D_Clone434_3.cs 14 22
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
	    if (e.Button.HasFlag(MouseButtons.Left)) {
		rec.Size = new Size (e.X - rec.Left, e.Y - rec.Top);
	    } else if (e.Button.HasFlag(MouseButtons.Right)) {
		rec.Location = new Point (e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
4
Gpt4D_Clone434_4.cs 1 13
Gpt4D_Clone434_4.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
   if (e.Button.HasFlag(MouseButtons.Left)) {
        rec.Size = new Size(e.X - rec.X, e.Y - rec.Y);
    } else if (e.Button.HasFlag(MouseButtons.Right)){
        rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
5
Gpt4D_Clone434_5.cs 1 13
Gpt4D_Clone434_5.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left){
        rec.Size = new Size (e.Location.X - rec.Left, e.Location.Y - rec.Top);
    } else if (e.Button == MouseButtons.Right){
        rec.Location = new Point (e.Location.X - MouseDownLocation.X, e.Location.Y - MouseDownLocation.Y);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
6
Gpt4D_Clone434_6.cs 1 13
Gpt4D_Clone434_6.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
		    if (e.Button == MouseButtons.Left) {
			rec.Size = new Size(e.X - rec.Left, e.Y - rec.Top);
		    } else if (e.Button == MouseButtons.Right) {
			rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
7
Gpt4D_Clone434_7.cs 1 13
Gpt4D_Clone434_7.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
		    if ((Control.MouseButtons == MouseButtons.Left) && (rec != null)) {
			rec.Size = new Size(e.X - rec.Location.X, e.Y - rec.Location.Y);
		    } else if ((Control.MouseButtons == MouseButtons.Right) && (rec != null)) {
			rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
8
Gpt4D_Clone434_8.cs 1 13
Gpt4D_Clone434_8.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
		    if ((Control.MouseButtons & MouseButtons.Left) == MouseButtons.Left) {
			rec.Size = new Size (e.Location.X - rec.Left, e.Location.Y - rec.Top);
		    } else if ((Control.MouseButtons & MouseButtons.Right) == MouseButtons.Right) {
			rec.Location = new Point (e.Location.X - MouseDownLocation.X, e.Location.Y - MouseDownLocation.Y);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
434
9
Gpt4D_Clone434_9.cs 1 13
Gpt4D_Clone434_9.cs 14 21
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
    if (e.Button == MouseButtons.Left) {
        rec.Width = e.X - rec.X;
        rec.Height = e.Y - rec.Y;
    } else if (e.Button == MouseButtons.Right) {
        rec.X = e.X - MouseDownLocation.X;
        rec.Y = e.Y - MouseDownLocation.Y;
    }
}
----------------------------------------

protected override void OnMouseMove (MouseEventArgs e) {
		    if (e.Button == MouseButtons.Left) {
			rec.Size = new Size(e.X - rec.X, e.Y - rec.Y);
		    } else if (e.Button == MouseButtons.Right) {
			rec.Location = new Point(e.X - MouseDownLocation.X, e.Y - MouseDownLocation.Y);
		    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
4
Gpt4D_Clone435_4.cs 1 24
Gpt4D_Clone435_4.cs 25 33
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var prompt = Console.ReadLine();
    var executor = new CodeImplementation(20000, 2000);
    if (prompt == "1") Execute(executor.ListSum);
    else if (prompt == "2") Execute(executor.ArraySum);
    else Execute(executor.MixedSum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
5
Gpt4D_Clone435_5.cs 1 24
Gpt4D_Clone435_5.cs 25 35
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var result = Console.ReadLine();
    var obj = new ListArraySum(24000, 2400);
    if(result=="1") Validate(obj.AddList);
    else if (result=="2") Validate(obj.AddArray);
    else Validate(obj.AddBoth);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
6
Gpt4D_Clone435_6.cs 1 24
Gpt4D_Clone435_6.cs 25 35
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var num = Console.ReadLine();
    var exe = new MyLoop(5000, 500);
    if (num == "1") Execute(exe.SumOfList);
    else if (num == "2") Execute(exe.SumOfArray);
    else Execute(exe.SumOfBoth);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
7
Gpt4D_Clone435_7.cs 1 24
Gpt4D_Clone435_7.cs 25 35
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    string choice = Console.ReadLine();
    MainCode mainCode = new MainCode(30000, 3000);
    if (choice == "1") Test(mainCode.SumList);
    else if (choice == "2") Test(mainCode.SumArray);
    else Test(mainCode.SumBoth);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
8
Gpt4D_Clone435_8.cs 1 24
Gpt4D_Clone435_8.cs 25 35
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    string userInput = Console.ReadLine();
    CodeRunner codeRunner = new CodeRunner(15000,1500);
    if (userInput == "1") RunCode(codeRunner.RunListSum);
    else if (userInput == "2") RunCode(codeRunner.RunArraySum);
    else RunCode(codeRunner.RunMixedSum);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
9
Gpt4D_Clone435_9.cs 1 24
Gpt4D_Clone435_9.cs 25 35
----------------------------------------

static void Main (string [] args) {
    var input = Console.ReadLine ();
    var test = new ListArrayLoop (10000, 1000);
    switch (input) {
        case "1" :
            Test (test.ListSum);
            break;
        case "2" :
            Test (test.ArraySum);
            break;
        case "3" :
            test.ArraySum ();
            Test (test.ListSum);
            break;
        default :
            test.ListSum ();
            Test (test.ArraySum);
            break;
    }
}
----------------------------------------

static void Main(string[] args)
{
    var option = Console.ReadLine();
    var logic = new LoopLogic(10000, 1000);
    if (option == "1") Execute(logic.GetSumFromList());
    else if (option == "2") Execute(logic.GetSumFromArray());
    else Execute(logic.GetSumFromBoth());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
0
Gpt4D_Clone437_0.cs 1 19
Gpt4D_Clone437_0.cs 20 36
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
			    string strReturn = "";
			    if (input >= 120) {
				strReturn = "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
			    } else if (input >= 70) {
				strReturn = "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
			    } else if (input >= 40) {
				strReturn = "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
			    } else if (input >= 20) {
				strReturn = "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
			    } else if (input >= 10) {
				strReturn = "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
			    }
			    return strReturn;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
1
Gpt4D_Clone437_1.cs 1 19
Gpt4D_Clone437_1.cs 20 35
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
    input = input / 20;
    string result = "";
    for(int i=0; i < 5; i++)
    {
        if(i < input)
            result += "<img src=\"/images/star.png\" alt=\"*\" />";
        else 
            result += "<img src=\"/images/star_empty.png\" alt=\"-\" />";
    }
	
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
2
Gpt4D_Clone437_2.cs 1 19
Gpt4D_Clone437_2.cs 20 30
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator(int input)
{
    StringBuilder output = new StringBuilder();
    Int32 starFull =  input < 10 ? 0 : input < 20 ? 1 : input < 40 ? 2 : input < 70 ? 3 : input < 120 ? 4 : 5;
    for(int i = 0; i < starFull; ++i)
        output.Append("<img src=\"/images/star.png\" alt=\"*\" />");
    for(int i = starFull; i < 5; ++i)
        output.Append("<img src=\"/images/star_empty.png\" alt=\"-\" />");
    return output.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
3
Gpt4D_Clone437_3.cs 1 19
Gpt4D_Clone437_3.cs 20 30
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
   var starImg = "<img src=\"/images/star.png\" alt=\"*\" />";
   var emptyStarImg = "<img src=\"/images/star_empty.png\" alt=\"-\" />";
   
   var starCount = input < 10 ? 0 : input < 20 ? 1 : input < 40 ? 2 : input < 70 ? 3 : input < 120 ? 4 : 5;
   var emptyStarCount = 5 - starCount;
   return string.Concat(Enumerable.Repeat(starImg, starCount)) + string.Concat(Enumerable.Repeat(emptyStarImg, emptyStarCount));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
4
Gpt4D_Clone437_4.cs 1 19
Gpt4D_Clone437_4.cs 20 29
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
    string result = "";
    for(int i=0; i < 5; i++)
    {
        result+=(i < input/20) ? "<img src=\"/images/star.png\" alt=\"*\" />":"<img src=\"/images/star_empty.png\" alt=\"-\" />";
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
5
Gpt4D_Clone437_5.cs 1 19
Gpt4D_Clone437_5.cs 20 27
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
    var starImg = "<img src=\"/images/star.png\" alt=\"*\" />";
    var emptyStarImg = "<img src=\"/images/star_empty.png\" alt=\"-\" />";
    
    return string.Join("", new int[5].Select((_, index) => index < input / 20 ? starImg : emptyStarImg));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
437
6
Gpt4D_Clone437_6.cs 1 19
Gpt4D_Clone437_6.cs 20 34
----------------------------------------

public static string RatingCalculator (int input) {
    if (input < 10) {
        return string.Empty;
    } else if (input < 20) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 40) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 70) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else if (input < 120) {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star_empty.png\" alt=\"-\" />";
    } else {
        return "<img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" /><img src=\"/images/star.png\" alt=\"*\" />";
    }
}
----------------------------------------

public static string RatingCalculator (int input)
{
    return (input >= 120) ?
        Star(5)
    : (input >= 70) ?
        Star(4) + EmptyStar(1)
    : (input >= 40) ?
        Star(3) + EmptyStar(2)
    : (input >= 20) ?
        Star(2) + EmptyStar(3)
    : (input >= 10) ?
        Star(1) + EmptyStar(4)
    : EmptyStar(5);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
0
Gpt4D_Clone438_0.cs 1 20
Gpt4D_Clone438_0.cs 21 39
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    Action<FileSystemInfo, string> action = (i, n) => 
	    {
		 switch (i)
		 {
		     case FileInfo fileInfo:
		         fileInfo.Rename(n);
		         break;
		     case DirectoryInfo directoryInfo:
		         directoryInfo.Rename(n);
		         break;
		     default:
		         throw new ArgumentException("Unexpected subclass of FileSystemInfo");
		 }
	    };
	    action(item, newName);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
1
Gpt4D_Clone438_1.cs 1 20
Gpt4D_Clone438_1.cs 21 35
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    switch (item?.GetType().Name)
	    {
		case nameof(FileInfo):
		    ((FileInfo)item).Rename(newName);
		    break;
		case nameof(DirectoryInfo):
		    ((DirectoryInfo)item).Rename(newName);
		    break;
		default:
		    throw new ArgumentException($"Unexpected FileSystemInfo subclass: {item}");
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
2
Gpt4D_Clone438_2.cs 1 20
Gpt4D_Clone438_2.cs 21 35
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    switch (item)
	    {
		case FileInfo fileInfo:
		    fileInfo.Rename(newName);
		    break;
		case DirectoryInfo directoryInfo:
		    directoryInfo.Rename(newName);
		    break;
		default:
		    throw new ArgumentException("Invalid type");
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
3
Gpt4D_Clone438_3.cs 1 20
Gpt4D_Clone438_3.cs 21 37
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
    if (item is FileInfo fileInfo)
    {
        fileInfo.Rename(newName);
    }
    else if (item is DirectoryInfo directoryInfo)
    {
        directoryInfo.Rename(newName);
    }
    else
    {
        throw new ArgumentException("Not a valid file or directory");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
4
Gpt4D_Clone438_4.cs 1 20
Gpt4D_Clone438_4.cs 21 32
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    try
	    {
		 (item as dynamic).Rename(newName);
	    }
	    catch (RuntimeBinderException)
	    {
		 throw new ArgumentException("Unexpected FileSystemInfo subclass " + item.GetType());
	    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
5
Gpt4D_Clone438_5.cs 1 20
Gpt4D_Clone438_5.cs 21 28
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    if (item is FileInfo)
		(item as FileInfo).Rename(newName);
	    else if (item is DirectoryInfo)
		(item as DirectoryInfo).Rename(newName);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
6
Gpt4D_Clone438_6.cs 1 20
Gpt4D_Clone438_6.cs 21 26
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
	    var action = new Action<FileSystemInfo, string>((i, n) => i.Rename(n));
	    action(item, newName);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
7
Gpt4D_Clone438_7.cs 1 20
Gpt4D_Clone438_7.cs 21 26
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo target, string newName)
{
    dynamic item = target;
    item.Rename(newName);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
438
8
Gpt4D_Clone438_8.cs 1 20
Gpt4D_Clone438_8.cs 21 26
----------------------------------------

public static void Rename (this FileSystemInfo item, string newName) {
    if (item == null) {
        throw new ArgumentNullException ("item");
    }
    FileInfo fileInfo = item as FileInfo;
    if (fileInfo != null) {
        fileInfo.Rename (newName);
        return;
    }
    DirectoryInfo directoryInfo = item as DirectoryInfo;
    if (directoryInfo != null) {
        directoryInfo.Rename (newName);
        return;
    }
    throw new ArgumentException ("Item", "Unexpected subclass of FileSystemInfo " + item.GetType ());
}
----------------------------------------

public static void Rename(this FileSystemInfo item, string newName)
{
    (item as FileInfo)?.Rename(newName);
    (item as DirectoryInfo)?.Rename(newName);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
0
Gpt4D_Clone441_0.cs 1 15
Gpt4D_Clone441_0.cs 16 34
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    StringBuilder json = new StringBuilder();
    json.Append("{\"rows\":[");
    foreach (DataRow row in dt.Rows)
    {
        json.Append("{");
        foreach (DataColumn col in dt.Columns)
            json.AppendFormat("\"{0}\":\"{1}\",", col.ColumnName, row[col].ToString());
        json.Remove(json.Length - 1, 1);
        json.Append("},");
    }
    json.Remove(json.Length - 1, 1);
    json.Append("]}");
    return json.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
1
Gpt4D_Clone441_1.cs 1 15
Gpt4D_Clone441_1.cs 16 30
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    var json = new StringBuilder("[");
    foreach (DataRow row in dt.Rows)
    {
        json.Append("{");
        foreach (DataColumn column in dt.Columns) json.AppendFormat("\"{0}\":\"{1}\",", column.ColumnName, row[column]);
        json.Length--; json.Append("},");
    }
    json.Length--; json.Append("]");
    return json.ToString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
2
Gpt4D_Clone441_2.cs 1 15
Gpt4D_Clone441_2.cs 16 29
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    var list = new List<Dictionary<string, object>>();
    dt.AsEnumerable().ToList().ForEach(row => 
    {
        var dict = new Dictionary<string, object>();
        row.Table.Columns.Cast<DataColumn>().ToList().ForEach(column => dict.Add(column.ColumnName, row[column]));
        list.Add(dict);
    });
    return JsonConvert.SerializeObject(new { rows = list });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
3
Gpt4D_Clone441_3.cs 1 15
Gpt4D_Clone441_3.cs 16 28
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
    foreach (DataRow row in dt.Rows)
    {
        Dictionary<string, object> rowData = new Dictionary<string, object>();
        foreach (DataColumn col in dt.Columns)
            rowData.Add(col.ColumnName, row[col]);
        rows.Add(rowData);
    }
    return JsonConvert.SerializeObject(new { rows });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
4
Gpt4D_Clone441_4.cs 1 15
Gpt4D_Clone441_4.cs 16 32
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    List<Dictionary<string, object>> list = new List<Dictionary<string, object>>();
    for (int i = 0; i < dt.Rows.Count; i++)
    {
        Dictionary<string, object> dict = new Dictionary<string, object>();
        for(int j = 0; j < dt.Columns.Count; j++)
        {
            dict.Add(dt.Columns[j].ColumnName, dt.Rows[i][j]);
        }
        list.Add(dict);
    }
    return JsonConvert.SerializeObject(new { rows = list });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
5
Gpt4D_Clone441_5.cs 1 15
Gpt4D_Clone441_5.cs 16 24
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    DataSet ds = new DataSet();
    ds.Tables.Add(dt.Copy());
    return JsonConvert.SerializeObject(ds, Formatting.Indented);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
6
Gpt4D_Clone441_6.cs 1 15
Gpt4D_Clone441_6.cs 16 24
----------------------------------------

public static String dt2JSON (DataTable dt) {
    var rows = new List < Object > ();
    foreach (DataRow row in dt.Rows) {
        var rowData = new Dictionary < string, object > ();
        foreach (DataColumn col in dt.Columns)
            rowData [col.ColumnName] = row [col];
        rows.Add (rowData);
    }
    var js = new JavaScriptSerializer ();
    return js.Serialize (new {rows = rows});
}
----------------------------------------

public static string dt2JSON(DataTable dt)
{
    var list = dt.AsEnumerable().Select(row =>
    dt.Columns.Cast<DataColumn>().ToDictionary(column => column.ColumnName, column => row[column]));
    return JsonConvert.SerializeObject(new { rows = list });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
0
Gpt4D_Clone451_0.cs 1 22
Gpt4D_Clone451_0.cs 23 32
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int delta = 0;
    for (int i = Math.min(a, b); i < Math.max(a, b); i++) {
        delta++;
    }
    return delta;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
1
Gpt4D_Clone451_1.cs 1 22
Gpt4D_Clone451_1.cs 23 32
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int delta = 0;
    for (int i = 0; i < Math.abs(a - b); i++) {
        delta++;
    }
    return delta;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
2
Gpt4D_Clone451_2.cs 1 22
Gpt4D_Clone451_2.cs 23 30
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int delta = Math.max(a, b);
    int min = Math.min(a, b);
    return delta - min;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
3
Gpt4D_Clone451_3.cs 1 22
Gpt4D_Clone451_3.cs 23 27
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int difference = Math.abs(a - b);
    return difference;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
4
Gpt4D_Clone451_4.cs 1 22
Gpt4D_Clone451_4.cs 23 29
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int delta = a > b ? a - b : b - a;
    return delta;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
5
Gpt4D_Clone451_5.cs 1 22
Gpt4D_Clone451_5.cs 23 29
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    int delta = a - b;
    return (delta < 0) ? -delta : delta;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
6
Gpt4D_Clone451_6.cs 1 22
Gpt4D_Clone451_6.cs 23 28
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    return Integer.compare(a, b) == 0 ? 0 : Math.abs(a - b);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
7
Gpt4D_Clone451_7.cs 1 22
Gpt4D_Clone451_7.cs 23 28
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    return (int) Math.sqrt(Math.pow((a - b), 2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
8
Gpt4D_Clone451_8.cs 1 22
Gpt4D_Clone451_8.cs 23 28
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    return (a > b) ? (a - b) : (b - a);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
9
Gpt4D_Clone451_9.cs 1 22
Gpt4D_Clone451_9.cs 23 28
----------------------------------------

public static int Delta (int a, int b) {
    int delta = 0;
    if (a == b) {
        return 0;
    } else if (a < b) {
        while (a < b) {
            a ++;
            delta ++;
        }
        return delta;
    } else {
        while (b < a) {
            b ++;
            delta ++;
        }
        return delta;
    }
}
----------------------------------------

public static int Delta(int a, int b) {
    return a == b ? 0 : (a > b ? a - b : b - a);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
0
Gpt4D_Clone457_0.cs 1 18
Gpt4D_Clone457_0.cs 19 34
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
 
----------------------------------------

private static string ExtractCN(string dn)
{
    var parts = dn.Split(',');
    for (int i = 0; i < parts.Length; i ++)
    {
        var p = parts[i];
        var elems = p.Split('=');
        var v = elems[1].Trim();
        if (elems[0].Trim().Equals("CN", StringComparison.OrdinalIgnoreCase)) 
        {
            return v;
        }
    }
    return string.Empty;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
1
Gpt4D_Clone457_1.cs 1 18
Gpt4D_Clone457_1.cs 19 30
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
 
----------------------------------------

private static string ExtractCN(string dn)
{
    var parts = dn.Split(new[] {','}, StringSplitOptions.RemoveEmptyEntries);
    foreach (var p in parts)
    {
        var elem = p.Split('=');
        if (elem[0].Trim().ToUpperInvariant() == "CN")
            return elem[1].Trim();
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
2
Gpt4D_Clone457_2.cs 1 17
Gpt4D_Clone457_2.cs 18 29
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
----------------------------------------

private static string ExtractCN(string dn)
{
    string[] parts = dn.Split(',');
    foreach (var p in parts)
    {
        var elems = p.Split('=');
        if(elems[0].Trim().ToUpper() == "CN")
            return elems[1].Trim();
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
3
Gpt4D_Clone457_3.cs 1 17
Gpt4D_Clone457_3.cs 18 29
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
----------------------------------------

private static string ExtractCN(string dn) 
{
    Regex regex = new Regex(@"^CN=[\w\s]+", RegexOptions.IgnoreCase);
    var match = regex.Match(dn.Replace(" ", ""));
    if(match.Success)
    {
        return match.Value.Split("=")[1];
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
4
Gpt4D_Clone457_4.cs 1 18
Gpt4D_Clone457_4.cs 19 24
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
 
----------------------------------------

private static string ExtractCN(string dn)
{
    var foundCN = dn.Split(',').FirstOrDefault(s => s.TrimStart().StartsWith("CN=", StringComparison.OrdinalIgnoreCase));
    return foundCN?.Split('=')[1];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
5
Gpt4D_Clone457_5.cs 1 18
Gpt4D_Clone457_5.cs 19 23
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
 
----------------------------------------

private static string ExtractCN(string dn) 
{
    return dn.Split(',').Where(part => part.StartsWith("CN=", StringComparison.InvariantCultureIgnoreCase)).Select(part => part.Split('=')[1]).FirstOrDefault();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
6
Gpt4D_Clone457_6.cs 1 18
Gpt4D_Clone457_6.cs 19 23
----------------------------------------

private static string ExtractCN (string dn) {
    string [] parts = dn.Split (new char [] {','});
    for (int i = 0; i < parts.Length; i ++) {
        var p = parts [i];
        var elems = p.Split (new char [] {'='});
        var t = elems [0].Trim ().ToUpper ();
        var v = elems [1].Trim ();
        if (t == "CN") {
            return v;
        }
    }
    return null;
}
 
----------------------------------------

private static string ExtractCN(string dn) 
{
    return dn.Replace(" ","").Split(',').Where(s => s.StartsWith("CN=")).Select(s => s.Replace("CN=","")).FirstOrDefault();
}
----------------------------------------

